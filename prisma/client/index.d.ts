
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Role
 * 
 */
export type Role = $Result.DefaultSelection<Prisma.$RolePayload>
/**
 * Model RolePermission
 * 
 */
export type RolePermission = $Result.DefaultSelection<Prisma.$RolePermissionPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Setting
 * 
 */
export type Setting = $Result.DefaultSelection<Prisma.$SettingPayload>
/**
 * Model Referral
 * 
 */
export type Referral = $Result.DefaultSelection<Prisma.$ReferralPayload>
/**
 * Model Supplier
 * 
 */
export type Supplier = $Result.DefaultSelection<Prisma.$SupplierPayload>
/**
 * Model Customer
 * 
 */
export type Customer = $Result.DefaultSelection<Prisma.$CustomerPayload>
/**
 * Model Company
 * 
 */
export type Company = $Result.DefaultSelection<Prisma.$CompanyPayload>
/**
 * Model Outlet
 * 
 */
export type Outlet = $Result.DefaultSelection<Prisma.$OutletPayload>
/**
 * Model Item
 * 
 */
export type Item = $Result.DefaultSelection<Prisma.$ItemPayload>
/**
 * Model Category
 * 
 */
export type Category = $Result.DefaultSelection<Prisma.$CategoryPayload>
/**
 * Model Sales
 * 
 */
export type Sales = $Result.DefaultSelection<Prisma.$SalesPayload>
/**
 * Model SalesItem
 * 
 */
export type SalesItem = $Result.DefaultSelection<Prisma.$SalesItemPayload>
/**
 * Model SalesItemModifier
 * 
 */
export type SalesItemModifier = $Result.DefaultSelection<Prisma.$SalesItemModifierPayload>
/**
 * Model SalesQuotation
 * 
 */
export type SalesQuotation = $Result.DefaultSelection<Prisma.$SalesQuotationPayload>
/**
 * Model SalesQuotationItem
 * 
 */
export type SalesQuotationItem = $Result.DefaultSelection<Prisma.$SalesQuotationItemPayload>
/**
 * Model Invoice
 * 
 */
export type Invoice = $Result.DefaultSelection<Prisma.$InvoicePayload>
/**
 * Model InvoiceItem
 * 
 */
export type InvoiceItem = $Result.DefaultSelection<Prisma.$InvoiceItemPayload>
/**
 * Model DeliveryOrder
 * 
 */
export type DeliveryOrder = $Result.DefaultSelection<Prisma.$DeliveryOrderPayload>
/**
 * Model DeliveryOrderItem
 * 
 */
export type DeliveryOrderItem = $Result.DefaultSelection<Prisma.$DeliveryOrderItemPayload>
/**
 * Model PurchaseOrder
 * 
 */
export type PurchaseOrder = $Result.DefaultSelection<Prisma.$PurchaseOrderPayload>
/**
 * Model PurchaseOrderItem
 * 
 */
export type PurchaseOrderItem = $Result.DefaultSelection<Prisma.$PurchaseOrderItemPayload>
/**
 * Model Payment
 * 
 */
export type Payment = $Result.DefaultSelection<Prisma.$PaymentPayload>
/**
 * Model RegisterLog
 * 
 */
export type RegisterLog = $Result.DefaultSelection<Prisma.$RegisterLogPayload>
/**
 * Model CardInfo
 * 
 */
export type CardInfo = $Result.DefaultSelection<Prisma.$CardInfoPayload>
/**
 * Model Session
 * 
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>
/**
 * Model Declaration
 * 
 */
export type Declaration = $Result.DefaultSelection<Prisma.$DeclarationPayload>
/**
 * Model StockBalance
 * 
 */
export type StockBalance = $Result.DefaultSelection<Prisma.$StockBalancePayload>
/**
 * Model StockReceipt
 * 
 */
export type StockReceipt = $Result.DefaultSelection<Prisma.$StockReceiptPayload>
/**
 * Model StockReceiptArchive
 * 
 */
export type StockReceiptArchive = $Result.DefaultSelection<Prisma.$StockReceiptArchivePayload>
/**
 * Model StockMovement
 * 
 */
export type StockMovement = $Result.DefaultSelection<Prisma.$StockMovementPayload>
/**
 * Model StockMovementArchive
 * 
 */
export type StockMovementArchive = $Result.DefaultSelection<Prisma.$StockMovementArchivePayload>
/**
 * Model StockSnapshot
 * 
 */
export type StockSnapshot = $Result.DefaultSelection<Prisma.$StockSnapshotPayload>
/**
 * Model MenuProfileOutlet
 * 
 */
export type MenuProfileOutlet = $Result.DefaultSelection<Prisma.$MenuProfileOutletPayload>
/**
 * Model MenuProfile
 * 
 */
export type MenuProfile = $Result.DefaultSelection<Prisma.$MenuProfilePayload>
/**
 * Model MenuCategory
 * 
 */
export type MenuCategory = $Result.DefaultSelection<Prisma.$MenuCategoryPayload>
/**
 * Model MenuItem
 * 
 */
export type MenuItem = $Result.DefaultSelection<Prisma.$MenuItemPayload>
/**
 * Model MenuItemModifierGroup
 * 
 */
export type MenuItemModifierGroup = $Result.DefaultSelection<Prisma.$MenuItemModifierGroupPayload>
/**
 * Model MenuItemModifier
 * 
 */
export type MenuItemModifier = $Result.DefaultSelection<Prisma.$MenuItemModifierPayload>
/**
 * Model Table
 * 
 */
export type Table = $Result.DefaultSelection<Prisma.$TablePayload>
/**
 * Model Recipe
 * 
 */
export type Recipe = $Result.DefaultSelection<Prisma.$RecipePayload>
/**
 * Model Station
 * 
 */
export type Station = $Result.DefaultSelection<Prisma.$StationPayload>
/**
 * Model Reservation
 * 
 */
export type Reservation = $Result.DefaultSelection<Prisma.$ReservationPayload>
/**
 * Model OrderRouting
 * 
 */
export type OrderRouting = $Result.DefaultSelection<Prisma.$OrderRoutingPayload>
/**
 * Model Waitlist
 * 
 */
export type Waitlist = $Result.DefaultSelection<Prisma.$WaitlistPayload>
/**
 * Model SplitBill
 * 
 */
export type SplitBill = $Result.DefaultSelection<Prisma.$SplitBillPayload>
/**
 * Model Promotion
 * 
 */
export type Promotion = $Result.DefaultSelection<Prisma.$PromotionPayload>
/**
 * Model PromotionItem
 * 
 */
export type PromotionItem = $Result.DefaultSelection<Prisma.$PromotionItemPayload>
/**
 * Model PromotionCustomer
 * 
 */
export type PromotionCustomer = $Result.DefaultSelection<Prisma.$PromotionCustomerPayload>
/**
 * Model PromotionUsage
 * 
 */
export type PromotionUsage = $Result.DefaultSelection<Prisma.$PromotionUsagePayload>

/**
 * Enums
 */
export namespace $Enums {
  export const SettingType: {
  INT: 'INT',
  STRING: 'STRING',
  BOOLEAN: 'BOOLEAN',
  JSON: 'JSON'
};

export type SettingType = (typeof SettingType)[keyof typeof SettingType]


export const SalesType: {
  DINE_IN: 'DINE_IN',
  TAKEOUT: 'TAKEOUT',
  DELIVERY: 'DELIVERY',
  ONLINE: 'ONLINE'
};

export type SalesType = (typeof SalesType)[keyof typeof SalesType]


export const OrderStatus: {
  ORDERED: 'ORDERED',
  PREPARING: 'PREPARING',
  SERVED: 'SERVED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED'
};

export type OrderStatus = (typeof OrderStatus)[keyof typeof OrderStatus]


export const PurchaseOrderStatus: {
  DRAFT: 'DRAFT',
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

export type PurchaseOrderStatus = (typeof PurchaseOrderStatus)[keyof typeof PurchaseOrderStatus]


export const DeliveryOrderStatus: {
  PENDING: 'PENDING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED'
};

export type DeliveryOrderStatus = (typeof DeliveryOrderStatus)[keyof typeof DeliveryOrderStatus]


export const InvoiceStatus: {
  DRAFT: 'DRAFT',
  ISSUED: 'ISSUED',
  PAID: 'PAID',
  OVERDUE: 'OVERDUE',
  CANCELLED: 'CANCELLED'
};

export type InvoiceStatus = (typeof InvoiceStatus)[keyof typeof InvoiceStatus]


export const PromotionType: {
  DAILY: 'DAILY',
  HOURLY: 'HOURLY',
  GENERIC: 'GENERIC',
  CUSTOMER: 'CUSTOMER'
};

export type PromotionType = (typeof PromotionType)[keyof typeof PromotionType]


export const DiscountType: {
  PERCENTAGE: 'PERCENTAGE',
  FIXED_AMOUNT: 'FIXED_AMOUNT',
  BUY_X_GET_Y: 'BUY_X_GET_Y',
  BUY_X_GET_Y_DISCOUNT: 'BUY_X_GET_Y_DISCOUNT'
};

export type DiscountType = (typeof DiscountType)[keyof typeof DiscountType]


export const PromotionStatus: {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  EXPIRED: 'EXPIRED',
  SCHEDULED: 'SCHEDULED'
};

export type PromotionStatus = (typeof PromotionStatus)[keyof typeof PromotionStatus]


export const CombinationRule: {
  STACKABLE: 'STACKABLE',
  EXCLUSIVE: 'EXCLUSIVE'
};

export type CombinationRule = (typeof CombinationRule)[keyof typeof CombinationRule]

}

export type SettingType = $Enums.SettingType

export const SettingType: typeof $Enums.SettingType

export type SalesType = $Enums.SalesType

export const SalesType: typeof $Enums.SalesType

export type OrderStatus = $Enums.OrderStatus

export const OrderStatus: typeof $Enums.OrderStatus

export type PurchaseOrderStatus = $Enums.PurchaseOrderStatus

export const PurchaseOrderStatus: typeof $Enums.PurchaseOrderStatus

export type DeliveryOrderStatus = $Enums.DeliveryOrderStatus

export const DeliveryOrderStatus: typeof $Enums.DeliveryOrderStatus

export type InvoiceStatus = $Enums.InvoiceStatus

export const InvoiceStatus: typeof $Enums.InvoiceStatus

export type PromotionType = $Enums.PromotionType

export const PromotionType: typeof $Enums.PromotionType

export type DiscountType = $Enums.DiscountType

export const DiscountType: typeof $Enums.DiscountType

export type PromotionStatus = $Enums.PromotionStatus

export const PromotionStatus: typeof $Enums.PromotionStatus

export type CombinationRule = $Enums.CombinationRule

export const CombinationRule: typeof $Enums.CombinationRule

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Roles
 * const roles = await prisma.role.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Roles
   * const roles = await prisma.role.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rolePermission`: Exposes CRUD operations for the **RolePermission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RolePermissions
    * const rolePermissions = await prisma.rolePermission.findMany()
    * ```
    */
  get rolePermission(): Prisma.RolePermissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.setting`: Exposes CRUD operations for the **Setting** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Settings
    * const settings = await prisma.setting.findMany()
    * ```
    */
  get setting(): Prisma.SettingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.referral`: Exposes CRUD operations for the **Referral** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Referrals
    * const referrals = await prisma.referral.findMany()
    * ```
    */
  get referral(): Prisma.ReferralDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.supplier`: Exposes CRUD operations for the **Supplier** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Suppliers
    * const suppliers = await prisma.supplier.findMany()
    * ```
    */
  get supplier(): Prisma.SupplierDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.customer`: Exposes CRUD operations for the **Customer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Customers
    * const customers = await prisma.customer.findMany()
    * ```
    */
  get customer(): Prisma.CustomerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.company`: Exposes CRUD operations for the **Company** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Companies
    * const companies = await prisma.company.findMany()
    * ```
    */
  get company(): Prisma.CompanyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.outlet`: Exposes CRUD operations for the **Outlet** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Outlets
    * const outlets = await prisma.outlet.findMany()
    * ```
    */
  get outlet(): Prisma.OutletDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.item`: Exposes CRUD operations for the **Item** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Items
    * const items = await prisma.item.findMany()
    * ```
    */
  get item(): Prisma.ItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.category`: Exposes CRUD operations for the **Category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.category.findMany()
    * ```
    */
  get category(): Prisma.CategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sales`: Exposes CRUD operations for the **Sales** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sales
    * const sales = await prisma.sales.findMany()
    * ```
    */
  get sales(): Prisma.SalesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.salesItem`: Exposes CRUD operations for the **SalesItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SalesItems
    * const salesItems = await prisma.salesItem.findMany()
    * ```
    */
  get salesItem(): Prisma.SalesItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.salesItemModifier`: Exposes CRUD operations for the **SalesItemModifier** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SalesItemModifiers
    * const salesItemModifiers = await prisma.salesItemModifier.findMany()
    * ```
    */
  get salesItemModifier(): Prisma.SalesItemModifierDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.salesQuotation`: Exposes CRUD operations for the **SalesQuotation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SalesQuotations
    * const salesQuotations = await prisma.salesQuotation.findMany()
    * ```
    */
  get salesQuotation(): Prisma.SalesQuotationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.salesQuotationItem`: Exposes CRUD operations for the **SalesQuotationItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SalesQuotationItems
    * const salesQuotationItems = await prisma.salesQuotationItem.findMany()
    * ```
    */
  get salesQuotationItem(): Prisma.SalesQuotationItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.invoice`: Exposes CRUD operations for the **Invoice** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Invoices
    * const invoices = await prisma.invoice.findMany()
    * ```
    */
  get invoice(): Prisma.InvoiceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.invoiceItem`: Exposes CRUD operations for the **InvoiceItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InvoiceItems
    * const invoiceItems = await prisma.invoiceItem.findMany()
    * ```
    */
  get invoiceItem(): Prisma.InvoiceItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.deliveryOrder`: Exposes CRUD operations for the **DeliveryOrder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DeliveryOrders
    * const deliveryOrders = await prisma.deliveryOrder.findMany()
    * ```
    */
  get deliveryOrder(): Prisma.DeliveryOrderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.deliveryOrderItem`: Exposes CRUD operations for the **DeliveryOrderItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DeliveryOrderItems
    * const deliveryOrderItems = await prisma.deliveryOrderItem.findMany()
    * ```
    */
  get deliveryOrderItem(): Prisma.DeliveryOrderItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.purchaseOrder`: Exposes CRUD operations for the **PurchaseOrder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PurchaseOrders
    * const purchaseOrders = await prisma.purchaseOrder.findMany()
    * ```
    */
  get purchaseOrder(): Prisma.PurchaseOrderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.purchaseOrderItem`: Exposes CRUD operations for the **PurchaseOrderItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PurchaseOrderItems
    * const purchaseOrderItems = await prisma.purchaseOrderItem.findMany()
    * ```
    */
  get purchaseOrderItem(): Prisma.PurchaseOrderItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.payment`: Exposes CRUD operations for the **Payment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payment.findMany()
    * ```
    */
  get payment(): Prisma.PaymentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.registerLog`: Exposes CRUD operations for the **RegisterLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RegisterLogs
    * const registerLogs = await prisma.registerLog.findMany()
    * ```
    */
  get registerLog(): Prisma.RegisterLogDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cardInfo`: Exposes CRUD operations for the **CardInfo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CardInfos
    * const cardInfos = await prisma.cardInfo.findMany()
    * ```
    */
  get cardInfo(): Prisma.CardInfoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.declaration`: Exposes CRUD operations for the **Declaration** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Declarations
    * const declarations = await prisma.declaration.findMany()
    * ```
    */
  get declaration(): Prisma.DeclarationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stockBalance`: Exposes CRUD operations for the **StockBalance** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StockBalances
    * const stockBalances = await prisma.stockBalance.findMany()
    * ```
    */
  get stockBalance(): Prisma.StockBalanceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stockReceipt`: Exposes CRUD operations for the **StockReceipt** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StockReceipts
    * const stockReceipts = await prisma.stockReceipt.findMany()
    * ```
    */
  get stockReceipt(): Prisma.StockReceiptDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stockReceiptArchive`: Exposes CRUD operations for the **StockReceiptArchive** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StockReceiptArchives
    * const stockReceiptArchives = await prisma.stockReceiptArchive.findMany()
    * ```
    */
  get stockReceiptArchive(): Prisma.StockReceiptArchiveDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stockMovement`: Exposes CRUD operations for the **StockMovement** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StockMovements
    * const stockMovements = await prisma.stockMovement.findMany()
    * ```
    */
  get stockMovement(): Prisma.StockMovementDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stockMovementArchive`: Exposes CRUD operations for the **StockMovementArchive** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StockMovementArchives
    * const stockMovementArchives = await prisma.stockMovementArchive.findMany()
    * ```
    */
  get stockMovementArchive(): Prisma.StockMovementArchiveDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.stockSnapshot`: Exposes CRUD operations for the **StockSnapshot** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StockSnapshots
    * const stockSnapshots = await prisma.stockSnapshot.findMany()
    * ```
    */
  get stockSnapshot(): Prisma.StockSnapshotDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.menuProfileOutlet`: Exposes CRUD operations for the **MenuProfileOutlet** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MenuProfileOutlets
    * const menuProfileOutlets = await prisma.menuProfileOutlet.findMany()
    * ```
    */
  get menuProfileOutlet(): Prisma.MenuProfileOutletDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.menuProfile`: Exposes CRUD operations for the **MenuProfile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MenuProfiles
    * const menuProfiles = await prisma.menuProfile.findMany()
    * ```
    */
  get menuProfile(): Prisma.MenuProfileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.menuCategory`: Exposes CRUD operations for the **MenuCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MenuCategories
    * const menuCategories = await prisma.menuCategory.findMany()
    * ```
    */
  get menuCategory(): Prisma.MenuCategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.menuItem`: Exposes CRUD operations for the **MenuItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MenuItems
    * const menuItems = await prisma.menuItem.findMany()
    * ```
    */
  get menuItem(): Prisma.MenuItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.menuItemModifierGroup`: Exposes CRUD operations for the **MenuItemModifierGroup** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MenuItemModifierGroups
    * const menuItemModifierGroups = await prisma.menuItemModifierGroup.findMany()
    * ```
    */
  get menuItemModifierGroup(): Prisma.MenuItemModifierGroupDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.menuItemModifier`: Exposes CRUD operations for the **MenuItemModifier** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MenuItemModifiers
    * const menuItemModifiers = await prisma.menuItemModifier.findMany()
    * ```
    */
  get menuItemModifier(): Prisma.MenuItemModifierDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.table`: Exposes CRUD operations for the **Table** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tables
    * const tables = await prisma.table.findMany()
    * ```
    */
  get table(): Prisma.TableDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.recipe`: Exposes CRUD operations for the **Recipe** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Recipes
    * const recipes = await prisma.recipe.findMany()
    * ```
    */
  get recipe(): Prisma.RecipeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.station`: Exposes CRUD operations for the **Station** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Stations
    * const stations = await prisma.station.findMany()
    * ```
    */
  get station(): Prisma.StationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reservation`: Exposes CRUD operations for the **Reservation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reservations
    * const reservations = await prisma.reservation.findMany()
    * ```
    */
  get reservation(): Prisma.ReservationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderRouting`: Exposes CRUD operations for the **OrderRouting** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderRoutings
    * const orderRoutings = await prisma.orderRouting.findMany()
    * ```
    */
  get orderRouting(): Prisma.OrderRoutingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.waitlist`: Exposes CRUD operations for the **Waitlist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Waitlists
    * const waitlists = await prisma.waitlist.findMany()
    * ```
    */
  get waitlist(): Prisma.WaitlistDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.splitBill`: Exposes CRUD operations for the **SplitBill** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SplitBills
    * const splitBills = await prisma.splitBill.findMany()
    * ```
    */
  get splitBill(): Prisma.SplitBillDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.promotion`: Exposes CRUD operations for the **Promotion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Promotions
    * const promotions = await prisma.promotion.findMany()
    * ```
    */
  get promotion(): Prisma.PromotionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.promotionItem`: Exposes CRUD operations for the **PromotionItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PromotionItems
    * const promotionItems = await prisma.promotionItem.findMany()
    * ```
    */
  get promotionItem(): Prisma.PromotionItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.promotionCustomer`: Exposes CRUD operations for the **PromotionCustomer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PromotionCustomers
    * const promotionCustomers = await prisma.promotionCustomer.findMany()
    * ```
    */
  get promotionCustomer(): Prisma.PromotionCustomerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.promotionUsage`: Exposes CRUD operations for the **PromotionUsage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PromotionUsages
    * const promotionUsages = await prisma.promotionUsage.findMany()
    * ```
    */
  get promotionUsage(): Prisma.PromotionUsageDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Role: 'Role',
    RolePermission: 'RolePermission',
    User: 'User',
    Setting: 'Setting',
    Referral: 'Referral',
    Supplier: 'Supplier',
    Customer: 'Customer',
    Company: 'Company',
    Outlet: 'Outlet',
    Item: 'Item',
    Category: 'Category',
    Sales: 'Sales',
    SalesItem: 'SalesItem',
    SalesItemModifier: 'SalesItemModifier',
    SalesQuotation: 'SalesQuotation',
    SalesQuotationItem: 'SalesQuotationItem',
    Invoice: 'Invoice',
    InvoiceItem: 'InvoiceItem',
    DeliveryOrder: 'DeliveryOrder',
    DeliveryOrderItem: 'DeliveryOrderItem',
    PurchaseOrder: 'PurchaseOrder',
    PurchaseOrderItem: 'PurchaseOrderItem',
    Payment: 'Payment',
    RegisterLog: 'RegisterLog',
    CardInfo: 'CardInfo',
    Session: 'Session',
    Declaration: 'Declaration',
    StockBalance: 'StockBalance',
    StockReceipt: 'StockReceipt',
    StockReceiptArchive: 'StockReceiptArchive',
    StockMovement: 'StockMovement',
    StockMovementArchive: 'StockMovementArchive',
    StockSnapshot: 'StockSnapshot',
    MenuProfileOutlet: 'MenuProfileOutlet',
    MenuProfile: 'MenuProfile',
    MenuCategory: 'MenuCategory',
    MenuItem: 'MenuItem',
    MenuItemModifierGroup: 'MenuItemModifierGroup',
    MenuItemModifier: 'MenuItemModifier',
    Table: 'Table',
    Recipe: 'Recipe',
    Station: 'Station',
    Reservation: 'Reservation',
    OrderRouting: 'OrderRouting',
    Waitlist: 'Waitlist',
    SplitBill: 'SplitBill',
    Promotion: 'Promotion',
    PromotionItem: 'PromotionItem',
    PromotionCustomer: 'PromotionCustomer',
    PromotionUsage: 'PromotionUsage'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "role" | "rolePermission" | "user" | "setting" | "referral" | "supplier" | "customer" | "company" | "outlet" | "item" | "category" | "sales" | "salesItem" | "salesItemModifier" | "salesQuotation" | "salesQuotationItem" | "invoice" | "invoiceItem" | "deliveryOrder" | "deliveryOrderItem" | "purchaseOrder" | "purchaseOrderItem" | "payment" | "registerLog" | "cardInfo" | "session" | "declaration" | "stockBalance" | "stockReceipt" | "stockReceiptArchive" | "stockMovement" | "stockMovementArchive" | "stockSnapshot" | "menuProfileOutlet" | "menuProfile" | "menuCategory" | "menuItem" | "menuItemModifierGroup" | "menuItemModifier" | "table" | "recipe" | "station" | "reservation" | "orderRouting" | "waitlist" | "splitBill" | "promotion" | "promotionItem" | "promotionCustomer" | "promotionUsage"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Role: {
        payload: Prisma.$RolePayload<ExtArgs>
        fields: Prisma.RoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findFirst: {
            args: Prisma.RoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findMany: {
            args: Prisma.RoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          create: {
            args: Prisma.RoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          createMany: {
            args: Prisma.RoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          update: {
            args: Prisma.RoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          deleteMany: {
            args: Prisma.RoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.RoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      RolePermission: {
        payload: Prisma.$RolePermissionPayload<ExtArgs>
        fields: Prisma.RolePermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RolePermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RolePermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          findFirst: {
            args: Prisma.RolePermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RolePermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          findMany: {
            args: Prisma.RolePermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>[]
          }
          create: {
            args: Prisma.RolePermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          createMany: {
            args: Prisma.RolePermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RolePermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          update: {
            args: Prisma.RolePermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          deleteMany: {
            args: Prisma.RolePermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RolePermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RolePermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          aggregate: {
            args: Prisma.RolePermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRolePermission>
          }
          groupBy: {
            args: Prisma.RolePermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolePermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.RolePermissionCountArgs<ExtArgs>
            result: $Utils.Optional<RolePermissionCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Setting: {
        payload: Prisma.$SettingPayload<ExtArgs>
        fields: Prisma.SettingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SettingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SettingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload>
          }
          findFirst: {
            args: Prisma.SettingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SettingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload>
          }
          findMany: {
            args: Prisma.SettingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload>[]
          }
          create: {
            args: Prisma.SettingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload>
          }
          createMany: {
            args: Prisma.SettingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SettingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload>
          }
          update: {
            args: Prisma.SettingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload>
          }
          deleteMany: {
            args: Prisma.SettingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SettingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SettingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SettingPayload>
          }
          aggregate: {
            args: Prisma.SettingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSetting>
          }
          groupBy: {
            args: Prisma.SettingGroupByArgs<ExtArgs>
            result: $Utils.Optional<SettingGroupByOutputType>[]
          }
          count: {
            args: Prisma.SettingCountArgs<ExtArgs>
            result: $Utils.Optional<SettingCountAggregateOutputType> | number
          }
        }
      }
      Referral: {
        payload: Prisma.$ReferralPayload<ExtArgs>
        fields: Prisma.ReferralFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReferralFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReferralFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralPayload>
          }
          findFirst: {
            args: Prisma.ReferralFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReferralFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralPayload>
          }
          findMany: {
            args: Prisma.ReferralFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralPayload>[]
          }
          create: {
            args: Prisma.ReferralCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralPayload>
          }
          createMany: {
            args: Prisma.ReferralCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ReferralDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralPayload>
          }
          update: {
            args: Prisma.ReferralUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralPayload>
          }
          deleteMany: {
            args: Prisma.ReferralDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReferralUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReferralUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReferralPayload>
          }
          aggregate: {
            args: Prisma.ReferralAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReferral>
          }
          groupBy: {
            args: Prisma.ReferralGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReferralGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReferralCountArgs<ExtArgs>
            result: $Utils.Optional<ReferralCountAggregateOutputType> | number
          }
        }
      }
      Supplier: {
        payload: Prisma.$SupplierPayload<ExtArgs>
        fields: Prisma.SupplierFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupplierFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupplierFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          findFirst: {
            args: Prisma.SupplierFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupplierFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          findMany: {
            args: Prisma.SupplierFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>[]
          }
          create: {
            args: Prisma.SupplierCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          createMany: {
            args: Prisma.SupplierCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SupplierDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          update: {
            args: Prisma.SupplierUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          deleteMany: {
            args: Prisma.SupplierDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupplierUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SupplierUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupplierPayload>
          }
          aggregate: {
            args: Prisma.SupplierAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupplier>
          }
          groupBy: {
            args: Prisma.SupplierGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupplierGroupByOutputType>[]
          }
          count: {
            args: Prisma.SupplierCountArgs<ExtArgs>
            result: $Utils.Optional<SupplierCountAggregateOutputType> | number
          }
        }
      }
      Customer: {
        payload: Prisma.$CustomerPayload<ExtArgs>
        fields: Prisma.CustomerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          findFirst: {
            args: Prisma.CustomerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          findMany: {
            args: Prisma.CustomerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>[]
          }
          create: {
            args: Prisma.CustomerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          createMany: {
            args: Prisma.CustomerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CustomerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          update: {
            args: Prisma.CustomerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          deleteMany: {
            args: Prisma.CustomerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CustomerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          aggregate: {
            args: Prisma.CustomerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomer>
          }
          groupBy: {
            args: Prisma.CustomerGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomerGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomerCountArgs<ExtArgs>
            result: $Utils.Optional<CustomerCountAggregateOutputType> | number
          }
        }
      }
      Company: {
        payload: Prisma.$CompanyPayload<ExtArgs>
        fields: Prisma.CompanyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompanyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompanyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findFirst: {
            args: Prisma.CompanyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompanyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findMany: {
            args: Prisma.CompanyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>[]
          }
          create: {
            args: Prisma.CompanyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          createMany: {
            args: Prisma.CompanyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CompanyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          update: {
            args: Prisma.CompanyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          deleteMany: {
            args: Prisma.CompanyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompanyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CompanyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          aggregate: {
            args: Prisma.CompanyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompany>
          }
          groupBy: {
            args: Prisma.CompanyGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompanyCountArgs<ExtArgs>
            result: $Utils.Optional<CompanyCountAggregateOutputType> | number
          }
        }
      }
      Outlet: {
        payload: Prisma.$OutletPayload<ExtArgs>
        fields: Prisma.OutletFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OutletFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OutletPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OutletFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OutletPayload>
          }
          findFirst: {
            args: Prisma.OutletFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OutletPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OutletFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OutletPayload>
          }
          findMany: {
            args: Prisma.OutletFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OutletPayload>[]
          }
          create: {
            args: Prisma.OutletCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OutletPayload>
          }
          createMany: {
            args: Prisma.OutletCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.OutletDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OutletPayload>
          }
          update: {
            args: Prisma.OutletUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OutletPayload>
          }
          deleteMany: {
            args: Prisma.OutletDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OutletUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OutletUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OutletPayload>
          }
          aggregate: {
            args: Prisma.OutletAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOutlet>
          }
          groupBy: {
            args: Prisma.OutletGroupByArgs<ExtArgs>
            result: $Utils.Optional<OutletGroupByOutputType>[]
          }
          count: {
            args: Prisma.OutletCountArgs<ExtArgs>
            result: $Utils.Optional<OutletCountAggregateOutputType> | number
          }
        }
      }
      Item: {
        payload: Prisma.$ItemPayload<ExtArgs>
        fields: Prisma.ItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          findFirst: {
            args: Prisma.ItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          findMany: {
            args: Prisma.ItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>[]
          }
          create: {
            args: Prisma.ItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          createMany: {
            args: Prisma.ItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          update: {
            args: Prisma.ItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          deleteMany: {
            args: Prisma.ItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPayload>
          }
          aggregate: {
            args: Prisma.ItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateItem>
          }
          groupBy: {
            args: Prisma.ItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<ItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.ItemCountArgs<ExtArgs>
            result: $Utils.Optional<ItemCountAggregateOutputType> | number
          }
        }
      }
      Category: {
        payload: Prisma.$CategoryPayload<ExtArgs>
        fields: Prisma.CategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findFirst: {
            args: Prisma.CategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findMany: {
            args: Prisma.CategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          create: {
            args: Prisma.CategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          createMany: {
            args: Prisma.CategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          update: {
            args: Prisma.CategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          deleteMany: {
            args: Prisma.CategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          aggregate: {
            args: Prisma.CategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory>
          }
          groupBy: {
            args: Prisma.CategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryCountAggregateOutputType> | number
          }
        }
      }
      Sales: {
        payload: Prisma.$SalesPayload<ExtArgs>
        fields: Prisma.SalesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SalesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SalesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesPayload>
          }
          findFirst: {
            args: Prisma.SalesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SalesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesPayload>
          }
          findMany: {
            args: Prisma.SalesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesPayload>[]
          }
          create: {
            args: Prisma.SalesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesPayload>
          }
          createMany: {
            args: Prisma.SalesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SalesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesPayload>
          }
          update: {
            args: Prisma.SalesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesPayload>
          }
          deleteMany: {
            args: Prisma.SalesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SalesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SalesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesPayload>
          }
          aggregate: {
            args: Prisma.SalesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSales>
          }
          groupBy: {
            args: Prisma.SalesGroupByArgs<ExtArgs>
            result: $Utils.Optional<SalesGroupByOutputType>[]
          }
          count: {
            args: Prisma.SalesCountArgs<ExtArgs>
            result: $Utils.Optional<SalesCountAggregateOutputType> | number
          }
        }
      }
      SalesItem: {
        payload: Prisma.$SalesItemPayload<ExtArgs>
        fields: Prisma.SalesItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SalesItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SalesItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemPayload>
          }
          findFirst: {
            args: Prisma.SalesItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SalesItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemPayload>
          }
          findMany: {
            args: Prisma.SalesItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemPayload>[]
          }
          create: {
            args: Prisma.SalesItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemPayload>
          }
          createMany: {
            args: Prisma.SalesItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SalesItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemPayload>
          }
          update: {
            args: Prisma.SalesItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemPayload>
          }
          deleteMany: {
            args: Prisma.SalesItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SalesItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SalesItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemPayload>
          }
          aggregate: {
            args: Prisma.SalesItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSalesItem>
          }
          groupBy: {
            args: Prisma.SalesItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<SalesItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.SalesItemCountArgs<ExtArgs>
            result: $Utils.Optional<SalesItemCountAggregateOutputType> | number
          }
        }
      }
      SalesItemModifier: {
        payload: Prisma.$SalesItemModifierPayload<ExtArgs>
        fields: Prisma.SalesItemModifierFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SalesItemModifierFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemModifierPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SalesItemModifierFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemModifierPayload>
          }
          findFirst: {
            args: Prisma.SalesItemModifierFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemModifierPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SalesItemModifierFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemModifierPayload>
          }
          findMany: {
            args: Prisma.SalesItemModifierFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemModifierPayload>[]
          }
          create: {
            args: Prisma.SalesItemModifierCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemModifierPayload>
          }
          createMany: {
            args: Prisma.SalesItemModifierCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SalesItemModifierDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemModifierPayload>
          }
          update: {
            args: Prisma.SalesItemModifierUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemModifierPayload>
          }
          deleteMany: {
            args: Prisma.SalesItemModifierDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SalesItemModifierUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SalesItemModifierUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesItemModifierPayload>
          }
          aggregate: {
            args: Prisma.SalesItemModifierAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSalesItemModifier>
          }
          groupBy: {
            args: Prisma.SalesItemModifierGroupByArgs<ExtArgs>
            result: $Utils.Optional<SalesItemModifierGroupByOutputType>[]
          }
          count: {
            args: Prisma.SalesItemModifierCountArgs<ExtArgs>
            result: $Utils.Optional<SalesItemModifierCountAggregateOutputType> | number
          }
        }
      }
      SalesQuotation: {
        payload: Prisma.$SalesQuotationPayload<ExtArgs>
        fields: Prisma.SalesQuotationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SalesQuotationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SalesQuotationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationPayload>
          }
          findFirst: {
            args: Prisma.SalesQuotationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SalesQuotationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationPayload>
          }
          findMany: {
            args: Prisma.SalesQuotationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationPayload>[]
          }
          create: {
            args: Prisma.SalesQuotationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationPayload>
          }
          createMany: {
            args: Prisma.SalesQuotationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SalesQuotationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationPayload>
          }
          update: {
            args: Prisma.SalesQuotationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationPayload>
          }
          deleteMany: {
            args: Prisma.SalesQuotationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SalesQuotationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SalesQuotationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationPayload>
          }
          aggregate: {
            args: Prisma.SalesQuotationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSalesQuotation>
          }
          groupBy: {
            args: Prisma.SalesQuotationGroupByArgs<ExtArgs>
            result: $Utils.Optional<SalesQuotationGroupByOutputType>[]
          }
          count: {
            args: Prisma.SalesQuotationCountArgs<ExtArgs>
            result: $Utils.Optional<SalesQuotationCountAggregateOutputType> | number
          }
        }
      }
      SalesQuotationItem: {
        payload: Prisma.$SalesQuotationItemPayload<ExtArgs>
        fields: Prisma.SalesQuotationItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SalesQuotationItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SalesQuotationItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationItemPayload>
          }
          findFirst: {
            args: Prisma.SalesQuotationItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SalesQuotationItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationItemPayload>
          }
          findMany: {
            args: Prisma.SalesQuotationItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationItemPayload>[]
          }
          create: {
            args: Prisma.SalesQuotationItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationItemPayload>
          }
          createMany: {
            args: Prisma.SalesQuotationItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SalesQuotationItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationItemPayload>
          }
          update: {
            args: Prisma.SalesQuotationItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationItemPayload>
          }
          deleteMany: {
            args: Prisma.SalesQuotationItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SalesQuotationItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SalesQuotationItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SalesQuotationItemPayload>
          }
          aggregate: {
            args: Prisma.SalesQuotationItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSalesQuotationItem>
          }
          groupBy: {
            args: Prisma.SalesQuotationItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<SalesQuotationItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.SalesQuotationItemCountArgs<ExtArgs>
            result: $Utils.Optional<SalesQuotationItemCountAggregateOutputType> | number
          }
        }
      }
      Invoice: {
        payload: Prisma.$InvoicePayload<ExtArgs>
        fields: Prisma.InvoiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InvoiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InvoiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          findFirst: {
            args: Prisma.InvoiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InvoiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          findMany: {
            args: Prisma.InvoiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>[]
          }
          create: {
            args: Prisma.InvoiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          createMany: {
            args: Prisma.InvoiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.InvoiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          update: {
            args: Prisma.InvoiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          deleteMany: {
            args: Prisma.InvoiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InvoiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.InvoiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          aggregate: {
            args: Prisma.InvoiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvoice>
          }
          groupBy: {
            args: Prisma.InvoiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<InvoiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.InvoiceCountArgs<ExtArgs>
            result: $Utils.Optional<InvoiceCountAggregateOutputType> | number
          }
        }
      }
      InvoiceItem: {
        payload: Prisma.$InvoiceItemPayload<ExtArgs>
        fields: Prisma.InvoiceItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InvoiceItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InvoiceItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceItemPayload>
          }
          findFirst: {
            args: Prisma.InvoiceItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InvoiceItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceItemPayload>
          }
          findMany: {
            args: Prisma.InvoiceItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceItemPayload>[]
          }
          create: {
            args: Prisma.InvoiceItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceItemPayload>
          }
          createMany: {
            args: Prisma.InvoiceItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.InvoiceItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceItemPayload>
          }
          update: {
            args: Prisma.InvoiceItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceItemPayload>
          }
          deleteMany: {
            args: Prisma.InvoiceItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InvoiceItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.InvoiceItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoiceItemPayload>
          }
          aggregate: {
            args: Prisma.InvoiceItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvoiceItem>
          }
          groupBy: {
            args: Prisma.InvoiceItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<InvoiceItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.InvoiceItemCountArgs<ExtArgs>
            result: $Utils.Optional<InvoiceItemCountAggregateOutputType> | number
          }
        }
      }
      DeliveryOrder: {
        payload: Prisma.$DeliveryOrderPayload<ExtArgs>
        fields: Prisma.DeliveryOrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DeliveryOrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DeliveryOrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderPayload>
          }
          findFirst: {
            args: Prisma.DeliveryOrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DeliveryOrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderPayload>
          }
          findMany: {
            args: Prisma.DeliveryOrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderPayload>[]
          }
          create: {
            args: Prisma.DeliveryOrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderPayload>
          }
          createMany: {
            args: Prisma.DeliveryOrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.DeliveryOrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderPayload>
          }
          update: {
            args: Prisma.DeliveryOrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderPayload>
          }
          deleteMany: {
            args: Prisma.DeliveryOrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DeliveryOrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DeliveryOrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderPayload>
          }
          aggregate: {
            args: Prisma.DeliveryOrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDeliveryOrder>
          }
          groupBy: {
            args: Prisma.DeliveryOrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<DeliveryOrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.DeliveryOrderCountArgs<ExtArgs>
            result: $Utils.Optional<DeliveryOrderCountAggregateOutputType> | number
          }
        }
      }
      DeliveryOrderItem: {
        payload: Prisma.$DeliveryOrderItemPayload<ExtArgs>
        fields: Prisma.DeliveryOrderItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DeliveryOrderItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DeliveryOrderItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderItemPayload>
          }
          findFirst: {
            args: Prisma.DeliveryOrderItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DeliveryOrderItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderItemPayload>
          }
          findMany: {
            args: Prisma.DeliveryOrderItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderItemPayload>[]
          }
          create: {
            args: Prisma.DeliveryOrderItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderItemPayload>
          }
          createMany: {
            args: Prisma.DeliveryOrderItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.DeliveryOrderItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderItemPayload>
          }
          update: {
            args: Prisma.DeliveryOrderItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderItemPayload>
          }
          deleteMany: {
            args: Prisma.DeliveryOrderItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DeliveryOrderItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DeliveryOrderItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeliveryOrderItemPayload>
          }
          aggregate: {
            args: Prisma.DeliveryOrderItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDeliveryOrderItem>
          }
          groupBy: {
            args: Prisma.DeliveryOrderItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<DeliveryOrderItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.DeliveryOrderItemCountArgs<ExtArgs>
            result: $Utils.Optional<DeliveryOrderItemCountAggregateOutputType> | number
          }
        }
      }
      PurchaseOrder: {
        payload: Prisma.$PurchaseOrderPayload<ExtArgs>
        fields: Prisma.PurchaseOrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PurchaseOrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PurchaseOrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload>
          }
          findFirst: {
            args: Prisma.PurchaseOrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PurchaseOrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload>
          }
          findMany: {
            args: Prisma.PurchaseOrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload>[]
          }
          create: {
            args: Prisma.PurchaseOrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload>
          }
          createMany: {
            args: Prisma.PurchaseOrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PurchaseOrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload>
          }
          update: {
            args: Prisma.PurchaseOrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload>
          }
          deleteMany: {
            args: Prisma.PurchaseOrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PurchaseOrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PurchaseOrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderPayload>
          }
          aggregate: {
            args: Prisma.PurchaseOrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePurchaseOrder>
          }
          groupBy: {
            args: Prisma.PurchaseOrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<PurchaseOrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.PurchaseOrderCountArgs<ExtArgs>
            result: $Utils.Optional<PurchaseOrderCountAggregateOutputType> | number
          }
        }
      }
      PurchaseOrderItem: {
        payload: Prisma.$PurchaseOrderItemPayload<ExtArgs>
        fields: Prisma.PurchaseOrderItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PurchaseOrderItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PurchaseOrderItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload>
          }
          findFirst: {
            args: Prisma.PurchaseOrderItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PurchaseOrderItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload>
          }
          findMany: {
            args: Prisma.PurchaseOrderItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload>[]
          }
          create: {
            args: Prisma.PurchaseOrderItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload>
          }
          createMany: {
            args: Prisma.PurchaseOrderItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PurchaseOrderItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload>
          }
          update: {
            args: Prisma.PurchaseOrderItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload>
          }
          deleteMany: {
            args: Prisma.PurchaseOrderItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PurchaseOrderItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PurchaseOrderItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PurchaseOrderItemPayload>
          }
          aggregate: {
            args: Prisma.PurchaseOrderItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePurchaseOrderItem>
          }
          groupBy: {
            args: Prisma.PurchaseOrderItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<PurchaseOrderItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.PurchaseOrderItemCountArgs<ExtArgs>
            result: $Utils.Optional<PurchaseOrderItemCountAggregateOutputType> | number
          }
        }
      }
      Payment: {
        payload: Prisma.$PaymentPayload<ExtArgs>
        fields: Prisma.PaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findFirst: {
            args: Prisma.PaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findMany: {
            args: Prisma.PaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          create: {
            args: Prisma.PaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          createMany: {
            args: Prisma.PaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          update: {
            args: Prisma.PaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          deleteMany: {
            args: Prisma.PaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          aggregate: {
            args: Prisma.PaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayment>
          }
          groupBy: {
            args: Prisma.PaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentCountAggregateOutputType> | number
          }
        }
      }
      RegisterLog: {
        payload: Prisma.$RegisterLogPayload<ExtArgs>
        fields: Prisma.RegisterLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegisterLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegisterLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegisterLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegisterLogPayload>
          }
          findFirst: {
            args: Prisma.RegisterLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegisterLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegisterLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegisterLogPayload>
          }
          findMany: {
            args: Prisma.RegisterLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegisterLogPayload>[]
          }
          create: {
            args: Prisma.RegisterLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegisterLogPayload>
          }
          createMany: {
            args: Prisma.RegisterLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RegisterLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegisterLogPayload>
          }
          update: {
            args: Prisma.RegisterLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegisterLogPayload>
          }
          deleteMany: {
            args: Prisma.RegisterLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegisterLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RegisterLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegisterLogPayload>
          }
          aggregate: {
            args: Prisma.RegisterLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegisterLog>
          }
          groupBy: {
            args: Prisma.RegisterLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegisterLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegisterLogCountArgs<ExtArgs>
            result: $Utils.Optional<RegisterLogCountAggregateOutputType> | number
          }
        }
      }
      CardInfo: {
        payload: Prisma.$CardInfoPayload<ExtArgs>
        fields: Prisma.CardInfoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CardInfoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardInfoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CardInfoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardInfoPayload>
          }
          findFirst: {
            args: Prisma.CardInfoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardInfoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CardInfoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardInfoPayload>
          }
          findMany: {
            args: Prisma.CardInfoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardInfoPayload>[]
          }
          create: {
            args: Prisma.CardInfoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardInfoPayload>
          }
          createMany: {
            args: Prisma.CardInfoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CardInfoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardInfoPayload>
          }
          update: {
            args: Prisma.CardInfoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardInfoPayload>
          }
          deleteMany: {
            args: Prisma.CardInfoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CardInfoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CardInfoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CardInfoPayload>
          }
          aggregate: {
            args: Prisma.CardInfoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCardInfo>
          }
          groupBy: {
            args: Prisma.CardInfoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CardInfoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CardInfoCountArgs<ExtArgs>
            result: $Utils.Optional<CardInfoCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
      Declaration: {
        payload: Prisma.$DeclarationPayload<ExtArgs>
        fields: Prisma.DeclarationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DeclarationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeclarationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DeclarationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeclarationPayload>
          }
          findFirst: {
            args: Prisma.DeclarationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeclarationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DeclarationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeclarationPayload>
          }
          findMany: {
            args: Prisma.DeclarationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeclarationPayload>[]
          }
          create: {
            args: Prisma.DeclarationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeclarationPayload>
          }
          createMany: {
            args: Prisma.DeclarationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.DeclarationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeclarationPayload>
          }
          update: {
            args: Prisma.DeclarationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeclarationPayload>
          }
          deleteMany: {
            args: Prisma.DeclarationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DeclarationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DeclarationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeclarationPayload>
          }
          aggregate: {
            args: Prisma.DeclarationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDeclaration>
          }
          groupBy: {
            args: Prisma.DeclarationGroupByArgs<ExtArgs>
            result: $Utils.Optional<DeclarationGroupByOutputType>[]
          }
          count: {
            args: Prisma.DeclarationCountArgs<ExtArgs>
            result: $Utils.Optional<DeclarationCountAggregateOutputType> | number
          }
        }
      }
      StockBalance: {
        payload: Prisma.$StockBalancePayload<ExtArgs>
        fields: Prisma.StockBalanceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StockBalanceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBalancePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StockBalanceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBalancePayload>
          }
          findFirst: {
            args: Prisma.StockBalanceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBalancePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StockBalanceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBalancePayload>
          }
          findMany: {
            args: Prisma.StockBalanceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBalancePayload>[]
          }
          create: {
            args: Prisma.StockBalanceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBalancePayload>
          }
          createMany: {
            args: Prisma.StockBalanceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.StockBalanceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBalancePayload>
          }
          update: {
            args: Prisma.StockBalanceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBalancePayload>
          }
          deleteMany: {
            args: Prisma.StockBalanceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StockBalanceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StockBalanceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockBalancePayload>
          }
          aggregate: {
            args: Prisma.StockBalanceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStockBalance>
          }
          groupBy: {
            args: Prisma.StockBalanceGroupByArgs<ExtArgs>
            result: $Utils.Optional<StockBalanceGroupByOutputType>[]
          }
          count: {
            args: Prisma.StockBalanceCountArgs<ExtArgs>
            result: $Utils.Optional<StockBalanceCountAggregateOutputType> | number
          }
        }
      }
      StockReceipt: {
        payload: Prisma.$StockReceiptPayload<ExtArgs>
        fields: Prisma.StockReceiptFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StockReceiptFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StockReceiptFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptPayload>
          }
          findFirst: {
            args: Prisma.StockReceiptFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StockReceiptFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptPayload>
          }
          findMany: {
            args: Prisma.StockReceiptFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptPayload>[]
          }
          create: {
            args: Prisma.StockReceiptCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptPayload>
          }
          createMany: {
            args: Prisma.StockReceiptCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.StockReceiptDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptPayload>
          }
          update: {
            args: Prisma.StockReceiptUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptPayload>
          }
          deleteMany: {
            args: Prisma.StockReceiptDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StockReceiptUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StockReceiptUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptPayload>
          }
          aggregate: {
            args: Prisma.StockReceiptAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStockReceipt>
          }
          groupBy: {
            args: Prisma.StockReceiptGroupByArgs<ExtArgs>
            result: $Utils.Optional<StockReceiptGroupByOutputType>[]
          }
          count: {
            args: Prisma.StockReceiptCountArgs<ExtArgs>
            result: $Utils.Optional<StockReceiptCountAggregateOutputType> | number
          }
        }
      }
      StockReceiptArchive: {
        payload: Prisma.$StockReceiptArchivePayload<ExtArgs>
        fields: Prisma.StockReceiptArchiveFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StockReceiptArchiveFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptArchivePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StockReceiptArchiveFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptArchivePayload>
          }
          findFirst: {
            args: Prisma.StockReceiptArchiveFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptArchivePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StockReceiptArchiveFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptArchivePayload>
          }
          findMany: {
            args: Prisma.StockReceiptArchiveFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptArchivePayload>[]
          }
          create: {
            args: Prisma.StockReceiptArchiveCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptArchivePayload>
          }
          createMany: {
            args: Prisma.StockReceiptArchiveCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.StockReceiptArchiveDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptArchivePayload>
          }
          update: {
            args: Prisma.StockReceiptArchiveUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptArchivePayload>
          }
          deleteMany: {
            args: Prisma.StockReceiptArchiveDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StockReceiptArchiveUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StockReceiptArchiveUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockReceiptArchivePayload>
          }
          aggregate: {
            args: Prisma.StockReceiptArchiveAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStockReceiptArchive>
          }
          groupBy: {
            args: Prisma.StockReceiptArchiveGroupByArgs<ExtArgs>
            result: $Utils.Optional<StockReceiptArchiveGroupByOutputType>[]
          }
          count: {
            args: Prisma.StockReceiptArchiveCountArgs<ExtArgs>
            result: $Utils.Optional<StockReceiptArchiveCountAggregateOutputType> | number
          }
        }
      }
      StockMovement: {
        payload: Prisma.$StockMovementPayload<ExtArgs>
        fields: Prisma.StockMovementFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StockMovementFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StockMovementFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload>
          }
          findFirst: {
            args: Prisma.StockMovementFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StockMovementFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload>
          }
          findMany: {
            args: Prisma.StockMovementFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload>[]
          }
          create: {
            args: Prisma.StockMovementCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload>
          }
          createMany: {
            args: Prisma.StockMovementCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.StockMovementDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload>
          }
          update: {
            args: Prisma.StockMovementUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload>
          }
          deleteMany: {
            args: Prisma.StockMovementDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StockMovementUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StockMovementUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload>
          }
          aggregate: {
            args: Prisma.StockMovementAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStockMovement>
          }
          groupBy: {
            args: Prisma.StockMovementGroupByArgs<ExtArgs>
            result: $Utils.Optional<StockMovementGroupByOutputType>[]
          }
          count: {
            args: Prisma.StockMovementCountArgs<ExtArgs>
            result: $Utils.Optional<StockMovementCountAggregateOutputType> | number
          }
        }
      }
      StockMovementArchive: {
        payload: Prisma.$StockMovementArchivePayload<ExtArgs>
        fields: Prisma.StockMovementArchiveFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StockMovementArchiveFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementArchivePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StockMovementArchiveFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementArchivePayload>
          }
          findFirst: {
            args: Prisma.StockMovementArchiveFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementArchivePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StockMovementArchiveFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementArchivePayload>
          }
          findMany: {
            args: Prisma.StockMovementArchiveFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementArchivePayload>[]
          }
          create: {
            args: Prisma.StockMovementArchiveCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementArchivePayload>
          }
          createMany: {
            args: Prisma.StockMovementArchiveCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.StockMovementArchiveDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementArchivePayload>
          }
          update: {
            args: Prisma.StockMovementArchiveUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementArchivePayload>
          }
          deleteMany: {
            args: Prisma.StockMovementArchiveDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StockMovementArchiveUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StockMovementArchiveUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementArchivePayload>
          }
          aggregate: {
            args: Prisma.StockMovementArchiveAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStockMovementArchive>
          }
          groupBy: {
            args: Prisma.StockMovementArchiveGroupByArgs<ExtArgs>
            result: $Utils.Optional<StockMovementArchiveGroupByOutputType>[]
          }
          count: {
            args: Prisma.StockMovementArchiveCountArgs<ExtArgs>
            result: $Utils.Optional<StockMovementArchiveCountAggregateOutputType> | number
          }
        }
      }
      StockSnapshot: {
        payload: Prisma.$StockSnapshotPayload<ExtArgs>
        fields: Prisma.StockSnapshotFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StockSnapshotFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockSnapshotPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StockSnapshotFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockSnapshotPayload>
          }
          findFirst: {
            args: Prisma.StockSnapshotFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockSnapshotPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StockSnapshotFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockSnapshotPayload>
          }
          findMany: {
            args: Prisma.StockSnapshotFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockSnapshotPayload>[]
          }
          create: {
            args: Prisma.StockSnapshotCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockSnapshotPayload>
          }
          createMany: {
            args: Prisma.StockSnapshotCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.StockSnapshotDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockSnapshotPayload>
          }
          update: {
            args: Prisma.StockSnapshotUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockSnapshotPayload>
          }
          deleteMany: {
            args: Prisma.StockSnapshotDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StockSnapshotUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StockSnapshotUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockSnapshotPayload>
          }
          aggregate: {
            args: Prisma.StockSnapshotAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStockSnapshot>
          }
          groupBy: {
            args: Prisma.StockSnapshotGroupByArgs<ExtArgs>
            result: $Utils.Optional<StockSnapshotGroupByOutputType>[]
          }
          count: {
            args: Prisma.StockSnapshotCountArgs<ExtArgs>
            result: $Utils.Optional<StockSnapshotCountAggregateOutputType> | number
          }
        }
      }
      MenuProfileOutlet: {
        payload: Prisma.$MenuProfileOutletPayload<ExtArgs>
        fields: Prisma.MenuProfileOutletFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MenuProfileOutletFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfileOutletPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MenuProfileOutletFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfileOutletPayload>
          }
          findFirst: {
            args: Prisma.MenuProfileOutletFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfileOutletPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MenuProfileOutletFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfileOutletPayload>
          }
          findMany: {
            args: Prisma.MenuProfileOutletFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfileOutletPayload>[]
          }
          create: {
            args: Prisma.MenuProfileOutletCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfileOutletPayload>
          }
          createMany: {
            args: Prisma.MenuProfileOutletCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MenuProfileOutletDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfileOutletPayload>
          }
          update: {
            args: Prisma.MenuProfileOutletUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfileOutletPayload>
          }
          deleteMany: {
            args: Prisma.MenuProfileOutletDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MenuProfileOutletUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MenuProfileOutletUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfileOutletPayload>
          }
          aggregate: {
            args: Prisma.MenuProfileOutletAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMenuProfileOutlet>
          }
          groupBy: {
            args: Prisma.MenuProfileOutletGroupByArgs<ExtArgs>
            result: $Utils.Optional<MenuProfileOutletGroupByOutputType>[]
          }
          count: {
            args: Prisma.MenuProfileOutletCountArgs<ExtArgs>
            result: $Utils.Optional<MenuProfileOutletCountAggregateOutputType> | number
          }
        }
      }
      MenuProfile: {
        payload: Prisma.$MenuProfilePayload<ExtArgs>
        fields: Prisma.MenuProfileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MenuProfileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MenuProfileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfilePayload>
          }
          findFirst: {
            args: Prisma.MenuProfileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MenuProfileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfilePayload>
          }
          findMany: {
            args: Prisma.MenuProfileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfilePayload>[]
          }
          create: {
            args: Prisma.MenuProfileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfilePayload>
          }
          createMany: {
            args: Prisma.MenuProfileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MenuProfileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfilePayload>
          }
          update: {
            args: Prisma.MenuProfileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfilePayload>
          }
          deleteMany: {
            args: Prisma.MenuProfileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MenuProfileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MenuProfileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProfilePayload>
          }
          aggregate: {
            args: Prisma.MenuProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMenuProfile>
          }
          groupBy: {
            args: Prisma.MenuProfileGroupByArgs<ExtArgs>
            result: $Utils.Optional<MenuProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.MenuProfileCountArgs<ExtArgs>
            result: $Utils.Optional<MenuProfileCountAggregateOutputType> | number
          }
        }
      }
      MenuCategory: {
        payload: Prisma.$MenuCategoryPayload<ExtArgs>
        fields: Prisma.MenuCategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MenuCategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MenuCategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload>
          }
          findFirst: {
            args: Prisma.MenuCategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MenuCategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload>
          }
          findMany: {
            args: Prisma.MenuCategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload>[]
          }
          create: {
            args: Prisma.MenuCategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload>
          }
          createMany: {
            args: Prisma.MenuCategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MenuCategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload>
          }
          update: {
            args: Prisma.MenuCategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload>
          }
          deleteMany: {
            args: Prisma.MenuCategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MenuCategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MenuCategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload>
          }
          aggregate: {
            args: Prisma.MenuCategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMenuCategory>
          }
          groupBy: {
            args: Prisma.MenuCategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<MenuCategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.MenuCategoryCountArgs<ExtArgs>
            result: $Utils.Optional<MenuCategoryCountAggregateOutputType> | number
          }
        }
      }
      MenuItem: {
        payload: Prisma.$MenuItemPayload<ExtArgs>
        fields: Prisma.MenuItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MenuItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MenuItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemPayload>
          }
          findFirst: {
            args: Prisma.MenuItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MenuItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemPayload>
          }
          findMany: {
            args: Prisma.MenuItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemPayload>[]
          }
          create: {
            args: Prisma.MenuItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemPayload>
          }
          createMany: {
            args: Prisma.MenuItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MenuItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemPayload>
          }
          update: {
            args: Prisma.MenuItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemPayload>
          }
          deleteMany: {
            args: Prisma.MenuItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MenuItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MenuItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemPayload>
          }
          aggregate: {
            args: Prisma.MenuItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMenuItem>
          }
          groupBy: {
            args: Prisma.MenuItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<MenuItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.MenuItemCountArgs<ExtArgs>
            result: $Utils.Optional<MenuItemCountAggregateOutputType> | number
          }
        }
      }
      MenuItemModifierGroup: {
        payload: Prisma.$MenuItemModifierGroupPayload<ExtArgs>
        fields: Prisma.MenuItemModifierGroupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MenuItemModifierGroupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierGroupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MenuItemModifierGroupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierGroupPayload>
          }
          findFirst: {
            args: Prisma.MenuItemModifierGroupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierGroupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MenuItemModifierGroupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierGroupPayload>
          }
          findMany: {
            args: Prisma.MenuItemModifierGroupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierGroupPayload>[]
          }
          create: {
            args: Prisma.MenuItemModifierGroupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierGroupPayload>
          }
          createMany: {
            args: Prisma.MenuItemModifierGroupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MenuItemModifierGroupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierGroupPayload>
          }
          update: {
            args: Prisma.MenuItemModifierGroupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierGroupPayload>
          }
          deleteMany: {
            args: Prisma.MenuItemModifierGroupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MenuItemModifierGroupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MenuItemModifierGroupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierGroupPayload>
          }
          aggregate: {
            args: Prisma.MenuItemModifierGroupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMenuItemModifierGroup>
          }
          groupBy: {
            args: Prisma.MenuItemModifierGroupGroupByArgs<ExtArgs>
            result: $Utils.Optional<MenuItemModifierGroupGroupByOutputType>[]
          }
          count: {
            args: Prisma.MenuItemModifierGroupCountArgs<ExtArgs>
            result: $Utils.Optional<MenuItemModifierGroupCountAggregateOutputType> | number
          }
        }
      }
      MenuItemModifier: {
        payload: Prisma.$MenuItemModifierPayload<ExtArgs>
        fields: Prisma.MenuItemModifierFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MenuItemModifierFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MenuItemModifierFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierPayload>
          }
          findFirst: {
            args: Prisma.MenuItemModifierFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MenuItemModifierFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierPayload>
          }
          findMany: {
            args: Prisma.MenuItemModifierFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierPayload>[]
          }
          create: {
            args: Prisma.MenuItemModifierCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierPayload>
          }
          createMany: {
            args: Prisma.MenuItemModifierCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MenuItemModifierDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierPayload>
          }
          update: {
            args: Prisma.MenuItemModifierUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierPayload>
          }
          deleteMany: {
            args: Prisma.MenuItemModifierDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MenuItemModifierUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MenuItemModifierUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuItemModifierPayload>
          }
          aggregate: {
            args: Prisma.MenuItemModifierAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMenuItemModifier>
          }
          groupBy: {
            args: Prisma.MenuItemModifierGroupByArgs<ExtArgs>
            result: $Utils.Optional<MenuItemModifierGroupByOutputType>[]
          }
          count: {
            args: Prisma.MenuItemModifierCountArgs<ExtArgs>
            result: $Utils.Optional<MenuItemModifierCountAggregateOutputType> | number
          }
        }
      }
      Table: {
        payload: Prisma.$TablePayload<ExtArgs>
        fields: Prisma.TableFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TableFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TablePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TableFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TablePayload>
          }
          findFirst: {
            args: Prisma.TableFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TablePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TableFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TablePayload>
          }
          findMany: {
            args: Prisma.TableFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TablePayload>[]
          }
          create: {
            args: Prisma.TableCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TablePayload>
          }
          createMany: {
            args: Prisma.TableCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TableDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TablePayload>
          }
          update: {
            args: Prisma.TableUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TablePayload>
          }
          deleteMany: {
            args: Prisma.TableDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TableUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TableUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TablePayload>
          }
          aggregate: {
            args: Prisma.TableAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTable>
          }
          groupBy: {
            args: Prisma.TableGroupByArgs<ExtArgs>
            result: $Utils.Optional<TableGroupByOutputType>[]
          }
          count: {
            args: Prisma.TableCountArgs<ExtArgs>
            result: $Utils.Optional<TableCountAggregateOutputType> | number
          }
        }
      }
      Recipe: {
        payload: Prisma.$RecipePayload<ExtArgs>
        fields: Prisma.RecipeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RecipeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecipePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RecipeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecipePayload>
          }
          findFirst: {
            args: Prisma.RecipeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecipePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RecipeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecipePayload>
          }
          findMany: {
            args: Prisma.RecipeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecipePayload>[]
          }
          create: {
            args: Prisma.RecipeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecipePayload>
          }
          createMany: {
            args: Prisma.RecipeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RecipeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecipePayload>
          }
          update: {
            args: Prisma.RecipeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecipePayload>
          }
          deleteMany: {
            args: Prisma.RecipeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RecipeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RecipeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RecipePayload>
          }
          aggregate: {
            args: Prisma.RecipeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRecipe>
          }
          groupBy: {
            args: Prisma.RecipeGroupByArgs<ExtArgs>
            result: $Utils.Optional<RecipeGroupByOutputType>[]
          }
          count: {
            args: Prisma.RecipeCountArgs<ExtArgs>
            result: $Utils.Optional<RecipeCountAggregateOutputType> | number
          }
        }
      }
      Station: {
        payload: Prisma.$StationPayload<ExtArgs>
        fields: Prisma.StationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StationPayload>
          }
          findFirst: {
            args: Prisma.StationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StationPayload>
          }
          findMany: {
            args: Prisma.StationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StationPayload>[]
          }
          create: {
            args: Prisma.StationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StationPayload>
          }
          createMany: {
            args: Prisma.StationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.StationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StationPayload>
          }
          update: {
            args: Prisma.StationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StationPayload>
          }
          deleteMany: {
            args: Prisma.StationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StationPayload>
          }
          aggregate: {
            args: Prisma.StationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStation>
          }
          groupBy: {
            args: Prisma.StationGroupByArgs<ExtArgs>
            result: $Utils.Optional<StationGroupByOutputType>[]
          }
          count: {
            args: Prisma.StationCountArgs<ExtArgs>
            result: $Utils.Optional<StationCountAggregateOutputType> | number
          }
        }
      }
      Reservation: {
        payload: Prisma.$ReservationPayload<ExtArgs>
        fields: Prisma.ReservationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          findFirst: {
            args: Prisma.ReservationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          findMany: {
            args: Prisma.ReservationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>[]
          }
          create: {
            args: Prisma.ReservationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          createMany: {
            args: Prisma.ReservationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ReservationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          update: {
            args: Prisma.ReservationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          deleteMany: {
            args: Prisma.ReservationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReservationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          aggregate: {
            args: Prisma.ReservationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReservation>
          }
          groupBy: {
            args: Prisma.ReservationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservationCountArgs<ExtArgs>
            result: $Utils.Optional<ReservationCountAggregateOutputType> | number
          }
        }
      }
      OrderRouting: {
        payload: Prisma.$OrderRoutingPayload<ExtArgs>
        fields: Prisma.OrderRoutingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderRoutingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderRoutingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderRoutingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderRoutingPayload>
          }
          findFirst: {
            args: Prisma.OrderRoutingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderRoutingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderRoutingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderRoutingPayload>
          }
          findMany: {
            args: Prisma.OrderRoutingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderRoutingPayload>[]
          }
          create: {
            args: Prisma.OrderRoutingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderRoutingPayload>
          }
          createMany: {
            args: Prisma.OrderRoutingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.OrderRoutingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderRoutingPayload>
          }
          update: {
            args: Prisma.OrderRoutingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderRoutingPayload>
          }
          deleteMany: {
            args: Prisma.OrderRoutingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderRoutingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrderRoutingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderRoutingPayload>
          }
          aggregate: {
            args: Prisma.OrderRoutingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderRouting>
          }
          groupBy: {
            args: Prisma.OrderRoutingGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderRoutingGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderRoutingCountArgs<ExtArgs>
            result: $Utils.Optional<OrderRoutingCountAggregateOutputType> | number
          }
        }
      }
      Waitlist: {
        payload: Prisma.$WaitlistPayload<ExtArgs>
        fields: Prisma.WaitlistFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WaitlistFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WaitlistPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WaitlistFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WaitlistPayload>
          }
          findFirst: {
            args: Prisma.WaitlistFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WaitlistPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WaitlistFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WaitlistPayload>
          }
          findMany: {
            args: Prisma.WaitlistFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WaitlistPayload>[]
          }
          create: {
            args: Prisma.WaitlistCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WaitlistPayload>
          }
          createMany: {
            args: Prisma.WaitlistCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.WaitlistDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WaitlistPayload>
          }
          update: {
            args: Prisma.WaitlistUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WaitlistPayload>
          }
          deleteMany: {
            args: Prisma.WaitlistDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WaitlistUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.WaitlistUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WaitlistPayload>
          }
          aggregate: {
            args: Prisma.WaitlistAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWaitlist>
          }
          groupBy: {
            args: Prisma.WaitlistGroupByArgs<ExtArgs>
            result: $Utils.Optional<WaitlistGroupByOutputType>[]
          }
          count: {
            args: Prisma.WaitlistCountArgs<ExtArgs>
            result: $Utils.Optional<WaitlistCountAggregateOutputType> | number
          }
        }
      }
      SplitBill: {
        payload: Prisma.$SplitBillPayload<ExtArgs>
        fields: Prisma.SplitBillFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SplitBillFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SplitBillPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SplitBillFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SplitBillPayload>
          }
          findFirst: {
            args: Prisma.SplitBillFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SplitBillPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SplitBillFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SplitBillPayload>
          }
          findMany: {
            args: Prisma.SplitBillFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SplitBillPayload>[]
          }
          create: {
            args: Prisma.SplitBillCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SplitBillPayload>
          }
          createMany: {
            args: Prisma.SplitBillCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SplitBillDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SplitBillPayload>
          }
          update: {
            args: Prisma.SplitBillUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SplitBillPayload>
          }
          deleteMany: {
            args: Prisma.SplitBillDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SplitBillUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SplitBillUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SplitBillPayload>
          }
          aggregate: {
            args: Prisma.SplitBillAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSplitBill>
          }
          groupBy: {
            args: Prisma.SplitBillGroupByArgs<ExtArgs>
            result: $Utils.Optional<SplitBillGroupByOutputType>[]
          }
          count: {
            args: Prisma.SplitBillCountArgs<ExtArgs>
            result: $Utils.Optional<SplitBillCountAggregateOutputType> | number
          }
        }
      }
      Promotion: {
        payload: Prisma.$PromotionPayload<ExtArgs>
        fields: Prisma.PromotionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PromotionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PromotionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          findFirst: {
            args: Prisma.PromotionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PromotionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          findMany: {
            args: Prisma.PromotionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>[]
          }
          create: {
            args: Prisma.PromotionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          createMany: {
            args: Prisma.PromotionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PromotionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          update: {
            args: Prisma.PromotionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          deleteMany: {
            args: Prisma.PromotionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PromotionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PromotionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          aggregate: {
            args: Prisma.PromotionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromotion>
          }
          groupBy: {
            args: Prisma.PromotionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromotionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PromotionCountArgs<ExtArgs>
            result: $Utils.Optional<PromotionCountAggregateOutputType> | number
          }
        }
      }
      PromotionItem: {
        payload: Prisma.$PromotionItemPayload<ExtArgs>
        fields: Prisma.PromotionItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PromotionItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PromotionItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionItemPayload>
          }
          findFirst: {
            args: Prisma.PromotionItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PromotionItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionItemPayload>
          }
          findMany: {
            args: Prisma.PromotionItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionItemPayload>[]
          }
          create: {
            args: Prisma.PromotionItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionItemPayload>
          }
          createMany: {
            args: Prisma.PromotionItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PromotionItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionItemPayload>
          }
          update: {
            args: Prisma.PromotionItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionItemPayload>
          }
          deleteMany: {
            args: Prisma.PromotionItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PromotionItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PromotionItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionItemPayload>
          }
          aggregate: {
            args: Prisma.PromotionItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromotionItem>
          }
          groupBy: {
            args: Prisma.PromotionItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromotionItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.PromotionItemCountArgs<ExtArgs>
            result: $Utils.Optional<PromotionItemCountAggregateOutputType> | number
          }
        }
      }
      PromotionCustomer: {
        payload: Prisma.$PromotionCustomerPayload<ExtArgs>
        fields: Prisma.PromotionCustomerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PromotionCustomerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionCustomerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PromotionCustomerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionCustomerPayload>
          }
          findFirst: {
            args: Prisma.PromotionCustomerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionCustomerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PromotionCustomerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionCustomerPayload>
          }
          findMany: {
            args: Prisma.PromotionCustomerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionCustomerPayload>[]
          }
          create: {
            args: Prisma.PromotionCustomerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionCustomerPayload>
          }
          createMany: {
            args: Prisma.PromotionCustomerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PromotionCustomerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionCustomerPayload>
          }
          update: {
            args: Prisma.PromotionCustomerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionCustomerPayload>
          }
          deleteMany: {
            args: Prisma.PromotionCustomerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PromotionCustomerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PromotionCustomerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionCustomerPayload>
          }
          aggregate: {
            args: Prisma.PromotionCustomerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromotionCustomer>
          }
          groupBy: {
            args: Prisma.PromotionCustomerGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromotionCustomerGroupByOutputType>[]
          }
          count: {
            args: Prisma.PromotionCustomerCountArgs<ExtArgs>
            result: $Utils.Optional<PromotionCustomerCountAggregateOutputType> | number
          }
        }
      }
      PromotionUsage: {
        payload: Prisma.$PromotionUsagePayload<ExtArgs>
        fields: Prisma.PromotionUsageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PromotionUsageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionUsagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PromotionUsageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionUsagePayload>
          }
          findFirst: {
            args: Prisma.PromotionUsageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionUsagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PromotionUsageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionUsagePayload>
          }
          findMany: {
            args: Prisma.PromotionUsageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionUsagePayload>[]
          }
          create: {
            args: Prisma.PromotionUsageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionUsagePayload>
          }
          createMany: {
            args: Prisma.PromotionUsageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PromotionUsageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionUsagePayload>
          }
          update: {
            args: Prisma.PromotionUsageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionUsagePayload>
          }
          deleteMany: {
            args: Prisma.PromotionUsageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PromotionUsageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PromotionUsageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionUsagePayload>
          }
          aggregate: {
            args: Prisma.PromotionUsageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromotionUsage>
          }
          groupBy: {
            args: Prisma.PromotionUsageGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromotionUsageGroupByOutputType>[]
          }
          count: {
            args: Prisma.PromotionUsageCountArgs<ExtArgs>
            result: $Utils.Optional<PromotionUsageCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    role?: RoleOmit
    rolePermission?: RolePermissionOmit
    user?: UserOmit
    setting?: SettingOmit
    referral?: ReferralOmit
    supplier?: SupplierOmit
    customer?: CustomerOmit
    company?: CompanyOmit
    outlet?: OutletOmit
    item?: ItemOmit
    category?: CategoryOmit
    sales?: SalesOmit
    salesItem?: SalesItemOmit
    salesItemModifier?: SalesItemModifierOmit
    salesQuotation?: SalesQuotationOmit
    salesQuotationItem?: SalesQuotationItemOmit
    invoice?: InvoiceOmit
    invoiceItem?: InvoiceItemOmit
    deliveryOrder?: DeliveryOrderOmit
    deliveryOrderItem?: DeliveryOrderItemOmit
    purchaseOrder?: PurchaseOrderOmit
    purchaseOrderItem?: PurchaseOrderItemOmit
    payment?: PaymentOmit
    registerLog?: RegisterLogOmit
    cardInfo?: CardInfoOmit
    session?: SessionOmit
    declaration?: DeclarationOmit
    stockBalance?: StockBalanceOmit
    stockReceipt?: StockReceiptOmit
    stockReceiptArchive?: StockReceiptArchiveOmit
    stockMovement?: StockMovementOmit
    stockMovementArchive?: StockMovementArchiveOmit
    stockSnapshot?: StockSnapshotOmit
    menuProfileOutlet?: MenuProfileOutletOmit
    menuProfile?: MenuProfileOmit
    menuCategory?: MenuCategoryOmit
    menuItem?: MenuItemOmit
    menuItemModifierGroup?: MenuItemModifierGroupOmit
    menuItemModifier?: MenuItemModifierOmit
    table?: TableOmit
    recipe?: RecipeOmit
    station?: StationOmit
    reservation?: ReservationOmit
    orderRouting?: OrderRoutingOmit
    waitlist?: WaitlistOmit
    splitBill?: SplitBillOmit
    promotion?: PromotionOmit
    promotionItem?: PromotionItemOmit
    promotionCustomer?: PromotionCustomerOmit
    promotionUsage?: PromotionUsageOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    permission: number
    users: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permission?: boolean | RoleCountOutputTypeCountPermissionArgs
    users?: boolean | RoleCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountPermissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolePermissionWhereInput
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    settings: number
    roles: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    settings?: boolean | UserCountOutputTypeCountSettingsArgs
    roles?: boolean | UserCountOutputTypeCountRolesArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SettingWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
  }


  /**
   * Count Type SupplierCountOutputType
   */

  export type SupplierCountOutputType = {
    items: number
    purchaseOrders: number
    invoices: number
  }

  export type SupplierCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | SupplierCountOutputTypeCountItemsArgs
    purchaseOrders?: boolean | SupplierCountOutputTypeCountPurchaseOrdersArgs
    invoices?: boolean | SupplierCountOutputTypeCountInvoicesArgs
  }

  // Custom InputTypes
  /**
   * SupplierCountOutputType without action
   */
  export type SupplierCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupplierCountOutputType
     */
    select?: SupplierCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SupplierCountOutputType without action
   */
  export type SupplierCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemWhereInput
  }

  /**
   * SupplierCountOutputType without action
   */
  export type SupplierCountOutputTypeCountPurchaseOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PurchaseOrderWhereInput
  }

  /**
   * SupplierCountOutputType without action
   */
  export type SupplierCountOutputTypeCountInvoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
  }


  /**
   * Count Type CustomerCountOutputType
   */

  export type CustomerCountOutputType = {
    sales: number
    promotions: number
    promotionUsage: number
    reservations: number
    waitlists: number
    splitBills: number
  }

  export type CustomerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sales?: boolean | CustomerCountOutputTypeCountSalesArgs
    promotions?: boolean | CustomerCountOutputTypeCountPromotionsArgs
    promotionUsage?: boolean | CustomerCountOutputTypeCountPromotionUsageArgs
    reservations?: boolean | CustomerCountOutputTypeCountReservationsArgs
    waitlists?: boolean | CustomerCountOutputTypeCountWaitlistsArgs
    splitBills?: boolean | CustomerCountOutputTypeCountSplitBillsArgs
  }

  // Custom InputTypes
  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerCountOutputType
     */
    select?: CustomerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountSalesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalesWhereInput
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionCustomerWhereInput
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountPromotionUsageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionUsageWhereInput
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountReservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservationWhereInput
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountWaitlistsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WaitlistWhereInput
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountSplitBillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SplitBillWhereInput
  }


  /**
   * Count Type OutletCountOutputType
   */

  export type OutletCountOutputType = {
    stockBalances: number
    stockMovements: number
    stockSnapshots: number
    stockReceipts: number
    settings: number
    tables: number
    stations: number
    reservations: number
    waitlists: number
  }

  export type OutletCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stockBalances?: boolean | OutletCountOutputTypeCountStockBalancesArgs
    stockMovements?: boolean | OutletCountOutputTypeCountStockMovementsArgs
    stockSnapshots?: boolean | OutletCountOutputTypeCountStockSnapshotsArgs
    stockReceipts?: boolean | OutletCountOutputTypeCountStockReceiptsArgs
    settings?: boolean | OutletCountOutputTypeCountSettingsArgs
    tables?: boolean | OutletCountOutputTypeCountTablesArgs
    stations?: boolean | OutletCountOutputTypeCountStationsArgs
    reservations?: boolean | OutletCountOutputTypeCountReservationsArgs
    waitlists?: boolean | OutletCountOutputTypeCountWaitlistsArgs
  }

  // Custom InputTypes
  /**
   * OutletCountOutputType without action
   */
  export type OutletCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OutletCountOutputType
     */
    select?: OutletCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OutletCountOutputType without action
   */
  export type OutletCountOutputTypeCountStockBalancesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockBalanceWhereInput
  }

  /**
   * OutletCountOutputType without action
   */
  export type OutletCountOutputTypeCountStockMovementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockMovementWhereInput
  }

  /**
   * OutletCountOutputType without action
   */
  export type OutletCountOutputTypeCountStockSnapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockSnapshotWhereInput
  }

  /**
   * OutletCountOutputType without action
   */
  export type OutletCountOutputTypeCountStockReceiptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockReceiptWhereInput
  }

  /**
   * OutletCountOutputType without action
   */
  export type OutletCountOutputTypeCountSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SettingWhereInput
  }

  /**
   * OutletCountOutputType without action
   */
  export type OutletCountOutputTypeCountTablesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TableWhereInput
  }

  /**
   * OutletCountOutputType without action
   */
  export type OutletCountOutputTypeCountStationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StationWhereInput
  }

  /**
   * OutletCountOutputType without action
   */
  export type OutletCountOutputTypeCountReservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservationWhereInput
  }

  /**
   * OutletCountOutputType without action
   */
  export type OutletCountOutputTypeCountWaitlistsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WaitlistWhereInput
  }


  /**
   * Count Type ItemCountOutputType
   */

  export type ItemCountOutputType = {
    stockBalance: number
    stockMovements: number
    stockSnapshots: number
    stockReceipts: number
    recipes: number
    purchaseOrderItems: number
    deliveryOrderItems: number
    invoiceItems: number
  }

  export type ItemCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stockBalance?: boolean | ItemCountOutputTypeCountStockBalanceArgs
    stockMovements?: boolean | ItemCountOutputTypeCountStockMovementsArgs
    stockSnapshots?: boolean | ItemCountOutputTypeCountStockSnapshotsArgs
    stockReceipts?: boolean | ItemCountOutputTypeCountStockReceiptsArgs
    recipes?: boolean | ItemCountOutputTypeCountRecipesArgs
    purchaseOrderItems?: boolean | ItemCountOutputTypeCountPurchaseOrderItemsArgs
    deliveryOrderItems?: boolean | ItemCountOutputTypeCountDeliveryOrderItemsArgs
    invoiceItems?: boolean | ItemCountOutputTypeCountInvoiceItemsArgs
  }

  // Custom InputTypes
  /**
   * ItemCountOutputType without action
   */
  export type ItemCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemCountOutputType
     */
    select?: ItemCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ItemCountOutputType without action
   */
  export type ItemCountOutputTypeCountStockBalanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockBalanceWhereInput
  }

  /**
   * ItemCountOutputType without action
   */
  export type ItemCountOutputTypeCountStockMovementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockMovementWhereInput
  }

  /**
   * ItemCountOutputType without action
   */
  export type ItemCountOutputTypeCountStockSnapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockSnapshotWhereInput
  }

  /**
   * ItemCountOutputType without action
   */
  export type ItemCountOutputTypeCountStockReceiptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockReceiptWhereInput
  }

  /**
   * ItemCountOutputType without action
   */
  export type ItemCountOutputTypeCountRecipesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RecipeWhereInput
  }

  /**
   * ItemCountOutputType without action
   */
  export type ItemCountOutputTypeCountPurchaseOrderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PurchaseOrderItemWhereInput
  }

  /**
   * ItemCountOutputType without action
   */
  export type ItemCountOutputTypeCountDeliveryOrderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryOrderItemWhereInput
  }

  /**
   * ItemCountOutputType without action
   */
  export type ItemCountOutputTypeCountInvoiceItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceItemWhereInput
  }


  /**
   * Count Type CategoryCountOutputType
   */

  export type CategoryCountOutputType = {
    items: number
  }

  export type CategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | CategoryCountOutputTypeCountItemsArgs
  }

  // Custom InputTypes
  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryCountOutputType
     */
    select?: CategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemWhereInput
  }


  /**
   * Count Type SalesCountOutputType
   */

  export type SalesCountOutputType = {
    salesItems: number
    payments: number
    registerLogs: number
  }

  export type SalesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    salesItems?: boolean | SalesCountOutputTypeCountSalesItemsArgs
    payments?: boolean | SalesCountOutputTypeCountPaymentsArgs
    registerLogs?: boolean | SalesCountOutputTypeCountRegisterLogsArgs
  }

  // Custom InputTypes
  /**
   * SalesCountOutputType without action
   */
  export type SalesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesCountOutputType
     */
    select?: SalesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SalesCountOutputType without action
   */
  export type SalesCountOutputTypeCountSalesItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalesItemWhereInput
  }

  /**
   * SalesCountOutputType without action
   */
  export type SalesCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }

  /**
   * SalesCountOutputType without action
   */
  export type SalesCountOutputTypeCountRegisterLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegisterLogWhereInput
  }


  /**
   * Count Type SalesItemCountOutputType
   */

  export type SalesItemCountOutputType = {
    selectedModifiers: number
    orderRouting: number
  }

  export type SalesItemCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    selectedModifiers?: boolean | SalesItemCountOutputTypeCountSelectedModifiersArgs
    orderRouting?: boolean | SalesItemCountOutputTypeCountOrderRoutingArgs
  }

  // Custom InputTypes
  /**
   * SalesItemCountOutputType without action
   */
  export type SalesItemCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItemCountOutputType
     */
    select?: SalesItemCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SalesItemCountOutputType without action
   */
  export type SalesItemCountOutputTypeCountSelectedModifiersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalesItemModifierWhereInput
  }

  /**
   * SalesItemCountOutputType without action
   */
  export type SalesItemCountOutputTypeCountOrderRoutingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderRoutingWhereInput
  }


  /**
   * Count Type SalesQuotationCountOutputType
   */

  export type SalesQuotationCountOutputType = {
    salesQuotationItems: number
  }

  export type SalesQuotationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    salesQuotationItems?: boolean | SalesQuotationCountOutputTypeCountSalesQuotationItemsArgs
  }

  // Custom InputTypes
  /**
   * SalesQuotationCountOutputType without action
   */
  export type SalesQuotationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotationCountOutputType
     */
    select?: SalesQuotationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SalesQuotationCountOutputType without action
   */
  export type SalesQuotationCountOutputTypeCountSalesQuotationItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalesQuotationItemWhereInput
  }


  /**
   * Count Type InvoiceCountOutputType
   */

  export type InvoiceCountOutputType = {
    invoiceItems: number
    deliveryOrders: number
  }

  export type InvoiceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    invoiceItems?: boolean | InvoiceCountOutputTypeCountInvoiceItemsArgs
    deliveryOrders?: boolean | InvoiceCountOutputTypeCountDeliveryOrdersArgs
  }

  // Custom InputTypes
  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceCountOutputType
     */
    select?: InvoiceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeCountInvoiceItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceItemWhereInput
  }

  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeCountDeliveryOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryOrderWhereInput
  }


  /**
   * Count Type DeliveryOrderCountOutputType
   */

  export type DeliveryOrderCountOutputType = {
    deliveryOrderItems: number
  }

  export type DeliveryOrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveryOrderItems?: boolean | DeliveryOrderCountOutputTypeCountDeliveryOrderItemsArgs
  }

  // Custom InputTypes
  /**
   * DeliveryOrderCountOutputType without action
   */
  export type DeliveryOrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrderCountOutputType
     */
    select?: DeliveryOrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DeliveryOrderCountOutputType without action
   */
  export type DeliveryOrderCountOutputTypeCountDeliveryOrderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryOrderItemWhereInput
  }


  /**
   * Count Type PurchaseOrderCountOutputType
   */

  export type PurchaseOrderCountOutputType = {
    purchaseOrderItems: number
    deliveryOrders: number
    invoices: number
  }

  export type PurchaseOrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    purchaseOrderItems?: boolean | PurchaseOrderCountOutputTypeCountPurchaseOrderItemsArgs
    deliveryOrders?: boolean | PurchaseOrderCountOutputTypeCountDeliveryOrdersArgs
    invoices?: boolean | PurchaseOrderCountOutputTypeCountInvoicesArgs
  }

  // Custom InputTypes
  /**
   * PurchaseOrderCountOutputType without action
   */
  export type PurchaseOrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderCountOutputType
     */
    select?: PurchaseOrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PurchaseOrderCountOutputType without action
   */
  export type PurchaseOrderCountOutputTypeCountPurchaseOrderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PurchaseOrderItemWhereInput
  }

  /**
   * PurchaseOrderCountOutputType without action
   */
  export type PurchaseOrderCountOutputTypeCountDeliveryOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryOrderWhereInput
  }

  /**
   * PurchaseOrderCountOutputType without action
   */
  export type PurchaseOrderCountOutputTypeCountInvoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
  }


  /**
   * Count Type PaymentCountOutputType
   */

  export type PaymentCountOutputType = {
    cardInfos: number
    splitBills: number
  }

  export type PaymentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cardInfos?: boolean | PaymentCountOutputTypeCountCardInfosArgs
    splitBills?: boolean | PaymentCountOutputTypeCountSplitBillsArgs
  }

  // Custom InputTypes
  /**
   * PaymentCountOutputType without action
   */
  export type PaymentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentCountOutputType
     */
    select?: PaymentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PaymentCountOutputType without action
   */
  export type PaymentCountOutputTypeCountCardInfosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CardInfoWhereInput
  }

  /**
   * PaymentCountOutputType without action
   */
  export type PaymentCountOutputTypeCountSplitBillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SplitBillWhereInput
  }


  /**
   * Count Type SessionCountOutputType
   */

  export type SessionCountOutputType = {
    declarations: number
    purchaseOrders: number
    deliveryOrders: number
    invoices: number
  }

  export type SessionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    declarations?: boolean | SessionCountOutputTypeCountDeclarationsArgs
    purchaseOrders?: boolean | SessionCountOutputTypeCountPurchaseOrdersArgs
    deliveryOrders?: boolean | SessionCountOutputTypeCountDeliveryOrdersArgs
    invoices?: boolean | SessionCountOutputTypeCountInvoicesArgs
  }

  // Custom InputTypes
  /**
   * SessionCountOutputType without action
   */
  export type SessionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessionCountOutputType
     */
    select?: SessionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SessionCountOutputType without action
   */
  export type SessionCountOutputTypeCountDeclarationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeclarationWhereInput
  }

  /**
   * SessionCountOutputType without action
   */
  export type SessionCountOutputTypeCountPurchaseOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PurchaseOrderWhereInput
  }

  /**
   * SessionCountOutputType without action
   */
  export type SessionCountOutputTypeCountDeliveryOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryOrderWhereInput
  }

  /**
   * SessionCountOutputType without action
   */
  export type SessionCountOutputTypeCountInvoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
  }


  /**
   * Count Type MenuProfileCountOutputType
   */

  export type MenuProfileCountOutputType = {
    menuCategories: number
  }

  export type MenuProfileCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menuCategories?: boolean | MenuProfileCountOutputTypeCountMenuCategoriesArgs
  }

  // Custom InputTypes
  /**
   * MenuProfileCountOutputType without action
   */
  export type MenuProfileCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfileCountOutputType
     */
    select?: MenuProfileCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MenuProfileCountOutputType without action
   */
  export type MenuProfileCountOutputTypeCountMenuCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuCategoryWhereInput
  }


  /**
   * Count Type MenuCategoryCountOutputType
   */

  export type MenuCategoryCountOutputType = {
    menuItems: number
  }

  export type MenuCategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menuItems?: boolean | MenuCategoryCountOutputTypeCountMenuItemsArgs
  }

  // Custom InputTypes
  /**
   * MenuCategoryCountOutputType without action
   */
  export type MenuCategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategoryCountOutputType
     */
    select?: MenuCategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MenuCategoryCountOutputType without action
   */
  export type MenuCategoryCountOutputTypeCountMenuItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuItemWhereInput
  }


  /**
   * Count Type MenuItemCountOutputType
   */

  export type MenuItemCountOutputType = {
    menuItemModifierGroups: number
    recipes: number
  }

  export type MenuItemCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menuItemModifierGroups?: boolean | MenuItemCountOutputTypeCountMenuItemModifierGroupsArgs
    recipes?: boolean | MenuItemCountOutputTypeCountRecipesArgs
  }

  // Custom InputTypes
  /**
   * MenuItemCountOutputType without action
   */
  export type MenuItemCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemCountOutputType
     */
    select?: MenuItemCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MenuItemCountOutputType without action
   */
  export type MenuItemCountOutputTypeCountMenuItemModifierGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuItemModifierGroupWhereInput
  }

  /**
   * MenuItemCountOutputType without action
   */
  export type MenuItemCountOutputTypeCountRecipesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RecipeWhereInput
  }


  /**
   * Count Type MenuItemModifierGroupCountOutputType
   */

  export type MenuItemModifierGroupCountOutputType = {
    menuItemModifiers: number
  }

  export type MenuItemModifierGroupCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menuItemModifiers?: boolean | MenuItemModifierGroupCountOutputTypeCountMenuItemModifiersArgs
  }

  // Custom InputTypes
  /**
   * MenuItemModifierGroupCountOutputType without action
   */
  export type MenuItemModifierGroupCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifierGroupCountOutputType
     */
    select?: MenuItemModifierGroupCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MenuItemModifierGroupCountOutputType without action
   */
  export type MenuItemModifierGroupCountOutputTypeCountMenuItemModifiersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuItemModifierWhereInput
  }


  /**
   * Count Type MenuItemModifierCountOutputType
   */

  export type MenuItemModifierCountOutputType = {
    salesItemModifiers: number
    recipes: number
  }

  export type MenuItemModifierCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    salesItemModifiers?: boolean | MenuItemModifierCountOutputTypeCountSalesItemModifiersArgs
    recipes?: boolean | MenuItemModifierCountOutputTypeCountRecipesArgs
  }

  // Custom InputTypes
  /**
   * MenuItemModifierCountOutputType without action
   */
  export type MenuItemModifierCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifierCountOutputType
     */
    select?: MenuItemModifierCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MenuItemModifierCountOutputType without action
   */
  export type MenuItemModifierCountOutputTypeCountSalesItemModifiersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalesItemModifierWhereInput
  }

  /**
   * MenuItemModifierCountOutputType without action
   */
  export type MenuItemModifierCountOutputTypeCountRecipesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RecipeWhereInput
  }


  /**
   * Count Type TableCountOutputType
   */

  export type TableCountOutputType = {
    sales: number
    reservations: number
  }

  export type TableCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sales?: boolean | TableCountOutputTypeCountSalesArgs
    reservations?: boolean | TableCountOutputTypeCountReservationsArgs
  }

  // Custom InputTypes
  /**
   * TableCountOutputType without action
   */
  export type TableCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TableCountOutputType
     */
    select?: TableCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TableCountOutputType without action
   */
  export type TableCountOutputTypeCountSalesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalesWhereInput
  }

  /**
   * TableCountOutputType without action
   */
  export type TableCountOutputTypeCountReservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservationWhereInput
  }


  /**
   * Count Type StationCountOutputType
   */

  export type StationCountOutputType = {
    orderRouting: number
  }

  export type StationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orderRouting?: boolean | StationCountOutputTypeCountOrderRoutingArgs
  }

  // Custom InputTypes
  /**
   * StationCountOutputType without action
   */
  export type StationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StationCountOutputType
     */
    select?: StationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StationCountOutputType without action
   */
  export type StationCountOutputTypeCountOrderRoutingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderRoutingWhereInput
  }


  /**
   * Count Type PromotionCountOutputType
   */

  export type PromotionCountOutputType = {
    items: number
    customers: number
    usageHistory: number
  }

  export type PromotionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | PromotionCountOutputTypeCountItemsArgs
    customers?: boolean | PromotionCountOutputTypeCountCustomersArgs
    usageHistory?: boolean | PromotionCountOutputTypeCountUsageHistoryArgs
  }

  // Custom InputTypes
  /**
   * PromotionCountOutputType without action
   */
  export type PromotionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionCountOutputType
     */
    select?: PromotionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PromotionCountOutputType without action
   */
  export type PromotionCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionItemWhereInput
  }

  /**
   * PromotionCountOutputType without action
   */
  export type PromotionCountOutputTypeCountCustomersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionCustomerWhereInput
  }

  /**
   * PromotionCountOutputType without action
   */
  export type PromotionCountOutputTypeCountUsageHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionUsageWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleAvgAggregateOutputType = {
    id: number | null
    version: number | null
  }

  export type RoleSumAggregateOutputType = {
    id: number | null
    version: number | null
  }

  export type RoleMinAggregateOutputType = {
    id: number | null
    name: string | null
    category: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
    deletedAt: Date | null
    version: number | null
  }

  export type RoleMaxAggregateOutputType = {
    id: number | null
    name: string | null
    category: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
    deletedAt: Date | null
    version: number | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    name: number
    category: number
    description: number
    createdAt: number
    updatedAt: number
    deleted: number
    deletedAt: number
    version: number
    _all: number
  }


  export type RoleAvgAggregateInputType = {
    id?: true
    version?: true
  }

  export type RoleSumAggregateInputType = {
    id?: true
    version?: true
  }

  export type RoleMinAggregateInputType = {
    id?: true
    name?: true
    category?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    version?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    name?: true
    category?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    version?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    name?: true
    category?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    version?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Role to aggregate.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type RoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithAggregationInput | RoleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: RoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _avg?: RoleAvgAggregateInputType
    _sum?: RoleSumAggregateInputType
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    id: number
    name: string
    category: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean
    deletedAt: Date | null
    version: number | null
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends RoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type RoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    category?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    deletedAt?: boolean
    version?: boolean
    permission?: boolean | Role$permissionArgs<ExtArgs>
    users?: boolean | Role$usersArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>



  export type RoleSelectScalar = {
    id?: boolean
    name?: boolean
    category?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    deletedAt?: boolean
    version?: boolean
  }

  export type RoleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "category" | "description" | "createdAt" | "updatedAt" | "deleted" | "deletedAt" | "version", ExtArgs["result"]["role"]>
  export type RoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permission?: boolean | Role$permissionArgs<ExtArgs>
    users?: boolean | Role$usersArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $RolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Role"
    objects: {
      permission: Prisma.$RolePermissionPayload<ExtArgs>[]
      users: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      category: string | null
      description: string | null
      createdAt: Date | null
      updatedAt: Date | null
      deleted: boolean
      deletedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type RoleGetPayload<S extends boolean | null | undefined | RoleDefaultArgs> = $Result.GetResult<Prisma.$RolePayload, S>

  type RoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface RoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Role'], meta: { name: 'Role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {RoleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleFindUniqueArgs>(args: SelectSubset<T, RoleFindUniqueArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleFindFirstArgs>(args?: SelectSubset<T, RoleFindFirstArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleFindManyArgs>(args?: SelectSubset<T, RoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role.
     * @param {RoleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends RoleCreateArgs>(args: SelectSubset<T, RoleCreateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {RoleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleCreateManyArgs>(args?: SelectSubset<T, RoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Role.
     * @param {RoleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends RoleDeleteArgs>(args: SelectSubset<T, RoleDeleteArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role.
     * @param {RoleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleUpdateArgs>(args: SelectSubset<T, RoleUpdateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {RoleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleDeleteManyArgs>(args?: SelectSubset<T, RoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleUpdateManyArgs>(args: SelectSubset<T, RoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Role.
     * @param {RoleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends RoleUpsertArgs>(args: SelectSubset<T, RoleUpsertArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RoleCountArgs>(
      args?: Subset<T, RoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleGroupByArgs['orderBy'] }
        : { orderBy?: RoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Role model
   */
  readonly fields: RoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    permission<T extends Role$permissionArgs<ExtArgs> = {}>(args?: Subset<T, Role$permissionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends Role$usersArgs<ExtArgs> = {}>(args?: Subset<T, Role$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Role model
   */
  interface RoleFieldRefs {
    readonly id: FieldRef<"Role", 'Int'>
    readonly name: FieldRef<"Role", 'String'>
    readonly category: FieldRef<"Role", 'String'>
    readonly description: FieldRef<"Role", 'String'>
    readonly createdAt: FieldRef<"Role", 'DateTime'>
    readonly updatedAt: FieldRef<"Role", 'DateTime'>
    readonly deleted: FieldRef<"Role", 'Boolean'>
    readonly deletedAt: FieldRef<"Role", 'DateTime'>
    readonly version: FieldRef<"Role", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Role findUnique
   */
  export type RoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findUniqueOrThrow
   */
  export type RoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findFirst
   */
  export type RoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findFirstOrThrow
   */
  export type RoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findMany
   */
  export type RoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role create
   */
  export type RoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to create a Role.
     */
    data: XOR<RoleCreateInput, RoleUncheckedCreateInput>
  }

  /**
   * Role createMany
   */
  export type RoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role update
   */
  export type RoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to update a Role.
     */
    data: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
    /**
     * Choose, which Role to update.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role updateMany
   */
  export type RoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role upsert
   */
  export type RoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The filter to search for the Role to update in case it exists.
     */
    where: RoleWhereUniqueInput
    /**
     * In case the Role found by the `where` argument doesn't exist, create a new Role with this data.
     */
    create: XOR<RoleCreateInput, RoleUncheckedCreateInput>
    /**
     * In case the Role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
  }

  /**
   * Role delete
   */
  export type RoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter which Role to delete.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role deleteMany
   */
  export type RoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to delete
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to delete.
     */
    limit?: number
  }

  /**
   * Role.permission
   */
  export type Role$permissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    where?: RolePermissionWhereInput
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    cursor?: RolePermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * Role.users
   */
  export type Role$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Role without action
   */
  export type RoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
  }


  /**
   * Model RolePermission
   */

  export type AggregateRolePermission = {
    _count: RolePermissionCountAggregateOutputType | null
    _avg: RolePermissionAvgAggregateOutputType | null
    _sum: RolePermissionSumAggregateOutputType | null
    _min: RolePermissionMinAggregateOutputType | null
    _max: RolePermissionMaxAggregateOutputType | null
  }

  export type RolePermissionAvgAggregateOutputType = {
    id: number | null
    roleId: number | null
    permissionId: number | null
    version: number | null
  }

  export type RolePermissionSumAggregateOutputType = {
    id: number | null
    roleId: number | null
    permissionId: number | null
    version: number | null
  }

  export type RolePermissionMinAggregateOutputType = {
    id: number | null
    roleId: number | null
    permissionId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
    deletedAt: Date | null
    version: number | null
  }

  export type RolePermissionMaxAggregateOutputType = {
    id: number | null
    roleId: number | null
    permissionId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
    deletedAt: Date | null
    version: number | null
  }

  export type RolePermissionCountAggregateOutputType = {
    id: number
    roleId: number
    permissionId: number
    createdAt: number
    updatedAt: number
    deleted: number
    deletedAt: number
    version: number
    _all: number
  }


  export type RolePermissionAvgAggregateInputType = {
    id?: true
    roleId?: true
    permissionId?: true
    version?: true
  }

  export type RolePermissionSumAggregateInputType = {
    id?: true
    roleId?: true
    permissionId?: true
    version?: true
  }

  export type RolePermissionMinAggregateInputType = {
    id?: true
    roleId?: true
    permissionId?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    version?: true
  }

  export type RolePermissionMaxAggregateInputType = {
    id?: true
    roleId?: true
    permissionId?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    version?: true
  }

  export type RolePermissionCountAggregateInputType = {
    id?: true
    roleId?: true
    permissionId?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    version?: true
    _all?: true
  }

  export type RolePermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RolePermission to aggregate.
     */
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     */
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RolePermissions
    **/
    _count?: true | RolePermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolePermissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolePermissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolePermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolePermissionMaxAggregateInputType
  }

  export type GetRolePermissionAggregateType<T extends RolePermissionAggregateArgs> = {
        [P in keyof T & keyof AggregateRolePermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRolePermission[P]>
      : GetScalarType<T[P], AggregateRolePermission[P]>
  }




  export type RolePermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolePermissionWhereInput
    orderBy?: RolePermissionOrderByWithAggregationInput | RolePermissionOrderByWithAggregationInput[]
    by: RolePermissionScalarFieldEnum[] | RolePermissionScalarFieldEnum
    having?: RolePermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolePermissionCountAggregateInputType | true
    _avg?: RolePermissionAvgAggregateInputType
    _sum?: RolePermissionSumAggregateInputType
    _min?: RolePermissionMinAggregateInputType
    _max?: RolePermissionMaxAggregateInputType
  }

  export type RolePermissionGroupByOutputType = {
    id: number
    roleId: number
    permissionId: number
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean
    deletedAt: Date | null
    version: number | null
    _count: RolePermissionCountAggregateOutputType | null
    _avg: RolePermissionAvgAggregateOutputType | null
    _sum: RolePermissionSumAggregateOutputType | null
    _min: RolePermissionMinAggregateOutputType | null
    _max: RolePermissionMaxAggregateOutputType | null
  }

  type GetRolePermissionGroupByPayload<T extends RolePermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolePermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolePermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolePermissionGroupByOutputType[P]>
            : GetScalarType<T[P], RolePermissionGroupByOutputType[P]>
        }
      >
    >


  export type RolePermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    roleId?: boolean
    permissionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    deletedAt?: boolean
    version?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rolePermission"]>



  export type RolePermissionSelectScalar = {
    id?: boolean
    roleId?: boolean
    permissionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    deletedAt?: boolean
    version?: boolean
  }

  export type RolePermissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "roleId" | "permissionId" | "createdAt" | "updatedAt" | "deleted" | "deletedAt" | "version", ExtArgs["result"]["rolePermission"]>
  export type RolePermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }

  export type $RolePermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RolePermission"
    objects: {
      role: Prisma.$RolePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      roleId: number
      permissionId: number
      createdAt: Date | null
      updatedAt: Date | null
      deleted: boolean
      deletedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["rolePermission"]>
    composites: {}
  }

  type RolePermissionGetPayload<S extends boolean | null | undefined | RolePermissionDefaultArgs> = $Result.GetResult<Prisma.$RolePermissionPayload, S>

  type RolePermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RolePermissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolePermissionCountAggregateInputType | true
    }

  export interface RolePermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RolePermission'], meta: { name: 'RolePermission' } }
    /**
     * Find zero or one RolePermission that matches the filter.
     * @param {RolePermissionFindUniqueArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RolePermissionFindUniqueArgs>(args: SelectSubset<T, RolePermissionFindUniqueArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RolePermission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RolePermissionFindUniqueOrThrowArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RolePermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, RolePermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RolePermission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionFindFirstArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RolePermissionFindFirstArgs>(args?: SelectSubset<T, RolePermissionFindFirstArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RolePermission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionFindFirstOrThrowArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RolePermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, RolePermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RolePermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RolePermissions
     * const rolePermissions = await prisma.rolePermission.findMany()
     * 
     * // Get first 10 RolePermissions
     * const rolePermissions = await prisma.rolePermission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rolePermissionWithIdOnly = await prisma.rolePermission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RolePermissionFindManyArgs>(args?: SelectSubset<T, RolePermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RolePermission.
     * @param {RolePermissionCreateArgs} args - Arguments to create a RolePermission.
     * @example
     * // Create one RolePermission
     * const RolePermission = await prisma.rolePermission.create({
     *   data: {
     *     // ... data to create a RolePermission
     *   }
     * })
     * 
     */
    create<T extends RolePermissionCreateArgs>(args: SelectSubset<T, RolePermissionCreateArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RolePermissions.
     * @param {RolePermissionCreateManyArgs} args - Arguments to create many RolePermissions.
     * @example
     * // Create many RolePermissions
     * const rolePermission = await prisma.rolePermission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RolePermissionCreateManyArgs>(args?: SelectSubset<T, RolePermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a RolePermission.
     * @param {RolePermissionDeleteArgs} args - Arguments to delete one RolePermission.
     * @example
     * // Delete one RolePermission
     * const RolePermission = await prisma.rolePermission.delete({
     *   where: {
     *     // ... filter to delete one RolePermission
     *   }
     * })
     * 
     */
    delete<T extends RolePermissionDeleteArgs>(args: SelectSubset<T, RolePermissionDeleteArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RolePermission.
     * @param {RolePermissionUpdateArgs} args - Arguments to update one RolePermission.
     * @example
     * // Update one RolePermission
     * const rolePermission = await prisma.rolePermission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RolePermissionUpdateArgs>(args: SelectSubset<T, RolePermissionUpdateArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RolePermissions.
     * @param {RolePermissionDeleteManyArgs} args - Arguments to filter RolePermissions to delete.
     * @example
     * // Delete a few RolePermissions
     * const { count } = await prisma.rolePermission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RolePermissionDeleteManyArgs>(args?: SelectSubset<T, RolePermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RolePermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RolePermissions
     * const rolePermission = await prisma.rolePermission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RolePermissionUpdateManyArgs>(args: SelectSubset<T, RolePermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RolePermission.
     * @param {RolePermissionUpsertArgs} args - Arguments to update or create a RolePermission.
     * @example
     * // Update or create a RolePermission
     * const rolePermission = await prisma.rolePermission.upsert({
     *   create: {
     *     // ... data to create a RolePermission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RolePermission we want to update
     *   }
     * })
     */
    upsert<T extends RolePermissionUpsertArgs>(args: SelectSubset<T, RolePermissionUpsertArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RolePermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionCountArgs} args - Arguments to filter RolePermissions to count.
     * @example
     * // Count the number of RolePermissions
     * const count = await prisma.rolePermission.count({
     *   where: {
     *     // ... the filter for the RolePermissions we want to count
     *   }
     * })
    **/
    count<T extends RolePermissionCountArgs>(
      args?: Subset<T, RolePermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolePermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RolePermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolePermissionAggregateArgs>(args: Subset<T, RolePermissionAggregateArgs>): Prisma.PrismaPromise<GetRolePermissionAggregateType<T>>

    /**
     * Group by RolePermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RolePermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RolePermissionGroupByArgs['orderBy'] }
        : { orderBy?: RolePermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RolePermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolePermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RolePermission model
   */
  readonly fields: RolePermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RolePermission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RolePermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    role<T extends RoleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoleDefaultArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RolePermission model
   */
  interface RolePermissionFieldRefs {
    readonly id: FieldRef<"RolePermission", 'Int'>
    readonly roleId: FieldRef<"RolePermission", 'Int'>
    readonly permissionId: FieldRef<"RolePermission", 'Int'>
    readonly createdAt: FieldRef<"RolePermission", 'DateTime'>
    readonly updatedAt: FieldRef<"RolePermission", 'DateTime'>
    readonly deleted: FieldRef<"RolePermission", 'Boolean'>
    readonly deletedAt: FieldRef<"RolePermission", 'DateTime'>
    readonly version: FieldRef<"RolePermission", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * RolePermission findUnique
   */
  export type RolePermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermission to fetch.
     */
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission findUniqueOrThrow
   */
  export type RolePermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermission to fetch.
     */
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission findFirst
   */
  export type RolePermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermission to fetch.
     */
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     */
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RolePermissions.
     */
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RolePermissions.
     */
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * RolePermission findFirstOrThrow
   */
  export type RolePermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermission to fetch.
     */
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     */
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RolePermissions.
     */
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RolePermissions.
     */
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * RolePermission findMany
   */
  export type RolePermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermissions to fetch.
     */
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     */
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RolePermissions.
     */
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     */
    skip?: number
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * RolePermission create
   */
  export type RolePermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a RolePermission.
     */
    data: XOR<RolePermissionCreateInput, RolePermissionUncheckedCreateInput>
  }

  /**
   * RolePermission createMany
   */
  export type RolePermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RolePermissions.
     */
    data: RolePermissionCreateManyInput | RolePermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RolePermission update
   */
  export type RolePermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a RolePermission.
     */
    data: XOR<RolePermissionUpdateInput, RolePermissionUncheckedUpdateInput>
    /**
     * Choose, which RolePermission to update.
     */
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission updateMany
   */
  export type RolePermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RolePermissions.
     */
    data: XOR<RolePermissionUpdateManyMutationInput, RolePermissionUncheckedUpdateManyInput>
    /**
     * Filter which RolePermissions to update
     */
    where?: RolePermissionWhereInput
    /**
     * Limit how many RolePermissions to update.
     */
    limit?: number
  }

  /**
   * RolePermission upsert
   */
  export type RolePermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the RolePermission to update in case it exists.
     */
    where: RolePermissionWhereUniqueInput
    /**
     * In case the RolePermission found by the `where` argument doesn't exist, create a new RolePermission with this data.
     */
    create: XOR<RolePermissionCreateInput, RolePermissionUncheckedCreateInput>
    /**
     * In case the RolePermission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RolePermissionUpdateInput, RolePermissionUncheckedUpdateInput>
  }

  /**
   * RolePermission delete
   */
  export type RolePermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter which RolePermission to delete.
     */
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission deleteMany
   */
  export type RolePermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RolePermissions to delete
     */
    where?: RolePermissionWhereInput
    /**
     * Limit how many RolePermissions to delete.
     */
    limit?: number
  }

  /**
   * RolePermission without action
   */
  export type RolePermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
    version: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
    version: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    lastName: string | null
    firstName: string | null
    mobile: string | null
    email: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    lastName: string | null
    firstName: string | null
    mobile: string | null
    email: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    username: number
    password: number
    lastName: number
    firstName: number
    mobile: number
    email: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
    version?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
    version?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    lastName?: true
    firstName?: true
    mobile?: true
    email?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    lastName?: true
    firstName?: true
    mobile?: true
    email?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    lastName?: true
    firstName?: true
    mobile?: true
    email?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    username: string
    password: string
    lastName: string | null
    firstName: string | null
    mobile: string | null
    email: string | null
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    lastName?: boolean
    firstName?: boolean
    mobile?: boolean
    email?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    settings?: boolean | User$settingsArgs<ExtArgs>
    roles?: boolean | User$rolesArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>



  export type UserSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    lastName?: boolean
    firstName?: boolean
    mobile?: boolean
    email?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "password" | "lastName" | "firstName" | "mobile" | "email" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    settings?: boolean | User$settingsArgs<ExtArgs>
    roles?: boolean | User$rolesArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      settings: Prisma.$SettingPayload<ExtArgs>[]
      roles: Prisma.$RolePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      password: string
      lastName: string | null
      firstName: string | null
      mobile: string | null
      email: string | null
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    settings<T extends User$settingsArgs<ExtArgs> = {}>(args?: Subset<T, User$settingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    roles<T extends User$rolesArgs<ExtArgs> = {}>(args?: Subset<T, User$rolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly username: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly mobile: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly deleted: FieldRef<"User", 'Boolean'>
    readonly deletedAt: FieldRef<"User", 'DateTime'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly version: FieldRef<"User", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.settings
   */
  export type User$settingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettingInclude<ExtArgs> | null
    where?: SettingWhereInput
    orderBy?: SettingOrderByWithRelationInput | SettingOrderByWithRelationInput[]
    cursor?: SettingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SettingScalarFieldEnum | SettingScalarFieldEnum[]
  }

  /**
   * User.roles
   */
  export type User$rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    cursor?: RoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Setting
   */

  export type AggregateSetting = {
    _count: SettingCountAggregateOutputType | null
    _avg: SettingAvgAggregateOutputType | null
    _sum: SettingSumAggregateOutputType | null
    _min: SettingMinAggregateOutputType | null
    _max: SettingMaxAggregateOutputType | null
  }

  export type SettingAvgAggregateOutputType = {
    id: number | null
    tenantId: number | null
    userId: number | null
    outletId: number | null
    version: number | null
  }

  export type SettingSumAggregateOutputType = {
    id: number | null
    tenantId: number | null
    userId: number | null
    outletId: number | null
    version: number | null
  }

  export type SettingMinAggregateOutputType = {
    id: number | null
    tenantId: number | null
    userId: number | null
    outletId: number | null
    key: string | null
    value: string | null
    type: $Enums.SettingType | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type SettingMaxAggregateOutputType = {
    id: number | null
    tenantId: number | null
    userId: number | null
    outletId: number | null
    key: string | null
    value: string | null
    type: $Enums.SettingType | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type SettingCountAggregateOutputType = {
    id: number
    tenantId: number
    userId: number
    outletId: number
    key: number
    value: number
    type: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type SettingAvgAggregateInputType = {
    id?: true
    tenantId?: true
    userId?: true
    outletId?: true
    version?: true
  }

  export type SettingSumAggregateInputType = {
    id?: true
    tenantId?: true
    userId?: true
    outletId?: true
    version?: true
  }

  export type SettingMinAggregateInputType = {
    id?: true
    tenantId?: true
    userId?: true
    outletId?: true
    key?: true
    value?: true
    type?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type SettingMaxAggregateInputType = {
    id?: true
    tenantId?: true
    userId?: true
    outletId?: true
    key?: true
    value?: true
    type?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type SettingCountAggregateInputType = {
    id?: true
    tenantId?: true
    userId?: true
    outletId?: true
    key?: true
    value?: true
    type?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type SettingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Setting to aggregate.
     */
    where?: SettingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Settings to fetch.
     */
    orderBy?: SettingOrderByWithRelationInput | SettingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SettingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Settings
    **/
    _count?: true | SettingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SettingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SettingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SettingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SettingMaxAggregateInputType
  }

  export type GetSettingAggregateType<T extends SettingAggregateArgs> = {
        [P in keyof T & keyof AggregateSetting]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSetting[P]>
      : GetScalarType<T[P], AggregateSetting[P]>
  }




  export type SettingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SettingWhereInput
    orderBy?: SettingOrderByWithAggregationInput | SettingOrderByWithAggregationInput[]
    by: SettingScalarFieldEnum[] | SettingScalarFieldEnum
    having?: SettingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SettingCountAggregateInputType | true
    _avg?: SettingAvgAggregateInputType
    _sum?: SettingSumAggregateInputType
    _min?: SettingMinAggregateInputType
    _max?: SettingMaxAggregateInputType
  }

  export type SettingGroupByOutputType = {
    id: number
    tenantId: number | null
    userId: number | null
    outletId: number | null
    key: string
    value: string
    type: $Enums.SettingType
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: SettingCountAggregateOutputType | null
    _avg: SettingAvgAggregateOutputType | null
    _sum: SettingSumAggregateOutputType | null
    _min: SettingMinAggregateOutputType | null
    _max: SettingMaxAggregateOutputType | null
  }

  type GetSettingGroupByPayload<T extends SettingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SettingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SettingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SettingGroupByOutputType[P]>
            : GetScalarType<T[P], SettingGroupByOutputType[P]>
        }
      >
    >


  export type SettingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tenantId?: boolean
    userId?: boolean
    outletId?: boolean
    key?: boolean
    value?: boolean
    type?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    user?: boolean | Setting$userArgs<ExtArgs>
    outlet?: boolean | Setting$outletArgs<ExtArgs>
  }, ExtArgs["result"]["setting"]>



  export type SettingSelectScalar = {
    id?: boolean
    tenantId?: boolean
    userId?: boolean
    outletId?: boolean
    key?: boolean
    value?: boolean
    type?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type SettingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tenantId" | "userId" | "outletId" | "key" | "value" | "type" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["setting"]>
  export type SettingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Setting$userArgs<ExtArgs>
    outlet?: boolean | Setting$outletArgs<ExtArgs>
  }

  export type $SettingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Setting"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
      outlet: Prisma.$OutletPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      tenantId: number | null
      userId: number | null
      outletId: number | null
      key: string
      value: string
      type: $Enums.SettingType
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["setting"]>
    composites: {}
  }

  type SettingGetPayload<S extends boolean | null | undefined | SettingDefaultArgs> = $Result.GetResult<Prisma.$SettingPayload, S>

  type SettingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SettingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SettingCountAggregateInputType | true
    }

  export interface SettingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Setting'], meta: { name: 'Setting' } }
    /**
     * Find zero or one Setting that matches the filter.
     * @param {SettingFindUniqueArgs} args - Arguments to find a Setting
     * @example
     * // Get one Setting
     * const setting = await prisma.setting.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SettingFindUniqueArgs>(args: SelectSubset<T, SettingFindUniqueArgs<ExtArgs>>): Prisma__SettingClient<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Setting that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SettingFindUniqueOrThrowArgs} args - Arguments to find a Setting
     * @example
     * // Get one Setting
     * const setting = await prisma.setting.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SettingFindUniqueOrThrowArgs>(args: SelectSubset<T, SettingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SettingClient<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Setting that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingFindFirstArgs} args - Arguments to find a Setting
     * @example
     * // Get one Setting
     * const setting = await prisma.setting.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SettingFindFirstArgs>(args?: SelectSubset<T, SettingFindFirstArgs<ExtArgs>>): Prisma__SettingClient<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Setting that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingFindFirstOrThrowArgs} args - Arguments to find a Setting
     * @example
     * // Get one Setting
     * const setting = await prisma.setting.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SettingFindFirstOrThrowArgs>(args?: SelectSubset<T, SettingFindFirstOrThrowArgs<ExtArgs>>): Prisma__SettingClient<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Settings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Settings
     * const settings = await prisma.setting.findMany()
     * 
     * // Get first 10 Settings
     * const settings = await prisma.setting.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const settingWithIdOnly = await prisma.setting.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SettingFindManyArgs>(args?: SelectSubset<T, SettingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Setting.
     * @param {SettingCreateArgs} args - Arguments to create a Setting.
     * @example
     * // Create one Setting
     * const Setting = await prisma.setting.create({
     *   data: {
     *     // ... data to create a Setting
     *   }
     * })
     * 
     */
    create<T extends SettingCreateArgs>(args: SelectSubset<T, SettingCreateArgs<ExtArgs>>): Prisma__SettingClient<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Settings.
     * @param {SettingCreateManyArgs} args - Arguments to create many Settings.
     * @example
     * // Create many Settings
     * const setting = await prisma.setting.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SettingCreateManyArgs>(args?: SelectSubset<T, SettingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Setting.
     * @param {SettingDeleteArgs} args - Arguments to delete one Setting.
     * @example
     * // Delete one Setting
     * const Setting = await prisma.setting.delete({
     *   where: {
     *     // ... filter to delete one Setting
     *   }
     * })
     * 
     */
    delete<T extends SettingDeleteArgs>(args: SelectSubset<T, SettingDeleteArgs<ExtArgs>>): Prisma__SettingClient<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Setting.
     * @param {SettingUpdateArgs} args - Arguments to update one Setting.
     * @example
     * // Update one Setting
     * const setting = await prisma.setting.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SettingUpdateArgs>(args: SelectSubset<T, SettingUpdateArgs<ExtArgs>>): Prisma__SettingClient<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Settings.
     * @param {SettingDeleteManyArgs} args - Arguments to filter Settings to delete.
     * @example
     * // Delete a few Settings
     * const { count } = await prisma.setting.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SettingDeleteManyArgs>(args?: SelectSubset<T, SettingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Settings
     * const setting = await prisma.setting.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SettingUpdateManyArgs>(args: SelectSubset<T, SettingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Setting.
     * @param {SettingUpsertArgs} args - Arguments to update or create a Setting.
     * @example
     * // Update or create a Setting
     * const setting = await prisma.setting.upsert({
     *   create: {
     *     // ... data to create a Setting
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Setting we want to update
     *   }
     * })
     */
    upsert<T extends SettingUpsertArgs>(args: SelectSubset<T, SettingUpsertArgs<ExtArgs>>): Prisma__SettingClient<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingCountArgs} args - Arguments to filter Settings to count.
     * @example
     * // Count the number of Settings
     * const count = await prisma.setting.count({
     *   where: {
     *     // ... the filter for the Settings we want to count
     *   }
     * })
    **/
    count<T extends SettingCountArgs>(
      args?: Subset<T, SettingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SettingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Setting.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SettingAggregateArgs>(args: Subset<T, SettingAggregateArgs>): Prisma.PrismaPromise<GetSettingAggregateType<T>>

    /**
     * Group by Setting.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SettingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SettingGroupByArgs['orderBy'] }
        : { orderBy?: SettingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SettingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSettingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Setting model
   */
  readonly fields: SettingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Setting.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SettingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends Setting$userArgs<ExtArgs> = {}>(args?: Subset<T, Setting$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    outlet<T extends Setting$outletArgs<ExtArgs> = {}>(args?: Subset<T, Setting$outletArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Setting model
   */
  interface SettingFieldRefs {
    readonly id: FieldRef<"Setting", 'Int'>
    readonly tenantId: FieldRef<"Setting", 'Int'>
    readonly userId: FieldRef<"Setting", 'Int'>
    readonly outletId: FieldRef<"Setting", 'Int'>
    readonly key: FieldRef<"Setting", 'String'>
    readonly value: FieldRef<"Setting", 'String'>
    readonly type: FieldRef<"Setting", 'SettingType'>
    readonly deleted: FieldRef<"Setting", 'Boolean'>
    readonly deletedAt: FieldRef<"Setting", 'DateTime'>
    readonly createdAt: FieldRef<"Setting", 'DateTime'>
    readonly updatedAt: FieldRef<"Setting", 'DateTime'>
    readonly version: FieldRef<"Setting", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Setting findUnique
   */
  export type SettingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettingInclude<ExtArgs> | null
    /**
     * Filter, which Setting to fetch.
     */
    where: SettingWhereUniqueInput
  }

  /**
   * Setting findUniqueOrThrow
   */
  export type SettingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettingInclude<ExtArgs> | null
    /**
     * Filter, which Setting to fetch.
     */
    where: SettingWhereUniqueInput
  }

  /**
   * Setting findFirst
   */
  export type SettingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettingInclude<ExtArgs> | null
    /**
     * Filter, which Setting to fetch.
     */
    where?: SettingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Settings to fetch.
     */
    orderBy?: SettingOrderByWithRelationInput | SettingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Settings.
     */
    cursor?: SettingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Settings.
     */
    distinct?: SettingScalarFieldEnum | SettingScalarFieldEnum[]
  }

  /**
   * Setting findFirstOrThrow
   */
  export type SettingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettingInclude<ExtArgs> | null
    /**
     * Filter, which Setting to fetch.
     */
    where?: SettingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Settings to fetch.
     */
    orderBy?: SettingOrderByWithRelationInput | SettingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Settings.
     */
    cursor?: SettingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Settings.
     */
    distinct?: SettingScalarFieldEnum | SettingScalarFieldEnum[]
  }

  /**
   * Setting findMany
   */
  export type SettingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettingInclude<ExtArgs> | null
    /**
     * Filter, which Settings to fetch.
     */
    where?: SettingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Settings to fetch.
     */
    orderBy?: SettingOrderByWithRelationInput | SettingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Settings.
     */
    cursor?: SettingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Settings.
     */
    skip?: number
    distinct?: SettingScalarFieldEnum | SettingScalarFieldEnum[]
  }

  /**
   * Setting create
   */
  export type SettingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettingInclude<ExtArgs> | null
    /**
     * The data needed to create a Setting.
     */
    data: XOR<SettingCreateInput, SettingUncheckedCreateInput>
  }

  /**
   * Setting createMany
   */
  export type SettingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Settings.
     */
    data: SettingCreateManyInput | SettingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Setting update
   */
  export type SettingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettingInclude<ExtArgs> | null
    /**
     * The data needed to update a Setting.
     */
    data: XOR<SettingUpdateInput, SettingUncheckedUpdateInput>
    /**
     * Choose, which Setting to update.
     */
    where: SettingWhereUniqueInput
  }

  /**
   * Setting updateMany
   */
  export type SettingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Settings.
     */
    data: XOR<SettingUpdateManyMutationInput, SettingUncheckedUpdateManyInput>
    /**
     * Filter which Settings to update
     */
    where?: SettingWhereInput
    /**
     * Limit how many Settings to update.
     */
    limit?: number
  }

  /**
   * Setting upsert
   */
  export type SettingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettingInclude<ExtArgs> | null
    /**
     * The filter to search for the Setting to update in case it exists.
     */
    where: SettingWhereUniqueInput
    /**
     * In case the Setting found by the `where` argument doesn't exist, create a new Setting with this data.
     */
    create: XOR<SettingCreateInput, SettingUncheckedCreateInput>
    /**
     * In case the Setting was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SettingUpdateInput, SettingUncheckedUpdateInput>
  }

  /**
   * Setting delete
   */
  export type SettingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettingInclude<ExtArgs> | null
    /**
     * Filter which Setting to delete.
     */
    where: SettingWhereUniqueInput
  }

  /**
   * Setting deleteMany
   */
  export type SettingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Settings to delete
     */
    where?: SettingWhereInput
    /**
     * Limit how many Settings to delete.
     */
    limit?: number
  }

  /**
   * Setting.user
   */
  export type Setting$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Setting.outlet
   */
  export type Setting$outletArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Outlet
     */
    select?: OutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Outlet
     */
    omit?: OutletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OutletInclude<ExtArgs> | null
    where?: OutletWhereInput
  }

  /**
   * Setting without action
   */
  export type SettingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettingInclude<ExtArgs> | null
  }


  /**
   * Model Referral
   */

  export type AggregateReferral = {
    _count: ReferralCountAggregateOutputType | null
    _avg: ReferralAvgAggregateOutputType | null
    _sum: ReferralSumAggregateOutputType | null
    _min: ReferralMinAggregateOutputType | null
    _max: ReferralMaxAggregateOutputType | null
  }

  export type ReferralAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    referralId: number | null
    version: number | null
  }

  export type ReferralSumAggregateOutputType = {
    id: number | null
    userId: number | null
    referralId: number | null
    version: number | null
  }

  export type ReferralMinAggregateOutputType = {
    id: number | null
    userId: number | null
    referralId: number | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type ReferralMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    referralId: number | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type ReferralCountAggregateOutputType = {
    id: number
    userId: number
    referralId: number
    deleted: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type ReferralAvgAggregateInputType = {
    id?: true
    userId?: true
    referralId?: true
    version?: true
  }

  export type ReferralSumAggregateInputType = {
    id?: true
    userId?: true
    referralId?: true
    version?: true
  }

  export type ReferralMinAggregateInputType = {
    id?: true
    userId?: true
    referralId?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type ReferralMaxAggregateInputType = {
    id?: true
    userId?: true
    referralId?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type ReferralCountAggregateInputType = {
    id?: true
    userId?: true
    referralId?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type ReferralAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Referral to aggregate.
     */
    where?: ReferralWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Referrals to fetch.
     */
    orderBy?: ReferralOrderByWithRelationInput | ReferralOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReferralWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Referrals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Referrals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Referrals
    **/
    _count?: true | ReferralCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReferralAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReferralSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReferralMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReferralMaxAggregateInputType
  }

  export type GetReferralAggregateType<T extends ReferralAggregateArgs> = {
        [P in keyof T & keyof AggregateReferral]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReferral[P]>
      : GetScalarType<T[P], AggregateReferral[P]>
  }




  export type ReferralGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReferralWhereInput
    orderBy?: ReferralOrderByWithAggregationInput | ReferralOrderByWithAggregationInput[]
    by: ReferralScalarFieldEnum[] | ReferralScalarFieldEnum
    having?: ReferralScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReferralCountAggregateInputType | true
    _avg?: ReferralAvgAggregateInputType
    _sum?: ReferralSumAggregateInputType
    _min?: ReferralMinAggregateInputType
    _max?: ReferralMaxAggregateInputType
  }

  export type ReferralGroupByOutputType = {
    id: number
    userId: number
    referralId: number
    deleted: boolean
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: ReferralCountAggregateOutputType | null
    _avg: ReferralAvgAggregateOutputType | null
    _sum: ReferralSumAggregateOutputType | null
    _min: ReferralMinAggregateOutputType | null
    _max: ReferralMaxAggregateOutputType | null
  }

  type GetReferralGroupByPayload<T extends ReferralGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReferralGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReferralGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReferralGroupByOutputType[P]>
            : GetScalarType<T[P], ReferralGroupByOutputType[P]>
        }
      >
    >


  export type ReferralSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    referralId?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }, ExtArgs["result"]["referral"]>



  export type ReferralSelectScalar = {
    id?: boolean
    userId?: boolean
    referralId?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type ReferralOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "referralId" | "deleted" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["referral"]>

  export type $ReferralPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Referral"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      referralId: number
      deleted: boolean
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["referral"]>
    composites: {}
  }

  type ReferralGetPayload<S extends boolean | null | undefined | ReferralDefaultArgs> = $Result.GetResult<Prisma.$ReferralPayload, S>

  type ReferralCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReferralFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReferralCountAggregateInputType | true
    }

  export interface ReferralDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Referral'], meta: { name: 'Referral' } }
    /**
     * Find zero or one Referral that matches the filter.
     * @param {ReferralFindUniqueArgs} args - Arguments to find a Referral
     * @example
     * // Get one Referral
     * const referral = await prisma.referral.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReferralFindUniqueArgs>(args: SelectSubset<T, ReferralFindUniqueArgs<ExtArgs>>): Prisma__ReferralClient<$Result.GetResult<Prisma.$ReferralPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Referral that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReferralFindUniqueOrThrowArgs} args - Arguments to find a Referral
     * @example
     * // Get one Referral
     * const referral = await prisma.referral.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReferralFindUniqueOrThrowArgs>(args: SelectSubset<T, ReferralFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReferralClient<$Result.GetResult<Prisma.$ReferralPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Referral that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralFindFirstArgs} args - Arguments to find a Referral
     * @example
     * // Get one Referral
     * const referral = await prisma.referral.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReferralFindFirstArgs>(args?: SelectSubset<T, ReferralFindFirstArgs<ExtArgs>>): Prisma__ReferralClient<$Result.GetResult<Prisma.$ReferralPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Referral that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralFindFirstOrThrowArgs} args - Arguments to find a Referral
     * @example
     * // Get one Referral
     * const referral = await prisma.referral.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReferralFindFirstOrThrowArgs>(args?: SelectSubset<T, ReferralFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReferralClient<$Result.GetResult<Prisma.$ReferralPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Referrals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Referrals
     * const referrals = await prisma.referral.findMany()
     * 
     * // Get first 10 Referrals
     * const referrals = await prisma.referral.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const referralWithIdOnly = await prisma.referral.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReferralFindManyArgs>(args?: SelectSubset<T, ReferralFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReferralPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Referral.
     * @param {ReferralCreateArgs} args - Arguments to create a Referral.
     * @example
     * // Create one Referral
     * const Referral = await prisma.referral.create({
     *   data: {
     *     // ... data to create a Referral
     *   }
     * })
     * 
     */
    create<T extends ReferralCreateArgs>(args: SelectSubset<T, ReferralCreateArgs<ExtArgs>>): Prisma__ReferralClient<$Result.GetResult<Prisma.$ReferralPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Referrals.
     * @param {ReferralCreateManyArgs} args - Arguments to create many Referrals.
     * @example
     * // Create many Referrals
     * const referral = await prisma.referral.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReferralCreateManyArgs>(args?: SelectSubset<T, ReferralCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Referral.
     * @param {ReferralDeleteArgs} args - Arguments to delete one Referral.
     * @example
     * // Delete one Referral
     * const Referral = await prisma.referral.delete({
     *   where: {
     *     // ... filter to delete one Referral
     *   }
     * })
     * 
     */
    delete<T extends ReferralDeleteArgs>(args: SelectSubset<T, ReferralDeleteArgs<ExtArgs>>): Prisma__ReferralClient<$Result.GetResult<Prisma.$ReferralPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Referral.
     * @param {ReferralUpdateArgs} args - Arguments to update one Referral.
     * @example
     * // Update one Referral
     * const referral = await prisma.referral.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReferralUpdateArgs>(args: SelectSubset<T, ReferralUpdateArgs<ExtArgs>>): Prisma__ReferralClient<$Result.GetResult<Prisma.$ReferralPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Referrals.
     * @param {ReferralDeleteManyArgs} args - Arguments to filter Referrals to delete.
     * @example
     * // Delete a few Referrals
     * const { count } = await prisma.referral.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReferralDeleteManyArgs>(args?: SelectSubset<T, ReferralDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Referrals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Referrals
     * const referral = await prisma.referral.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReferralUpdateManyArgs>(args: SelectSubset<T, ReferralUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Referral.
     * @param {ReferralUpsertArgs} args - Arguments to update or create a Referral.
     * @example
     * // Update or create a Referral
     * const referral = await prisma.referral.upsert({
     *   create: {
     *     // ... data to create a Referral
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Referral we want to update
     *   }
     * })
     */
    upsert<T extends ReferralUpsertArgs>(args: SelectSubset<T, ReferralUpsertArgs<ExtArgs>>): Prisma__ReferralClient<$Result.GetResult<Prisma.$ReferralPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Referrals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralCountArgs} args - Arguments to filter Referrals to count.
     * @example
     * // Count the number of Referrals
     * const count = await prisma.referral.count({
     *   where: {
     *     // ... the filter for the Referrals we want to count
     *   }
     * })
    **/
    count<T extends ReferralCountArgs>(
      args?: Subset<T, ReferralCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReferralCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Referral.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReferralAggregateArgs>(args: Subset<T, ReferralAggregateArgs>): Prisma.PrismaPromise<GetReferralAggregateType<T>>

    /**
     * Group by Referral.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReferralGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReferralGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReferralGroupByArgs['orderBy'] }
        : { orderBy?: ReferralGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReferralGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReferralGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Referral model
   */
  readonly fields: ReferralFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Referral.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReferralClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Referral model
   */
  interface ReferralFieldRefs {
    readonly id: FieldRef<"Referral", 'Int'>
    readonly userId: FieldRef<"Referral", 'Int'>
    readonly referralId: FieldRef<"Referral", 'Int'>
    readonly deleted: FieldRef<"Referral", 'Boolean'>
    readonly createdAt: FieldRef<"Referral", 'DateTime'>
    readonly updatedAt: FieldRef<"Referral", 'DateTime'>
    readonly version: FieldRef<"Referral", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Referral findUnique
   */
  export type ReferralFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Referral
     */
    select?: ReferralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Referral
     */
    omit?: ReferralOmit<ExtArgs> | null
    /**
     * Filter, which Referral to fetch.
     */
    where: ReferralWhereUniqueInput
  }

  /**
   * Referral findUniqueOrThrow
   */
  export type ReferralFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Referral
     */
    select?: ReferralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Referral
     */
    omit?: ReferralOmit<ExtArgs> | null
    /**
     * Filter, which Referral to fetch.
     */
    where: ReferralWhereUniqueInput
  }

  /**
   * Referral findFirst
   */
  export type ReferralFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Referral
     */
    select?: ReferralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Referral
     */
    omit?: ReferralOmit<ExtArgs> | null
    /**
     * Filter, which Referral to fetch.
     */
    where?: ReferralWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Referrals to fetch.
     */
    orderBy?: ReferralOrderByWithRelationInput | ReferralOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Referrals.
     */
    cursor?: ReferralWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Referrals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Referrals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Referrals.
     */
    distinct?: ReferralScalarFieldEnum | ReferralScalarFieldEnum[]
  }

  /**
   * Referral findFirstOrThrow
   */
  export type ReferralFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Referral
     */
    select?: ReferralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Referral
     */
    omit?: ReferralOmit<ExtArgs> | null
    /**
     * Filter, which Referral to fetch.
     */
    where?: ReferralWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Referrals to fetch.
     */
    orderBy?: ReferralOrderByWithRelationInput | ReferralOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Referrals.
     */
    cursor?: ReferralWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Referrals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Referrals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Referrals.
     */
    distinct?: ReferralScalarFieldEnum | ReferralScalarFieldEnum[]
  }

  /**
   * Referral findMany
   */
  export type ReferralFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Referral
     */
    select?: ReferralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Referral
     */
    omit?: ReferralOmit<ExtArgs> | null
    /**
     * Filter, which Referrals to fetch.
     */
    where?: ReferralWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Referrals to fetch.
     */
    orderBy?: ReferralOrderByWithRelationInput | ReferralOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Referrals.
     */
    cursor?: ReferralWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Referrals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Referrals.
     */
    skip?: number
    distinct?: ReferralScalarFieldEnum | ReferralScalarFieldEnum[]
  }

  /**
   * Referral create
   */
  export type ReferralCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Referral
     */
    select?: ReferralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Referral
     */
    omit?: ReferralOmit<ExtArgs> | null
    /**
     * The data needed to create a Referral.
     */
    data: XOR<ReferralCreateInput, ReferralUncheckedCreateInput>
  }

  /**
   * Referral createMany
   */
  export type ReferralCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Referrals.
     */
    data: ReferralCreateManyInput | ReferralCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Referral update
   */
  export type ReferralUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Referral
     */
    select?: ReferralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Referral
     */
    omit?: ReferralOmit<ExtArgs> | null
    /**
     * The data needed to update a Referral.
     */
    data: XOR<ReferralUpdateInput, ReferralUncheckedUpdateInput>
    /**
     * Choose, which Referral to update.
     */
    where: ReferralWhereUniqueInput
  }

  /**
   * Referral updateMany
   */
  export type ReferralUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Referrals.
     */
    data: XOR<ReferralUpdateManyMutationInput, ReferralUncheckedUpdateManyInput>
    /**
     * Filter which Referrals to update
     */
    where?: ReferralWhereInput
    /**
     * Limit how many Referrals to update.
     */
    limit?: number
  }

  /**
   * Referral upsert
   */
  export type ReferralUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Referral
     */
    select?: ReferralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Referral
     */
    omit?: ReferralOmit<ExtArgs> | null
    /**
     * The filter to search for the Referral to update in case it exists.
     */
    where: ReferralWhereUniqueInput
    /**
     * In case the Referral found by the `where` argument doesn't exist, create a new Referral with this data.
     */
    create: XOR<ReferralCreateInput, ReferralUncheckedCreateInput>
    /**
     * In case the Referral was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReferralUpdateInput, ReferralUncheckedUpdateInput>
  }

  /**
   * Referral delete
   */
  export type ReferralDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Referral
     */
    select?: ReferralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Referral
     */
    omit?: ReferralOmit<ExtArgs> | null
    /**
     * Filter which Referral to delete.
     */
    where: ReferralWhereUniqueInput
  }

  /**
   * Referral deleteMany
   */
  export type ReferralDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Referrals to delete
     */
    where?: ReferralWhereInput
    /**
     * Limit how many Referrals to delete.
     */
    limit?: number
  }

  /**
   * Referral without action
   */
  export type ReferralDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Referral
     */
    select?: ReferralSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Referral
     */
    omit?: ReferralOmit<ExtArgs> | null
  }


  /**
   * Model Supplier
   */

  export type AggregateSupplier = {
    _count: SupplierCountAggregateOutputType | null
    _avg: SupplierAvgAggregateOutputType | null
    _sum: SupplierSumAggregateOutputType | null
    _min: SupplierMinAggregateOutputType | null
    _max: SupplierMaxAggregateOutputType | null
  }

  export type SupplierAvgAggregateOutputType = {
    id: number | null
    version: number | null
  }

  export type SupplierSumAggregateOutputType = {
    id: number | null
    version: number | null
  }

  export type SupplierMinAggregateOutputType = {
    id: number | null
    companyName: string | null
    companyStreet: string | null
    companyCity: string | null
    companyState: string | null
    companyPostalCode: string | null
    companyCountry: string | null
    companyRegisterNumber: string | null
    personInChargeLastName: string | null
    personInChargeFirstName: string | null
    mobile: string | null
    email: string | null
    remark: string | null
    hasTax: boolean | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type SupplierMaxAggregateOutputType = {
    id: number | null
    companyName: string | null
    companyStreet: string | null
    companyCity: string | null
    companyState: string | null
    companyPostalCode: string | null
    companyCountry: string | null
    companyRegisterNumber: string | null
    personInChargeLastName: string | null
    personInChargeFirstName: string | null
    mobile: string | null
    email: string | null
    remark: string | null
    hasTax: boolean | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type SupplierCountAggregateOutputType = {
    id: number
    companyName: number
    companyStreet: number
    companyCity: number
    companyState: number
    companyPostalCode: number
    companyCountry: number
    companyRegisterNumber: number
    personInChargeLastName: number
    personInChargeFirstName: number
    mobile: number
    email: number
    remark: number
    hasTax: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type SupplierAvgAggregateInputType = {
    id?: true
    version?: true
  }

  export type SupplierSumAggregateInputType = {
    id?: true
    version?: true
  }

  export type SupplierMinAggregateInputType = {
    id?: true
    companyName?: true
    companyStreet?: true
    companyCity?: true
    companyState?: true
    companyPostalCode?: true
    companyCountry?: true
    companyRegisterNumber?: true
    personInChargeLastName?: true
    personInChargeFirstName?: true
    mobile?: true
    email?: true
    remark?: true
    hasTax?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type SupplierMaxAggregateInputType = {
    id?: true
    companyName?: true
    companyStreet?: true
    companyCity?: true
    companyState?: true
    companyPostalCode?: true
    companyCountry?: true
    companyRegisterNumber?: true
    personInChargeLastName?: true
    personInChargeFirstName?: true
    mobile?: true
    email?: true
    remark?: true
    hasTax?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type SupplierCountAggregateInputType = {
    id?: true
    companyName?: true
    companyStreet?: true
    companyCity?: true
    companyState?: true
    companyPostalCode?: true
    companyCountry?: true
    companyRegisterNumber?: true
    personInChargeLastName?: true
    personInChargeFirstName?: true
    mobile?: true
    email?: true
    remark?: true
    hasTax?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type SupplierAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Supplier to aggregate.
     */
    where?: SupplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Suppliers to fetch.
     */
    orderBy?: SupplierOrderByWithRelationInput | SupplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Suppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Suppliers
    **/
    _count?: true | SupplierCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SupplierAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SupplierSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupplierMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupplierMaxAggregateInputType
  }

  export type GetSupplierAggregateType<T extends SupplierAggregateArgs> = {
        [P in keyof T & keyof AggregateSupplier]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupplier[P]>
      : GetScalarType<T[P], AggregateSupplier[P]>
  }




  export type SupplierGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupplierWhereInput
    orderBy?: SupplierOrderByWithAggregationInput | SupplierOrderByWithAggregationInput[]
    by: SupplierScalarFieldEnum[] | SupplierScalarFieldEnum
    having?: SupplierScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupplierCountAggregateInputType | true
    _avg?: SupplierAvgAggregateInputType
    _sum?: SupplierSumAggregateInputType
    _min?: SupplierMinAggregateInputType
    _max?: SupplierMaxAggregateInputType
  }

  export type SupplierGroupByOutputType = {
    id: number
    companyName: string
    companyStreet: string | null
    companyCity: string | null
    companyState: string | null
    companyPostalCode: string | null
    companyCountry: string | null
    companyRegisterNumber: string | null
    personInChargeLastName: string | null
    personInChargeFirstName: string | null
    mobile: string | null
    email: string | null
    remark: string | null
    hasTax: boolean
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: SupplierCountAggregateOutputType | null
    _avg: SupplierAvgAggregateOutputType | null
    _sum: SupplierSumAggregateOutputType | null
    _min: SupplierMinAggregateOutputType | null
    _max: SupplierMaxAggregateOutputType | null
  }

  type GetSupplierGroupByPayload<T extends SupplierGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupplierGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupplierGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupplierGroupByOutputType[P]>
            : GetScalarType<T[P], SupplierGroupByOutputType[P]>
        }
      >
    >


  export type SupplierSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyName?: boolean
    companyStreet?: boolean
    companyCity?: boolean
    companyState?: boolean
    companyPostalCode?: boolean
    companyCountry?: boolean
    companyRegisterNumber?: boolean
    personInChargeLastName?: boolean
    personInChargeFirstName?: boolean
    mobile?: boolean
    email?: boolean
    remark?: boolean
    hasTax?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    items?: boolean | Supplier$itemsArgs<ExtArgs>
    purchaseOrders?: boolean | Supplier$purchaseOrdersArgs<ExtArgs>
    invoices?: boolean | Supplier$invoicesArgs<ExtArgs>
    _count?: boolean | SupplierCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supplier"]>



  export type SupplierSelectScalar = {
    id?: boolean
    companyName?: boolean
    companyStreet?: boolean
    companyCity?: boolean
    companyState?: boolean
    companyPostalCode?: boolean
    companyCountry?: boolean
    companyRegisterNumber?: boolean
    personInChargeLastName?: boolean
    personInChargeFirstName?: boolean
    mobile?: boolean
    email?: boolean
    remark?: boolean
    hasTax?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type SupplierOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "companyName" | "companyStreet" | "companyCity" | "companyState" | "companyPostalCode" | "companyCountry" | "companyRegisterNumber" | "personInChargeLastName" | "personInChargeFirstName" | "mobile" | "email" | "remark" | "hasTax" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["supplier"]>
  export type SupplierInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | Supplier$itemsArgs<ExtArgs>
    purchaseOrders?: boolean | Supplier$purchaseOrdersArgs<ExtArgs>
    invoices?: boolean | Supplier$invoicesArgs<ExtArgs>
    _count?: boolean | SupplierCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SupplierPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Supplier"
    objects: {
      items: Prisma.$ItemPayload<ExtArgs>[]
      purchaseOrders: Prisma.$PurchaseOrderPayload<ExtArgs>[]
      invoices: Prisma.$InvoicePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      companyName: string
      companyStreet: string | null
      companyCity: string | null
      companyState: string | null
      companyPostalCode: string | null
      companyCountry: string | null
      companyRegisterNumber: string | null
      personInChargeLastName: string | null
      personInChargeFirstName: string | null
      mobile: string | null
      email: string | null
      remark: string | null
      hasTax: boolean
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["supplier"]>
    composites: {}
  }

  type SupplierGetPayload<S extends boolean | null | undefined | SupplierDefaultArgs> = $Result.GetResult<Prisma.$SupplierPayload, S>

  type SupplierCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SupplierFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SupplierCountAggregateInputType | true
    }

  export interface SupplierDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Supplier'], meta: { name: 'Supplier' } }
    /**
     * Find zero or one Supplier that matches the filter.
     * @param {SupplierFindUniqueArgs} args - Arguments to find a Supplier
     * @example
     * // Get one Supplier
     * const supplier = await prisma.supplier.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupplierFindUniqueArgs>(args: SelectSubset<T, SupplierFindUniqueArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Supplier that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SupplierFindUniqueOrThrowArgs} args - Arguments to find a Supplier
     * @example
     * // Get one Supplier
     * const supplier = await prisma.supplier.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupplierFindUniqueOrThrowArgs>(args: SelectSubset<T, SupplierFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Supplier that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierFindFirstArgs} args - Arguments to find a Supplier
     * @example
     * // Get one Supplier
     * const supplier = await prisma.supplier.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupplierFindFirstArgs>(args?: SelectSubset<T, SupplierFindFirstArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Supplier that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierFindFirstOrThrowArgs} args - Arguments to find a Supplier
     * @example
     * // Get one Supplier
     * const supplier = await prisma.supplier.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupplierFindFirstOrThrowArgs>(args?: SelectSubset<T, SupplierFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Suppliers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Suppliers
     * const suppliers = await prisma.supplier.findMany()
     * 
     * // Get first 10 Suppliers
     * const suppliers = await prisma.supplier.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supplierWithIdOnly = await prisma.supplier.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupplierFindManyArgs>(args?: SelectSubset<T, SupplierFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Supplier.
     * @param {SupplierCreateArgs} args - Arguments to create a Supplier.
     * @example
     * // Create one Supplier
     * const Supplier = await prisma.supplier.create({
     *   data: {
     *     // ... data to create a Supplier
     *   }
     * })
     * 
     */
    create<T extends SupplierCreateArgs>(args: SelectSubset<T, SupplierCreateArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Suppliers.
     * @param {SupplierCreateManyArgs} args - Arguments to create many Suppliers.
     * @example
     * // Create many Suppliers
     * const supplier = await prisma.supplier.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupplierCreateManyArgs>(args?: SelectSubset<T, SupplierCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Supplier.
     * @param {SupplierDeleteArgs} args - Arguments to delete one Supplier.
     * @example
     * // Delete one Supplier
     * const Supplier = await prisma.supplier.delete({
     *   where: {
     *     // ... filter to delete one Supplier
     *   }
     * })
     * 
     */
    delete<T extends SupplierDeleteArgs>(args: SelectSubset<T, SupplierDeleteArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Supplier.
     * @param {SupplierUpdateArgs} args - Arguments to update one Supplier.
     * @example
     * // Update one Supplier
     * const supplier = await prisma.supplier.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupplierUpdateArgs>(args: SelectSubset<T, SupplierUpdateArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Suppliers.
     * @param {SupplierDeleteManyArgs} args - Arguments to filter Suppliers to delete.
     * @example
     * // Delete a few Suppliers
     * const { count } = await prisma.supplier.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupplierDeleteManyArgs>(args?: SelectSubset<T, SupplierDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Suppliers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Suppliers
     * const supplier = await prisma.supplier.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupplierUpdateManyArgs>(args: SelectSubset<T, SupplierUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Supplier.
     * @param {SupplierUpsertArgs} args - Arguments to update or create a Supplier.
     * @example
     * // Update or create a Supplier
     * const supplier = await prisma.supplier.upsert({
     *   create: {
     *     // ... data to create a Supplier
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Supplier we want to update
     *   }
     * })
     */
    upsert<T extends SupplierUpsertArgs>(args: SelectSubset<T, SupplierUpsertArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Suppliers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierCountArgs} args - Arguments to filter Suppliers to count.
     * @example
     * // Count the number of Suppliers
     * const count = await prisma.supplier.count({
     *   where: {
     *     // ... the filter for the Suppliers we want to count
     *   }
     * })
    **/
    count<T extends SupplierCountArgs>(
      args?: Subset<T, SupplierCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupplierCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Supplier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupplierAggregateArgs>(args: Subset<T, SupplierAggregateArgs>): Prisma.PrismaPromise<GetSupplierAggregateType<T>>

    /**
     * Group by Supplier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupplierGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupplierGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupplierGroupByArgs['orderBy'] }
        : { orderBy?: SupplierGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupplierGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupplierGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Supplier model
   */
  readonly fields: SupplierFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Supplier.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupplierClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    items<T extends Supplier$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Supplier$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    purchaseOrders<T extends Supplier$purchaseOrdersArgs<ExtArgs> = {}>(args?: Subset<T, Supplier$purchaseOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    invoices<T extends Supplier$invoicesArgs<ExtArgs> = {}>(args?: Subset<T, Supplier$invoicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Supplier model
   */
  interface SupplierFieldRefs {
    readonly id: FieldRef<"Supplier", 'Int'>
    readonly companyName: FieldRef<"Supplier", 'String'>
    readonly companyStreet: FieldRef<"Supplier", 'String'>
    readonly companyCity: FieldRef<"Supplier", 'String'>
    readonly companyState: FieldRef<"Supplier", 'String'>
    readonly companyPostalCode: FieldRef<"Supplier", 'String'>
    readonly companyCountry: FieldRef<"Supplier", 'String'>
    readonly companyRegisterNumber: FieldRef<"Supplier", 'String'>
    readonly personInChargeLastName: FieldRef<"Supplier", 'String'>
    readonly personInChargeFirstName: FieldRef<"Supplier", 'String'>
    readonly mobile: FieldRef<"Supplier", 'String'>
    readonly email: FieldRef<"Supplier", 'String'>
    readonly remark: FieldRef<"Supplier", 'String'>
    readonly hasTax: FieldRef<"Supplier", 'Boolean'>
    readonly deleted: FieldRef<"Supplier", 'Boolean'>
    readonly deletedAt: FieldRef<"Supplier", 'DateTime'>
    readonly createdAt: FieldRef<"Supplier", 'DateTime'>
    readonly updatedAt: FieldRef<"Supplier", 'DateTime'>
    readonly version: FieldRef<"Supplier", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Supplier findUnique
   */
  export type SupplierFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * Filter, which Supplier to fetch.
     */
    where: SupplierWhereUniqueInput
  }

  /**
   * Supplier findUniqueOrThrow
   */
  export type SupplierFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * Filter, which Supplier to fetch.
     */
    where: SupplierWhereUniqueInput
  }

  /**
   * Supplier findFirst
   */
  export type SupplierFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * Filter, which Supplier to fetch.
     */
    where?: SupplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Suppliers to fetch.
     */
    orderBy?: SupplierOrderByWithRelationInput | SupplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Suppliers.
     */
    cursor?: SupplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Suppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Suppliers.
     */
    distinct?: SupplierScalarFieldEnum | SupplierScalarFieldEnum[]
  }

  /**
   * Supplier findFirstOrThrow
   */
  export type SupplierFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * Filter, which Supplier to fetch.
     */
    where?: SupplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Suppliers to fetch.
     */
    orderBy?: SupplierOrderByWithRelationInput | SupplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Suppliers.
     */
    cursor?: SupplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Suppliers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Suppliers.
     */
    distinct?: SupplierScalarFieldEnum | SupplierScalarFieldEnum[]
  }

  /**
   * Supplier findMany
   */
  export type SupplierFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * Filter, which Suppliers to fetch.
     */
    where?: SupplierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Suppliers to fetch.
     */
    orderBy?: SupplierOrderByWithRelationInput | SupplierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Suppliers.
     */
    cursor?: SupplierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Suppliers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Suppliers.
     */
    skip?: number
    distinct?: SupplierScalarFieldEnum | SupplierScalarFieldEnum[]
  }

  /**
   * Supplier create
   */
  export type SupplierCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * The data needed to create a Supplier.
     */
    data: XOR<SupplierCreateInput, SupplierUncheckedCreateInput>
  }

  /**
   * Supplier createMany
   */
  export type SupplierCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Suppliers.
     */
    data: SupplierCreateManyInput | SupplierCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Supplier update
   */
  export type SupplierUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * The data needed to update a Supplier.
     */
    data: XOR<SupplierUpdateInput, SupplierUncheckedUpdateInput>
    /**
     * Choose, which Supplier to update.
     */
    where: SupplierWhereUniqueInput
  }

  /**
   * Supplier updateMany
   */
  export type SupplierUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Suppliers.
     */
    data: XOR<SupplierUpdateManyMutationInput, SupplierUncheckedUpdateManyInput>
    /**
     * Filter which Suppliers to update
     */
    where?: SupplierWhereInput
    /**
     * Limit how many Suppliers to update.
     */
    limit?: number
  }

  /**
   * Supplier upsert
   */
  export type SupplierUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * The filter to search for the Supplier to update in case it exists.
     */
    where: SupplierWhereUniqueInput
    /**
     * In case the Supplier found by the `where` argument doesn't exist, create a new Supplier with this data.
     */
    create: XOR<SupplierCreateInput, SupplierUncheckedCreateInput>
    /**
     * In case the Supplier was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupplierUpdateInput, SupplierUncheckedUpdateInput>
  }

  /**
   * Supplier delete
   */
  export type SupplierDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    /**
     * Filter which Supplier to delete.
     */
    where: SupplierWhereUniqueInput
  }

  /**
   * Supplier deleteMany
   */
  export type SupplierDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Suppliers to delete
     */
    where?: SupplierWhereInput
    /**
     * Limit how many Suppliers to delete.
     */
    limit?: number
  }

  /**
   * Supplier.items
   */
  export type Supplier$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    where?: ItemWhereInput
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    cursor?: ItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * Supplier.purchaseOrders
   */
  export type Supplier$purchaseOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    where?: PurchaseOrderWhereInput
    orderBy?: PurchaseOrderOrderByWithRelationInput | PurchaseOrderOrderByWithRelationInput[]
    cursor?: PurchaseOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PurchaseOrderScalarFieldEnum | PurchaseOrderScalarFieldEnum[]
  }

  /**
   * Supplier.invoices
   */
  export type Supplier$invoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    cursor?: InvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Supplier without action
   */
  export type SupplierDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
  }


  /**
   * Model Customer
   */

  export type AggregateCustomer = {
    _count: CustomerCountAggregateOutputType | null
    _avg: CustomerAvgAggregateOutputType | null
    _sum: CustomerSumAggregateOutputType | null
    _min: CustomerMinAggregateOutputType | null
    _max: CustomerMaxAggregateOutputType | null
  }

  export type CustomerAvgAggregateOutputType = {
    id: number | null
    version: number | null
  }

  export type CustomerSumAggregateOutputType = {
    id: number | null
    version: number | null
  }

  export type CustomerMinAggregateOutputType = {
    id: number | null
    salutation: string | null
    lastName: string | null
    firstName: string | null
    mobile: string | null
    email: string | null
    gender: string | null
    billStreet: string | null
    billCity: string | null
    billState: string | null
    billPostalCode: string | null
    billCountry: string | null
    billRemark: string | null
    shipStreet: string | null
    shipCity: string | null
    shipState: string | null
    shipPostalCode: string | null
    shipCountry: string | null
    shipRemark: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type CustomerMaxAggregateOutputType = {
    id: number | null
    salutation: string | null
    lastName: string | null
    firstName: string | null
    mobile: string | null
    email: string | null
    gender: string | null
    billStreet: string | null
    billCity: string | null
    billState: string | null
    billPostalCode: string | null
    billCountry: string | null
    billRemark: string | null
    shipStreet: string | null
    shipCity: string | null
    shipState: string | null
    shipPostalCode: string | null
    shipCountry: string | null
    shipRemark: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type CustomerCountAggregateOutputType = {
    id: number
    salutation: number
    lastName: number
    firstName: number
    mobile: number
    email: number
    gender: number
    billStreet: number
    billCity: number
    billState: number
    billPostalCode: number
    billCountry: number
    billRemark: number
    shipStreet: number
    shipCity: number
    shipState: number
    shipPostalCode: number
    shipCountry: number
    shipRemark: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type CustomerAvgAggregateInputType = {
    id?: true
    version?: true
  }

  export type CustomerSumAggregateInputType = {
    id?: true
    version?: true
  }

  export type CustomerMinAggregateInputType = {
    id?: true
    salutation?: true
    lastName?: true
    firstName?: true
    mobile?: true
    email?: true
    gender?: true
    billStreet?: true
    billCity?: true
    billState?: true
    billPostalCode?: true
    billCountry?: true
    billRemark?: true
    shipStreet?: true
    shipCity?: true
    shipState?: true
    shipPostalCode?: true
    shipCountry?: true
    shipRemark?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type CustomerMaxAggregateInputType = {
    id?: true
    salutation?: true
    lastName?: true
    firstName?: true
    mobile?: true
    email?: true
    gender?: true
    billStreet?: true
    billCity?: true
    billState?: true
    billPostalCode?: true
    billCountry?: true
    billRemark?: true
    shipStreet?: true
    shipCity?: true
    shipState?: true
    shipPostalCode?: true
    shipCountry?: true
    shipRemark?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type CustomerCountAggregateInputType = {
    id?: true
    salutation?: true
    lastName?: true
    firstName?: true
    mobile?: true
    email?: true
    gender?: true
    billStreet?: true
    billCity?: true
    billState?: true
    billPostalCode?: true
    billCountry?: true
    billRemark?: true
    shipStreet?: true
    shipCity?: true
    shipState?: true
    shipPostalCode?: true
    shipCountry?: true
    shipRemark?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type CustomerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Customer to aggregate.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Customers
    **/
    _count?: true | CustomerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CustomerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CustomerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomerMaxAggregateInputType
  }

  export type GetCustomerAggregateType<T extends CustomerAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomer[P]>
      : GetScalarType<T[P], AggregateCustomer[P]>
  }




  export type CustomerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerWhereInput
    orderBy?: CustomerOrderByWithAggregationInput | CustomerOrderByWithAggregationInput[]
    by: CustomerScalarFieldEnum[] | CustomerScalarFieldEnum
    having?: CustomerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomerCountAggregateInputType | true
    _avg?: CustomerAvgAggregateInputType
    _sum?: CustomerSumAggregateInputType
    _min?: CustomerMinAggregateInputType
    _max?: CustomerMaxAggregateInputType
  }

  export type CustomerGroupByOutputType = {
    id: number
    salutation: string
    lastName: string
    firstName: string
    mobile: string | null
    email: string | null
    gender: string | null
    billStreet: string | null
    billCity: string | null
    billState: string | null
    billPostalCode: string | null
    billCountry: string | null
    billRemark: string | null
    shipStreet: string | null
    shipCity: string | null
    shipState: string | null
    shipPostalCode: string | null
    shipCountry: string | null
    shipRemark: string | null
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: CustomerCountAggregateOutputType | null
    _avg: CustomerAvgAggregateOutputType | null
    _sum: CustomerSumAggregateOutputType | null
    _min: CustomerMinAggregateOutputType | null
    _max: CustomerMaxAggregateOutputType | null
  }

  type GetCustomerGroupByPayload<T extends CustomerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomerGroupByOutputType[P]>
            : GetScalarType<T[P], CustomerGroupByOutputType[P]>
        }
      >
    >


  export type CustomerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    salutation?: boolean
    lastName?: boolean
    firstName?: boolean
    mobile?: boolean
    email?: boolean
    gender?: boolean
    billStreet?: boolean
    billCity?: boolean
    billState?: boolean
    billPostalCode?: boolean
    billCountry?: boolean
    billRemark?: boolean
    shipStreet?: boolean
    shipCity?: boolean
    shipState?: boolean
    shipPostalCode?: boolean
    shipCountry?: boolean
    shipRemark?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    sales?: boolean | Customer$salesArgs<ExtArgs>
    promotions?: boolean | Customer$promotionsArgs<ExtArgs>
    promotionUsage?: boolean | Customer$promotionUsageArgs<ExtArgs>
    reservations?: boolean | Customer$reservationsArgs<ExtArgs>
    waitlists?: boolean | Customer$waitlistsArgs<ExtArgs>
    splitBills?: boolean | Customer$splitBillsArgs<ExtArgs>
    _count?: boolean | CustomerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customer"]>



  export type CustomerSelectScalar = {
    id?: boolean
    salutation?: boolean
    lastName?: boolean
    firstName?: boolean
    mobile?: boolean
    email?: boolean
    gender?: boolean
    billStreet?: boolean
    billCity?: boolean
    billState?: boolean
    billPostalCode?: boolean
    billCountry?: boolean
    billRemark?: boolean
    shipStreet?: boolean
    shipCity?: boolean
    shipState?: boolean
    shipPostalCode?: boolean
    shipCountry?: boolean
    shipRemark?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type CustomerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "salutation" | "lastName" | "firstName" | "mobile" | "email" | "gender" | "billStreet" | "billCity" | "billState" | "billPostalCode" | "billCountry" | "billRemark" | "shipStreet" | "shipCity" | "shipState" | "shipPostalCode" | "shipCountry" | "shipRemark" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["customer"]>
  export type CustomerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sales?: boolean | Customer$salesArgs<ExtArgs>
    promotions?: boolean | Customer$promotionsArgs<ExtArgs>
    promotionUsage?: boolean | Customer$promotionUsageArgs<ExtArgs>
    reservations?: boolean | Customer$reservationsArgs<ExtArgs>
    waitlists?: boolean | Customer$waitlistsArgs<ExtArgs>
    splitBills?: boolean | Customer$splitBillsArgs<ExtArgs>
    _count?: boolean | CustomerCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CustomerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Customer"
    objects: {
      sales: Prisma.$SalesPayload<ExtArgs>[]
      promotions: Prisma.$PromotionCustomerPayload<ExtArgs>[]
      promotionUsage: Prisma.$PromotionUsagePayload<ExtArgs>[]
      reservations: Prisma.$ReservationPayload<ExtArgs>[]
      waitlists: Prisma.$WaitlistPayload<ExtArgs>[]
      splitBills: Prisma.$SplitBillPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      salutation: string
      lastName: string
      firstName: string
      mobile: string | null
      email: string | null
      gender: string | null
      billStreet: string | null
      billCity: string | null
      billState: string | null
      billPostalCode: string | null
      billCountry: string | null
      billRemark: string | null
      shipStreet: string | null
      shipCity: string | null
      shipState: string | null
      shipPostalCode: string | null
      shipCountry: string | null
      shipRemark: string | null
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["customer"]>
    composites: {}
  }

  type CustomerGetPayload<S extends boolean | null | undefined | CustomerDefaultArgs> = $Result.GetResult<Prisma.$CustomerPayload, S>

  type CustomerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CustomerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CustomerCountAggregateInputType | true
    }

  export interface CustomerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Customer'], meta: { name: 'Customer' } }
    /**
     * Find zero or one Customer that matches the filter.
     * @param {CustomerFindUniqueArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomerFindUniqueArgs>(args: SelectSubset<T, CustomerFindUniqueArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Customer that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CustomerFindUniqueOrThrowArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomerFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Customer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindFirstArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomerFindFirstArgs>(args?: SelectSubset<T, CustomerFindFirstArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Customer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindFirstOrThrowArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomerFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomerFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Customers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Customers
     * const customers = await prisma.customer.findMany()
     * 
     * // Get first 10 Customers
     * const customers = await prisma.customer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customerWithIdOnly = await prisma.customer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CustomerFindManyArgs>(args?: SelectSubset<T, CustomerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Customer.
     * @param {CustomerCreateArgs} args - Arguments to create a Customer.
     * @example
     * // Create one Customer
     * const Customer = await prisma.customer.create({
     *   data: {
     *     // ... data to create a Customer
     *   }
     * })
     * 
     */
    create<T extends CustomerCreateArgs>(args: SelectSubset<T, CustomerCreateArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Customers.
     * @param {CustomerCreateManyArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customer = await prisma.customer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomerCreateManyArgs>(args?: SelectSubset<T, CustomerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Customer.
     * @param {CustomerDeleteArgs} args - Arguments to delete one Customer.
     * @example
     * // Delete one Customer
     * const Customer = await prisma.customer.delete({
     *   where: {
     *     // ... filter to delete one Customer
     *   }
     * })
     * 
     */
    delete<T extends CustomerDeleteArgs>(args: SelectSubset<T, CustomerDeleteArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Customer.
     * @param {CustomerUpdateArgs} args - Arguments to update one Customer.
     * @example
     * // Update one Customer
     * const customer = await prisma.customer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomerUpdateArgs>(args: SelectSubset<T, CustomerUpdateArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Customers.
     * @param {CustomerDeleteManyArgs} args - Arguments to filter Customers to delete.
     * @example
     * // Delete a few Customers
     * const { count } = await prisma.customer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomerDeleteManyArgs>(args?: SelectSubset<T, CustomerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Customers
     * const customer = await prisma.customer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomerUpdateManyArgs>(args: SelectSubset<T, CustomerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Customer.
     * @param {CustomerUpsertArgs} args - Arguments to update or create a Customer.
     * @example
     * // Update or create a Customer
     * const customer = await prisma.customer.upsert({
     *   create: {
     *     // ... data to create a Customer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Customer we want to update
     *   }
     * })
     */
    upsert<T extends CustomerUpsertArgs>(args: SelectSubset<T, CustomerUpsertArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerCountArgs} args - Arguments to filter Customers to count.
     * @example
     * // Count the number of Customers
     * const count = await prisma.customer.count({
     *   where: {
     *     // ... the filter for the Customers we want to count
     *   }
     * })
    **/
    count<T extends CustomerCountArgs>(
      args?: Subset<T, CustomerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomerAggregateArgs>(args: Subset<T, CustomerAggregateArgs>): Prisma.PrismaPromise<GetCustomerAggregateType<T>>

    /**
     * Group by Customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomerGroupByArgs['orderBy'] }
        : { orderBy?: CustomerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Customer model
   */
  readonly fields: CustomerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Customer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sales<T extends Customer$salesArgs<ExtArgs> = {}>(args?: Subset<T, Customer$salesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    promotions<T extends Customer$promotionsArgs<ExtArgs> = {}>(args?: Subset<T, Customer$promotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionCustomerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    promotionUsage<T extends Customer$promotionUsageArgs<ExtArgs> = {}>(args?: Subset<T, Customer$promotionUsageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionUsagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservations<T extends Customer$reservationsArgs<ExtArgs> = {}>(args?: Subset<T, Customer$reservationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    waitlists<T extends Customer$waitlistsArgs<ExtArgs> = {}>(args?: Subset<T, Customer$waitlistsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WaitlistPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    splitBills<T extends Customer$splitBillsArgs<ExtArgs> = {}>(args?: Subset<T, Customer$splitBillsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SplitBillPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Customer model
   */
  interface CustomerFieldRefs {
    readonly id: FieldRef<"Customer", 'Int'>
    readonly salutation: FieldRef<"Customer", 'String'>
    readonly lastName: FieldRef<"Customer", 'String'>
    readonly firstName: FieldRef<"Customer", 'String'>
    readonly mobile: FieldRef<"Customer", 'String'>
    readonly email: FieldRef<"Customer", 'String'>
    readonly gender: FieldRef<"Customer", 'String'>
    readonly billStreet: FieldRef<"Customer", 'String'>
    readonly billCity: FieldRef<"Customer", 'String'>
    readonly billState: FieldRef<"Customer", 'String'>
    readonly billPostalCode: FieldRef<"Customer", 'String'>
    readonly billCountry: FieldRef<"Customer", 'String'>
    readonly billRemark: FieldRef<"Customer", 'String'>
    readonly shipStreet: FieldRef<"Customer", 'String'>
    readonly shipCity: FieldRef<"Customer", 'String'>
    readonly shipState: FieldRef<"Customer", 'String'>
    readonly shipPostalCode: FieldRef<"Customer", 'String'>
    readonly shipCountry: FieldRef<"Customer", 'String'>
    readonly shipRemark: FieldRef<"Customer", 'String'>
    readonly deleted: FieldRef<"Customer", 'Boolean'>
    readonly deletedAt: FieldRef<"Customer", 'DateTime'>
    readonly createdAt: FieldRef<"Customer", 'DateTime'>
    readonly updatedAt: FieldRef<"Customer", 'DateTime'>
    readonly version: FieldRef<"Customer", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Customer findUnique
   */
  export type CustomerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer findUniqueOrThrow
   */
  export type CustomerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer findFirst
   */
  export type CustomerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Customers.
     */
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer findFirstOrThrow
   */
  export type CustomerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Customers.
     */
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer findMany
   */
  export type CustomerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customers to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer create
   */
  export type CustomerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The data needed to create a Customer.
     */
    data: XOR<CustomerCreateInput, CustomerUncheckedCreateInput>
  }

  /**
   * Customer createMany
   */
  export type CustomerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Customers.
     */
    data: CustomerCreateManyInput | CustomerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Customer update
   */
  export type CustomerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The data needed to update a Customer.
     */
    data: XOR<CustomerUpdateInput, CustomerUncheckedUpdateInput>
    /**
     * Choose, which Customer to update.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer updateMany
   */
  export type CustomerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Customers.
     */
    data: XOR<CustomerUpdateManyMutationInput, CustomerUncheckedUpdateManyInput>
    /**
     * Filter which Customers to update
     */
    where?: CustomerWhereInput
    /**
     * Limit how many Customers to update.
     */
    limit?: number
  }

  /**
   * Customer upsert
   */
  export type CustomerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The filter to search for the Customer to update in case it exists.
     */
    where: CustomerWhereUniqueInput
    /**
     * In case the Customer found by the `where` argument doesn't exist, create a new Customer with this data.
     */
    create: XOR<CustomerCreateInput, CustomerUncheckedCreateInput>
    /**
     * In case the Customer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomerUpdateInput, CustomerUncheckedUpdateInput>
  }

  /**
   * Customer delete
   */
  export type CustomerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter which Customer to delete.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer deleteMany
   */
  export type CustomerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Customers to delete
     */
    where?: CustomerWhereInput
    /**
     * Limit how many Customers to delete.
     */
    limit?: number
  }

  /**
   * Customer.sales
   */
  export type Customer$salesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sales
     */
    select?: SalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sales
     */
    omit?: SalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesInclude<ExtArgs> | null
    where?: SalesWhereInput
    orderBy?: SalesOrderByWithRelationInput | SalesOrderByWithRelationInput[]
    cursor?: SalesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SalesScalarFieldEnum | SalesScalarFieldEnum[]
  }

  /**
   * Customer.promotions
   */
  export type Customer$promotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionCustomer
     */
    select?: PromotionCustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionCustomer
     */
    omit?: PromotionCustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionCustomerInclude<ExtArgs> | null
    where?: PromotionCustomerWhereInput
    orderBy?: PromotionCustomerOrderByWithRelationInput | PromotionCustomerOrderByWithRelationInput[]
    cursor?: PromotionCustomerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionCustomerScalarFieldEnum | PromotionCustomerScalarFieldEnum[]
  }

  /**
   * Customer.promotionUsage
   */
  export type Customer$promotionUsageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionUsage
     */
    select?: PromotionUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionUsage
     */
    omit?: PromotionUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionUsageInclude<ExtArgs> | null
    where?: PromotionUsageWhereInput
    orderBy?: PromotionUsageOrderByWithRelationInput | PromotionUsageOrderByWithRelationInput[]
    cursor?: PromotionUsageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionUsageScalarFieldEnum | PromotionUsageScalarFieldEnum[]
  }

  /**
   * Customer.reservations
   */
  export type Customer$reservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    where?: ReservationWhereInput
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    cursor?: ReservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Customer.waitlists
   */
  export type Customer$waitlistsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Waitlist
     */
    select?: WaitlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Waitlist
     */
    omit?: WaitlistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WaitlistInclude<ExtArgs> | null
    where?: WaitlistWhereInput
    orderBy?: WaitlistOrderByWithRelationInput | WaitlistOrderByWithRelationInput[]
    cursor?: WaitlistWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WaitlistScalarFieldEnum | WaitlistScalarFieldEnum[]
  }

  /**
   * Customer.splitBills
   */
  export type Customer$splitBillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SplitBill
     */
    select?: SplitBillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SplitBill
     */
    omit?: SplitBillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SplitBillInclude<ExtArgs> | null
    where?: SplitBillWhereInput
    orderBy?: SplitBillOrderByWithRelationInput | SplitBillOrderByWithRelationInput[]
    cursor?: SplitBillWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SplitBillScalarFieldEnum | SplitBillScalarFieldEnum[]
  }

  /**
   * Customer without action
   */
  export type CustomerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
  }


  /**
   * Model Company
   */

  export type AggregateCompany = {
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  export type CompanyAvgAggregateOutputType = {
    id: number | null
    version: number | null
  }

  export type CompanySumAggregateOutputType = {
    id: number | null
    version: number | null
  }

  export type CompanyMinAggregateOutputType = {
    id: number | null
    companyName: string | null
    street: string | null
    city: string | null
    state: string | null
    postalCode: string | null
    country: string | null
    registrationNumber: string | null
    website: string | null
    referralId: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type CompanyMaxAggregateOutputType = {
    id: number | null
    companyName: string | null
    street: string | null
    city: string | null
    state: string | null
    postalCode: string | null
    country: string | null
    registrationNumber: string | null
    website: string | null
    referralId: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type CompanyCountAggregateOutputType = {
    id: number
    companyName: number
    street: number
    city: number
    state: number
    postalCode: number
    country: number
    registrationNumber: number
    website: number
    referralId: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type CompanyAvgAggregateInputType = {
    id?: true
    version?: true
  }

  export type CompanySumAggregateInputType = {
    id?: true
    version?: true
  }

  export type CompanyMinAggregateInputType = {
    id?: true
    companyName?: true
    street?: true
    city?: true
    state?: true
    postalCode?: true
    country?: true
    registrationNumber?: true
    website?: true
    referralId?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type CompanyMaxAggregateInputType = {
    id?: true
    companyName?: true
    street?: true
    city?: true
    state?: true
    postalCode?: true
    country?: true
    registrationNumber?: true
    website?: true
    referralId?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type CompanyCountAggregateInputType = {
    id?: true
    companyName?: true
    street?: true
    city?: true
    state?: true
    postalCode?: true
    country?: true
    registrationNumber?: true
    website?: true
    referralId?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type CompanyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Company to aggregate.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Companies
    **/
    _count?: true | CompanyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompanyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompanySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyMaxAggregateInputType
  }

  export type GetCompanyAggregateType<T extends CompanyAggregateArgs> = {
        [P in keyof T & keyof AggregateCompany]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompany[P]>
      : GetScalarType<T[P], AggregateCompany[P]>
  }




  export type CompanyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyWhereInput
    orderBy?: CompanyOrderByWithAggregationInput | CompanyOrderByWithAggregationInput[]
    by: CompanyScalarFieldEnum[] | CompanyScalarFieldEnum
    having?: CompanyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyCountAggregateInputType | true
    _avg?: CompanyAvgAggregateInputType
    _sum?: CompanySumAggregateInputType
    _min?: CompanyMinAggregateInputType
    _max?: CompanyMaxAggregateInputType
  }

  export type CompanyGroupByOutputType = {
    id: number
    companyName: string
    street: string
    city: string
    state: string
    postalCode: string
    country: string
    registrationNumber: string
    website: string
    referralId: string
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  type GetCompanyGroupByPayload<T extends CompanyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyGroupByOutputType[P]>
            : GetScalarType<T[P], CompanyGroupByOutputType[P]>
        }
      >
    >


  export type CompanySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyName?: boolean
    street?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    country?: boolean
    registrationNumber?: boolean
    website?: boolean
    referralId?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }, ExtArgs["result"]["company"]>



  export type CompanySelectScalar = {
    id?: boolean
    companyName?: boolean
    street?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    country?: boolean
    registrationNumber?: boolean
    website?: boolean
    referralId?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type CompanyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "companyName" | "street" | "city" | "state" | "postalCode" | "country" | "registrationNumber" | "website" | "referralId" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["company"]>

  export type $CompanyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Company"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      companyName: string
      street: string
      city: string
      state: string
      postalCode: string
      country: string
      registrationNumber: string
      website: string
      referralId: string
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["company"]>
    composites: {}
  }

  type CompanyGetPayload<S extends boolean | null | undefined | CompanyDefaultArgs> = $Result.GetResult<Prisma.$CompanyPayload, S>

  type CompanyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CompanyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CompanyCountAggregateInputType | true
    }

  export interface CompanyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Company'], meta: { name: 'Company' } }
    /**
     * Find zero or one Company that matches the filter.
     * @param {CompanyFindUniqueArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompanyFindUniqueArgs>(args: SelectSubset<T, CompanyFindUniqueArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Company that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CompanyFindUniqueOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompanyFindUniqueOrThrowArgs>(args: SelectSubset<T, CompanyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Company that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompanyFindFirstArgs>(args?: SelectSubset<T, CompanyFindFirstArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Company that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompanyFindFirstOrThrowArgs>(args?: SelectSubset<T, CompanyFindFirstOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Companies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Companies
     * const companies = await prisma.company.findMany()
     * 
     * // Get first 10 Companies
     * const companies = await prisma.company.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const companyWithIdOnly = await prisma.company.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CompanyFindManyArgs>(args?: SelectSubset<T, CompanyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Company.
     * @param {CompanyCreateArgs} args - Arguments to create a Company.
     * @example
     * // Create one Company
     * const Company = await prisma.company.create({
     *   data: {
     *     // ... data to create a Company
     *   }
     * })
     * 
     */
    create<T extends CompanyCreateArgs>(args: SelectSubset<T, CompanyCreateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Companies.
     * @param {CompanyCreateManyArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const company = await prisma.company.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompanyCreateManyArgs>(args?: SelectSubset<T, CompanyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Company.
     * @param {CompanyDeleteArgs} args - Arguments to delete one Company.
     * @example
     * // Delete one Company
     * const Company = await prisma.company.delete({
     *   where: {
     *     // ... filter to delete one Company
     *   }
     * })
     * 
     */
    delete<T extends CompanyDeleteArgs>(args: SelectSubset<T, CompanyDeleteArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Company.
     * @param {CompanyUpdateArgs} args - Arguments to update one Company.
     * @example
     * // Update one Company
     * const company = await prisma.company.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompanyUpdateArgs>(args: SelectSubset<T, CompanyUpdateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Companies.
     * @param {CompanyDeleteManyArgs} args - Arguments to filter Companies to delete.
     * @example
     * // Delete a few Companies
     * const { count } = await prisma.company.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompanyDeleteManyArgs>(args?: SelectSubset<T, CompanyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Companies
     * const company = await prisma.company.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompanyUpdateManyArgs>(args: SelectSubset<T, CompanyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Company.
     * @param {CompanyUpsertArgs} args - Arguments to update or create a Company.
     * @example
     * // Update or create a Company
     * const company = await prisma.company.upsert({
     *   create: {
     *     // ... data to create a Company
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Company we want to update
     *   }
     * })
     */
    upsert<T extends CompanyUpsertArgs>(args: SelectSubset<T, CompanyUpsertArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyCountArgs} args - Arguments to filter Companies to count.
     * @example
     * // Count the number of Companies
     * const count = await prisma.company.count({
     *   where: {
     *     // ... the filter for the Companies we want to count
     *   }
     * })
    **/
    count<T extends CompanyCountArgs>(
      args?: Subset<T, CompanyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyAggregateArgs>(args: Subset<T, CompanyAggregateArgs>): Prisma.PrismaPromise<GetCompanyAggregateType<T>>

    /**
     * Group by Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompanyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompanyGroupByArgs['orderBy'] }
        : { orderBy?: CompanyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompanyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Company model
   */
  readonly fields: CompanyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Company.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompanyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Company model
   */
  interface CompanyFieldRefs {
    readonly id: FieldRef<"Company", 'Int'>
    readonly companyName: FieldRef<"Company", 'String'>
    readonly street: FieldRef<"Company", 'String'>
    readonly city: FieldRef<"Company", 'String'>
    readonly state: FieldRef<"Company", 'String'>
    readonly postalCode: FieldRef<"Company", 'String'>
    readonly country: FieldRef<"Company", 'String'>
    readonly registrationNumber: FieldRef<"Company", 'String'>
    readonly website: FieldRef<"Company", 'String'>
    readonly referralId: FieldRef<"Company", 'String'>
    readonly deleted: FieldRef<"Company", 'Boolean'>
    readonly deletedAt: FieldRef<"Company", 'DateTime'>
    readonly createdAt: FieldRef<"Company", 'DateTime'>
    readonly updatedAt: FieldRef<"Company", 'DateTime'>
    readonly version: FieldRef<"Company", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Company findUnique
   */
  export type CompanyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findUniqueOrThrow
   */
  export type CompanyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findFirst
   */
  export type CompanyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findFirstOrThrow
   */
  export type CompanyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findMany
   */
  export type CompanyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Filter, which Companies to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company create
   */
  export type CompanyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * The data needed to create a Company.
     */
    data: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
  }

  /**
   * Company createMany
   */
  export type CompanyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Companies.
     */
    data: CompanyCreateManyInput | CompanyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Company update
   */
  export type CompanyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * The data needed to update a Company.
     */
    data: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
    /**
     * Choose, which Company to update.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company updateMany
   */
  export type CompanyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Companies.
     */
    data: XOR<CompanyUpdateManyMutationInput, CompanyUncheckedUpdateManyInput>
    /**
     * Filter which Companies to update
     */
    where?: CompanyWhereInput
    /**
     * Limit how many Companies to update.
     */
    limit?: number
  }

  /**
   * Company upsert
   */
  export type CompanyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * The filter to search for the Company to update in case it exists.
     */
    where: CompanyWhereUniqueInput
    /**
     * In case the Company found by the `where` argument doesn't exist, create a new Company with this data.
     */
    create: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
    /**
     * In case the Company was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
  }

  /**
   * Company delete
   */
  export type CompanyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
    /**
     * Filter which Company to delete.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company deleteMany
   */
  export type CompanyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Companies to delete
     */
    where?: CompanyWhereInput
    /**
     * Limit how many Companies to delete.
     */
    limit?: number
  }

  /**
   * Company without action
   */
  export type CompanyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Company
     */
    omit?: CompanyOmit<ExtArgs> | null
  }


  /**
   * Model Outlet
   */

  export type AggregateOutlet = {
    _count: OutletCountAggregateOutputType | null
    _avg: OutletAvgAggregateOutputType | null
    _sum: OutletSumAggregateOutputType | null
    _min: OutletMinAggregateOutputType | null
    _max: OutletMaxAggregateOutputType | null
  }

  export type OutletAvgAggregateOutputType = {
    id: number | null
    tenantOutletId: number | null
    version: number | null
  }

  export type OutletSumAggregateOutputType = {
    id: number | null
    tenantOutletId: number | null
    version: number | null
  }

  export type OutletMinAggregateOutputType = {
    id: number | null
    tenantOutletId: number | null
    outletName: string | null
    street: string | null
    city: string | null
    state: string | null
    postalCode: string | null
    country: string | null
    outletTel: string | null
    outletEmail: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type OutletMaxAggregateOutputType = {
    id: number | null
    tenantOutletId: number | null
    outletName: string | null
    street: string | null
    city: string | null
    state: string | null
    postalCode: string | null
    country: string | null
    outletTel: string | null
    outletEmail: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type OutletCountAggregateOutputType = {
    id: number
    tenantOutletId: number
    outletName: number
    street: number
    city: number
    state: number
    postalCode: number
    country: number
    outletTel: number
    outletEmail: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type OutletAvgAggregateInputType = {
    id?: true
    tenantOutletId?: true
    version?: true
  }

  export type OutletSumAggregateInputType = {
    id?: true
    tenantOutletId?: true
    version?: true
  }

  export type OutletMinAggregateInputType = {
    id?: true
    tenantOutletId?: true
    outletName?: true
    street?: true
    city?: true
    state?: true
    postalCode?: true
    country?: true
    outletTel?: true
    outletEmail?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type OutletMaxAggregateInputType = {
    id?: true
    tenantOutletId?: true
    outletName?: true
    street?: true
    city?: true
    state?: true
    postalCode?: true
    country?: true
    outletTel?: true
    outletEmail?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type OutletCountAggregateInputType = {
    id?: true
    tenantOutletId?: true
    outletName?: true
    street?: true
    city?: true
    state?: true
    postalCode?: true
    country?: true
    outletTel?: true
    outletEmail?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type OutletAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Outlet to aggregate.
     */
    where?: OutletWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Outlets to fetch.
     */
    orderBy?: OutletOrderByWithRelationInput | OutletOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OutletWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Outlets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Outlets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Outlets
    **/
    _count?: true | OutletCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OutletAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OutletSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OutletMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OutletMaxAggregateInputType
  }

  export type GetOutletAggregateType<T extends OutletAggregateArgs> = {
        [P in keyof T & keyof AggregateOutlet]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOutlet[P]>
      : GetScalarType<T[P], AggregateOutlet[P]>
  }




  export type OutletGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OutletWhereInput
    orderBy?: OutletOrderByWithAggregationInput | OutletOrderByWithAggregationInput[]
    by: OutletScalarFieldEnum[] | OutletScalarFieldEnum
    having?: OutletScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OutletCountAggregateInputType | true
    _avg?: OutletAvgAggregateInputType
    _sum?: OutletSumAggregateInputType
    _min?: OutletMinAggregateInputType
    _max?: OutletMaxAggregateInputType
  }

  export type OutletGroupByOutputType = {
    id: number
    tenantOutletId: number
    outletName: string
    street: string
    city: string
    state: string
    postalCode: string
    country: string
    outletTel: string
    outletEmail: string
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: OutletCountAggregateOutputType | null
    _avg: OutletAvgAggregateOutputType | null
    _sum: OutletSumAggregateOutputType | null
    _min: OutletMinAggregateOutputType | null
    _max: OutletMaxAggregateOutputType | null
  }

  type GetOutletGroupByPayload<T extends OutletGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OutletGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OutletGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OutletGroupByOutputType[P]>
            : GetScalarType<T[P], OutletGroupByOutputType[P]>
        }
      >
    >


  export type OutletSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tenantOutletId?: boolean
    outletName?: boolean
    street?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    country?: boolean
    outletTel?: boolean
    outletEmail?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    stockBalances?: boolean | Outlet$stockBalancesArgs<ExtArgs>
    stockMovements?: boolean | Outlet$stockMovementsArgs<ExtArgs>
    stockSnapshots?: boolean | Outlet$stockSnapshotsArgs<ExtArgs>
    stockReceipts?: boolean | Outlet$stockReceiptsArgs<ExtArgs>
    settings?: boolean | Outlet$settingsArgs<ExtArgs>
    tables?: boolean | Outlet$tablesArgs<ExtArgs>
    stations?: boolean | Outlet$stationsArgs<ExtArgs>
    reservations?: boolean | Outlet$reservationsArgs<ExtArgs>
    waitlists?: boolean | Outlet$waitlistsArgs<ExtArgs>
    _count?: boolean | OutletCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["outlet"]>



  export type OutletSelectScalar = {
    id?: boolean
    tenantOutletId?: boolean
    outletName?: boolean
    street?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    country?: boolean
    outletTel?: boolean
    outletEmail?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type OutletOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tenantOutletId" | "outletName" | "street" | "city" | "state" | "postalCode" | "country" | "outletTel" | "outletEmail" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["outlet"]>
  export type OutletInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    stockBalances?: boolean | Outlet$stockBalancesArgs<ExtArgs>
    stockMovements?: boolean | Outlet$stockMovementsArgs<ExtArgs>
    stockSnapshots?: boolean | Outlet$stockSnapshotsArgs<ExtArgs>
    stockReceipts?: boolean | Outlet$stockReceiptsArgs<ExtArgs>
    settings?: boolean | Outlet$settingsArgs<ExtArgs>
    tables?: boolean | Outlet$tablesArgs<ExtArgs>
    stations?: boolean | Outlet$stationsArgs<ExtArgs>
    reservations?: boolean | Outlet$reservationsArgs<ExtArgs>
    waitlists?: boolean | Outlet$waitlistsArgs<ExtArgs>
    _count?: boolean | OutletCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $OutletPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Outlet"
    objects: {
      stockBalances: Prisma.$StockBalancePayload<ExtArgs>[]
      stockMovements: Prisma.$StockMovementPayload<ExtArgs>[]
      stockSnapshots: Prisma.$StockSnapshotPayload<ExtArgs>[]
      stockReceipts: Prisma.$StockReceiptPayload<ExtArgs>[]
      settings: Prisma.$SettingPayload<ExtArgs>[]
      tables: Prisma.$TablePayload<ExtArgs>[]
      stations: Prisma.$StationPayload<ExtArgs>[]
      reservations: Prisma.$ReservationPayload<ExtArgs>[]
      waitlists: Prisma.$WaitlistPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      tenantOutletId: number
      outletName: string
      street: string
      city: string
      state: string
      postalCode: string
      country: string
      outletTel: string
      outletEmail: string
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["outlet"]>
    composites: {}
  }

  type OutletGetPayload<S extends boolean | null | undefined | OutletDefaultArgs> = $Result.GetResult<Prisma.$OutletPayload, S>

  type OutletCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OutletFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OutletCountAggregateInputType | true
    }

  export interface OutletDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Outlet'], meta: { name: 'Outlet' } }
    /**
     * Find zero or one Outlet that matches the filter.
     * @param {OutletFindUniqueArgs} args - Arguments to find a Outlet
     * @example
     * // Get one Outlet
     * const outlet = await prisma.outlet.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OutletFindUniqueArgs>(args: SelectSubset<T, OutletFindUniqueArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Outlet that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OutletFindUniqueOrThrowArgs} args - Arguments to find a Outlet
     * @example
     * // Get one Outlet
     * const outlet = await prisma.outlet.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OutletFindUniqueOrThrowArgs>(args: SelectSubset<T, OutletFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Outlet that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OutletFindFirstArgs} args - Arguments to find a Outlet
     * @example
     * // Get one Outlet
     * const outlet = await prisma.outlet.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OutletFindFirstArgs>(args?: SelectSubset<T, OutletFindFirstArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Outlet that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OutletFindFirstOrThrowArgs} args - Arguments to find a Outlet
     * @example
     * // Get one Outlet
     * const outlet = await prisma.outlet.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OutletFindFirstOrThrowArgs>(args?: SelectSubset<T, OutletFindFirstOrThrowArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Outlets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OutletFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Outlets
     * const outlets = await prisma.outlet.findMany()
     * 
     * // Get first 10 Outlets
     * const outlets = await prisma.outlet.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const outletWithIdOnly = await prisma.outlet.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OutletFindManyArgs>(args?: SelectSubset<T, OutletFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Outlet.
     * @param {OutletCreateArgs} args - Arguments to create a Outlet.
     * @example
     * // Create one Outlet
     * const Outlet = await prisma.outlet.create({
     *   data: {
     *     // ... data to create a Outlet
     *   }
     * })
     * 
     */
    create<T extends OutletCreateArgs>(args: SelectSubset<T, OutletCreateArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Outlets.
     * @param {OutletCreateManyArgs} args - Arguments to create many Outlets.
     * @example
     * // Create many Outlets
     * const outlet = await prisma.outlet.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OutletCreateManyArgs>(args?: SelectSubset<T, OutletCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Outlet.
     * @param {OutletDeleteArgs} args - Arguments to delete one Outlet.
     * @example
     * // Delete one Outlet
     * const Outlet = await prisma.outlet.delete({
     *   where: {
     *     // ... filter to delete one Outlet
     *   }
     * })
     * 
     */
    delete<T extends OutletDeleteArgs>(args: SelectSubset<T, OutletDeleteArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Outlet.
     * @param {OutletUpdateArgs} args - Arguments to update one Outlet.
     * @example
     * // Update one Outlet
     * const outlet = await prisma.outlet.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OutletUpdateArgs>(args: SelectSubset<T, OutletUpdateArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Outlets.
     * @param {OutletDeleteManyArgs} args - Arguments to filter Outlets to delete.
     * @example
     * // Delete a few Outlets
     * const { count } = await prisma.outlet.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OutletDeleteManyArgs>(args?: SelectSubset<T, OutletDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Outlets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OutletUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Outlets
     * const outlet = await prisma.outlet.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OutletUpdateManyArgs>(args: SelectSubset<T, OutletUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Outlet.
     * @param {OutletUpsertArgs} args - Arguments to update or create a Outlet.
     * @example
     * // Update or create a Outlet
     * const outlet = await prisma.outlet.upsert({
     *   create: {
     *     // ... data to create a Outlet
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Outlet we want to update
     *   }
     * })
     */
    upsert<T extends OutletUpsertArgs>(args: SelectSubset<T, OutletUpsertArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Outlets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OutletCountArgs} args - Arguments to filter Outlets to count.
     * @example
     * // Count the number of Outlets
     * const count = await prisma.outlet.count({
     *   where: {
     *     // ... the filter for the Outlets we want to count
     *   }
     * })
    **/
    count<T extends OutletCountArgs>(
      args?: Subset<T, OutletCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OutletCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Outlet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OutletAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OutletAggregateArgs>(args: Subset<T, OutletAggregateArgs>): Prisma.PrismaPromise<GetOutletAggregateType<T>>

    /**
     * Group by Outlet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OutletGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OutletGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OutletGroupByArgs['orderBy'] }
        : { orderBy?: OutletGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OutletGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOutletGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Outlet model
   */
  readonly fields: OutletFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Outlet.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OutletClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    stockBalances<T extends Outlet$stockBalancesArgs<ExtArgs> = {}>(args?: Subset<T, Outlet$stockBalancesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockBalancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stockMovements<T extends Outlet$stockMovementsArgs<ExtArgs> = {}>(args?: Subset<T, Outlet$stockMovementsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stockSnapshots<T extends Outlet$stockSnapshotsArgs<ExtArgs> = {}>(args?: Subset<T, Outlet$stockSnapshotsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockSnapshotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stockReceipts<T extends Outlet$stockReceiptsArgs<ExtArgs> = {}>(args?: Subset<T, Outlet$stockReceiptsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockReceiptPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    settings<T extends Outlet$settingsArgs<ExtArgs> = {}>(args?: Subset<T, Outlet$settingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SettingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tables<T extends Outlet$tablesArgs<ExtArgs> = {}>(args?: Subset<T, Outlet$tablesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TablePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stations<T extends Outlet$stationsArgs<ExtArgs> = {}>(args?: Subset<T, Outlet$stationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservations<T extends Outlet$reservationsArgs<ExtArgs> = {}>(args?: Subset<T, Outlet$reservationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    waitlists<T extends Outlet$waitlistsArgs<ExtArgs> = {}>(args?: Subset<T, Outlet$waitlistsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WaitlistPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Outlet model
   */
  interface OutletFieldRefs {
    readonly id: FieldRef<"Outlet", 'Int'>
    readonly tenantOutletId: FieldRef<"Outlet", 'Int'>
    readonly outletName: FieldRef<"Outlet", 'String'>
    readonly street: FieldRef<"Outlet", 'String'>
    readonly city: FieldRef<"Outlet", 'String'>
    readonly state: FieldRef<"Outlet", 'String'>
    readonly postalCode: FieldRef<"Outlet", 'String'>
    readonly country: FieldRef<"Outlet", 'String'>
    readonly outletTel: FieldRef<"Outlet", 'String'>
    readonly outletEmail: FieldRef<"Outlet", 'String'>
    readonly deleted: FieldRef<"Outlet", 'Boolean'>
    readonly deletedAt: FieldRef<"Outlet", 'DateTime'>
    readonly createdAt: FieldRef<"Outlet", 'DateTime'>
    readonly updatedAt: FieldRef<"Outlet", 'DateTime'>
    readonly version: FieldRef<"Outlet", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Outlet findUnique
   */
  export type OutletFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Outlet
     */
    select?: OutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Outlet
     */
    omit?: OutletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OutletInclude<ExtArgs> | null
    /**
     * Filter, which Outlet to fetch.
     */
    where: OutletWhereUniqueInput
  }

  /**
   * Outlet findUniqueOrThrow
   */
  export type OutletFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Outlet
     */
    select?: OutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Outlet
     */
    omit?: OutletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OutletInclude<ExtArgs> | null
    /**
     * Filter, which Outlet to fetch.
     */
    where: OutletWhereUniqueInput
  }

  /**
   * Outlet findFirst
   */
  export type OutletFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Outlet
     */
    select?: OutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Outlet
     */
    omit?: OutletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OutletInclude<ExtArgs> | null
    /**
     * Filter, which Outlet to fetch.
     */
    where?: OutletWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Outlets to fetch.
     */
    orderBy?: OutletOrderByWithRelationInput | OutletOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Outlets.
     */
    cursor?: OutletWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Outlets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Outlets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Outlets.
     */
    distinct?: OutletScalarFieldEnum | OutletScalarFieldEnum[]
  }

  /**
   * Outlet findFirstOrThrow
   */
  export type OutletFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Outlet
     */
    select?: OutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Outlet
     */
    omit?: OutletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OutletInclude<ExtArgs> | null
    /**
     * Filter, which Outlet to fetch.
     */
    where?: OutletWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Outlets to fetch.
     */
    orderBy?: OutletOrderByWithRelationInput | OutletOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Outlets.
     */
    cursor?: OutletWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Outlets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Outlets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Outlets.
     */
    distinct?: OutletScalarFieldEnum | OutletScalarFieldEnum[]
  }

  /**
   * Outlet findMany
   */
  export type OutletFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Outlet
     */
    select?: OutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Outlet
     */
    omit?: OutletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OutletInclude<ExtArgs> | null
    /**
     * Filter, which Outlets to fetch.
     */
    where?: OutletWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Outlets to fetch.
     */
    orderBy?: OutletOrderByWithRelationInput | OutletOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Outlets.
     */
    cursor?: OutletWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Outlets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Outlets.
     */
    skip?: number
    distinct?: OutletScalarFieldEnum | OutletScalarFieldEnum[]
  }

  /**
   * Outlet create
   */
  export type OutletCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Outlet
     */
    select?: OutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Outlet
     */
    omit?: OutletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OutletInclude<ExtArgs> | null
    /**
     * The data needed to create a Outlet.
     */
    data: XOR<OutletCreateInput, OutletUncheckedCreateInput>
  }

  /**
   * Outlet createMany
   */
  export type OutletCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Outlets.
     */
    data: OutletCreateManyInput | OutletCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Outlet update
   */
  export type OutletUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Outlet
     */
    select?: OutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Outlet
     */
    omit?: OutletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OutletInclude<ExtArgs> | null
    /**
     * The data needed to update a Outlet.
     */
    data: XOR<OutletUpdateInput, OutletUncheckedUpdateInput>
    /**
     * Choose, which Outlet to update.
     */
    where: OutletWhereUniqueInput
  }

  /**
   * Outlet updateMany
   */
  export type OutletUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Outlets.
     */
    data: XOR<OutletUpdateManyMutationInput, OutletUncheckedUpdateManyInput>
    /**
     * Filter which Outlets to update
     */
    where?: OutletWhereInput
    /**
     * Limit how many Outlets to update.
     */
    limit?: number
  }

  /**
   * Outlet upsert
   */
  export type OutletUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Outlet
     */
    select?: OutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Outlet
     */
    omit?: OutletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OutletInclude<ExtArgs> | null
    /**
     * The filter to search for the Outlet to update in case it exists.
     */
    where: OutletWhereUniqueInput
    /**
     * In case the Outlet found by the `where` argument doesn't exist, create a new Outlet with this data.
     */
    create: XOR<OutletCreateInput, OutletUncheckedCreateInput>
    /**
     * In case the Outlet was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OutletUpdateInput, OutletUncheckedUpdateInput>
  }

  /**
   * Outlet delete
   */
  export type OutletDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Outlet
     */
    select?: OutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Outlet
     */
    omit?: OutletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OutletInclude<ExtArgs> | null
    /**
     * Filter which Outlet to delete.
     */
    where: OutletWhereUniqueInput
  }

  /**
   * Outlet deleteMany
   */
  export type OutletDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Outlets to delete
     */
    where?: OutletWhereInput
    /**
     * Limit how many Outlets to delete.
     */
    limit?: number
  }

  /**
   * Outlet.stockBalances
   */
  export type Outlet$stockBalancesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBalance
     */
    select?: StockBalanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBalance
     */
    omit?: StockBalanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBalanceInclude<ExtArgs> | null
    where?: StockBalanceWhereInput
    orderBy?: StockBalanceOrderByWithRelationInput | StockBalanceOrderByWithRelationInput[]
    cursor?: StockBalanceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockBalanceScalarFieldEnum | StockBalanceScalarFieldEnum[]
  }

  /**
   * Outlet.stockMovements
   */
  export type Outlet$stockMovementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovement
     */
    omit?: StockMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockMovementInclude<ExtArgs> | null
    where?: StockMovementWhereInput
    orderBy?: StockMovementOrderByWithRelationInput | StockMovementOrderByWithRelationInput[]
    cursor?: StockMovementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockMovementScalarFieldEnum | StockMovementScalarFieldEnum[]
  }

  /**
   * Outlet.stockSnapshots
   */
  export type Outlet$stockSnapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockSnapshot
     */
    select?: StockSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockSnapshot
     */
    omit?: StockSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockSnapshotInclude<ExtArgs> | null
    where?: StockSnapshotWhereInput
    orderBy?: StockSnapshotOrderByWithRelationInput | StockSnapshotOrderByWithRelationInput[]
    cursor?: StockSnapshotWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockSnapshotScalarFieldEnum | StockSnapshotScalarFieldEnum[]
  }

  /**
   * Outlet.stockReceipts
   */
  export type Outlet$stockReceiptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceipt
     */
    select?: StockReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceipt
     */
    omit?: StockReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReceiptInclude<ExtArgs> | null
    where?: StockReceiptWhereInput
    orderBy?: StockReceiptOrderByWithRelationInput | StockReceiptOrderByWithRelationInput[]
    cursor?: StockReceiptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockReceiptScalarFieldEnum | StockReceiptScalarFieldEnum[]
  }

  /**
   * Outlet.settings
   */
  export type Outlet$settingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Setting
     */
    select?: SettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Setting
     */
    omit?: SettingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SettingInclude<ExtArgs> | null
    where?: SettingWhereInput
    orderBy?: SettingOrderByWithRelationInput | SettingOrderByWithRelationInput[]
    cursor?: SettingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SettingScalarFieldEnum | SettingScalarFieldEnum[]
  }

  /**
   * Outlet.tables
   */
  export type Outlet$tablesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Table
     */
    select?: TableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Table
     */
    omit?: TableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TableInclude<ExtArgs> | null
    where?: TableWhereInput
    orderBy?: TableOrderByWithRelationInput | TableOrderByWithRelationInput[]
    cursor?: TableWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TableScalarFieldEnum | TableScalarFieldEnum[]
  }

  /**
   * Outlet.stations
   */
  export type Outlet$stationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Station
     */
    select?: StationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Station
     */
    omit?: StationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StationInclude<ExtArgs> | null
    where?: StationWhereInput
    orderBy?: StationOrderByWithRelationInput | StationOrderByWithRelationInput[]
    cursor?: StationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StationScalarFieldEnum | StationScalarFieldEnum[]
  }

  /**
   * Outlet.reservations
   */
  export type Outlet$reservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    where?: ReservationWhereInput
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    cursor?: ReservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Outlet.waitlists
   */
  export type Outlet$waitlistsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Waitlist
     */
    select?: WaitlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Waitlist
     */
    omit?: WaitlistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WaitlistInclude<ExtArgs> | null
    where?: WaitlistWhereInput
    orderBy?: WaitlistOrderByWithRelationInput | WaitlistOrderByWithRelationInput[]
    cursor?: WaitlistWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WaitlistScalarFieldEnum | WaitlistScalarFieldEnum[]
  }

  /**
   * Outlet without action
   */
  export type OutletDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Outlet
     */
    select?: OutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Outlet
     */
    omit?: OutletOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OutletInclude<ExtArgs> | null
  }


  /**
   * Model Item
   */

  export type AggregateItem = {
    _count: ItemCountAggregateOutputType | null
    _avg: ItemAvgAggregateOutputType | null
    _sum: ItemSumAggregateOutputType | null
    _min: ItemMinAggregateOutputType | null
    _max: ItemMaxAggregateOutputType | null
  }

  export type ItemAvgAggregateOutputType = {
    id: number | null
    categoryId: number | null
    cost: Decimal | null
    price: Decimal | null
    height: number | null
    width: number | null
    length: number | null
    weight: number | null
    taxRate: number | null
    supplierId: number | null
    version: number | null
  }

  export type ItemSumAggregateOutputType = {
    id: number | null
    categoryId: number | null
    cost: Decimal | null
    price: Decimal | null
    height: number | null
    width: number | null
    length: number | null
    weight: number | null
    taxRate: number | null
    supplierId: number | null
    version: number | null
  }

  export type ItemMinAggregateOutputType = {
    id: number | null
    itemName: string | null
    itemCode: string | null
    itemType: string | null
    itemModel: string | null
    itemBrand: string | null
    itemDescription: string | null
    categoryId: number | null
    cost: Decimal | null
    price: Decimal | null
    currency: string | null
    isOpenPrice: boolean | null
    unitOfMeasure: string | null
    height: number | null
    width: number | null
    length: number | null
    weight: number | null
    alternateLookUp: string | null
    image: string | null
    hasTax: boolean | null
    taxRate: number | null
    supplierId: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type ItemMaxAggregateOutputType = {
    id: number | null
    itemName: string | null
    itemCode: string | null
    itemType: string | null
    itemModel: string | null
    itemBrand: string | null
    itemDescription: string | null
    categoryId: number | null
    cost: Decimal | null
    price: Decimal | null
    currency: string | null
    isOpenPrice: boolean | null
    unitOfMeasure: string | null
    height: number | null
    width: number | null
    length: number | null
    weight: number | null
    alternateLookUp: string | null
    image: string | null
    hasTax: boolean | null
    taxRate: number | null
    supplierId: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type ItemCountAggregateOutputType = {
    id: number
    itemName: number
    itemCode: number
    itemType: number
    itemModel: number
    itemBrand: number
    itemDescription: number
    categoryId: number
    cost: number
    price: number
    currency: number
    isOpenPrice: number
    unitOfMeasure: number
    height: number
    width: number
    length: number
    weight: number
    alternateLookUp: number
    image: number
    hasTax: number
    taxRate: number
    supplierId: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type ItemAvgAggregateInputType = {
    id?: true
    categoryId?: true
    cost?: true
    price?: true
    height?: true
    width?: true
    length?: true
    weight?: true
    taxRate?: true
    supplierId?: true
    version?: true
  }

  export type ItemSumAggregateInputType = {
    id?: true
    categoryId?: true
    cost?: true
    price?: true
    height?: true
    width?: true
    length?: true
    weight?: true
    taxRate?: true
    supplierId?: true
    version?: true
  }

  export type ItemMinAggregateInputType = {
    id?: true
    itemName?: true
    itemCode?: true
    itemType?: true
    itemModel?: true
    itemBrand?: true
    itemDescription?: true
    categoryId?: true
    cost?: true
    price?: true
    currency?: true
    isOpenPrice?: true
    unitOfMeasure?: true
    height?: true
    width?: true
    length?: true
    weight?: true
    alternateLookUp?: true
    image?: true
    hasTax?: true
    taxRate?: true
    supplierId?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type ItemMaxAggregateInputType = {
    id?: true
    itemName?: true
    itemCode?: true
    itemType?: true
    itemModel?: true
    itemBrand?: true
    itemDescription?: true
    categoryId?: true
    cost?: true
    price?: true
    currency?: true
    isOpenPrice?: true
    unitOfMeasure?: true
    height?: true
    width?: true
    length?: true
    weight?: true
    alternateLookUp?: true
    image?: true
    hasTax?: true
    taxRate?: true
    supplierId?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type ItemCountAggregateInputType = {
    id?: true
    itemName?: true
    itemCode?: true
    itemType?: true
    itemModel?: true
    itemBrand?: true
    itemDescription?: true
    categoryId?: true
    cost?: true
    price?: true
    currency?: true
    isOpenPrice?: true
    unitOfMeasure?: true
    height?: true
    width?: true
    length?: true
    weight?: true
    alternateLookUp?: true
    image?: true
    hasTax?: true
    taxRate?: true
    supplierId?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type ItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Item to aggregate.
     */
    where?: ItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Items to fetch.
     */
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Items
    **/
    _count?: true | ItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ItemMaxAggregateInputType
  }

  export type GetItemAggregateType<T extends ItemAggregateArgs> = {
        [P in keyof T & keyof AggregateItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateItem[P]>
      : GetScalarType<T[P], AggregateItem[P]>
  }




  export type ItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemWhereInput
    orderBy?: ItemOrderByWithAggregationInput | ItemOrderByWithAggregationInput[]
    by: ItemScalarFieldEnum[] | ItemScalarFieldEnum
    having?: ItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ItemCountAggregateInputType | true
    _avg?: ItemAvgAggregateInputType
    _sum?: ItemSumAggregateInputType
    _min?: ItemMinAggregateInputType
    _max?: ItemMaxAggregateInputType
  }

  export type ItemGroupByOutputType = {
    id: number
    itemName: string
    itemCode: string
    itemType: string
    itemModel: string
    itemBrand: string
    itemDescription: string | null
    categoryId: number
    cost: Decimal
    price: Decimal
    currency: string
    isOpenPrice: boolean | null
    unitOfMeasure: string
    height: number | null
    width: number | null
    length: number | null
    weight: number | null
    alternateLookUp: string | null
    image: string | null
    hasTax: boolean | null
    taxRate: number | null
    supplierId: number
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: ItemCountAggregateOutputType | null
    _avg: ItemAvgAggregateOutputType | null
    _sum: ItemSumAggregateOutputType | null
    _min: ItemMinAggregateOutputType | null
    _max: ItemMaxAggregateOutputType | null
  }

  type GetItemGroupByPayload<T extends ItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ItemGroupByOutputType[P]>
            : GetScalarType<T[P], ItemGroupByOutputType[P]>
        }
      >
    >


  export type ItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    itemName?: boolean
    itemCode?: boolean
    itemType?: boolean
    itemModel?: boolean
    itemBrand?: boolean
    itemDescription?: boolean
    categoryId?: boolean
    cost?: boolean
    price?: boolean
    currency?: boolean
    isOpenPrice?: boolean
    unitOfMeasure?: boolean
    height?: boolean
    width?: boolean
    length?: boolean
    weight?: boolean
    alternateLookUp?: boolean
    image?: boolean
    hasTax?: boolean
    taxRate?: boolean
    supplierId?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
    stockBalance?: boolean | Item$stockBalanceArgs<ExtArgs>
    stockMovements?: boolean | Item$stockMovementsArgs<ExtArgs>
    stockSnapshots?: boolean | Item$stockSnapshotsArgs<ExtArgs>
    stockReceipts?: boolean | Item$stockReceiptsArgs<ExtArgs>
    recipes?: boolean | Item$recipesArgs<ExtArgs>
    purchaseOrderItems?: boolean | Item$purchaseOrderItemsArgs<ExtArgs>
    deliveryOrderItems?: boolean | Item$deliveryOrderItemsArgs<ExtArgs>
    invoiceItems?: boolean | Item$invoiceItemsArgs<ExtArgs>
    _count?: boolean | ItemCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["item"]>



  export type ItemSelectScalar = {
    id?: boolean
    itemName?: boolean
    itemCode?: boolean
    itemType?: boolean
    itemModel?: boolean
    itemBrand?: boolean
    itemDescription?: boolean
    categoryId?: boolean
    cost?: boolean
    price?: boolean
    currency?: boolean
    isOpenPrice?: boolean
    unitOfMeasure?: boolean
    height?: boolean
    width?: boolean
    length?: boolean
    weight?: boolean
    alternateLookUp?: boolean
    image?: boolean
    hasTax?: boolean
    taxRate?: boolean
    supplierId?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type ItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "itemName" | "itemCode" | "itemType" | "itemModel" | "itemBrand" | "itemDescription" | "categoryId" | "cost" | "price" | "currency" | "isOpenPrice" | "unitOfMeasure" | "height" | "width" | "length" | "weight" | "alternateLookUp" | "image" | "hasTax" | "taxRate" | "supplierId" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["item"]>
  export type ItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
    stockBalance?: boolean | Item$stockBalanceArgs<ExtArgs>
    stockMovements?: boolean | Item$stockMovementsArgs<ExtArgs>
    stockSnapshots?: boolean | Item$stockSnapshotsArgs<ExtArgs>
    stockReceipts?: boolean | Item$stockReceiptsArgs<ExtArgs>
    recipes?: boolean | Item$recipesArgs<ExtArgs>
    purchaseOrderItems?: boolean | Item$purchaseOrderItemsArgs<ExtArgs>
    deliveryOrderItems?: boolean | Item$deliveryOrderItemsArgs<ExtArgs>
    invoiceItems?: boolean | Item$invoiceItemsArgs<ExtArgs>
    _count?: boolean | ItemCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Item"
    objects: {
      category: Prisma.$CategoryPayload<ExtArgs>
      supplier: Prisma.$SupplierPayload<ExtArgs>
      stockBalance: Prisma.$StockBalancePayload<ExtArgs>[]
      stockMovements: Prisma.$StockMovementPayload<ExtArgs>[]
      stockSnapshots: Prisma.$StockSnapshotPayload<ExtArgs>[]
      stockReceipts: Prisma.$StockReceiptPayload<ExtArgs>[]
      recipes: Prisma.$RecipePayload<ExtArgs>[]
      purchaseOrderItems: Prisma.$PurchaseOrderItemPayload<ExtArgs>[]
      deliveryOrderItems: Prisma.$DeliveryOrderItemPayload<ExtArgs>[]
      invoiceItems: Prisma.$InvoiceItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      itemName: string
      itemCode: string
      itemType: string
      itemModel: string
      itemBrand: string
      itemDescription: string | null
      categoryId: number
      cost: Prisma.Decimal
      price: Prisma.Decimal
      currency: string
      isOpenPrice: boolean | null
      unitOfMeasure: string
      height: number | null
      width: number | null
      length: number | null
      weight: number | null
      alternateLookUp: string | null
      image: string | null
      hasTax: boolean | null
      taxRate: number | null
      supplierId: number
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["item"]>
    composites: {}
  }

  type ItemGetPayload<S extends boolean | null | undefined | ItemDefaultArgs> = $Result.GetResult<Prisma.$ItemPayload, S>

  type ItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ItemCountAggregateInputType | true
    }

  export interface ItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Item'], meta: { name: 'Item' } }
    /**
     * Find zero or one Item that matches the filter.
     * @param {ItemFindUniqueArgs} args - Arguments to find a Item
     * @example
     * // Get one Item
     * const item = await prisma.item.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ItemFindUniqueArgs>(args: SelectSubset<T, ItemFindUniqueArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Item that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ItemFindUniqueOrThrowArgs} args - Arguments to find a Item
     * @example
     * // Get one Item
     * const item = await prisma.item.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ItemFindUniqueOrThrowArgs>(args: SelectSubset<T, ItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Item that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemFindFirstArgs} args - Arguments to find a Item
     * @example
     * // Get one Item
     * const item = await prisma.item.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ItemFindFirstArgs>(args?: SelectSubset<T, ItemFindFirstArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Item that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemFindFirstOrThrowArgs} args - Arguments to find a Item
     * @example
     * // Get one Item
     * const item = await prisma.item.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ItemFindFirstOrThrowArgs>(args?: SelectSubset<T, ItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Items
     * const items = await prisma.item.findMany()
     * 
     * // Get first 10 Items
     * const items = await prisma.item.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const itemWithIdOnly = await prisma.item.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ItemFindManyArgs>(args?: SelectSubset<T, ItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Item.
     * @param {ItemCreateArgs} args - Arguments to create a Item.
     * @example
     * // Create one Item
     * const Item = await prisma.item.create({
     *   data: {
     *     // ... data to create a Item
     *   }
     * })
     * 
     */
    create<T extends ItemCreateArgs>(args: SelectSubset<T, ItemCreateArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Items.
     * @param {ItemCreateManyArgs} args - Arguments to create many Items.
     * @example
     * // Create many Items
     * const item = await prisma.item.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ItemCreateManyArgs>(args?: SelectSubset<T, ItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Item.
     * @param {ItemDeleteArgs} args - Arguments to delete one Item.
     * @example
     * // Delete one Item
     * const Item = await prisma.item.delete({
     *   where: {
     *     // ... filter to delete one Item
     *   }
     * })
     * 
     */
    delete<T extends ItemDeleteArgs>(args: SelectSubset<T, ItemDeleteArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Item.
     * @param {ItemUpdateArgs} args - Arguments to update one Item.
     * @example
     * // Update one Item
     * const item = await prisma.item.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ItemUpdateArgs>(args: SelectSubset<T, ItemUpdateArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Items.
     * @param {ItemDeleteManyArgs} args - Arguments to filter Items to delete.
     * @example
     * // Delete a few Items
     * const { count } = await prisma.item.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ItemDeleteManyArgs>(args?: SelectSubset<T, ItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Items
     * const item = await prisma.item.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ItemUpdateManyArgs>(args: SelectSubset<T, ItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Item.
     * @param {ItemUpsertArgs} args - Arguments to update or create a Item.
     * @example
     * // Update or create a Item
     * const item = await prisma.item.upsert({
     *   create: {
     *     // ... data to create a Item
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Item we want to update
     *   }
     * })
     */
    upsert<T extends ItemUpsertArgs>(args: SelectSubset<T, ItemUpsertArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemCountArgs} args - Arguments to filter Items to count.
     * @example
     * // Count the number of Items
     * const count = await prisma.item.count({
     *   where: {
     *     // ... the filter for the Items we want to count
     *   }
     * })
    **/
    count<T extends ItemCountArgs>(
      args?: Subset<T, ItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Item.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ItemAggregateArgs>(args: Subset<T, ItemAggregateArgs>): Prisma.PrismaPromise<GetItemAggregateType<T>>

    /**
     * Group by Item.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ItemGroupByArgs['orderBy'] }
        : { orderBy?: ItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Item model
   */
  readonly fields: ItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Item.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends CategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoryDefaultArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    supplier<T extends SupplierDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SupplierDefaultArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    stockBalance<T extends Item$stockBalanceArgs<ExtArgs> = {}>(args?: Subset<T, Item$stockBalanceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockBalancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stockMovements<T extends Item$stockMovementsArgs<ExtArgs> = {}>(args?: Subset<T, Item$stockMovementsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stockSnapshots<T extends Item$stockSnapshotsArgs<ExtArgs> = {}>(args?: Subset<T, Item$stockSnapshotsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockSnapshotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    stockReceipts<T extends Item$stockReceiptsArgs<ExtArgs> = {}>(args?: Subset<T, Item$stockReceiptsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockReceiptPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    recipes<T extends Item$recipesArgs<ExtArgs> = {}>(args?: Subset<T, Item$recipesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RecipePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    purchaseOrderItems<T extends Item$purchaseOrderItemsArgs<ExtArgs> = {}>(args?: Subset<T, Item$purchaseOrderItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deliveryOrderItems<T extends Item$deliveryOrderItemsArgs<ExtArgs> = {}>(args?: Subset<T, Item$deliveryOrderItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryOrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    invoiceItems<T extends Item$invoiceItemsArgs<ExtArgs> = {}>(args?: Subset<T, Item$invoiceItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Item model
   */
  interface ItemFieldRefs {
    readonly id: FieldRef<"Item", 'Int'>
    readonly itemName: FieldRef<"Item", 'String'>
    readonly itemCode: FieldRef<"Item", 'String'>
    readonly itemType: FieldRef<"Item", 'String'>
    readonly itemModel: FieldRef<"Item", 'String'>
    readonly itemBrand: FieldRef<"Item", 'String'>
    readonly itemDescription: FieldRef<"Item", 'String'>
    readonly categoryId: FieldRef<"Item", 'Int'>
    readonly cost: FieldRef<"Item", 'Decimal'>
    readonly price: FieldRef<"Item", 'Decimal'>
    readonly currency: FieldRef<"Item", 'String'>
    readonly isOpenPrice: FieldRef<"Item", 'Boolean'>
    readonly unitOfMeasure: FieldRef<"Item", 'String'>
    readonly height: FieldRef<"Item", 'Float'>
    readonly width: FieldRef<"Item", 'Float'>
    readonly length: FieldRef<"Item", 'Float'>
    readonly weight: FieldRef<"Item", 'Float'>
    readonly alternateLookUp: FieldRef<"Item", 'String'>
    readonly image: FieldRef<"Item", 'String'>
    readonly hasTax: FieldRef<"Item", 'Boolean'>
    readonly taxRate: FieldRef<"Item", 'Float'>
    readonly supplierId: FieldRef<"Item", 'Int'>
    readonly deleted: FieldRef<"Item", 'Boolean'>
    readonly deletedAt: FieldRef<"Item", 'DateTime'>
    readonly createdAt: FieldRef<"Item", 'DateTime'>
    readonly updatedAt: FieldRef<"Item", 'DateTime'>
    readonly version: FieldRef<"Item", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Item findUnique
   */
  export type ItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter, which Item to fetch.
     */
    where: ItemWhereUniqueInput
  }

  /**
   * Item findUniqueOrThrow
   */
  export type ItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter, which Item to fetch.
     */
    where: ItemWhereUniqueInput
  }

  /**
   * Item findFirst
   */
  export type ItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter, which Item to fetch.
     */
    where?: ItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Items to fetch.
     */
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Items.
     */
    cursor?: ItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Items.
     */
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * Item findFirstOrThrow
   */
  export type ItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter, which Item to fetch.
     */
    where?: ItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Items to fetch.
     */
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Items.
     */
    cursor?: ItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Items.
     */
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * Item findMany
   */
  export type ItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter, which Items to fetch.
     */
    where?: ItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Items to fetch.
     */
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Items.
     */
    cursor?: ItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Items.
     */
    skip?: number
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * Item create
   */
  export type ItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * The data needed to create a Item.
     */
    data: XOR<ItemCreateInput, ItemUncheckedCreateInput>
  }

  /**
   * Item createMany
   */
  export type ItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Items.
     */
    data: ItemCreateManyInput | ItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Item update
   */
  export type ItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * The data needed to update a Item.
     */
    data: XOR<ItemUpdateInput, ItemUncheckedUpdateInput>
    /**
     * Choose, which Item to update.
     */
    where: ItemWhereUniqueInput
  }

  /**
   * Item updateMany
   */
  export type ItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Items.
     */
    data: XOR<ItemUpdateManyMutationInput, ItemUncheckedUpdateManyInput>
    /**
     * Filter which Items to update
     */
    where?: ItemWhereInput
    /**
     * Limit how many Items to update.
     */
    limit?: number
  }

  /**
   * Item upsert
   */
  export type ItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * The filter to search for the Item to update in case it exists.
     */
    where: ItemWhereUniqueInput
    /**
     * In case the Item found by the `where` argument doesn't exist, create a new Item with this data.
     */
    create: XOR<ItemCreateInput, ItemUncheckedCreateInput>
    /**
     * In case the Item was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ItemUpdateInput, ItemUncheckedUpdateInput>
  }

  /**
   * Item delete
   */
  export type ItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    /**
     * Filter which Item to delete.
     */
    where: ItemWhereUniqueInput
  }

  /**
   * Item deleteMany
   */
  export type ItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Items to delete
     */
    where?: ItemWhereInput
    /**
     * Limit how many Items to delete.
     */
    limit?: number
  }

  /**
   * Item.stockBalance
   */
  export type Item$stockBalanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBalance
     */
    select?: StockBalanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBalance
     */
    omit?: StockBalanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBalanceInclude<ExtArgs> | null
    where?: StockBalanceWhereInput
    orderBy?: StockBalanceOrderByWithRelationInput | StockBalanceOrderByWithRelationInput[]
    cursor?: StockBalanceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockBalanceScalarFieldEnum | StockBalanceScalarFieldEnum[]
  }

  /**
   * Item.stockMovements
   */
  export type Item$stockMovementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovement
     */
    omit?: StockMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockMovementInclude<ExtArgs> | null
    where?: StockMovementWhereInput
    orderBy?: StockMovementOrderByWithRelationInput | StockMovementOrderByWithRelationInput[]
    cursor?: StockMovementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockMovementScalarFieldEnum | StockMovementScalarFieldEnum[]
  }

  /**
   * Item.stockSnapshots
   */
  export type Item$stockSnapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockSnapshot
     */
    select?: StockSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockSnapshot
     */
    omit?: StockSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockSnapshotInclude<ExtArgs> | null
    where?: StockSnapshotWhereInput
    orderBy?: StockSnapshotOrderByWithRelationInput | StockSnapshotOrderByWithRelationInput[]
    cursor?: StockSnapshotWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockSnapshotScalarFieldEnum | StockSnapshotScalarFieldEnum[]
  }

  /**
   * Item.stockReceipts
   */
  export type Item$stockReceiptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceipt
     */
    select?: StockReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceipt
     */
    omit?: StockReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReceiptInclude<ExtArgs> | null
    where?: StockReceiptWhereInput
    orderBy?: StockReceiptOrderByWithRelationInput | StockReceiptOrderByWithRelationInput[]
    cursor?: StockReceiptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StockReceiptScalarFieldEnum | StockReceiptScalarFieldEnum[]
  }

  /**
   * Item.recipes
   */
  export type Item$recipesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recipe
     */
    select?: RecipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recipe
     */
    omit?: RecipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecipeInclude<ExtArgs> | null
    where?: RecipeWhereInput
    orderBy?: RecipeOrderByWithRelationInput | RecipeOrderByWithRelationInput[]
    cursor?: RecipeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RecipeScalarFieldEnum | RecipeScalarFieldEnum[]
  }

  /**
   * Item.purchaseOrderItems
   */
  export type Item$purchaseOrderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    where?: PurchaseOrderItemWhereInput
    orderBy?: PurchaseOrderItemOrderByWithRelationInput | PurchaseOrderItemOrderByWithRelationInput[]
    cursor?: PurchaseOrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PurchaseOrderItemScalarFieldEnum | PurchaseOrderItemScalarFieldEnum[]
  }

  /**
   * Item.deliveryOrderItems
   */
  export type Item$deliveryOrderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrderItem
     */
    select?: DeliveryOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrderItem
     */
    omit?: DeliveryOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderItemInclude<ExtArgs> | null
    where?: DeliveryOrderItemWhereInput
    orderBy?: DeliveryOrderItemOrderByWithRelationInput | DeliveryOrderItemOrderByWithRelationInput[]
    cursor?: DeliveryOrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeliveryOrderItemScalarFieldEnum | DeliveryOrderItemScalarFieldEnum[]
  }

  /**
   * Item.invoiceItems
   */
  export type Item$invoiceItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceItem
     */
    select?: InvoiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceItem
     */
    omit?: InvoiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceItemInclude<ExtArgs> | null
    where?: InvoiceItemWhereInput
    orderBy?: InvoiceItemOrderByWithRelationInput | InvoiceItemOrderByWithRelationInput[]
    cursor?: InvoiceItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceItemScalarFieldEnum | InvoiceItemScalarFieldEnum[]
  }

  /**
   * Item without action
   */
  export type ItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
  }


  /**
   * Model Category
   */

  export type AggregateCategory = {
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  export type CategoryAvgAggregateOutputType = {
    id: number | null
    parentId: number | null
    version: number | null
  }

  export type CategorySumAggregateOutputType = {
    id: number | null
    parentId: number | null
    version: number | null
  }

  export type CategoryMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    parentId: number | null
    image: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type CategoryMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    parentId: number | null
    image: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type CategoryCountAggregateOutputType = {
    id: number
    name: number
    description: number
    parentId: number
    image: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type CategoryAvgAggregateInputType = {
    id?: true
    parentId?: true
    version?: true
  }

  export type CategorySumAggregateInputType = {
    id?: true
    parentId?: true
    version?: true
  }

  export type CategoryMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    parentId?: true
    image?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type CategoryMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    parentId?: true
    image?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type CategoryCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    parentId?: true
    image?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type CategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Category to aggregate.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryMaxAggregateInputType
  }

  export type GetCategoryAggregateType<T extends CategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory[P]>
      : GetScalarType<T[P], AggregateCategory[P]>
  }




  export type CategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithAggregationInput | CategoryOrderByWithAggregationInput[]
    by: CategoryScalarFieldEnum[] | CategoryScalarFieldEnum
    having?: CategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryCountAggregateInputType | true
    _avg?: CategoryAvgAggregateInputType
    _sum?: CategorySumAggregateInputType
    _min?: CategoryMinAggregateInputType
    _max?: CategoryMaxAggregateInputType
  }

  export type CategoryGroupByOutputType = {
    id: number
    name: string
    description: string | null
    parentId: number | null
    image: string | null
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  type GetCategoryGroupByPayload<T extends CategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryGroupByOutputType[P]>
        }
      >
    >


  export type CategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    parentId?: boolean
    image?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    items?: boolean | Category$itemsArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>



  export type CategorySelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    parentId?: boolean
    image?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type CategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "parentId" | "image" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["category"]>
  export type CategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | Category$itemsArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Category"
    objects: {
      items: Prisma.$ItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      parentId: number | null
      image: string | null
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["category"]>
    composites: {}
  }

  type CategoryGetPayload<S extends boolean | null | undefined | CategoryDefaultArgs> = $Result.GetResult<Prisma.$CategoryPayload, S>

  type CategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoryCountAggregateInputType | true
    }

  export interface CategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Category'], meta: { name: 'Category' } }
    /**
     * Find zero or one Category that matches the filter.
     * @param {CategoryFindUniqueArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryFindUniqueArgs>(args: SelectSubset<T, CategoryFindUniqueArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Category that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoryFindUniqueOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryFindFirstArgs>(args?: SelectSubset<T, CategoryFindFirstArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.category.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryWithIdOnly = await prisma.category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryFindManyArgs>(args?: SelectSubset<T, CategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Category.
     * @param {CategoryCreateArgs} args - Arguments to create a Category.
     * @example
     * // Create one Category
     * const Category = await prisma.category.create({
     *   data: {
     *     // ... data to create a Category
     *   }
     * })
     * 
     */
    create<T extends CategoryCreateArgs>(args: SelectSubset<T, CategoryCreateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categories.
     * @param {CategoryCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryCreateManyArgs>(args?: SelectSubset<T, CategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Category.
     * @param {CategoryDeleteArgs} args - Arguments to delete one Category.
     * @example
     * // Delete one Category
     * const Category = await prisma.category.delete({
     *   where: {
     *     // ... filter to delete one Category
     *   }
     * })
     * 
     */
    delete<T extends CategoryDeleteArgs>(args: SelectSubset<T, CategoryDeleteArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Category.
     * @param {CategoryUpdateArgs} args - Arguments to update one Category.
     * @example
     * // Update one Category
     * const category = await prisma.category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryUpdateArgs>(args: SelectSubset<T, CategoryUpdateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categories.
     * @param {CategoryDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryDeleteManyArgs>(args?: SelectSubset<T, CategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryUpdateManyArgs>(args: SelectSubset<T, CategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Category.
     * @param {CategoryUpsertArgs} args - Arguments to update or create a Category.
     * @example
     * // Update or create a Category
     * const category = await prisma.category.upsert({
     *   create: {
     *     // ... data to create a Category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category we want to update
     *   }
     * })
     */
    upsert<T extends CategoryUpsertArgs>(args: SelectSubset<T, CategoryUpsertArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.category.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoryCountArgs>(
      args?: Subset<T, CategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryAggregateArgs>(args: Subset<T, CategoryAggregateArgs>): Prisma.PrismaPromise<GetCategoryAggregateType<T>>

    /**
     * Group by Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryGroupByArgs['orderBy'] }
        : { orderBy?: CategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Category model
   */
  readonly fields: CategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    items<T extends Category$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Category$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Category model
   */
  interface CategoryFieldRefs {
    readonly id: FieldRef<"Category", 'Int'>
    readonly name: FieldRef<"Category", 'String'>
    readonly description: FieldRef<"Category", 'String'>
    readonly parentId: FieldRef<"Category", 'Int'>
    readonly image: FieldRef<"Category", 'String'>
    readonly deleted: FieldRef<"Category", 'Boolean'>
    readonly deletedAt: FieldRef<"Category", 'DateTime'>
    readonly createdAt: FieldRef<"Category", 'DateTime'>
    readonly updatedAt: FieldRef<"Category", 'DateTime'>
    readonly version: FieldRef<"Category", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Category findUnique
   */
  export type CategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findUniqueOrThrow
   */
  export type CategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findFirst
   */
  export type CategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findFirstOrThrow
   */
  export type CategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findMany
   */
  export type CategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category create
   */
  export type CategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Category.
     */
    data: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
  }

  /**
   * Category createMany
   */
  export type CategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category update
   */
  export type CategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Category.
     */
    data: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
    /**
     * Choose, which Category to update.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category updateMany
   */
  export type CategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
  }

  /**
   * Category upsert
   */
  export type CategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Category to update in case it exists.
     */
    where: CategoryWhereUniqueInput
    /**
     * In case the Category found by the `where` argument doesn't exist, create a new Category with this data.
     */
    create: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
    /**
     * In case the Category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
  }

  /**
   * Category delete
   */
  export type CategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter which Category to delete.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category deleteMany
   */
  export type CategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to delete.
     */
    limit?: number
  }

  /**
   * Category.items
   */
  export type Category$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Item
     */
    select?: ItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Item
     */
    omit?: ItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemInclude<ExtArgs> | null
    where?: ItemWhereInput
    orderBy?: ItemOrderByWithRelationInput | ItemOrderByWithRelationInput[]
    cursor?: ItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ItemScalarFieldEnum | ItemScalarFieldEnum[]
  }

  /**
   * Category without action
   */
  export type CategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
  }


  /**
   * Model Sales
   */

  export type AggregateSales = {
    _count: SalesCountAggregateOutputType | null
    _avg: SalesAvgAggregateOutputType | null
    _sum: SalesSumAggregateOutputType | null
    _min: SalesMinAggregateOutputType | null
    _max: SalesMaxAggregateOutputType | null
  }

  export type SalesAvgAggregateOutputType = {
    id: number | null
    outletId: number | null
    customerId: number | null
    totalItemDiscountAmount: Decimal | null
    discountPercentage: Decimal | null
    discountAmount: Decimal | null
    profitAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    roundingAmount: Decimal | null
    subtotalAmount: Decimal | null
    totalAmount: Decimal | null
    paidAmount: Decimal | null
    changeAmount: Decimal | null
    completedSessionId: number | null
    sessionId: number | null
    eodId: number | null
    salesQuotationId: number | null
    version: number | null
    tableId: number | null
  }

  export type SalesSumAggregateOutputType = {
    id: number | null
    outletId: number | null
    customerId: number | null
    totalItemDiscountAmount: Decimal | null
    discountPercentage: Decimal | null
    discountAmount: Decimal | null
    profitAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    roundingAmount: Decimal | null
    subtotalAmount: Decimal | null
    totalAmount: Decimal | null
    paidAmount: Decimal | null
    changeAmount: Decimal | null
    completedSessionId: number | null
    sessionId: number | null
    eodId: number | null
    salesQuotationId: number | null
    version: number | null
    tableId: number | null
  }

  export type SalesMinAggregateOutputType = {
    id: number | null
    outletId: number | null
    businessDate: Date | null
    salesType: string | null
    customerName: string | null
    customerId: number | null
    phoneNumber: string | null
    billStreet: string | null
    billCity: string | null
    billState: string | null
    billPostalCode: string | null
    billCountry: string | null
    shipStreet: string | null
    shipCity: string | null
    shipState: string | null
    shipPostalCode: string | null
    shipCountry: string | null
    totalItemDiscountAmount: Decimal | null
    discountPercentage: Decimal | null
    discountAmount: Decimal | null
    profitAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    roundingAmount: Decimal | null
    subtotalAmount: Decimal | null
    totalAmount: Decimal | null
    paidAmount: Decimal | null
    changeAmount: Decimal | null
    status: string | null
    remark: string | null
    completedSessionId: number | null
    sessionId: number | null
    eodId: number | null
    salesQuotationId: number | null
    performedBy: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    tableId: number | null
    orderStatus: string | null
  }

  export type SalesMaxAggregateOutputType = {
    id: number | null
    outletId: number | null
    businessDate: Date | null
    salesType: string | null
    customerName: string | null
    customerId: number | null
    phoneNumber: string | null
    billStreet: string | null
    billCity: string | null
    billState: string | null
    billPostalCode: string | null
    billCountry: string | null
    shipStreet: string | null
    shipCity: string | null
    shipState: string | null
    shipPostalCode: string | null
    shipCountry: string | null
    totalItemDiscountAmount: Decimal | null
    discountPercentage: Decimal | null
    discountAmount: Decimal | null
    profitAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    roundingAmount: Decimal | null
    subtotalAmount: Decimal | null
    totalAmount: Decimal | null
    paidAmount: Decimal | null
    changeAmount: Decimal | null
    status: string | null
    remark: string | null
    completedSessionId: number | null
    sessionId: number | null
    eodId: number | null
    salesQuotationId: number | null
    performedBy: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    tableId: number | null
    orderStatus: string | null
  }

  export type SalesCountAggregateOutputType = {
    id: number
    outletId: number
    businessDate: number
    salesType: number
    customerName: number
    customerId: number
    phoneNumber: number
    billStreet: number
    billCity: number
    billState: number
    billPostalCode: number
    billCountry: number
    shipStreet: number
    shipCity: number
    shipState: number
    shipPostalCode: number
    shipCountry: number
    totalItemDiscountAmount: number
    discountPercentage: number
    discountAmount: number
    profitAmount: number
    serviceChargeAmount: number
    taxAmount: number
    roundingAmount: number
    subtotalAmount: number
    totalAmount: number
    paidAmount: number
    changeAmount: number
    status: number
    remark: number
    completedSessionId: number
    sessionId: number
    eodId: number
    salesQuotationId: number
    performedBy: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    tableId: number
    orderStatus: number
    _all: number
  }


  export type SalesAvgAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    totalItemDiscountAmount?: true
    discountPercentage?: true
    discountAmount?: true
    profitAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    roundingAmount?: true
    subtotalAmount?: true
    totalAmount?: true
    paidAmount?: true
    changeAmount?: true
    completedSessionId?: true
    sessionId?: true
    eodId?: true
    salesQuotationId?: true
    version?: true
    tableId?: true
  }

  export type SalesSumAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    totalItemDiscountAmount?: true
    discountPercentage?: true
    discountAmount?: true
    profitAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    roundingAmount?: true
    subtotalAmount?: true
    totalAmount?: true
    paidAmount?: true
    changeAmount?: true
    completedSessionId?: true
    sessionId?: true
    eodId?: true
    salesQuotationId?: true
    version?: true
    tableId?: true
  }

  export type SalesMinAggregateInputType = {
    id?: true
    outletId?: true
    businessDate?: true
    salesType?: true
    customerName?: true
    customerId?: true
    phoneNumber?: true
    billStreet?: true
    billCity?: true
    billState?: true
    billPostalCode?: true
    billCountry?: true
    shipStreet?: true
    shipCity?: true
    shipState?: true
    shipPostalCode?: true
    shipCountry?: true
    totalItemDiscountAmount?: true
    discountPercentage?: true
    discountAmount?: true
    profitAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    roundingAmount?: true
    subtotalAmount?: true
    totalAmount?: true
    paidAmount?: true
    changeAmount?: true
    status?: true
    remark?: true
    completedSessionId?: true
    sessionId?: true
    eodId?: true
    salesQuotationId?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    tableId?: true
    orderStatus?: true
  }

  export type SalesMaxAggregateInputType = {
    id?: true
    outletId?: true
    businessDate?: true
    salesType?: true
    customerName?: true
    customerId?: true
    phoneNumber?: true
    billStreet?: true
    billCity?: true
    billState?: true
    billPostalCode?: true
    billCountry?: true
    shipStreet?: true
    shipCity?: true
    shipState?: true
    shipPostalCode?: true
    shipCountry?: true
    totalItemDiscountAmount?: true
    discountPercentage?: true
    discountAmount?: true
    profitAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    roundingAmount?: true
    subtotalAmount?: true
    totalAmount?: true
    paidAmount?: true
    changeAmount?: true
    status?: true
    remark?: true
    completedSessionId?: true
    sessionId?: true
    eodId?: true
    salesQuotationId?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    tableId?: true
    orderStatus?: true
  }

  export type SalesCountAggregateInputType = {
    id?: true
    outletId?: true
    businessDate?: true
    salesType?: true
    customerName?: true
    customerId?: true
    phoneNumber?: true
    billStreet?: true
    billCity?: true
    billState?: true
    billPostalCode?: true
    billCountry?: true
    shipStreet?: true
    shipCity?: true
    shipState?: true
    shipPostalCode?: true
    shipCountry?: true
    totalItemDiscountAmount?: true
    discountPercentage?: true
    discountAmount?: true
    profitAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    roundingAmount?: true
    subtotalAmount?: true
    totalAmount?: true
    paidAmount?: true
    changeAmount?: true
    status?: true
    remark?: true
    completedSessionId?: true
    sessionId?: true
    eodId?: true
    salesQuotationId?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    tableId?: true
    orderStatus?: true
    _all?: true
  }

  export type SalesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sales to aggregate.
     */
    where?: SalesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sales to fetch.
     */
    orderBy?: SalesOrderByWithRelationInput | SalesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SalesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sales.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sales
    **/
    _count?: true | SalesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SalesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SalesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SalesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SalesMaxAggregateInputType
  }

  export type GetSalesAggregateType<T extends SalesAggregateArgs> = {
        [P in keyof T & keyof AggregateSales]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSales[P]>
      : GetScalarType<T[P], AggregateSales[P]>
  }




  export type SalesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalesWhereInput
    orderBy?: SalesOrderByWithAggregationInput | SalesOrderByWithAggregationInput[]
    by: SalesScalarFieldEnum[] | SalesScalarFieldEnum
    having?: SalesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SalesCountAggregateInputType | true
    _avg?: SalesAvgAggregateInputType
    _sum?: SalesSumAggregateInputType
    _min?: SalesMinAggregateInputType
    _max?: SalesMaxAggregateInputType
  }

  export type SalesGroupByOutputType = {
    id: number
    outletId: number
    businessDate: Date
    salesType: string
    customerName: string | null
    customerId: number | null
    phoneNumber: string | null
    billStreet: string
    billCity: string
    billState: string
    billPostalCode: string
    billCountry: string
    shipStreet: string
    shipCity: string
    shipState: string
    shipPostalCode: string
    shipCountry: string
    totalItemDiscountAmount: Decimal
    discountPercentage: Decimal
    discountAmount: Decimal
    profitAmount: Decimal
    serviceChargeAmount: Decimal
    taxAmount: Decimal
    roundingAmount: Decimal
    subtotalAmount: Decimal
    totalAmount: Decimal
    paidAmount: Decimal
    changeAmount: Decimal
    status: string
    remark: string
    completedSessionId: number | null
    sessionId: number
    eodId: number
    salesQuotationId: number
    performedBy: string | null
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    tableId: number | null
    orderStatus: string | null
    _count: SalesCountAggregateOutputType | null
    _avg: SalesAvgAggregateOutputType | null
    _sum: SalesSumAggregateOutputType | null
    _min: SalesMinAggregateOutputType | null
    _max: SalesMaxAggregateOutputType | null
  }

  type GetSalesGroupByPayload<T extends SalesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SalesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SalesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SalesGroupByOutputType[P]>
            : GetScalarType<T[P], SalesGroupByOutputType[P]>
        }
      >
    >


  export type SalesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    outletId?: boolean
    businessDate?: boolean
    salesType?: boolean
    customerName?: boolean
    customerId?: boolean
    phoneNumber?: boolean
    billStreet?: boolean
    billCity?: boolean
    billState?: boolean
    billPostalCode?: boolean
    billCountry?: boolean
    shipStreet?: boolean
    shipCity?: boolean
    shipState?: boolean
    shipPostalCode?: boolean
    shipCountry?: boolean
    totalItemDiscountAmount?: boolean
    discountPercentage?: boolean
    discountAmount?: boolean
    profitAmount?: boolean
    serviceChargeAmount?: boolean
    taxAmount?: boolean
    roundingAmount?: boolean
    subtotalAmount?: boolean
    totalAmount?: boolean
    paidAmount?: boolean
    changeAmount?: boolean
    status?: boolean
    remark?: boolean
    completedSessionId?: boolean
    sessionId?: boolean
    eodId?: boolean
    salesQuotationId?: boolean
    performedBy?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    tableId?: boolean
    orderStatus?: boolean
    salesItems?: boolean | Sales$salesItemsArgs<ExtArgs>
    payments?: boolean | Sales$paymentsArgs<ExtArgs>
    registerLogs?: boolean | Sales$registerLogsArgs<ExtArgs>
    customer?: boolean | Sales$customerArgs<ExtArgs>
    table?: boolean | Sales$tableArgs<ExtArgs>
    _count?: boolean | SalesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sales"]>



  export type SalesSelectScalar = {
    id?: boolean
    outletId?: boolean
    businessDate?: boolean
    salesType?: boolean
    customerName?: boolean
    customerId?: boolean
    phoneNumber?: boolean
    billStreet?: boolean
    billCity?: boolean
    billState?: boolean
    billPostalCode?: boolean
    billCountry?: boolean
    shipStreet?: boolean
    shipCity?: boolean
    shipState?: boolean
    shipPostalCode?: boolean
    shipCountry?: boolean
    totalItemDiscountAmount?: boolean
    discountPercentage?: boolean
    discountAmount?: boolean
    profitAmount?: boolean
    serviceChargeAmount?: boolean
    taxAmount?: boolean
    roundingAmount?: boolean
    subtotalAmount?: boolean
    totalAmount?: boolean
    paidAmount?: boolean
    changeAmount?: boolean
    status?: boolean
    remark?: boolean
    completedSessionId?: boolean
    sessionId?: boolean
    eodId?: boolean
    salesQuotationId?: boolean
    performedBy?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    tableId?: boolean
    orderStatus?: boolean
  }

  export type SalesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "outletId" | "businessDate" | "salesType" | "customerName" | "customerId" | "phoneNumber" | "billStreet" | "billCity" | "billState" | "billPostalCode" | "billCountry" | "shipStreet" | "shipCity" | "shipState" | "shipPostalCode" | "shipCountry" | "totalItemDiscountAmount" | "discountPercentage" | "discountAmount" | "profitAmount" | "serviceChargeAmount" | "taxAmount" | "roundingAmount" | "subtotalAmount" | "totalAmount" | "paidAmount" | "changeAmount" | "status" | "remark" | "completedSessionId" | "sessionId" | "eodId" | "salesQuotationId" | "performedBy" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version" | "tableId" | "orderStatus", ExtArgs["result"]["sales"]>
  export type SalesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    salesItems?: boolean | Sales$salesItemsArgs<ExtArgs>
    payments?: boolean | Sales$paymentsArgs<ExtArgs>
    registerLogs?: boolean | Sales$registerLogsArgs<ExtArgs>
    customer?: boolean | Sales$customerArgs<ExtArgs>
    table?: boolean | Sales$tableArgs<ExtArgs>
    _count?: boolean | SalesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SalesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Sales"
    objects: {
      salesItems: Prisma.$SalesItemPayload<ExtArgs>[]
      payments: Prisma.$PaymentPayload<ExtArgs>[]
      registerLogs: Prisma.$RegisterLogPayload<ExtArgs>[]
      customer: Prisma.$CustomerPayload<ExtArgs> | null
      table: Prisma.$TablePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      outletId: number
      businessDate: Date
      salesType: string
      customerName: string | null
      customerId: number | null
      phoneNumber: string | null
      billStreet: string
      billCity: string
      billState: string
      billPostalCode: string
      billCountry: string
      shipStreet: string
      shipCity: string
      shipState: string
      shipPostalCode: string
      shipCountry: string
      totalItemDiscountAmount: Prisma.Decimal
      discountPercentage: Prisma.Decimal
      discountAmount: Prisma.Decimal
      profitAmount: Prisma.Decimal
      serviceChargeAmount: Prisma.Decimal
      taxAmount: Prisma.Decimal
      roundingAmount: Prisma.Decimal
      subtotalAmount: Prisma.Decimal
      totalAmount: Prisma.Decimal
      paidAmount: Prisma.Decimal
      changeAmount: Prisma.Decimal
      status: string
      remark: string
      completedSessionId: number | null
      sessionId: number
      eodId: number
      salesQuotationId: number
      performedBy: string | null
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
      tableId: number | null
      orderStatus: string | null
    }, ExtArgs["result"]["sales"]>
    composites: {}
  }

  type SalesGetPayload<S extends boolean | null | undefined | SalesDefaultArgs> = $Result.GetResult<Prisma.$SalesPayload, S>

  type SalesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SalesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SalesCountAggregateInputType | true
    }

  export interface SalesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Sales'], meta: { name: 'Sales' } }
    /**
     * Find zero or one Sales that matches the filter.
     * @param {SalesFindUniqueArgs} args - Arguments to find a Sales
     * @example
     * // Get one Sales
     * const sales = await prisma.sales.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SalesFindUniqueArgs>(args: SelectSubset<T, SalesFindUniqueArgs<ExtArgs>>): Prisma__SalesClient<$Result.GetResult<Prisma.$SalesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sales that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SalesFindUniqueOrThrowArgs} args - Arguments to find a Sales
     * @example
     * // Get one Sales
     * const sales = await prisma.sales.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SalesFindUniqueOrThrowArgs>(args: SelectSubset<T, SalesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SalesClient<$Result.GetResult<Prisma.$SalesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sales that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesFindFirstArgs} args - Arguments to find a Sales
     * @example
     * // Get one Sales
     * const sales = await prisma.sales.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SalesFindFirstArgs>(args?: SelectSubset<T, SalesFindFirstArgs<ExtArgs>>): Prisma__SalesClient<$Result.GetResult<Prisma.$SalesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sales that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesFindFirstOrThrowArgs} args - Arguments to find a Sales
     * @example
     * // Get one Sales
     * const sales = await prisma.sales.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SalesFindFirstOrThrowArgs>(args?: SelectSubset<T, SalesFindFirstOrThrowArgs<ExtArgs>>): Prisma__SalesClient<$Result.GetResult<Prisma.$SalesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sales that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sales
     * const sales = await prisma.sales.findMany()
     * 
     * // Get first 10 Sales
     * const sales = await prisma.sales.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const salesWithIdOnly = await prisma.sales.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SalesFindManyArgs>(args?: SelectSubset<T, SalesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sales.
     * @param {SalesCreateArgs} args - Arguments to create a Sales.
     * @example
     * // Create one Sales
     * const Sales = await prisma.sales.create({
     *   data: {
     *     // ... data to create a Sales
     *   }
     * })
     * 
     */
    create<T extends SalesCreateArgs>(args: SelectSubset<T, SalesCreateArgs<ExtArgs>>): Prisma__SalesClient<$Result.GetResult<Prisma.$SalesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sales.
     * @param {SalesCreateManyArgs} args - Arguments to create many Sales.
     * @example
     * // Create many Sales
     * const sales = await prisma.sales.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SalesCreateManyArgs>(args?: SelectSubset<T, SalesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sales.
     * @param {SalesDeleteArgs} args - Arguments to delete one Sales.
     * @example
     * // Delete one Sales
     * const Sales = await prisma.sales.delete({
     *   where: {
     *     // ... filter to delete one Sales
     *   }
     * })
     * 
     */
    delete<T extends SalesDeleteArgs>(args: SelectSubset<T, SalesDeleteArgs<ExtArgs>>): Prisma__SalesClient<$Result.GetResult<Prisma.$SalesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sales.
     * @param {SalesUpdateArgs} args - Arguments to update one Sales.
     * @example
     * // Update one Sales
     * const sales = await prisma.sales.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SalesUpdateArgs>(args: SelectSubset<T, SalesUpdateArgs<ExtArgs>>): Prisma__SalesClient<$Result.GetResult<Prisma.$SalesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sales.
     * @param {SalesDeleteManyArgs} args - Arguments to filter Sales to delete.
     * @example
     * // Delete a few Sales
     * const { count } = await prisma.sales.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SalesDeleteManyArgs>(args?: SelectSubset<T, SalesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sales.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sales
     * const sales = await prisma.sales.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SalesUpdateManyArgs>(args: SelectSubset<T, SalesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sales.
     * @param {SalesUpsertArgs} args - Arguments to update or create a Sales.
     * @example
     * // Update or create a Sales
     * const sales = await prisma.sales.upsert({
     *   create: {
     *     // ... data to create a Sales
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sales we want to update
     *   }
     * })
     */
    upsert<T extends SalesUpsertArgs>(args: SelectSubset<T, SalesUpsertArgs<ExtArgs>>): Prisma__SalesClient<$Result.GetResult<Prisma.$SalesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sales.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesCountArgs} args - Arguments to filter Sales to count.
     * @example
     * // Count the number of Sales
     * const count = await prisma.sales.count({
     *   where: {
     *     // ... the filter for the Sales we want to count
     *   }
     * })
    **/
    count<T extends SalesCountArgs>(
      args?: Subset<T, SalesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SalesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sales.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SalesAggregateArgs>(args: Subset<T, SalesAggregateArgs>): Prisma.PrismaPromise<GetSalesAggregateType<T>>

    /**
     * Group by Sales.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SalesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SalesGroupByArgs['orderBy'] }
        : { orderBy?: SalesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SalesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSalesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Sales model
   */
  readonly fields: SalesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Sales.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SalesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    salesItems<T extends Sales$salesItemsArgs<ExtArgs> = {}>(args?: Subset<T, Sales$salesItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalesItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    payments<T extends Sales$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, Sales$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    registerLogs<T extends Sales$registerLogsArgs<ExtArgs> = {}>(args?: Subset<T, Sales$registerLogsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegisterLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    customer<T extends Sales$customerArgs<ExtArgs> = {}>(args?: Subset<T, Sales$customerArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    table<T extends Sales$tableArgs<ExtArgs> = {}>(args?: Subset<T, Sales$tableArgs<ExtArgs>>): Prisma__TableClient<$Result.GetResult<Prisma.$TablePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Sales model
   */
  interface SalesFieldRefs {
    readonly id: FieldRef<"Sales", 'Int'>
    readonly outletId: FieldRef<"Sales", 'Int'>
    readonly businessDate: FieldRef<"Sales", 'DateTime'>
    readonly salesType: FieldRef<"Sales", 'String'>
    readonly customerName: FieldRef<"Sales", 'String'>
    readonly customerId: FieldRef<"Sales", 'Int'>
    readonly phoneNumber: FieldRef<"Sales", 'String'>
    readonly billStreet: FieldRef<"Sales", 'String'>
    readonly billCity: FieldRef<"Sales", 'String'>
    readonly billState: FieldRef<"Sales", 'String'>
    readonly billPostalCode: FieldRef<"Sales", 'String'>
    readonly billCountry: FieldRef<"Sales", 'String'>
    readonly shipStreet: FieldRef<"Sales", 'String'>
    readonly shipCity: FieldRef<"Sales", 'String'>
    readonly shipState: FieldRef<"Sales", 'String'>
    readonly shipPostalCode: FieldRef<"Sales", 'String'>
    readonly shipCountry: FieldRef<"Sales", 'String'>
    readonly totalItemDiscountAmount: FieldRef<"Sales", 'Decimal'>
    readonly discountPercentage: FieldRef<"Sales", 'Decimal'>
    readonly discountAmount: FieldRef<"Sales", 'Decimal'>
    readonly profitAmount: FieldRef<"Sales", 'Decimal'>
    readonly serviceChargeAmount: FieldRef<"Sales", 'Decimal'>
    readonly taxAmount: FieldRef<"Sales", 'Decimal'>
    readonly roundingAmount: FieldRef<"Sales", 'Decimal'>
    readonly subtotalAmount: FieldRef<"Sales", 'Decimal'>
    readonly totalAmount: FieldRef<"Sales", 'Decimal'>
    readonly paidAmount: FieldRef<"Sales", 'Decimal'>
    readonly changeAmount: FieldRef<"Sales", 'Decimal'>
    readonly status: FieldRef<"Sales", 'String'>
    readonly remark: FieldRef<"Sales", 'String'>
    readonly completedSessionId: FieldRef<"Sales", 'Int'>
    readonly sessionId: FieldRef<"Sales", 'Int'>
    readonly eodId: FieldRef<"Sales", 'Int'>
    readonly salesQuotationId: FieldRef<"Sales", 'Int'>
    readonly performedBy: FieldRef<"Sales", 'String'>
    readonly deleted: FieldRef<"Sales", 'Boolean'>
    readonly deletedAt: FieldRef<"Sales", 'DateTime'>
    readonly createdAt: FieldRef<"Sales", 'DateTime'>
    readonly updatedAt: FieldRef<"Sales", 'DateTime'>
    readonly version: FieldRef<"Sales", 'Int'>
    readonly tableId: FieldRef<"Sales", 'Int'>
    readonly orderStatus: FieldRef<"Sales", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Sales findUnique
   */
  export type SalesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sales
     */
    select?: SalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sales
     */
    omit?: SalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesInclude<ExtArgs> | null
    /**
     * Filter, which Sales to fetch.
     */
    where: SalesWhereUniqueInput
  }

  /**
   * Sales findUniqueOrThrow
   */
  export type SalesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sales
     */
    select?: SalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sales
     */
    omit?: SalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesInclude<ExtArgs> | null
    /**
     * Filter, which Sales to fetch.
     */
    where: SalesWhereUniqueInput
  }

  /**
   * Sales findFirst
   */
  export type SalesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sales
     */
    select?: SalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sales
     */
    omit?: SalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesInclude<ExtArgs> | null
    /**
     * Filter, which Sales to fetch.
     */
    where?: SalesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sales to fetch.
     */
    orderBy?: SalesOrderByWithRelationInput | SalesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sales.
     */
    cursor?: SalesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sales.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sales.
     */
    distinct?: SalesScalarFieldEnum | SalesScalarFieldEnum[]
  }

  /**
   * Sales findFirstOrThrow
   */
  export type SalesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sales
     */
    select?: SalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sales
     */
    omit?: SalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesInclude<ExtArgs> | null
    /**
     * Filter, which Sales to fetch.
     */
    where?: SalesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sales to fetch.
     */
    orderBy?: SalesOrderByWithRelationInput | SalesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sales.
     */
    cursor?: SalesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sales.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sales.
     */
    distinct?: SalesScalarFieldEnum | SalesScalarFieldEnum[]
  }

  /**
   * Sales findMany
   */
  export type SalesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sales
     */
    select?: SalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sales
     */
    omit?: SalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesInclude<ExtArgs> | null
    /**
     * Filter, which Sales to fetch.
     */
    where?: SalesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sales to fetch.
     */
    orderBy?: SalesOrderByWithRelationInput | SalesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sales.
     */
    cursor?: SalesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sales.
     */
    skip?: number
    distinct?: SalesScalarFieldEnum | SalesScalarFieldEnum[]
  }

  /**
   * Sales create
   */
  export type SalesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sales
     */
    select?: SalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sales
     */
    omit?: SalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesInclude<ExtArgs> | null
    /**
     * The data needed to create a Sales.
     */
    data: XOR<SalesCreateInput, SalesUncheckedCreateInput>
  }

  /**
   * Sales createMany
   */
  export type SalesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sales.
     */
    data: SalesCreateManyInput | SalesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Sales update
   */
  export type SalesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sales
     */
    select?: SalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sales
     */
    omit?: SalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesInclude<ExtArgs> | null
    /**
     * The data needed to update a Sales.
     */
    data: XOR<SalesUpdateInput, SalesUncheckedUpdateInput>
    /**
     * Choose, which Sales to update.
     */
    where: SalesWhereUniqueInput
  }

  /**
   * Sales updateMany
   */
  export type SalesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sales.
     */
    data: XOR<SalesUpdateManyMutationInput, SalesUncheckedUpdateManyInput>
    /**
     * Filter which Sales to update
     */
    where?: SalesWhereInput
    /**
     * Limit how many Sales to update.
     */
    limit?: number
  }

  /**
   * Sales upsert
   */
  export type SalesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sales
     */
    select?: SalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sales
     */
    omit?: SalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesInclude<ExtArgs> | null
    /**
     * The filter to search for the Sales to update in case it exists.
     */
    where: SalesWhereUniqueInput
    /**
     * In case the Sales found by the `where` argument doesn't exist, create a new Sales with this data.
     */
    create: XOR<SalesCreateInput, SalesUncheckedCreateInput>
    /**
     * In case the Sales was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SalesUpdateInput, SalesUncheckedUpdateInput>
  }

  /**
   * Sales delete
   */
  export type SalesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sales
     */
    select?: SalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sales
     */
    omit?: SalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesInclude<ExtArgs> | null
    /**
     * Filter which Sales to delete.
     */
    where: SalesWhereUniqueInput
  }

  /**
   * Sales deleteMany
   */
  export type SalesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sales to delete
     */
    where?: SalesWhereInput
    /**
     * Limit how many Sales to delete.
     */
    limit?: number
  }

  /**
   * Sales.salesItems
   */
  export type Sales$salesItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItem
     */
    select?: SalesItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItem
     */
    omit?: SalesItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemInclude<ExtArgs> | null
    where?: SalesItemWhereInput
    orderBy?: SalesItemOrderByWithRelationInput | SalesItemOrderByWithRelationInput[]
    cursor?: SalesItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SalesItemScalarFieldEnum | SalesItemScalarFieldEnum[]
  }

  /**
   * Sales.payments
   */
  export type Sales$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Sales.registerLogs
   */
  export type Sales$registerLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegisterLog
     */
    select?: RegisterLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegisterLog
     */
    omit?: RegisterLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegisterLogInclude<ExtArgs> | null
    where?: RegisterLogWhereInput
    orderBy?: RegisterLogOrderByWithRelationInput | RegisterLogOrderByWithRelationInput[]
    cursor?: RegisterLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RegisterLogScalarFieldEnum | RegisterLogScalarFieldEnum[]
  }

  /**
   * Sales.customer
   */
  export type Sales$customerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
  }

  /**
   * Sales.table
   */
  export type Sales$tableArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Table
     */
    select?: TableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Table
     */
    omit?: TableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TableInclude<ExtArgs> | null
    where?: TableWhereInput
  }

  /**
   * Sales without action
   */
  export type SalesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sales
     */
    select?: SalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sales
     */
    omit?: SalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesInclude<ExtArgs> | null
  }


  /**
   * Model SalesItem
   */

  export type AggregateSalesItem = {
    _count: SalesItemCountAggregateOutputType | null
    _avg: SalesItemAvgAggregateOutputType | null
    _sum: SalesItemSumAggregateOutputType | null
    _min: SalesItemMinAggregateOutputType | null
    _max: SalesItemMaxAggregateOutputType | null
  }

  export type SalesItemAvgAggregateOutputType = {
    id: number | null
    salesId: number | null
    itemId: number | null
    quantity: Decimal | null
    cost: Decimal | null
    price: Decimal | null
    priceBeforeTax: Decimal | null
    profit: Decimal | null
    discountPercentage: Decimal | null
    discountAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    subtotalAmount: Decimal | null
    version: number | null
    estimatedPrepTime: number | null
  }

  export type SalesItemSumAggregateOutputType = {
    id: number | null
    salesId: number | null
    itemId: number | null
    quantity: Decimal | null
    cost: Decimal | null
    price: Decimal | null
    priceBeforeTax: Decimal | null
    profit: Decimal | null
    discountPercentage: Decimal | null
    discountAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    subtotalAmount: Decimal | null
    version: number | null
    estimatedPrepTime: number | null
  }

  export type SalesItemMinAggregateOutputType = {
    id: number | null
    salesId: number | null
    itemId: number | null
    itemName: string | null
    itemCode: string | null
    itemBrand: string | null
    itemModel: string | null
    quantity: Decimal | null
    cost: Decimal | null
    price: Decimal | null
    priceBeforeTax: Decimal | null
    profit: Decimal | null
    discountPercentage: Decimal | null
    discountAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    subtotalAmount: Decimal | null
    remark: string | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    specialInstructions: string | null
    itemStatus: string | null
    priority: string | null
    estimatedPrepTime: number | null
  }

  export type SalesItemMaxAggregateOutputType = {
    id: number | null
    salesId: number | null
    itemId: number | null
    itemName: string | null
    itemCode: string | null
    itemBrand: string | null
    itemModel: string | null
    quantity: Decimal | null
    cost: Decimal | null
    price: Decimal | null
    priceBeforeTax: Decimal | null
    profit: Decimal | null
    discountPercentage: Decimal | null
    discountAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    subtotalAmount: Decimal | null
    remark: string | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    specialInstructions: string | null
    itemStatus: string | null
    priority: string | null
    estimatedPrepTime: number | null
  }

  export type SalesItemCountAggregateOutputType = {
    id: number
    salesId: number
    itemId: number
    itemName: number
    itemCode: number
    itemBrand: number
    itemModel: number
    quantity: number
    cost: number
    price: number
    priceBeforeTax: number
    profit: number
    discountPercentage: number
    discountAmount: number
    serviceChargeAmount: number
    taxAmount: number
    subtotalAmount: number
    remark: number
    deleted: number
    createdAt: number
    updatedAt: number
    version: number
    specialInstructions: number
    itemStatus: number
    priority: number
    estimatedPrepTime: number
    _all: number
  }


  export type SalesItemAvgAggregateInputType = {
    id?: true
    salesId?: true
    itemId?: true
    quantity?: true
    cost?: true
    price?: true
    priceBeforeTax?: true
    profit?: true
    discountPercentage?: true
    discountAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    subtotalAmount?: true
    version?: true
    estimatedPrepTime?: true
  }

  export type SalesItemSumAggregateInputType = {
    id?: true
    salesId?: true
    itemId?: true
    quantity?: true
    cost?: true
    price?: true
    priceBeforeTax?: true
    profit?: true
    discountPercentage?: true
    discountAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    subtotalAmount?: true
    version?: true
    estimatedPrepTime?: true
  }

  export type SalesItemMinAggregateInputType = {
    id?: true
    salesId?: true
    itemId?: true
    itemName?: true
    itemCode?: true
    itemBrand?: true
    itemModel?: true
    quantity?: true
    cost?: true
    price?: true
    priceBeforeTax?: true
    profit?: true
    discountPercentage?: true
    discountAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    subtotalAmount?: true
    remark?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    specialInstructions?: true
    itemStatus?: true
    priority?: true
    estimatedPrepTime?: true
  }

  export type SalesItemMaxAggregateInputType = {
    id?: true
    salesId?: true
    itemId?: true
    itemName?: true
    itemCode?: true
    itemBrand?: true
    itemModel?: true
    quantity?: true
    cost?: true
    price?: true
    priceBeforeTax?: true
    profit?: true
    discountPercentage?: true
    discountAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    subtotalAmount?: true
    remark?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    specialInstructions?: true
    itemStatus?: true
    priority?: true
    estimatedPrepTime?: true
  }

  export type SalesItemCountAggregateInputType = {
    id?: true
    salesId?: true
    itemId?: true
    itemName?: true
    itemCode?: true
    itemBrand?: true
    itemModel?: true
    quantity?: true
    cost?: true
    price?: true
    priceBeforeTax?: true
    profit?: true
    discountPercentage?: true
    discountAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    subtotalAmount?: true
    remark?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    specialInstructions?: true
    itemStatus?: true
    priority?: true
    estimatedPrepTime?: true
    _all?: true
  }

  export type SalesItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SalesItem to aggregate.
     */
    where?: SalesItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalesItems to fetch.
     */
    orderBy?: SalesItemOrderByWithRelationInput | SalesItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SalesItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalesItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalesItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SalesItems
    **/
    _count?: true | SalesItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SalesItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SalesItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SalesItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SalesItemMaxAggregateInputType
  }

  export type GetSalesItemAggregateType<T extends SalesItemAggregateArgs> = {
        [P in keyof T & keyof AggregateSalesItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSalesItem[P]>
      : GetScalarType<T[P], AggregateSalesItem[P]>
  }




  export type SalesItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalesItemWhereInput
    orderBy?: SalesItemOrderByWithAggregationInput | SalesItemOrderByWithAggregationInput[]
    by: SalesItemScalarFieldEnum[] | SalesItemScalarFieldEnum
    having?: SalesItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SalesItemCountAggregateInputType | true
    _avg?: SalesItemAvgAggregateInputType
    _sum?: SalesItemSumAggregateInputType
    _min?: SalesItemMinAggregateInputType
    _max?: SalesItemMaxAggregateInputType
  }

  export type SalesItemGroupByOutputType = {
    id: number
    salesId: number
    itemId: number
    itemName: string
    itemCode: string
    itemBrand: string
    itemModel: string
    quantity: Decimal
    cost: Decimal
    price: Decimal
    priceBeforeTax: Decimal
    profit: Decimal
    discountPercentage: Decimal
    discountAmount: Decimal
    serviceChargeAmount: Decimal
    taxAmount: Decimal
    subtotalAmount: Decimal
    remark: string
    deleted: boolean
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    specialInstructions: string | null
    itemStatus: string | null
    priority: string | null
    estimatedPrepTime: number | null
    _count: SalesItemCountAggregateOutputType | null
    _avg: SalesItemAvgAggregateOutputType | null
    _sum: SalesItemSumAggregateOutputType | null
    _min: SalesItemMinAggregateOutputType | null
    _max: SalesItemMaxAggregateOutputType | null
  }

  type GetSalesItemGroupByPayload<T extends SalesItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SalesItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SalesItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SalesItemGroupByOutputType[P]>
            : GetScalarType<T[P], SalesItemGroupByOutputType[P]>
        }
      >
    >


  export type SalesItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    salesId?: boolean
    itemId?: boolean
    itemName?: boolean
    itemCode?: boolean
    itemBrand?: boolean
    itemModel?: boolean
    quantity?: boolean
    cost?: boolean
    price?: boolean
    priceBeforeTax?: boolean
    profit?: boolean
    discountPercentage?: boolean
    discountAmount?: boolean
    serviceChargeAmount?: boolean
    taxAmount?: boolean
    subtotalAmount?: boolean
    remark?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    specialInstructions?: boolean
    itemStatus?: boolean
    priority?: boolean
    estimatedPrepTime?: boolean
    sales?: boolean | SalesDefaultArgs<ExtArgs>
    selectedModifiers?: boolean | SalesItem$selectedModifiersArgs<ExtArgs>
    orderRouting?: boolean | SalesItem$orderRoutingArgs<ExtArgs>
    _count?: boolean | SalesItemCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["salesItem"]>



  export type SalesItemSelectScalar = {
    id?: boolean
    salesId?: boolean
    itemId?: boolean
    itemName?: boolean
    itemCode?: boolean
    itemBrand?: boolean
    itemModel?: boolean
    quantity?: boolean
    cost?: boolean
    price?: boolean
    priceBeforeTax?: boolean
    profit?: boolean
    discountPercentage?: boolean
    discountAmount?: boolean
    serviceChargeAmount?: boolean
    taxAmount?: boolean
    subtotalAmount?: boolean
    remark?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    specialInstructions?: boolean
    itemStatus?: boolean
    priority?: boolean
    estimatedPrepTime?: boolean
  }

  export type SalesItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "salesId" | "itemId" | "itemName" | "itemCode" | "itemBrand" | "itemModel" | "quantity" | "cost" | "price" | "priceBeforeTax" | "profit" | "discountPercentage" | "discountAmount" | "serviceChargeAmount" | "taxAmount" | "subtotalAmount" | "remark" | "deleted" | "createdAt" | "updatedAt" | "version" | "specialInstructions" | "itemStatus" | "priority" | "estimatedPrepTime", ExtArgs["result"]["salesItem"]>
  export type SalesItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sales?: boolean | SalesDefaultArgs<ExtArgs>
    selectedModifiers?: boolean | SalesItem$selectedModifiersArgs<ExtArgs>
    orderRouting?: boolean | SalesItem$orderRoutingArgs<ExtArgs>
    _count?: boolean | SalesItemCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SalesItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SalesItem"
    objects: {
      sales: Prisma.$SalesPayload<ExtArgs>
      selectedModifiers: Prisma.$SalesItemModifierPayload<ExtArgs>[]
      orderRouting: Prisma.$OrderRoutingPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      salesId: number
      itemId: number
      itemName: string
      itemCode: string
      itemBrand: string
      itemModel: string
      quantity: Prisma.Decimal
      cost: Prisma.Decimal
      price: Prisma.Decimal
      priceBeforeTax: Prisma.Decimal
      profit: Prisma.Decimal
      discountPercentage: Prisma.Decimal
      discountAmount: Prisma.Decimal
      serviceChargeAmount: Prisma.Decimal
      taxAmount: Prisma.Decimal
      subtotalAmount: Prisma.Decimal
      remark: string
      deleted: boolean
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
      specialInstructions: string | null
      itemStatus: string | null
      priority: string | null
      estimatedPrepTime: number | null
    }, ExtArgs["result"]["salesItem"]>
    composites: {}
  }

  type SalesItemGetPayload<S extends boolean | null | undefined | SalesItemDefaultArgs> = $Result.GetResult<Prisma.$SalesItemPayload, S>

  type SalesItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SalesItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SalesItemCountAggregateInputType | true
    }

  export interface SalesItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SalesItem'], meta: { name: 'SalesItem' } }
    /**
     * Find zero or one SalesItem that matches the filter.
     * @param {SalesItemFindUniqueArgs} args - Arguments to find a SalesItem
     * @example
     * // Get one SalesItem
     * const salesItem = await prisma.salesItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SalesItemFindUniqueArgs>(args: SelectSubset<T, SalesItemFindUniqueArgs<ExtArgs>>): Prisma__SalesItemClient<$Result.GetResult<Prisma.$SalesItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SalesItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SalesItemFindUniqueOrThrowArgs} args - Arguments to find a SalesItem
     * @example
     * // Get one SalesItem
     * const salesItem = await prisma.salesItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SalesItemFindUniqueOrThrowArgs>(args: SelectSubset<T, SalesItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SalesItemClient<$Result.GetResult<Prisma.$SalesItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SalesItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesItemFindFirstArgs} args - Arguments to find a SalesItem
     * @example
     * // Get one SalesItem
     * const salesItem = await prisma.salesItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SalesItemFindFirstArgs>(args?: SelectSubset<T, SalesItemFindFirstArgs<ExtArgs>>): Prisma__SalesItemClient<$Result.GetResult<Prisma.$SalesItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SalesItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesItemFindFirstOrThrowArgs} args - Arguments to find a SalesItem
     * @example
     * // Get one SalesItem
     * const salesItem = await prisma.salesItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SalesItemFindFirstOrThrowArgs>(args?: SelectSubset<T, SalesItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__SalesItemClient<$Result.GetResult<Prisma.$SalesItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SalesItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SalesItems
     * const salesItems = await prisma.salesItem.findMany()
     * 
     * // Get first 10 SalesItems
     * const salesItems = await prisma.salesItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const salesItemWithIdOnly = await prisma.salesItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SalesItemFindManyArgs>(args?: SelectSubset<T, SalesItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalesItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SalesItem.
     * @param {SalesItemCreateArgs} args - Arguments to create a SalesItem.
     * @example
     * // Create one SalesItem
     * const SalesItem = await prisma.salesItem.create({
     *   data: {
     *     // ... data to create a SalesItem
     *   }
     * })
     * 
     */
    create<T extends SalesItemCreateArgs>(args: SelectSubset<T, SalesItemCreateArgs<ExtArgs>>): Prisma__SalesItemClient<$Result.GetResult<Prisma.$SalesItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SalesItems.
     * @param {SalesItemCreateManyArgs} args - Arguments to create many SalesItems.
     * @example
     * // Create many SalesItems
     * const salesItem = await prisma.salesItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SalesItemCreateManyArgs>(args?: SelectSubset<T, SalesItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SalesItem.
     * @param {SalesItemDeleteArgs} args - Arguments to delete one SalesItem.
     * @example
     * // Delete one SalesItem
     * const SalesItem = await prisma.salesItem.delete({
     *   where: {
     *     // ... filter to delete one SalesItem
     *   }
     * })
     * 
     */
    delete<T extends SalesItemDeleteArgs>(args: SelectSubset<T, SalesItemDeleteArgs<ExtArgs>>): Prisma__SalesItemClient<$Result.GetResult<Prisma.$SalesItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SalesItem.
     * @param {SalesItemUpdateArgs} args - Arguments to update one SalesItem.
     * @example
     * // Update one SalesItem
     * const salesItem = await prisma.salesItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SalesItemUpdateArgs>(args: SelectSubset<T, SalesItemUpdateArgs<ExtArgs>>): Prisma__SalesItemClient<$Result.GetResult<Prisma.$SalesItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SalesItems.
     * @param {SalesItemDeleteManyArgs} args - Arguments to filter SalesItems to delete.
     * @example
     * // Delete a few SalesItems
     * const { count } = await prisma.salesItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SalesItemDeleteManyArgs>(args?: SelectSubset<T, SalesItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SalesItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SalesItems
     * const salesItem = await prisma.salesItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SalesItemUpdateManyArgs>(args: SelectSubset<T, SalesItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SalesItem.
     * @param {SalesItemUpsertArgs} args - Arguments to update or create a SalesItem.
     * @example
     * // Update or create a SalesItem
     * const salesItem = await prisma.salesItem.upsert({
     *   create: {
     *     // ... data to create a SalesItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SalesItem we want to update
     *   }
     * })
     */
    upsert<T extends SalesItemUpsertArgs>(args: SelectSubset<T, SalesItemUpsertArgs<ExtArgs>>): Prisma__SalesItemClient<$Result.GetResult<Prisma.$SalesItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SalesItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesItemCountArgs} args - Arguments to filter SalesItems to count.
     * @example
     * // Count the number of SalesItems
     * const count = await prisma.salesItem.count({
     *   where: {
     *     // ... the filter for the SalesItems we want to count
     *   }
     * })
    **/
    count<T extends SalesItemCountArgs>(
      args?: Subset<T, SalesItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SalesItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SalesItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SalesItemAggregateArgs>(args: Subset<T, SalesItemAggregateArgs>): Prisma.PrismaPromise<GetSalesItemAggregateType<T>>

    /**
     * Group by SalesItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SalesItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SalesItemGroupByArgs['orderBy'] }
        : { orderBy?: SalesItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SalesItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSalesItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SalesItem model
   */
  readonly fields: SalesItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SalesItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SalesItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sales<T extends SalesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SalesDefaultArgs<ExtArgs>>): Prisma__SalesClient<$Result.GetResult<Prisma.$SalesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    selectedModifiers<T extends SalesItem$selectedModifiersArgs<ExtArgs> = {}>(args?: Subset<T, SalesItem$selectedModifiersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalesItemModifierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orderRouting<T extends SalesItem$orderRoutingArgs<ExtArgs> = {}>(args?: Subset<T, SalesItem$orderRoutingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderRoutingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SalesItem model
   */
  interface SalesItemFieldRefs {
    readonly id: FieldRef<"SalesItem", 'Int'>
    readonly salesId: FieldRef<"SalesItem", 'Int'>
    readonly itemId: FieldRef<"SalesItem", 'Int'>
    readonly itemName: FieldRef<"SalesItem", 'String'>
    readonly itemCode: FieldRef<"SalesItem", 'String'>
    readonly itemBrand: FieldRef<"SalesItem", 'String'>
    readonly itemModel: FieldRef<"SalesItem", 'String'>
    readonly quantity: FieldRef<"SalesItem", 'Decimal'>
    readonly cost: FieldRef<"SalesItem", 'Decimal'>
    readonly price: FieldRef<"SalesItem", 'Decimal'>
    readonly priceBeforeTax: FieldRef<"SalesItem", 'Decimal'>
    readonly profit: FieldRef<"SalesItem", 'Decimal'>
    readonly discountPercentage: FieldRef<"SalesItem", 'Decimal'>
    readonly discountAmount: FieldRef<"SalesItem", 'Decimal'>
    readonly serviceChargeAmount: FieldRef<"SalesItem", 'Decimal'>
    readonly taxAmount: FieldRef<"SalesItem", 'Decimal'>
    readonly subtotalAmount: FieldRef<"SalesItem", 'Decimal'>
    readonly remark: FieldRef<"SalesItem", 'String'>
    readonly deleted: FieldRef<"SalesItem", 'Boolean'>
    readonly createdAt: FieldRef<"SalesItem", 'DateTime'>
    readonly updatedAt: FieldRef<"SalesItem", 'DateTime'>
    readonly version: FieldRef<"SalesItem", 'Int'>
    readonly specialInstructions: FieldRef<"SalesItem", 'String'>
    readonly itemStatus: FieldRef<"SalesItem", 'String'>
    readonly priority: FieldRef<"SalesItem", 'String'>
    readonly estimatedPrepTime: FieldRef<"SalesItem", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * SalesItem findUnique
   */
  export type SalesItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItem
     */
    select?: SalesItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItem
     */
    omit?: SalesItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemInclude<ExtArgs> | null
    /**
     * Filter, which SalesItem to fetch.
     */
    where: SalesItemWhereUniqueInput
  }

  /**
   * SalesItem findUniqueOrThrow
   */
  export type SalesItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItem
     */
    select?: SalesItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItem
     */
    omit?: SalesItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemInclude<ExtArgs> | null
    /**
     * Filter, which SalesItem to fetch.
     */
    where: SalesItemWhereUniqueInput
  }

  /**
   * SalesItem findFirst
   */
  export type SalesItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItem
     */
    select?: SalesItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItem
     */
    omit?: SalesItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemInclude<ExtArgs> | null
    /**
     * Filter, which SalesItem to fetch.
     */
    where?: SalesItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalesItems to fetch.
     */
    orderBy?: SalesItemOrderByWithRelationInput | SalesItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SalesItems.
     */
    cursor?: SalesItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalesItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalesItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SalesItems.
     */
    distinct?: SalesItemScalarFieldEnum | SalesItemScalarFieldEnum[]
  }

  /**
   * SalesItem findFirstOrThrow
   */
  export type SalesItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItem
     */
    select?: SalesItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItem
     */
    omit?: SalesItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemInclude<ExtArgs> | null
    /**
     * Filter, which SalesItem to fetch.
     */
    where?: SalesItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalesItems to fetch.
     */
    orderBy?: SalesItemOrderByWithRelationInput | SalesItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SalesItems.
     */
    cursor?: SalesItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalesItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalesItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SalesItems.
     */
    distinct?: SalesItemScalarFieldEnum | SalesItemScalarFieldEnum[]
  }

  /**
   * SalesItem findMany
   */
  export type SalesItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItem
     */
    select?: SalesItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItem
     */
    omit?: SalesItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemInclude<ExtArgs> | null
    /**
     * Filter, which SalesItems to fetch.
     */
    where?: SalesItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalesItems to fetch.
     */
    orderBy?: SalesItemOrderByWithRelationInput | SalesItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SalesItems.
     */
    cursor?: SalesItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalesItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalesItems.
     */
    skip?: number
    distinct?: SalesItemScalarFieldEnum | SalesItemScalarFieldEnum[]
  }

  /**
   * SalesItem create
   */
  export type SalesItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItem
     */
    select?: SalesItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItem
     */
    omit?: SalesItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemInclude<ExtArgs> | null
    /**
     * The data needed to create a SalesItem.
     */
    data: XOR<SalesItemCreateInput, SalesItemUncheckedCreateInput>
  }

  /**
   * SalesItem createMany
   */
  export type SalesItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SalesItems.
     */
    data: SalesItemCreateManyInput | SalesItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SalesItem update
   */
  export type SalesItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItem
     */
    select?: SalesItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItem
     */
    omit?: SalesItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemInclude<ExtArgs> | null
    /**
     * The data needed to update a SalesItem.
     */
    data: XOR<SalesItemUpdateInput, SalesItemUncheckedUpdateInput>
    /**
     * Choose, which SalesItem to update.
     */
    where: SalesItemWhereUniqueInput
  }

  /**
   * SalesItem updateMany
   */
  export type SalesItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SalesItems.
     */
    data: XOR<SalesItemUpdateManyMutationInput, SalesItemUncheckedUpdateManyInput>
    /**
     * Filter which SalesItems to update
     */
    where?: SalesItemWhereInput
    /**
     * Limit how many SalesItems to update.
     */
    limit?: number
  }

  /**
   * SalesItem upsert
   */
  export type SalesItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItem
     */
    select?: SalesItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItem
     */
    omit?: SalesItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemInclude<ExtArgs> | null
    /**
     * The filter to search for the SalesItem to update in case it exists.
     */
    where: SalesItemWhereUniqueInput
    /**
     * In case the SalesItem found by the `where` argument doesn't exist, create a new SalesItem with this data.
     */
    create: XOR<SalesItemCreateInput, SalesItemUncheckedCreateInput>
    /**
     * In case the SalesItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SalesItemUpdateInput, SalesItemUncheckedUpdateInput>
  }

  /**
   * SalesItem delete
   */
  export type SalesItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItem
     */
    select?: SalesItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItem
     */
    omit?: SalesItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemInclude<ExtArgs> | null
    /**
     * Filter which SalesItem to delete.
     */
    where: SalesItemWhereUniqueInput
  }

  /**
   * SalesItem deleteMany
   */
  export type SalesItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SalesItems to delete
     */
    where?: SalesItemWhereInput
    /**
     * Limit how many SalesItems to delete.
     */
    limit?: number
  }

  /**
   * SalesItem.selectedModifiers
   */
  export type SalesItem$selectedModifiersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItemModifier
     */
    select?: SalesItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItemModifier
     */
    omit?: SalesItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemModifierInclude<ExtArgs> | null
    where?: SalesItemModifierWhereInput
    orderBy?: SalesItemModifierOrderByWithRelationInput | SalesItemModifierOrderByWithRelationInput[]
    cursor?: SalesItemModifierWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SalesItemModifierScalarFieldEnum | SalesItemModifierScalarFieldEnum[]
  }

  /**
   * SalesItem.orderRouting
   */
  export type SalesItem$orderRoutingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderRouting
     */
    select?: OrderRoutingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderRouting
     */
    omit?: OrderRoutingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderRoutingInclude<ExtArgs> | null
    where?: OrderRoutingWhereInput
    orderBy?: OrderRoutingOrderByWithRelationInput | OrderRoutingOrderByWithRelationInput[]
    cursor?: OrderRoutingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderRoutingScalarFieldEnum | OrderRoutingScalarFieldEnum[]
  }

  /**
   * SalesItem without action
   */
  export type SalesItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItem
     */
    select?: SalesItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItem
     */
    omit?: SalesItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemInclude<ExtArgs> | null
  }


  /**
   * Model SalesItemModifier
   */

  export type AggregateSalesItemModifier = {
    _count: SalesItemModifierCountAggregateOutputType | null
    _avg: SalesItemModifierAvgAggregateOutputType | null
    _sum: SalesItemModifierSumAggregateOutputType | null
    _min: SalesItemModifierMinAggregateOutputType | null
    _max: SalesItemModifierMaxAggregateOutputType | null
  }

  export type SalesItemModifierAvgAggregateOutputType = {
    id: number | null
    salesItemId: number | null
    menuItemModifierId: number | null
    itemId: number | null
    modifierPrice: Decimal | null
    quantity: number | null
    version: number | null
  }

  export type SalesItemModifierSumAggregateOutputType = {
    id: number | null
    salesItemId: number | null
    menuItemModifierId: number | null
    itemId: number | null
    modifierPrice: Decimal | null
    quantity: number | null
    version: number | null
  }

  export type SalesItemModifierMinAggregateOutputType = {
    id: number | null
    salesItemId: number | null
    menuItemModifierId: number | null
    itemId: number | null
    modifierName: string | null
    modifierPrice: Decimal | null
    quantity: number | null
    status: $Enums.OrderStatus | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type SalesItemModifierMaxAggregateOutputType = {
    id: number | null
    salesItemId: number | null
    menuItemModifierId: number | null
    itemId: number | null
    modifierName: string | null
    modifierPrice: Decimal | null
    quantity: number | null
    status: $Enums.OrderStatus | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type SalesItemModifierCountAggregateOutputType = {
    id: number
    salesItemId: number
    menuItemModifierId: number
    itemId: number
    modifierName: number
    modifierPrice: number
    quantity: number
    status: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type SalesItemModifierAvgAggregateInputType = {
    id?: true
    salesItemId?: true
    menuItemModifierId?: true
    itemId?: true
    modifierPrice?: true
    quantity?: true
    version?: true
  }

  export type SalesItemModifierSumAggregateInputType = {
    id?: true
    salesItemId?: true
    menuItemModifierId?: true
    itemId?: true
    modifierPrice?: true
    quantity?: true
    version?: true
  }

  export type SalesItemModifierMinAggregateInputType = {
    id?: true
    salesItemId?: true
    menuItemModifierId?: true
    itemId?: true
    modifierName?: true
    modifierPrice?: true
    quantity?: true
    status?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type SalesItemModifierMaxAggregateInputType = {
    id?: true
    salesItemId?: true
    menuItemModifierId?: true
    itemId?: true
    modifierName?: true
    modifierPrice?: true
    quantity?: true
    status?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type SalesItemModifierCountAggregateInputType = {
    id?: true
    salesItemId?: true
    menuItemModifierId?: true
    itemId?: true
    modifierName?: true
    modifierPrice?: true
    quantity?: true
    status?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type SalesItemModifierAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SalesItemModifier to aggregate.
     */
    where?: SalesItemModifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalesItemModifiers to fetch.
     */
    orderBy?: SalesItemModifierOrderByWithRelationInput | SalesItemModifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SalesItemModifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalesItemModifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalesItemModifiers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SalesItemModifiers
    **/
    _count?: true | SalesItemModifierCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SalesItemModifierAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SalesItemModifierSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SalesItemModifierMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SalesItemModifierMaxAggregateInputType
  }

  export type GetSalesItemModifierAggregateType<T extends SalesItemModifierAggregateArgs> = {
        [P in keyof T & keyof AggregateSalesItemModifier]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSalesItemModifier[P]>
      : GetScalarType<T[P], AggregateSalesItemModifier[P]>
  }




  export type SalesItemModifierGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalesItemModifierWhereInput
    orderBy?: SalesItemModifierOrderByWithAggregationInput | SalesItemModifierOrderByWithAggregationInput[]
    by: SalesItemModifierScalarFieldEnum[] | SalesItemModifierScalarFieldEnum
    having?: SalesItemModifierScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SalesItemModifierCountAggregateInputType | true
    _avg?: SalesItemModifierAvgAggregateInputType
    _sum?: SalesItemModifierSumAggregateInputType
    _min?: SalesItemModifierMinAggregateInputType
    _max?: SalesItemModifierMaxAggregateInputType
  }

  export type SalesItemModifierGroupByOutputType = {
    id: number
    salesItemId: number
    menuItemModifierId: number
    itemId: number | null
    modifierName: string
    modifierPrice: Decimal
    quantity: number
    status: $Enums.OrderStatus | null
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: SalesItemModifierCountAggregateOutputType | null
    _avg: SalesItemModifierAvgAggregateOutputType | null
    _sum: SalesItemModifierSumAggregateOutputType | null
    _min: SalesItemModifierMinAggregateOutputType | null
    _max: SalesItemModifierMaxAggregateOutputType | null
  }

  type GetSalesItemModifierGroupByPayload<T extends SalesItemModifierGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SalesItemModifierGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SalesItemModifierGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SalesItemModifierGroupByOutputType[P]>
            : GetScalarType<T[P], SalesItemModifierGroupByOutputType[P]>
        }
      >
    >


  export type SalesItemModifierSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    salesItemId?: boolean
    menuItemModifierId?: boolean
    itemId?: boolean
    modifierName?: boolean
    modifierPrice?: boolean
    quantity?: boolean
    status?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    menuItemModifier?: boolean | MenuItemModifierDefaultArgs<ExtArgs>
    salesItem?: boolean | SalesItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["salesItemModifier"]>



  export type SalesItemModifierSelectScalar = {
    id?: boolean
    salesItemId?: boolean
    menuItemModifierId?: boolean
    itemId?: boolean
    modifierName?: boolean
    modifierPrice?: boolean
    quantity?: boolean
    status?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type SalesItemModifierOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "salesItemId" | "menuItemModifierId" | "itemId" | "modifierName" | "modifierPrice" | "quantity" | "status" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["salesItemModifier"]>
  export type SalesItemModifierInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menuItemModifier?: boolean | MenuItemModifierDefaultArgs<ExtArgs>
    salesItem?: boolean | SalesItemDefaultArgs<ExtArgs>
  }

  export type $SalesItemModifierPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SalesItemModifier"
    objects: {
      menuItemModifier: Prisma.$MenuItemModifierPayload<ExtArgs>
      salesItem: Prisma.$SalesItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      salesItemId: number
      menuItemModifierId: number
      itemId: number | null
      modifierName: string
      modifierPrice: Prisma.Decimal
      quantity: number
      status: $Enums.OrderStatus | null
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["salesItemModifier"]>
    composites: {}
  }

  type SalesItemModifierGetPayload<S extends boolean | null | undefined | SalesItemModifierDefaultArgs> = $Result.GetResult<Prisma.$SalesItemModifierPayload, S>

  type SalesItemModifierCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SalesItemModifierFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SalesItemModifierCountAggregateInputType | true
    }

  export interface SalesItemModifierDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SalesItemModifier'], meta: { name: 'SalesItemModifier' } }
    /**
     * Find zero or one SalesItemModifier that matches the filter.
     * @param {SalesItemModifierFindUniqueArgs} args - Arguments to find a SalesItemModifier
     * @example
     * // Get one SalesItemModifier
     * const salesItemModifier = await prisma.salesItemModifier.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SalesItemModifierFindUniqueArgs>(args: SelectSubset<T, SalesItemModifierFindUniqueArgs<ExtArgs>>): Prisma__SalesItemModifierClient<$Result.GetResult<Prisma.$SalesItemModifierPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SalesItemModifier that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SalesItemModifierFindUniqueOrThrowArgs} args - Arguments to find a SalesItemModifier
     * @example
     * // Get one SalesItemModifier
     * const salesItemModifier = await prisma.salesItemModifier.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SalesItemModifierFindUniqueOrThrowArgs>(args: SelectSubset<T, SalesItemModifierFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SalesItemModifierClient<$Result.GetResult<Prisma.$SalesItemModifierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SalesItemModifier that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesItemModifierFindFirstArgs} args - Arguments to find a SalesItemModifier
     * @example
     * // Get one SalesItemModifier
     * const salesItemModifier = await prisma.salesItemModifier.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SalesItemModifierFindFirstArgs>(args?: SelectSubset<T, SalesItemModifierFindFirstArgs<ExtArgs>>): Prisma__SalesItemModifierClient<$Result.GetResult<Prisma.$SalesItemModifierPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SalesItemModifier that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesItemModifierFindFirstOrThrowArgs} args - Arguments to find a SalesItemModifier
     * @example
     * // Get one SalesItemModifier
     * const salesItemModifier = await prisma.salesItemModifier.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SalesItemModifierFindFirstOrThrowArgs>(args?: SelectSubset<T, SalesItemModifierFindFirstOrThrowArgs<ExtArgs>>): Prisma__SalesItemModifierClient<$Result.GetResult<Prisma.$SalesItemModifierPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SalesItemModifiers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesItemModifierFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SalesItemModifiers
     * const salesItemModifiers = await prisma.salesItemModifier.findMany()
     * 
     * // Get first 10 SalesItemModifiers
     * const salesItemModifiers = await prisma.salesItemModifier.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const salesItemModifierWithIdOnly = await prisma.salesItemModifier.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SalesItemModifierFindManyArgs>(args?: SelectSubset<T, SalesItemModifierFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalesItemModifierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SalesItemModifier.
     * @param {SalesItemModifierCreateArgs} args - Arguments to create a SalesItemModifier.
     * @example
     * // Create one SalesItemModifier
     * const SalesItemModifier = await prisma.salesItemModifier.create({
     *   data: {
     *     // ... data to create a SalesItemModifier
     *   }
     * })
     * 
     */
    create<T extends SalesItemModifierCreateArgs>(args: SelectSubset<T, SalesItemModifierCreateArgs<ExtArgs>>): Prisma__SalesItemModifierClient<$Result.GetResult<Prisma.$SalesItemModifierPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SalesItemModifiers.
     * @param {SalesItemModifierCreateManyArgs} args - Arguments to create many SalesItemModifiers.
     * @example
     * // Create many SalesItemModifiers
     * const salesItemModifier = await prisma.salesItemModifier.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SalesItemModifierCreateManyArgs>(args?: SelectSubset<T, SalesItemModifierCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SalesItemModifier.
     * @param {SalesItemModifierDeleteArgs} args - Arguments to delete one SalesItemModifier.
     * @example
     * // Delete one SalesItemModifier
     * const SalesItemModifier = await prisma.salesItemModifier.delete({
     *   where: {
     *     // ... filter to delete one SalesItemModifier
     *   }
     * })
     * 
     */
    delete<T extends SalesItemModifierDeleteArgs>(args: SelectSubset<T, SalesItemModifierDeleteArgs<ExtArgs>>): Prisma__SalesItemModifierClient<$Result.GetResult<Prisma.$SalesItemModifierPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SalesItemModifier.
     * @param {SalesItemModifierUpdateArgs} args - Arguments to update one SalesItemModifier.
     * @example
     * // Update one SalesItemModifier
     * const salesItemModifier = await prisma.salesItemModifier.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SalesItemModifierUpdateArgs>(args: SelectSubset<T, SalesItemModifierUpdateArgs<ExtArgs>>): Prisma__SalesItemModifierClient<$Result.GetResult<Prisma.$SalesItemModifierPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SalesItemModifiers.
     * @param {SalesItemModifierDeleteManyArgs} args - Arguments to filter SalesItemModifiers to delete.
     * @example
     * // Delete a few SalesItemModifiers
     * const { count } = await prisma.salesItemModifier.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SalesItemModifierDeleteManyArgs>(args?: SelectSubset<T, SalesItemModifierDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SalesItemModifiers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesItemModifierUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SalesItemModifiers
     * const salesItemModifier = await prisma.salesItemModifier.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SalesItemModifierUpdateManyArgs>(args: SelectSubset<T, SalesItemModifierUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SalesItemModifier.
     * @param {SalesItemModifierUpsertArgs} args - Arguments to update or create a SalesItemModifier.
     * @example
     * // Update or create a SalesItemModifier
     * const salesItemModifier = await prisma.salesItemModifier.upsert({
     *   create: {
     *     // ... data to create a SalesItemModifier
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SalesItemModifier we want to update
     *   }
     * })
     */
    upsert<T extends SalesItemModifierUpsertArgs>(args: SelectSubset<T, SalesItemModifierUpsertArgs<ExtArgs>>): Prisma__SalesItemModifierClient<$Result.GetResult<Prisma.$SalesItemModifierPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SalesItemModifiers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesItemModifierCountArgs} args - Arguments to filter SalesItemModifiers to count.
     * @example
     * // Count the number of SalesItemModifiers
     * const count = await prisma.salesItemModifier.count({
     *   where: {
     *     // ... the filter for the SalesItemModifiers we want to count
     *   }
     * })
    **/
    count<T extends SalesItemModifierCountArgs>(
      args?: Subset<T, SalesItemModifierCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SalesItemModifierCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SalesItemModifier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesItemModifierAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SalesItemModifierAggregateArgs>(args: Subset<T, SalesItemModifierAggregateArgs>): Prisma.PrismaPromise<GetSalesItemModifierAggregateType<T>>

    /**
     * Group by SalesItemModifier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesItemModifierGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SalesItemModifierGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SalesItemModifierGroupByArgs['orderBy'] }
        : { orderBy?: SalesItemModifierGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SalesItemModifierGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSalesItemModifierGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SalesItemModifier model
   */
  readonly fields: SalesItemModifierFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SalesItemModifier.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SalesItemModifierClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    menuItemModifier<T extends MenuItemModifierDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MenuItemModifierDefaultArgs<ExtArgs>>): Prisma__MenuItemModifierClient<$Result.GetResult<Prisma.$MenuItemModifierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    salesItem<T extends SalesItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SalesItemDefaultArgs<ExtArgs>>): Prisma__SalesItemClient<$Result.GetResult<Prisma.$SalesItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SalesItemModifier model
   */
  interface SalesItemModifierFieldRefs {
    readonly id: FieldRef<"SalesItemModifier", 'Int'>
    readonly salesItemId: FieldRef<"SalesItemModifier", 'Int'>
    readonly menuItemModifierId: FieldRef<"SalesItemModifier", 'Int'>
    readonly itemId: FieldRef<"SalesItemModifier", 'Int'>
    readonly modifierName: FieldRef<"SalesItemModifier", 'String'>
    readonly modifierPrice: FieldRef<"SalesItemModifier", 'Decimal'>
    readonly quantity: FieldRef<"SalesItemModifier", 'Int'>
    readonly status: FieldRef<"SalesItemModifier", 'OrderStatus'>
    readonly deleted: FieldRef<"SalesItemModifier", 'Boolean'>
    readonly deletedAt: FieldRef<"SalesItemModifier", 'DateTime'>
    readonly createdAt: FieldRef<"SalesItemModifier", 'DateTime'>
    readonly updatedAt: FieldRef<"SalesItemModifier", 'DateTime'>
    readonly version: FieldRef<"SalesItemModifier", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * SalesItemModifier findUnique
   */
  export type SalesItemModifierFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItemModifier
     */
    select?: SalesItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItemModifier
     */
    omit?: SalesItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemModifierInclude<ExtArgs> | null
    /**
     * Filter, which SalesItemModifier to fetch.
     */
    where: SalesItemModifierWhereUniqueInput
  }

  /**
   * SalesItemModifier findUniqueOrThrow
   */
  export type SalesItemModifierFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItemModifier
     */
    select?: SalesItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItemModifier
     */
    omit?: SalesItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemModifierInclude<ExtArgs> | null
    /**
     * Filter, which SalesItemModifier to fetch.
     */
    where: SalesItemModifierWhereUniqueInput
  }

  /**
   * SalesItemModifier findFirst
   */
  export type SalesItemModifierFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItemModifier
     */
    select?: SalesItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItemModifier
     */
    omit?: SalesItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemModifierInclude<ExtArgs> | null
    /**
     * Filter, which SalesItemModifier to fetch.
     */
    where?: SalesItemModifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalesItemModifiers to fetch.
     */
    orderBy?: SalesItemModifierOrderByWithRelationInput | SalesItemModifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SalesItemModifiers.
     */
    cursor?: SalesItemModifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalesItemModifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalesItemModifiers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SalesItemModifiers.
     */
    distinct?: SalesItemModifierScalarFieldEnum | SalesItemModifierScalarFieldEnum[]
  }

  /**
   * SalesItemModifier findFirstOrThrow
   */
  export type SalesItemModifierFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItemModifier
     */
    select?: SalesItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItemModifier
     */
    omit?: SalesItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemModifierInclude<ExtArgs> | null
    /**
     * Filter, which SalesItemModifier to fetch.
     */
    where?: SalesItemModifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalesItemModifiers to fetch.
     */
    orderBy?: SalesItemModifierOrderByWithRelationInput | SalesItemModifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SalesItemModifiers.
     */
    cursor?: SalesItemModifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalesItemModifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalesItemModifiers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SalesItemModifiers.
     */
    distinct?: SalesItemModifierScalarFieldEnum | SalesItemModifierScalarFieldEnum[]
  }

  /**
   * SalesItemModifier findMany
   */
  export type SalesItemModifierFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItemModifier
     */
    select?: SalesItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItemModifier
     */
    omit?: SalesItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemModifierInclude<ExtArgs> | null
    /**
     * Filter, which SalesItemModifiers to fetch.
     */
    where?: SalesItemModifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalesItemModifiers to fetch.
     */
    orderBy?: SalesItemModifierOrderByWithRelationInput | SalesItemModifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SalesItemModifiers.
     */
    cursor?: SalesItemModifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalesItemModifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalesItemModifiers.
     */
    skip?: number
    distinct?: SalesItemModifierScalarFieldEnum | SalesItemModifierScalarFieldEnum[]
  }

  /**
   * SalesItemModifier create
   */
  export type SalesItemModifierCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItemModifier
     */
    select?: SalesItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItemModifier
     */
    omit?: SalesItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemModifierInclude<ExtArgs> | null
    /**
     * The data needed to create a SalesItemModifier.
     */
    data: XOR<SalesItemModifierCreateInput, SalesItemModifierUncheckedCreateInput>
  }

  /**
   * SalesItemModifier createMany
   */
  export type SalesItemModifierCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SalesItemModifiers.
     */
    data: SalesItemModifierCreateManyInput | SalesItemModifierCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SalesItemModifier update
   */
  export type SalesItemModifierUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItemModifier
     */
    select?: SalesItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItemModifier
     */
    omit?: SalesItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemModifierInclude<ExtArgs> | null
    /**
     * The data needed to update a SalesItemModifier.
     */
    data: XOR<SalesItemModifierUpdateInput, SalesItemModifierUncheckedUpdateInput>
    /**
     * Choose, which SalesItemModifier to update.
     */
    where: SalesItemModifierWhereUniqueInput
  }

  /**
   * SalesItemModifier updateMany
   */
  export type SalesItemModifierUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SalesItemModifiers.
     */
    data: XOR<SalesItemModifierUpdateManyMutationInput, SalesItemModifierUncheckedUpdateManyInput>
    /**
     * Filter which SalesItemModifiers to update
     */
    where?: SalesItemModifierWhereInput
    /**
     * Limit how many SalesItemModifiers to update.
     */
    limit?: number
  }

  /**
   * SalesItemModifier upsert
   */
  export type SalesItemModifierUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItemModifier
     */
    select?: SalesItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItemModifier
     */
    omit?: SalesItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemModifierInclude<ExtArgs> | null
    /**
     * The filter to search for the SalesItemModifier to update in case it exists.
     */
    where: SalesItemModifierWhereUniqueInput
    /**
     * In case the SalesItemModifier found by the `where` argument doesn't exist, create a new SalesItemModifier with this data.
     */
    create: XOR<SalesItemModifierCreateInput, SalesItemModifierUncheckedCreateInput>
    /**
     * In case the SalesItemModifier was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SalesItemModifierUpdateInput, SalesItemModifierUncheckedUpdateInput>
  }

  /**
   * SalesItemModifier delete
   */
  export type SalesItemModifierDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItemModifier
     */
    select?: SalesItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItemModifier
     */
    omit?: SalesItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemModifierInclude<ExtArgs> | null
    /**
     * Filter which SalesItemModifier to delete.
     */
    where: SalesItemModifierWhereUniqueInput
  }

  /**
   * SalesItemModifier deleteMany
   */
  export type SalesItemModifierDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SalesItemModifiers to delete
     */
    where?: SalesItemModifierWhereInput
    /**
     * Limit how many SalesItemModifiers to delete.
     */
    limit?: number
  }

  /**
   * SalesItemModifier without action
   */
  export type SalesItemModifierDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItemModifier
     */
    select?: SalesItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItemModifier
     */
    omit?: SalesItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemModifierInclude<ExtArgs> | null
  }


  /**
   * Model SalesQuotation
   */

  export type AggregateSalesQuotation = {
    _count: SalesQuotationCountAggregateOutputType | null
    _avg: SalesQuotationAvgAggregateOutputType | null
    _sum: SalesQuotationSumAggregateOutputType | null
    _min: SalesQuotationMinAggregateOutputType | null
    _max: SalesQuotationMaxAggregateOutputType | null
  }

  export type SalesQuotationAvgAggregateOutputType = {
    id: number | null
    outletId: number | null
    customerId: number | null
    discountPercentage: Decimal | null
    discountAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    roundingAmount: Decimal | null
    subtotalAmount: Decimal | null
    totalAmount: Decimal | null
    version: number | null
  }

  export type SalesQuotationSumAggregateOutputType = {
    id: number | null
    outletId: number | null
    customerId: number | null
    discountPercentage: Decimal | null
    discountAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    roundingAmount: Decimal | null
    subtotalAmount: Decimal | null
    totalAmount: Decimal | null
    version: number | null
  }

  export type SalesQuotationMinAggregateOutputType = {
    id: number | null
    outletId: number | null
    customerId: number | null
    customerStreet: string | null
    customerCity: string | null
    customerState: string | null
    customerPostalCode: string | null
    customerCountry: string | null
    discountPercentage: Decimal | null
    discountAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    roundingAmount: Decimal | null
    subtotalAmount: Decimal | null
    totalAmount: Decimal | null
    status: string | null
    remark: string | null
    performedBy: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type SalesQuotationMaxAggregateOutputType = {
    id: number | null
    outletId: number | null
    customerId: number | null
    customerStreet: string | null
    customerCity: string | null
    customerState: string | null
    customerPostalCode: string | null
    customerCountry: string | null
    discountPercentage: Decimal | null
    discountAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    roundingAmount: Decimal | null
    subtotalAmount: Decimal | null
    totalAmount: Decimal | null
    status: string | null
    remark: string | null
    performedBy: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type SalesQuotationCountAggregateOutputType = {
    id: number
    outletId: number
    customerId: number
    customerStreet: number
    customerCity: number
    customerState: number
    customerPostalCode: number
    customerCountry: number
    discountPercentage: number
    discountAmount: number
    serviceChargeAmount: number
    taxAmount: number
    roundingAmount: number
    subtotalAmount: number
    totalAmount: number
    status: number
    remark: number
    performedBy: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type SalesQuotationAvgAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    discountPercentage?: true
    discountAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    roundingAmount?: true
    subtotalAmount?: true
    totalAmount?: true
    version?: true
  }

  export type SalesQuotationSumAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    discountPercentage?: true
    discountAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    roundingAmount?: true
    subtotalAmount?: true
    totalAmount?: true
    version?: true
  }

  export type SalesQuotationMinAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    customerStreet?: true
    customerCity?: true
    customerState?: true
    customerPostalCode?: true
    customerCountry?: true
    discountPercentage?: true
    discountAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    roundingAmount?: true
    subtotalAmount?: true
    totalAmount?: true
    status?: true
    remark?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type SalesQuotationMaxAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    customerStreet?: true
    customerCity?: true
    customerState?: true
    customerPostalCode?: true
    customerCountry?: true
    discountPercentage?: true
    discountAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    roundingAmount?: true
    subtotalAmount?: true
    totalAmount?: true
    status?: true
    remark?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type SalesQuotationCountAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    customerStreet?: true
    customerCity?: true
    customerState?: true
    customerPostalCode?: true
    customerCountry?: true
    discountPercentage?: true
    discountAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    roundingAmount?: true
    subtotalAmount?: true
    totalAmount?: true
    status?: true
    remark?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type SalesQuotationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SalesQuotation to aggregate.
     */
    where?: SalesQuotationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalesQuotations to fetch.
     */
    orderBy?: SalesQuotationOrderByWithRelationInput | SalesQuotationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SalesQuotationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalesQuotations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalesQuotations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SalesQuotations
    **/
    _count?: true | SalesQuotationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SalesQuotationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SalesQuotationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SalesQuotationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SalesQuotationMaxAggregateInputType
  }

  export type GetSalesQuotationAggregateType<T extends SalesQuotationAggregateArgs> = {
        [P in keyof T & keyof AggregateSalesQuotation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSalesQuotation[P]>
      : GetScalarType<T[P], AggregateSalesQuotation[P]>
  }




  export type SalesQuotationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalesQuotationWhereInput
    orderBy?: SalesQuotationOrderByWithAggregationInput | SalesQuotationOrderByWithAggregationInput[]
    by: SalesQuotationScalarFieldEnum[] | SalesQuotationScalarFieldEnum
    having?: SalesQuotationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SalesQuotationCountAggregateInputType | true
    _avg?: SalesQuotationAvgAggregateInputType
    _sum?: SalesQuotationSumAggregateInputType
    _min?: SalesQuotationMinAggregateInputType
    _max?: SalesQuotationMaxAggregateInputType
  }

  export type SalesQuotationGroupByOutputType = {
    id: number
    outletId: number
    customerId: number | null
    customerStreet: string | null
    customerCity: string | null
    customerState: string | null
    customerPostalCode: string | null
    customerCountry: string | null
    discountPercentage: Decimal
    discountAmount: Decimal
    serviceChargeAmount: Decimal
    taxAmount: Decimal
    roundingAmount: Decimal
    subtotalAmount: Decimal
    totalAmount: Decimal
    status: string
    remark: string | null
    performedBy: string | null
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: SalesQuotationCountAggregateOutputType | null
    _avg: SalesQuotationAvgAggregateOutputType | null
    _sum: SalesQuotationSumAggregateOutputType | null
    _min: SalesQuotationMinAggregateOutputType | null
    _max: SalesQuotationMaxAggregateOutputType | null
  }

  type GetSalesQuotationGroupByPayload<T extends SalesQuotationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SalesQuotationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SalesQuotationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SalesQuotationGroupByOutputType[P]>
            : GetScalarType<T[P], SalesQuotationGroupByOutputType[P]>
        }
      >
    >


  export type SalesQuotationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    outletId?: boolean
    customerId?: boolean
    customerStreet?: boolean
    customerCity?: boolean
    customerState?: boolean
    customerPostalCode?: boolean
    customerCountry?: boolean
    discountPercentage?: boolean
    discountAmount?: boolean
    serviceChargeAmount?: boolean
    taxAmount?: boolean
    roundingAmount?: boolean
    subtotalAmount?: boolean
    totalAmount?: boolean
    status?: boolean
    remark?: boolean
    performedBy?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    salesQuotationItems?: boolean | SalesQuotation$salesQuotationItemsArgs<ExtArgs>
    _count?: boolean | SalesQuotationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["salesQuotation"]>



  export type SalesQuotationSelectScalar = {
    id?: boolean
    outletId?: boolean
    customerId?: boolean
    customerStreet?: boolean
    customerCity?: boolean
    customerState?: boolean
    customerPostalCode?: boolean
    customerCountry?: boolean
    discountPercentage?: boolean
    discountAmount?: boolean
    serviceChargeAmount?: boolean
    taxAmount?: boolean
    roundingAmount?: boolean
    subtotalAmount?: boolean
    totalAmount?: boolean
    status?: boolean
    remark?: boolean
    performedBy?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type SalesQuotationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "outletId" | "customerId" | "customerStreet" | "customerCity" | "customerState" | "customerPostalCode" | "customerCountry" | "discountPercentage" | "discountAmount" | "serviceChargeAmount" | "taxAmount" | "roundingAmount" | "subtotalAmount" | "totalAmount" | "status" | "remark" | "performedBy" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["salesQuotation"]>
  export type SalesQuotationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    salesQuotationItems?: boolean | SalesQuotation$salesQuotationItemsArgs<ExtArgs>
    _count?: boolean | SalesQuotationCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SalesQuotationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SalesQuotation"
    objects: {
      salesQuotationItems: Prisma.$SalesQuotationItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      outletId: number
      customerId: number | null
      customerStreet: string | null
      customerCity: string | null
      customerState: string | null
      customerPostalCode: string | null
      customerCountry: string | null
      discountPercentage: Prisma.Decimal
      discountAmount: Prisma.Decimal
      serviceChargeAmount: Prisma.Decimal
      taxAmount: Prisma.Decimal
      roundingAmount: Prisma.Decimal
      subtotalAmount: Prisma.Decimal
      totalAmount: Prisma.Decimal
      status: string
      remark: string | null
      performedBy: string | null
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["salesQuotation"]>
    composites: {}
  }

  type SalesQuotationGetPayload<S extends boolean | null | undefined | SalesQuotationDefaultArgs> = $Result.GetResult<Prisma.$SalesQuotationPayload, S>

  type SalesQuotationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SalesQuotationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SalesQuotationCountAggregateInputType | true
    }

  export interface SalesQuotationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SalesQuotation'], meta: { name: 'SalesQuotation' } }
    /**
     * Find zero or one SalesQuotation that matches the filter.
     * @param {SalesQuotationFindUniqueArgs} args - Arguments to find a SalesQuotation
     * @example
     * // Get one SalesQuotation
     * const salesQuotation = await prisma.salesQuotation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SalesQuotationFindUniqueArgs>(args: SelectSubset<T, SalesQuotationFindUniqueArgs<ExtArgs>>): Prisma__SalesQuotationClient<$Result.GetResult<Prisma.$SalesQuotationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SalesQuotation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SalesQuotationFindUniqueOrThrowArgs} args - Arguments to find a SalesQuotation
     * @example
     * // Get one SalesQuotation
     * const salesQuotation = await prisma.salesQuotation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SalesQuotationFindUniqueOrThrowArgs>(args: SelectSubset<T, SalesQuotationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SalesQuotationClient<$Result.GetResult<Prisma.$SalesQuotationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SalesQuotation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesQuotationFindFirstArgs} args - Arguments to find a SalesQuotation
     * @example
     * // Get one SalesQuotation
     * const salesQuotation = await prisma.salesQuotation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SalesQuotationFindFirstArgs>(args?: SelectSubset<T, SalesQuotationFindFirstArgs<ExtArgs>>): Prisma__SalesQuotationClient<$Result.GetResult<Prisma.$SalesQuotationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SalesQuotation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesQuotationFindFirstOrThrowArgs} args - Arguments to find a SalesQuotation
     * @example
     * // Get one SalesQuotation
     * const salesQuotation = await prisma.salesQuotation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SalesQuotationFindFirstOrThrowArgs>(args?: SelectSubset<T, SalesQuotationFindFirstOrThrowArgs<ExtArgs>>): Prisma__SalesQuotationClient<$Result.GetResult<Prisma.$SalesQuotationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SalesQuotations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesQuotationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SalesQuotations
     * const salesQuotations = await prisma.salesQuotation.findMany()
     * 
     * // Get first 10 SalesQuotations
     * const salesQuotations = await prisma.salesQuotation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const salesQuotationWithIdOnly = await prisma.salesQuotation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SalesQuotationFindManyArgs>(args?: SelectSubset<T, SalesQuotationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalesQuotationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SalesQuotation.
     * @param {SalesQuotationCreateArgs} args - Arguments to create a SalesQuotation.
     * @example
     * // Create one SalesQuotation
     * const SalesQuotation = await prisma.salesQuotation.create({
     *   data: {
     *     // ... data to create a SalesQuotation
     *   }
     * })
     * 
     */
    create<T extends SalesQuotationCreateArgs>(args: SelectSubset<T, SalesQuotationCreateArgs<ExtArgs>>): Prisma__SalesQuotationClient<$Result.GetResult<Prisma.$SalesQuotationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SalesQuotations.
     * @param {SalesQuotationCreateManyArgs} args - Arguments to create many SalesQuotations.
     * @example
     * // Create many SalesQuotations
     * const salesQuotation = await prisma.salesQuotation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SalesQuotationCreateManyArgs>(args?: SelectSubset<T, SalesQuotationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SalesQuotation.
     * @param {SalesQuotationDeleteArgs} args - Arguments to delete one SalesQuotation.
     * @example
     * // Delete one SalesQuotation
     * const SalesQuotation = await prisma.salesQuotation.delete({
     *   where: {
     *     // ... filter to delete one SalesQuotation
     *   }
     * })
     * 
     */
    delete<T extends SalesQuotationDeleteArgs>(args: SelectSubset<T, SalesQuotationDeleteArgs<ExtArgs>>): Prisma__SalesQuotationClient<$Result.GetResult<Prisma.$SalesQuotationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SalesQuotation.
     * @param {SalesQuotationUpdateArgs} args - Arguments to update one SalesQuotation.
     * @example
     * // Update one SalesQuotation
     * const salesQuotation = await prisma.salesQuotation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SalesQuotationUpdateArgs>(args: SelectSubset<T, SalesQuotationUpdateArgs<ExtArgs>>): Prisma__SalesQuotationClient<$Result.GetResult<Prisma.$SalesQuotationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SalesQuotations.
     * @param {SalesQuotationDeleteManyArgs} args - Arguments to filter SalesQuotations to delete.
     * @example
     * // Delete a few SalesQuotations
     * const { count } = await prisma.salesQuotation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SalesQuotationDeleteManyArgs>(args?: SelectSubset<T, SalesQuotationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SalesQuotations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesQuotationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SalesQuotations
     * const salesQuotation = await prisma.salesQuotation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SalesQuotationUpdateManyArgs>(args: SelectSubset<T, SalesQuotationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SalesQuotation.
     * @param {SalesQuotationUpsertArgs} args - Arguments to update or create a SalesQuotation.
     * @example
     * // Update or create a SalesQuotation
     * const salesQuotation = await prisma.salesQuotation.upsert({
     *   create: {
     *     // ... data to create a SalesQuotation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SalesQuotation we want to update
     *   }
     * })
     */
    upsert<T extends SalesQuotationUpsertArgs>(args: SelectSubset<T, SalesQuotationUpsertArgs<ExtArgs>>): Prisma__SalesQuotationClient<$Result.GetResult<Prisma.$SalesQuotationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SalesQuotations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesQuotationCountArgs} args - Arguments to filter SalesQuotations to count.
     * @example
     * // Count the number of SalesQuotations
     * const count = await prisma.salesQuotation.count({
     *   where: {
     *     // ... the filter for the SalesQuotations we want to count
     *   }
     * })
    **/
    count<T extends SalesQuotationCountArgs>(
      args?: Subset<T, SalesQuotationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SalesQuotationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SalesQuotation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesQuotationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SalesQuotationAggregateArgs>(args: Subset<T, SalesQuotationAggregateArgs>): Prisma.PrismaPromise<GetSalesQuotationAggregateType<T>>

    /**
     * Group by SalesQuotation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesQuotationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SalesQuotationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SalesQuotationGroupByArgs['orderBy'] }
        : { orderBy?: SalesQuotationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SalesQuotationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSalesQuotationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SalesQuotation model
   */
  readonly fields: SalesQuotationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SalesQuotation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SalesQuotationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    salesQuotationItems<T extends SalesQuotation$salesQuotationItemsArgs<ExtArgs> = {}>(args?: Subset<T, SalesQuotation$salesQuotationItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalesQuotationItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SalesQuotation model
   */
  interface SalesQuotationFieldRefs {
    readonly id: FieldRef<"SalesQuotation", 'Int'>
    readonly outletId: FieldRef<"SalesQuotation", 'Int'>
    readonly customerId: FieldRef<"SalesQuotation", 'Int'>
    readonly customerStreet: FieldRef<"SalesQuotation", 'String'>
    readonly customerCity: FieldRef<"SalesQuotation", 'String'>
    readonly customerState: FieldRef<"SalesQuotation", 'String'>
    readonly customerPostalCode: FieldRef<"SalesQuotation", 'String'>
    readonly customerCountry: FieldRef<"SalesQuotation", 'String'>
    readonly discountPercentage: FieldRef<"SalesQuotation", 'Decimal'>
    readonly discountAmount: FieldRef<"SalesQuotation", 'Decimal'>
    readonly serviceChargeAmount: FieldRef<"SalesQuotation", 'Decimal'>
    readonly taxAmount: FieldRef<"SalesQuotation", 'Decimal'>
    readonly roundingAmount: FieldRef<"SalesQuotation", 'Decimal'>
    readonly subtotalAmount: FieldRef<"SalesQuotation", 'Decimal'>
    readonly totalAmount: FieldRef<"SalesQuotation", 'Decimal'>
    readonly status: FieldRef<"SalesQuotation", 'String'>
    readonly remark: FieldRef<"SalesQuotation", 'String'>
    readonly performedBy: FieldRef<"SalesQuotation", 'String'>
    readonly deleted: FieldRef<"SalesQuotation", 'Boolean'>
    readonly deletedAt: FieldRef<"SalesQuotation", 'DateTime'>
    readonly createdAt: FieldRef<"SalesQuotation", 'DateTime'>
    readonly updatedAt: FieldRef<"SalesQuotation", 'DateTime'>
    readonly version: FieldRef<"SalesQuotation", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * SalesQuotation findUnique
   */
  export type SalesQuotationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotation
     */
    select?: SalesQuotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotation
     */
    omit?: SalesQuotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationInclude<ExtArgs> | null
    /**
     * Filter, which SalesQuotation to fetch.
     */
    where: SalesQuotationWhereUniqueInput
  }

  /**
   * SalesQuotation findUniqueOrThrow
   */
  export type SalesQuotationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotation
     */
    select?: SalesQuotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotation
     */
    omit?: SalesQuotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationInclude<ExtArgs> | null
    /**
     * Filter, which SalesQuotation to fetch.
     */
    where: SalesQuotationWhereUniqueInput
  }

  /**
   * SalesQuotation findFirst
   */
  export type SalesQuotationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotation
     */
    select?: SalesQuotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotation
     */
    omit?: SalesQuotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationInclude<ExtArgs> | null
    /**
     * Filter, which SalesQuotation to fetch.
     */
    where?: SalesQuotationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalesQuotations to fetch.
     */
    orderBy?: SalesQuotationOrderByWithRelationInput | SalesQuotationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SalesQuotations.
     */
    cursor?: SalesQuotationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalesQuotations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalesQuotations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SalesQuotations.
     */
    distinct?: SalesQuotationScalarFieldEnum | SalesQuotationScalarFieldEnum[]
  }

  /**
   * SalesQuotation findFirstOrThrow
   */
  export type SalesQuotationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotation
     */
    select?: SalesQuotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotation
     */
    omit?: SalesQuotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationInclude<ExtArgs> | null
    /**
     * Filter, which SalesQuotation to fetch.
     */
    where?: SalesQuotationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalesQuotations to fetch.
     */
    orderBy?: SalesQuotationOrderByWithRelationInput | SalesQuotationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SalesQuotations.
     */
    cursor?: SalesQuotationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalesQuotations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalesQuotations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SalesQuotations.
     */
    distinct?: SalesQuotationScalarFieldEnum | SalesQuotationScalarFieldEnum[]
  }

  /**
   * SalesQuotation findMany
   */
  export type SalesQuotationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotation
     */
    select?: SalesQuotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotation
     */
    omit?: SalesQuotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationInclude<ExtArgs> | null
    /**
     * Filter, which SalesQuotations to fetch.
     */
    where?: SalesQuotationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalesQuotations to fetch.
     */
    orderBy?: SalesQuotationOrderByWithRelationInput | SalesQuotationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SalesQuotations.
     */
    cursor?: SalesQuotationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalesQuotations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalesQuotations.
     */
    skip?: number
    distinct?: SalesQuotationScalarFieldEnum | SalesQuotationScalarFieldEnum[]
  }

  /**
   * SalesQuotation create
   */
  export type SalesQuotationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotation
     */
    select?: SalesQuotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotation
     */
    omit?: SalesQuotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationInclude<ExtArgs> | null
    /**
     * The data needed to create a SalesQuotation.
     */
    data: XOR<SalesQuotationCreateInput, SalesQuotationUncheckedCreateInput>
  }

  /**
   * SalesQuotation createMany
   */
  export type SalesQuotationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SalesQuotations.
     */
    data: SalesQuotationCreateManyInput | SalesQuotationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SalesQuotation update
   */
  export type SalesQuotationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotation
     */
    select?: SalesQuotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotation
     */
    omit?: SalesQuotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationInclude<ExtArgs> | null
    /**
     * The data needed to update a SalesQuotation.
     */
    data: XOR<SalesQuotationUpdateInput, SalesQuotationUncheckedUpdateInput>
    /**
     * Choose, which SalesQuotation to update.
     */
    where: SalesQuotationWhereUniqueInput
  }

  /**
   * SalesQuotation updateMany
   */
  export type SalesQuotationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SalesQuotations.
     */
    data: XOR<SalesQuotationUpdateManyMutationInput, SalesQuotationUncheckedUpdateManyInput>
    /**
     * Filter which SalesQuotations to update
     */
    where?: SalesQuotationWhereInput
    /**
     * Limit how many SalesQuotations to update.
     */
    limit?: number
  }

  /**
   * SalesQuotation upsert
   */
  export type SalesQuotationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotation
     */
    select?: SalesQuotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotation
     */
    omit?: SalesQuotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationInclude<ExtArgs> | null
    /**
     * The filter to search for the SalesQuotation to update in case it exists.
     */
    where: SalesQuotationWhereUniqueInput
    /**
     * In case the SalesQuotation found by the `where` argument doesn't exist, create a new SalesQuotation with this data.
     */
    create: XOR<SalesQuotationCreateInput, SalesQuotationUncheckedCreateInput>
    /**
     * In case the SalesQuotation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SalesQuotationUpdateInput, SalesQuotationUncheckedUpdateInput>
  }

  /**
   * SalesQuotation delete
   */
  export type SalesQuotationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotation
     */
    select?: SalesQuotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotation
     */
    omit?: SalesQuotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationInclude<ExtArgs> | null
    /**
     * Filter which SalesQuotation to delete.
     */
    where: SalesQuotationWhereUniqueInput
  }

  /**
   * SalesQuotation deleteMany
   */
  export type SalesQuotationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SalesQuotations to delete
     */
    where?: SalesQuotationWhereInput
    /**
     * Limit how many SalesQuotations to delete.
     */
    limit?: number
  }

  /**
   * SalesQuotation.salesQuotationItems
   */
  export type SalesQuotation$salesQuotationItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotationItem
     */
    select?: SalesQuotationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotationItem
     */
    omit?: SalesQuotationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationItemInclude<ExtArgs> | null
    where?: SalesQuotationItemWhereInput
    orderBy?: SalesQuotationItemOrderByWithRelationInput | SalesQuotationItemOrderByWithRelationInput[]
    cursor?: SalesQuotationItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SalesQuotationItemScalarFieldEnum | SalesQuotationItemScalarFieldEnum[]
  }

  /**
   * SalesQuotation without action
   */
  export type SalesQuotationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotation
     */
    select?: SalesQuotationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotation
     */
    omit?: SalesQuotationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationInclude<ExtArgs> | null
  }


  /**
   * Model SalesQuotationItem
   */

  export type AggregateSalesQuotationItem = {
    _count: SalesQuotationItemCountAggregateOutputType | null
    _avg: SalesQuotationItemAvgAggregateOutputType | null
    _sum: SalesQuotationItemSumAggregateOutputType | null
    _min: SalesQuotationItemMinAggregateOutputType | null
    _max: SalesQuotationItemMaxAggregateOutputType | null
  }

  export type SalesQuotationItemAvgAggregateOutputType = {
    id: number | null
    salesQuotationId: number | null
    itemId: number | null
    quantity: Decimal | null
    version: number | null
  }

  export type SalesQuotationItemSumAggregateOutputType = {
    id: number | null
    salesQuotationId: number | null
    itemId: number | null
    quantity: Decimal | null
    version: number | null
  }

  export type SalesQuotationItemMinAggregateOutputType = {
    id: number | null
    salesQuotationId: number | null
    itemId: number | null
    quantity: Decimal | null
    remark: string | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type SalesQuotationItemMaxAggregateOutputType = {
    id: number | null
    salesQuotationId: number | null
    itemId: number | null
    quantity: Decimal | null
    remark: string | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type SalesQuotationItemCountAggregateOutputType = {
    id: number
    salesQuotationId: number
    itemId: number
    quantity: number
    remark: number
    deleted: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type SalesQuotationItemAvgAggregateInputType = {
    id?: true
    salesQuotationId?: true
    itemId?: true
    quantity?: true
    version?: true
  }

  export type SalesQuotationItemSumAggregateInputType = {
    id?: true
    salesQuotationId?: true
    itemId?: true
    quantity?: true
    version?: true
  }

  export type SalesQuotationItemMinAggregateInputType = {
    id?: true
    salesQuotationId?: true
    itemId?: true
    quantity?: true
    remark?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type SalesQuotationItemMaxAggregateInputType = {
    id?: true
    salesQuotationId?: true
    itemId?: true
    quantity?: true
    remark?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type SalesQuotationItemCountAggregateInputType = {
    id?: true
    salesQuotationId?: true
    itemId?: true
    quantity?: true
    remark?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type SalesQuotationItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SalesQuotationItem to aggregate.
     */
    where?: SalesQuotationItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalesQuotationItems to fetch.
     */
    orderBy?: SalesQuotationItemOrderByWithRelationInput | SalesQuotationItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SalesQuotationItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalesQuotationItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalesQuotationItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SalesQuotationItems
    **/
    _count?: true | SalesQuotationItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SalesQuotationItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SalesQuotationItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SalesQuotationItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SalesQuotationItemMaxAggregateInputType
  }

  export type GetSalesQuotationItemAggregateType<T extends SalesQuotationItemAggregateArgs> = {
        [P in keyof T & keyof AggregateSalesQuotationItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSalesQuotationItem[P]>
      : GetScalarType<T[P], AggregateSalesQuotationItem[P]>
  }




  export type SalesQuotationItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SalesQuotationItemWhereInput
    orderBy?: SalesQuotationItemOrderByWithAggregationInput | SalesQuotationItemOrderByWithAggregationInput[]
    by: SalesQuotationItemScalarFieldEnum[] | SalesQuotationItemScalarFieldEnum
    having?: SalesQuotationItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SalesQuotationItemCountAggregateInputType | true
    _avg?: SalesQuotationItemAvgAggregateInputType
    _sum?: SalesQuotationItemSumAggregateInputType
    _min?: SalesQuotationItemMinAggregateInputType
    _max?: SalesQuotationItemMaxAggregateInputType
  }

  export type SalesQuotationItemGroupByOutputType = {
    id: number
    salesQuotationId: number
    itemId: number
    quantity: Decimal
    remark: string | null
    deleted: boolean
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: SalesQuotationItemCountAggregateOutputType | null
    _avg: SalesQuotationItemAvgAggregateOutputType | null
    _sum: SalesQuotationItemSumAggregateOutputType | null
    _min: SalesQuotationItemMinAggregateOutputType | null
    _max: SalesQuotationItemMaxAggregateOutputType | null
  }

  type GetSalesQuotationItemGroupByPayload<T extends SalesQuotationItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SalesQuotationItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SalesQuotationItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SalesQuotationItemGroupByOutputType[P]>
            : GetScalarType<T[P], SalesQuotationItemGroupByOutputType[P]>
        }
      >
    >


  export type SalesQuotationItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    salesQuotationId?: boolean
    itemId?: boolean
    quantity?: boolean
    remark?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    salesQuotation?: boolean | SalesQuotationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["salesQuotationItem"]>



  export type SalesQuotationItemSelectScalar = {
    id?: boolean
    salesQuotationId?: boolean
    itemId?: boolean
    quantity?: boolean
    remark?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type SalesQuotationItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "salesQuotationId" | "itemId" | "quantity" | "remark" | "deleted" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["salesQuotationItem"]>
  export type SalesQuotationItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    salesQuotation?: boolean | SalesQuotationDefaultArgs<ExtArgs>
  }

  export type $SalesQuotationItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SalesQuotationItem"
    objects: {
      salesQuotation: Prisma.$SalesQuotationPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      salesQuotationId: number
      itemId: number
      quantity: Prisma.Decimal
      remark: string | null
      deleted: boolean
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["salesQuotationItem"]>
    composites: {}
  }

  type SalesQuotationItemGetPayload<S extends boolean | null | undefined | SalesQuotationItemDefaultArgs> = $Result.GetResult<Prisma.$SalesQuotationItemPayload, S>

  type SalesQuotationItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SalesQuotationItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SalesQuotationItemCountAggregateInputType | true
    }

  export interface SalesQuotationItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SalesQuotationItem'], meta: { name: 'SalesQuotationItem' } }
    /**
     * Find zero or one SalesQuotationItem that matches the filter.
     * @param {SalesQuotationItemFindUniqueArgs} args - Arguments to find a SalesQuotationItem
     * @example
     * // Get one SalesQuotationItem
     * const salesQuotationItem = await prisma.salesQuotationItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SalesQuotationItemFindUniqueArgs>(args: SelectSubset<T, SalesQuotationItemFindUniqueArgs<ExtArgs>>): Prisma__SalesQuotationItemClient<$Result.GetResult<Prisma.$SalesQuotationItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SalesQuotationItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SalesQuotationItemFindUniqueOrThrowArgs} args - Arguments to find a SalesQuotationItem
     * @example
     * // Get one SalesQuotationItem
     * const salesQuotationItem = await prisma.salesQuotationItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SalesQuotationItemFindUniqueOrThrowArgs>(args: SelectSubset<T, SalesQuotationItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SalesQuotationItemClient<$Result.GetResult<Prisma.$SalesQuotationItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SalesQuotationItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesQuotationItemFindFirstArgs} args - Arguments to find a SalesQuotationItem
     * @example
     * // Get one SalesQuotationItem
     * const salesQuotationItem = await prisma.salesQuotationItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SalesQuotationItemFindFirstArgs>(args?: SelectSubset<T, SalesQuotationItemFindFirstArgs<ExtArgs>>): Prisma__SalesQuotationItemClient<$Result.GetResult<Prisma.$SalesQuotationItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SalesQuotationItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesQuotationItemFindFirstOrThrowArgs} args - Arguments to find a SalesQuotationItem
     * @example
     * // Get one SalesQuotationItem
     * const salesQuotationItem = await prisma.salesQuotationItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SalesQuotationItemFindFirstOrThrowArgs>(args?: SelectSubset<T, SalesQuotationItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__SalesQuotationItemClient<$Result.GetResult<Prisma.$SalesQuotationItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SalesQuotationItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesQuotationItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SalesQuotationItems
     * const salesQuotationItems = await prisma.salesQuotationItem.findMany()
     * 
     * // Get first 10 SalesQuotationItems
     * const salesQuotationItems = await prisma.salesQuotationItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const salesQuotationItemWithIdOnly = await prisma.salesQuotationItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SalesQuotationItemFindManyArgs>(args?: SelectSubset<T, SalesQuotationItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalesQuotationItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SalesQuotationItem.
     * @param {SalesQuotationItemCreateArgs} args - Arguments to create a SalesQuotationItem.
     * @example
     * // Create one SalesQuotationItem
     * const SalesQuotationItem = await prisma.salesQuotationItem.create({
     *   data: {
     *     // ... data to create a SalesQuotationItem
     *   }
     * })
     * 
     */
    create<T extends SalesQuotationItemCreateArgs>(args: SelectSubset<T, SalesQuotationItemCreateArgs<ExtArgs>>): Prisma__SalesQuotationItemClient<$Result.GetResult<Prisma.$SalesQuotationItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SalesQuotationItems.
     * @param {SalesQuotationItemCreateManyArgs} args - Arguments to create many SalesQuotationItems.
     * @example
     * // Create many SalesQuotationItems
     * const salesQuotationItem = await prisma.salesQuotationItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SalesQuotationItemCreateManyArgs>(args?: SelectSubset<T, SalesQuotationItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SalesQuotationItem.
     * @param {SalesQuotationItemDeleteArgs} args - Arguments to delete one SalesQuotationItem.
     * @example
     * // Delete one SalesQuotationItem
     * const SalesQuotationItem = await prisma.salesQuotationItem.delete({
     *   where: {
     *     // ... filter to delete one SalesQuotationItem
     *   }
     * })
     * 
     */
    delete<T extends SalesQuotationItemDeleteArgs>(args: SelectSubset<T, SalesQuotationItemDeleteArgs<ExtArgs>>): Prisma__SalesQuotationItemClient<$Result.GetResult<Prisma.$SalesQuotationItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SalesQuotationItem.
     * @param {SalesQuotationItemUpdateArgs} args - Arguments to update one SalesQuotationItem.
     * @example
     * // Update one SalesQuotationItem
     * const salesQuotationItem = await prisma.salesQuotationItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SalesQuotationItemUpdateArgs>(args: SelectSubset<T, SalesQuotationItemUpdateArgs<ExtArgs>>): Prisma__SalesQuotationItemClient<$Result.GetResult<Prisma.$SalesQuotationItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SalesQuotationItems.
     * @param {SalesQuotationItemDeleteManyArgs} args - Arguments to filter SalesQuotationItems to delete.
     * @example
     * // Delete a few SalesQuotationItems
     * const { count } = await prisma.salesQuotationItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SalesQuotationItemDeleteManyArgs>(args?: SelectSubset<T, SalesQuotationItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SalesQuotationItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesQuotationItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SalesQuotationItems
     * const salesQuotationItem = await prisma.salesQuotationItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SalesQuotationItemUpdateManyArgs>(args: SelectSubset<T, SalesQuotationItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SalesQuotationItem.
     * @param {SalesQuotationItemUpsertArgs} args - Arguments to update or create a SalesQuotationItem.
     * @example
     * // Update or create a SalesQuotationItem
     * const salesQuotationItem = await prisma.salesQuotationItem.upsert({
     *   create: {
     *     // ... data to create a SalesQuotationItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SalesQuotationItem we want to update
     *   }
     * })
     */
    upsert<T extends SalesQuotationItemUpsertArgs>(args: SelectSubset<T, SalesQuotationItemUpsertArgs<ExtArgs>>): Prisma__SalesQuotationItemClient<$Result.GetResult<Prisma.$SalesQuotationItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SalesQuotationItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesQuotationItemCountArgs} args - Arguments to filter SalesQuotationItems to count.
     * @example
     * // Count the number of SalesQuotationItems
     * const count = await prisma.salesQuotationItem.count({
     *   where: {
     *     // ... the filter for the SalesQuotationItems we want to count
     *   }
     * })
    **/
    count<T extends SalesQuotationItemCountArgs>(
      args?: Subset<T, SalesQuotationItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SalesQuotationItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SalesQuotationItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesQuotationItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SalesQuotationItemAggregateArgs>(args: Subset<T, SalesQuotationItemAggregateArgs>): Prisma.PrismaPromise<GetSalesQuotationItemAggregateType<T>>

    /**
     * Group by SalesQuotationItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SalesQuotationItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SalesQuotationItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SalesQuotationItemGroupByArgs['orderBy'] }
        : { orderBy?: SalesQuotationItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SalesQuotationItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSalesQuotationItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SalesQuotationItem model
   */
  readonly fields: SalesQuotationItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SalesQuotationItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SalesQuotationItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    salesQuotation<T extends SalesQuotationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SalesQuotationDefaultArgs<ExtArgs>>): Prisma__SalesQuotationClient<$Result.GetResult<Prisma.$SalesQuotationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SalesQuotationItem model
   */
  interface SalesQuotationItemFieldRefs {
    readonly id: FieldRef<"SalesQuotationItem", 'Int'>
    readonly salesQuotationId: FieldRef<"SalesQuotationItem", 'Int'>
    readonly itemId: FieldRef<"SalesQuotationItem", 'Int'>
    readonly quantity: FieldRef<"SalesQuotationItem", 'Decimal'>
    readonly remark: FieldRef<"SalesQuotationItem", 'String'>
    readonly deleted: FieldRef<"SalesQuotationItem", 'Boolean'>
    readonly createdAt: FieldRef<"SalesQuotationItem", 'DateTime'>
    readonly updatedAt: FieldRef<"SalesQuotationItem", 'DateTime'>
    readonly version: FieldRef<"SalesQuotationItem", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * SalesQuotationItem findUnique
   */
  export type SalesQuotationItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotationItem
     */
    select?: SalesQuotationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotationItem
     */
    omit?: SalesQuotationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationItemInclude<ExtArgs> | null
    /**
     * Filter, which SalesQuotationItem to fetch.
     */
    where: SalesQuotationItemWhereUniqueInput
  }

  /**
   * SalesQuotationItem findUniqueOrThrow
   */
  export type SalesQuotationItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotationItem
     */
    select?: SalesQuotationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotationItem
     */
    omit?: SalesQuotationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationItemInclude<ExtArgs> | null
    /**
     * Filter, which SalesQuotationItem to fetch.
     */
    where: SalesQuotationItemWhereUniqueInput
  }

  /**
   * SalesQuotationItem findFirst
   */
  export type SalesQuotationItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotationItem
     */
    select?: SalesQuotationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotationItem
     */
    omit?: SalesQuotationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationItemInclude<ExtArgs> | null
    /**
     * Filter, which SalesQuotationItem to fetch.
     */
    where?: SalesQuotationItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalesQuotationItems to fetch.
     */
    orderBy?: SalesQuotationItemOrderByWithRelationInput | SalesQuotationItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SalesQuotationItems.
     */
    cursor?: SalesQuotationItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalesQuotationItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalesQuotationItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SalesQuotationItems.
     */
    distinct?: SalesQuotationItemScalarFieldEnum | SalesQuotationItemScalarFieldEnum[]
  }

  /**
   * SalesQuotationItem findFirstOrThrow
   */
  export type SalesQuotationItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotationItem
     */
    select?: SalesQuotationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotationItem
     */
    omit?: SalesQuotationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationItemInclude<ExtArgs> | null
    /**
     * Filter, which SalesQuotationItem to fetch.
     */
    where?: SalesQuotationItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalesQuotationItems to fetch.
     */
    orderBy?: SalesQuotationItemOrderByWithRelationInput | SalesQuotationItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SalesQuotationItems.
     */
    cursor?: SalesQuotationItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalesQuotationItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalesQuotationItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SalesQuotationItems.
     */
    distinct?: SalesQuotationItemScalarFieldEnum | SalesQuotationItemScalarFieldEnum[]
  }

  /**
   * SalesQuotationItem findMany
   */
  export type SalesQuotationItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotationItem
     */
    select?: SalesQuotationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotationItem
     */
    omit?: SalesQuotationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationItemInclude<ExtArgs> | null
    /**
     * Filter, which SalesQuotationItems to fetch.
     */
    where?: SalesQuotationItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SalesQuotationItems to fetch.
     */
    orderBy?: SalesQuotationItemOrderByWithRelationInput | SalesQuotationItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SalesQuotationItems.
     */
    cursor?: SalesQuotationItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SalesQuotationItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SalesQuotationItems.
     */
    skip?: number
    distinct?: SalesQuotationItemScalarFieldEnum | SalesQuotationItemScalarFieldEnum[]
  }

  /**
   * SalesQuotationItem create
   */
  export type SalesQuotationItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotationItem
     */
    select?: SalesQuotationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotationItem
     */
    omit?: SalesQuotationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationItemInclude<ExtArgs> | null
    /**
     * The data needed to create a SalesQuotationItem.
     */
    data: XOR<SalesQuotationItemCreateInput, SalesQuotationItemUncheckedCreateInput>
  }

  /**
   * SalesQuotationItem createMany
   */
  export type SalesQuotationItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SalesQuotationItems.
     */
    data: SalesQuotationItemCreateManyInput | SalesQuotationItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SalesQuotationItem update
   */
  export type SalesQuotationItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotationItem
     */
    select?: SalesQuotationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotationItem
     */
    omit?: SalesQuotationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationItemInclude<ExtArgs> | null
    /**
     * The data needed to update a SalesQuotationItem.
     */
    data: XOR<SalesQuotationItemUpdateInput, SalesQuotationItemUncheckedUpdateInput>
    /**
     * Choose, which SalesQuotationItem to update.
     */
    where: SalesQuotationItemWhereUniqueInput
  }

  /**
   * SalesQuotationItem updateMany
   */
  export type SalesQuotationItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SalesQuotationItems.
     */
    data: XOR<SalesQuotationItemUpdateManyMutationInput, SalesQuotationItemUncheckedUpdateManyInput>
    /**
     * Filter which SalesQuotationItems to update
     */
    where?: SalesQuotationItemWhereInput
    /**
     * Limit how many SalesQuotationItems to update.
     */
    limit?: number
  }

  /**
   * SalesQuotationItem upsert
   */
  export type SalesQuotationItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotationItem
     */
    select?: SalesQuotationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotationItem
     */
    omit?: SalesQuotationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationItemInclude<ExtArgs> | null
    /**
     * The filter to search for the SalesQuotationItem to update in case it exists.
     */
    where: SalesQuotationItemWhereUniqueInput
    /**
     * In case the SalesQuotationItem found by the `where` argument doesn't exist, create a new SalesQuotationItem with this data.
     */
    create: XOR<SalesQuotationItemCreateInput, SalesQuotationItemUncheckedCreateInput>
    /**
     * In case the SalesQuotationItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SalesQuotationItemUpdateInput, SalesQuotationItemUncheckedUpdateInput>
  }

  /**
   * SalesQuotationItem delete
   */
  export type SalesQuotationItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotationItem
     */
    select?: SalesQuotationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotationItem
     */
    omit?: SalesQuotationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationItemInclude<ExtArgs> | null
    /**
     * Filter which SalesQuotationItem to delete.
     */
    where: SalesQuotationItemWhereUniqueInput
  }

  /**
   * SalesQuotationItem deleteMany
   */
  export type SalesQuotationItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SalesQuotationItems to delete
     */
    where?: SalesQuotationItemWhereInput
    /**
     * Limit how many SalesQuotationItems to delete.
     */
    limit?: number
  }

  /**
   * SalesQuotationItem without action
   */
  export type SalesQuotationItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesQuotationItem
     */
    select?: SalesQuotationItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesQuotationItem
     */
    omit?: SalesQuotationItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesQuotationItemInclude<ExtArgs> | null
  }


  /**
   * Model Invoice
   */

  export type AggregateInvoice = {
    _count: InvoiceCountAggregateOutputType | null
    _avg: InvoiceAvgAggregateOutputType | null
    _sum: InvoiceSumAggregateOutputType | null
    _min: InvoiceMinAggregateOutputType | null
    _max: InvoiceMaxAggregateOutputType | null
  }

  export type InvoiceAvgAggregateOutputType = {
    id: number | null
    purchaseOrderId: number | null
    supplierId: number | null
    outletId: number | null
    subtotalAmount: Decimal | null
    taxAmount: Decimal | null
    sessionId: number | null
    discountAmount: Decimal | null
    totalAmount: Decimal | null
    version: number | null
  }

  export type InvoiceSumAggregateOutputType = {
    id: number | null
    purchaseOrderId: number | null
    supplierId: number | null
    outletId: number | null
    subtotalAmount: Decimal | null
    taxAmount: Decimal | null
    sessionId: number | null
    discountAmount: Decimal | null
    totalAmount: Decimal | null
    version: number | null
  }

  export type InvoiceMinAggregateOutputType = {
    id: number | null
    invoiceNumber: string | null
    taxInvoiceNumber: string | null
    purchaseOrderId: number | null
    supplierId: number | null
    outletId: number | null
    subtotalAmount: Decimal | null
    taxAmount: Decimal | null
    sessionId: number | null
    discountType: string | null
    discountAmount: Decimal | null
    totalAmount: Decimal | null
    currency: string | null
    status: string | null
    invoiceDate: Date | null
    paymentDate: Date | null
    dueDate: Date | null
    remark: string | null
    performedBy: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type InvoiceMaxAggregateOutputType = {
    id: number | null
    invoiceNumber: string | null
    taxInvoiceNumber: string | null
    purchaseOrderId: number | null
    supplierId: number | null
    outletId: number | null
    subtotalAmount: Decimal | null
    taxAmount: Decimal | null
    sessionId: number | null
    discountType: string | null
    discountAmount: Decimal | null
    totalAmount: Decimal | null
    currency: string | null
    status: string | null
    invoiceDate: Date | null
    paymentDate: Date | null
    dueDate: Date | null
    remark: string | null
    performedBy: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type InvoiceCountAggregateOutputType = {
    id: number
    invoiceNumber: number
    taxInvoiceNumber: number
    purchaseOrderId: number
    supplierId: number
    outletId: number
    subtotalAmount: number
    taxAmount: number
    sessionId: number
    discountType: number
    discountAmount: number
    totalAmount: number
    currency: number
    status: number
    invoiceDate: number
    paymentDate: number
    dueDate: number
    remark: number
    performedBy: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type InvoiceAvgAggregateInputType = {
    id?: true
    purchaseOrderId?: true
    supplierId?: true
    outletId?: true
    subtotalAmount?: true
    taxAmount?: true
    sessionId?: true
    discountAmount?: true
    totalAmount?: true
    version?: true
  }

  export type InvoiceSumAggregateInputType = {
    id?: true
    purchaseOrderId?: true
    supplierId?: true
    outletId?: true
    subtotalAmount?: true
    taxAmount?: true
    sessionId?: true
    discountAmount?: true
    totalAmount?: true
    version?: true
  }

  export type InvoiceMinAggregateInputType = {
    id?: true
    invoiceNumber?: true
    taxInvoiceNumber?: true
    purchaseOrderId?: true
    supplierId?: true
    outletId?: true
    subtotalAmount?: true
    taxAmount?: true
    sessionId?: true
    discountType?: true
    discountAmount?: true
    totalAmount?: true
    currency?: true
    status?: true
    invoiceDate?: true
    paymentDate?: true
    dueDate?: true
    remark?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type InvoiceMaxAggregateInputType = {
    id?: true
    invoiceNumber?: true
    taxInvoiceNumber?: true
    purchaseOrderId?: true
    supplierId?: true
    outletId?: true
    subtotalAmount?: true
    taxAmount?: true
    sessionId?: true
    discountType?: true
    discountAmount?: true
    totalAmount?: true
    currency?: true
    status?: true
    invoiceDate?: true
    paymentDate?: true
    dueDate?: true
    remark?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type InvoiceCountAggregateInputType = {
    id?: true
    invoiceNumber?: true
    taxInvoiceNumber?: true
    purchaseOrderId?: true
    supplierId?: true
    outletId?: true
    subtotalAmount?: true
    taxAmount?: true
    sessionId?: true
    discountType?: true
    discountAmount?: true
    totalAmount?: true
    currency?: true
    status?: true
    invoiceDate?: true
    paymentDate?: true
    dueDate?: true
    remark?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type InvoiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invoice to aggregate.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Invoices
    **/
    _count?: true | InvoiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InvoiceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InvoiceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvoiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvoiceMaxAggregateInputType
  }

  export type GetInvoiceAggregateType<T extends InvoiceAggregateArgs> = {
        [P in keyof T & keyof AggregateInvoice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvoice[P]>
      : GetScalarType<T[P], AggregateInvoice[P]>
  }




  export type InvoiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithAggregationInput | InvoiceOrderByWithAggregationInput[]
    by: InvoiceScalarFieldEnum[] | InvoiceScalarFieldEnum
    having?: InvoiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvoiceCountAggregateInputType | true
    _avg?: InvoiceAvgAggregateInputType
    _sum?: InvoiceSumAggregateInputType
    _min?: InvoiceMinAggregateInputType
    _max?: InvoiceMaxAggregateInputType
  }

  export type InvoiceGroupByOutputType = {
    id: number
    invoiceNumber: string
    taxInvoiceNumber: string
    purchaseOrderId: number | null
    supplierId: number | null
    outletId: number
    subtotalAmount: Decimal
    taxAmount: Decimal
    sessionId: number | null
    discountType: string | null
    discountAmount: Decimal
    totalAmount: Decimal
    currency: string
    status: string
    invoiceDate: Date | null
    paymentDate: Date | null
    dueDate: Date | null
    remark: string | null
    performedBy: string | null
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: InvoiceCountAggregateOutputType | null
    _avg: InvoiceAvgAggregateOutputType | null
    _sum: InvoiceSumAggregateOutputType | null
    _min: InvoiceMinAggregateOutputType | null
    _max: InvoiceMaxAggregateOutputType | null
  }

  type GetInvoiceGroupByPayload<T extends InvoiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvoiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvoiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvoiceGroupByOutputType[P]>
            : GetScalarType<T[P], InvoiceGroupByOutputType[P]>
        }
      >
    >


  export type InvoiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceNumber?: boolean
    taxInvoiceNumber?: boolean
    purchaseOrderId?: boolean
    supplierId?: boolean
    outletId?: boolean
    subtotalAmount?: boolean
    taxAmount?: boolean
    sessionId?: boolean
    discountType?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    currency?: boolean
    status?: boolean
    invoiceDate?: boolean
    paymentDate?: boolean
    dueDate?: boolean
    remark?: boolean
    performedBy?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    session?: boolean | Invoice$sessionArgs<ExtArgs>
    purchaseOrder?: boolean | Invoice$purchaseOrderArgs<ExtArgs>
    supplier?: boolean | Invoice$supplierArgs<ExtArgs>
    invoiceItems?: boolean | Invoice$invoiceItemsArgs<ExtArgs>
    deliveryOrders?: boolean | Invoice$deliveryOrdersArgs<ExtArgs>
    _count?: boolean | InvoiceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoice"]>



  export type InvoiceSelectScalar = {
    id?: boolean
    invoiceNumber?: boolean
    taxInvoiceNumber?: boolean
    purchaseOrderId?: boolean
    supplierId?: boolean
    outletId?: boolean
    subtotalAmount?: boolean
    taxAmount?: boolean
    sessionId?: boolean
    discountType?: boolean
    discountAmount?: boolean
    totalAmount?: boolean
    currency?: boolean
    status?: boolean
    invoiceDate?: boolean
    paymentDate?: boolean
    dueDate?: boolean
    remark?: boolean
    performedBy?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type InvoiceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "invoiceNumber" | "taxInvoiceNumber" | "purchaseOrderId" | "supplierId" | "outletId" | "subtotalAmount" | "taxAmount" | "sessionId" | "discountType" | "discountAmount" | "totalAmount" | "currency" | "status" | "invoiceDate" | "paymentDate" | "dueDate" | "remark" | "performedBy" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["invoice"]>
  export type InvoiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    session?: boolean | Invoice$sessionArgs<ExtArgs>
    purchaseOrder?: boolean | Invoice$purchaseOrderArgs<ExtArgs>
    supplier?: boolean | Invoice$supplierArgs<ExtArgs>
    invoiceItems?: boolean | Invoice$invoiceItemsArgs<ExtArgs>
    deliveryOrders?: boolean | Invoice$deliveryOrdersArgs<ExtArgs>
    _count?: boolean | InvoiceCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $InvoicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Invoice"
    objects: {
      session: Prisma.$SessionPayload<ExtArgs> | null
      purchaseOrder: Prisma.$PurchaseOrderPayload<ExtArgs> | null
      supplier: Prisma.$SupplierPayload<ExtArgs> | null
      invoiceItems: Prisma.$InvoiceItemPayload<ExtArgs>[]
      deliveryOrders: Prisma.$DeliveryOrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      invoiceNumber: string
      taxInvoiceNumber: string
      purchaseOrderId: number | null
      supplierId: number | null
      outletId: number
      subtotalAmount: Prisma.Decimal
      taxAmount: Prisma.Decimal
      sessionId: number | null
      discountType: string | null
      discountAmount: Prisma.Decimal
      totalAmount: Prisma.Decimal
      currency: string
      status: string
      invoiceDate: Date | null
      paymentDate: Date | null
      dueDate: Date | null
      remark: string | null
      performedBy: string | null
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["invoice"]>
    composites: {}
  }

  type InvoiceGetPayload<S extends boolean | null | undefined | InvoiceDefaultArgs> = $Result.GetResult<Prisma.$InvoicePayload, S>

  type InvoiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InvoiceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InvoiceCountAggregateInputType | true
    }

  export interface InvoiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Invoice'], meta: { name: 'Invoice' } }
    /**
     * Find zero or one Invoice that matches the filter.
     * @param {InvoiceFindUniqueArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InvoiceFindUniqueArgs>(args: SelectSubset<T, InvoiceFindUniqueArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Invoice that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InvoiceFindUniqueOrThrowArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InvoiceFindUniqueOrThrowArgs>(args: SelectSubset<T, InvoiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Invoice that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindFirstArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InvoiceFindFirstArgs>(args?: SelectSubset<T, InvoiceFindFirstArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Invoice that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindFirstOrThrowArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InvoiceFindFirstOrThrowArgs>(args?: SelectSubset<T, InvoiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Invoices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Invoices
     * const invoices = await prisma.invoice.findMany()
     * 
     * // Get first 10 Invoices
     * const invoices = await prisma.invoice.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invoiceWithIdOnly = await prisma.invoice.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InvoiceFindManyArgs>(args?: SelectSubset<T, InvoiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Invoice.
     * @param {InvoiceCreateArgs} args - Arguments to create a Invoice.
     * @example
     * // Create one Invoice
     * const Invoice = await prisma.invoice.create({
     *   data: {
     *     // ... data to create a Invoice
     *   }
     * })
     * 
     */
    create<T extends InvoiceCreateArgs>(args: SelectSubset<T, InvoiceCreateArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Invoices.
     * @param {InvoiceCreateManyArgs} args - Arguments to create many Invoices.
     * @example
     * // Create many Invoices
     * const invoice = await prisma.invoice.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InvoiceCreateManyArgs>(args?: SelectSubset<T, InvoiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Invoice.
     * @param {InvoiceDeleteArgs} args - Arguments to delete one Invoice.
     * @example
     * // Delete one Invoice
     * const Invoice = await prisma.invoice.delete({
     *   where: {
     *     // ... filter to delete one Invoice
     *   }
     * })
     * 
     */
    delete<T extends InvoiceDeleteArgs>(args: SelectSubset<T, InvoiceDeleteArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Invoice.
     * @param {InvoiceUpdateArgs} args - Arguments to update one Invoice.
     * @example
     * // Update one Invoice
     * const invoice = await prisma.invoice.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InvoiceUpdateArgs>(args: SelectSubset<T, InvoiceUpdateArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Invoices.
     * @param {InvoiceDeleteManyArgs} args - Arguments to filter Invoices to delete.
     * @example
     * // Delete a few Invoices
     * const { count } = await prisma.invoice.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InvoiceDeleteManyArgs>(args?: SelectSubset<T, InvoiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Invoices
     * const invoice = await prisma.invoice.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InvoiceUpdateManyArgs>(args: SelectSubset<T, InvoiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Invoice.
     * @param {InvoiceUpsertArgs} args - Arguments to update or create a Invoice.
     * @example
     * // Update or create a Invoice
     * const invoice = await prisma.invoice.upsert({
     *   create: {
     *     // ... data to create a Invoice
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Invoice we want to update
     *   }
     * })
     */
    upsert<T extends InvoiceUpsertArgs>(args: SelectSubset<T, InvoiceUpsertArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Invoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceCountArgs} args - Arguments to filter Invoices to count.
     * @example
     * // Count the number of Invoices
     * const count = await prisma.invoice.count({
     *   where: {
     *     // ... the filter for the Invoices we want to count
     *   }
     * })
    **/
    count<T extends InvoiceCountArgs>(
      args?: Subset<T, InvoiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvoiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Invoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvoiceAggregateArgs>(args: Subset<T, InvoiceAggregateArgs>): Prisma.PrismaPromise<GetInvoiceAggregateType<T>>

    /**
     * Group by Invoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InvoiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InvoiceGroupByArgs['orderBy'] }
        : { orderBy?: InvoiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InvoiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvoiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Invoice model
   */
  readonly fields: InvoiceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Invoice.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InvoiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    session<T extends Invoice$sessionArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$sessionArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    purchaseOrder<T extends Invoice$purchaseOrderArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$purchaseOrderArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    supplier<T extends Invoice$supplierArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$supplierArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    invoiceItems<T extends Invoice$invoiceItemsArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$invoiceItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deliveryOrders<T extends Invoice$deliveryOrdersArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$deliveryOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Invoice model
   */
  interface InvoiceFieldRefs {
    readonly id: FieldRef<"Invoice", 'Int'>
    readonly invoiceNumber: FieldRef<"Invoice", 'String'>
    readonly taxInvoiceNumber: FieldRef<"Invoice", 'String'>
    readonly purchaseOrderId: FieldRef<"Invoice", 'Int'>
    readonly supplierId: FieldRef<"Invoice", 'Int'>
    readonly outletId: FieldRef<"Invoice", 'Int'>
    readonly subtotalAmount: FieldRef<"Invoice", 'Decimal'>
    readonly taxAmount: FieldRef<"Invoice", 'Decimal'>
    readonly sessionId: FieldRef<"Invoice", 'Int'>
    readonly discountType: FieldRef<"Invoice", 'String'>
    readonly discountAmount: FieldRef<"Invoice", 'Decimal'>
    readonly totalAmount: FieldRef<"Invoice", 'Decimal'>
    readonly currency: FieldRef<"Invoice", 'String'>
    readonly status: FieldRef<"Invoice", 'String'>
    readonly invoiceDate: FieldRef<"Invoice", 'DateTime'>
    readonly paymentDate: FieldRef<"Invoice", 'DateTime'>
    readonly dueDate: FieldRef<"Invoice", 'DateTime'>
    readonly remark: FieldRef<"Invoice", 'String'>
    readonly performedBy: FieldRef<"Invoice", 'String'>
    readonly deleted: FieldRef<"Invoice", 'Boolean'>
    readonly deletedAt: FieldRef<"Invoice", 'DateTime'>
    readonly createdAt: FieldRef<"Invoice", 'DateTime'>
    readonly updatedAt: FieldRef<"Invoice", 'DateTime'>
    readonly version: FieldRef<"Invoice", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Invoice findUnique
   */
  export type InvoiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice findUniqueOrThrow
   */
  export type InvoiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice findFirst
   */
  export type InvoiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invoices.
     */
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Invoice findFirstOrThrow
   */
  export type InvoiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invoices.
     */
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Invoice findMany
   */
  export type InvoiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoices to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Invoice create
   */
  export type InvoiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The data needed to create a Invoice.
     */
    data: XOR<InvoiceCreateInput, InvoiceUncheckedCreateInput>
  }

  /**
   * Invoice createMany
   */
  export type InvoiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Invoices.
     */
    data: InvoiceCreateManyInput | InvoiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Invoice update
   */
  export type InvoiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The data needed to update a Invoice.
     */
    data: XOR<InvoiceUpdateInput, InvoiceUncheckedUpdateInput>
    /**
     * Choose, which Invoice to update.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice updateMany
   */
  export type InvoiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Invoices.
     */
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyInput>
    /**
     * Filter which Invoices to update
     */
    where?: InvoiceWhereInput
    /**
     * Limit how many Invoices to update.
     */
    limit?: number
  }

  /**
   * Invoice upsert
   */
  export type InvoiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The filter to search for the Invoice to update in case it exists.
     */
    where: InvoiceWhereUniqueInput
    /**
     * In case the Invoice found by the `where` argument doesn't exist, create a new Invoice with this data.
     */
    create: XOR<InvoiceCreateInput, InvoiceUncheckedCreateInput>
    /**
     * In case the Invoice was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InvoiceUpdateInput, InvoiceUncheckedUpdateInput>
  }

  /**
   * Invoice delete
   */
  export type InvoiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter which Invoice to delete.
     */
    where: InvoiceWhereUniqueInput
  }

  /**
   * Invoice deleteMany
   */
  export type InvoiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invoices to delete
     */
    where?: InvoiceWhereInput
    /**
     * Limit how many Invoices to delete.
     */
    limit?: number
  }

  /**
   * Invoice.session
   */
  export type Invoice$sessionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
  }

  /**
   * Invoice.purchaseOrder
   */
  export type Invoice$purchaseOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    where?: PurchaseOrderWhereInput
  }

  /**
   * Invoice.supplier
   */
  export type Invoice$supplierArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Supplier
     */
    select?: SupplierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Supplier
     */
    omit?: SupplierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupplierInclude<ExtArgs> | null
    where?: SupplierWhereInput
  }

  /**
   * Invoice.invoiceItems
   */
  export type Invoice$invoiceItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceItem
     */
    select?: InvoiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceItem
     */
    omit?: InvoiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceItemInclude<ExtArgs> | null
    where?: InvoiceItemWhereInput
    orderBy?: InvoiceItemOrderByWithRelationInput | InvoiceItemOrderByWithRelationInput[]
    cursor?: InvoiceItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceItemScalarFieldEnum | InvoiceItemScalarFieldEnum[]
  }

  /**
   * Invoice.deliveryOrders
   */
  export type Invoice$deliveryOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrder
     */
    select?: DeliveryOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrder
     */
    omit?: DeliveryOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderInclude<ExtArgs> | null
    where?: DeliveryOrderWhereInput
    orderBy?: DeliveryOrderOrderByWithRelationInput | DeliveryOrderOrderByWithRelationInput[]
    cursor?: DeliveryOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeliveryOrderScalarFieldEnum | DeliveryOrderScalarFieldEnum[]
  }

  /**
   * Invoice without action
   */
  export type InvoiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
  }


  /**
   * Model InvoiceItem
   */

  export type AggregateInvoiceItem = {
    _count: InvoiceItemCountAggregateOutputType | null
    _avg: InvoiceItemAvgAggregateOutputType | null
    _sum: InvoiceItemSumAggregateOutputType | null
    _min: InvoiceItemMinAggregateOutputType | null
    _max: InvoiceItemMaxAggregateOutputType | null
  }

  export type InvoiceItemAvgAggregateOutputType = {
    id: number | null
    invoiceId: number | null
    itemId: number | null
    quantity: Decimal | null
    unitPrice: Decimal | null
    discountAmount: Decimal | null
    taxAmount: Decimal | null
    subtotal: Decimal | null
    version: number | null
  }

  export type InvoiceItemSumAggregateOutputType = {
    id: number | null
    invoiceId: number | null
    itemId: number | null
    quantity: Decimal | null
    unitPrice: Decimal | null
    discountAmount: Decimal | null
    taxAmount: Decimal | null
    subtotal: Decimal | null
    version: number | null
  }

  export type InvoiceItemMinAggregateOutputType = {
    id: number | null
    invoiceId: number | null
    itemId: number | null
    quantity: Decimal | null
    unitPrice: Decimal | null
    discountType: string | null
    discountAmount: Decimal | null
    taxAmount: Decimal | null
    subtotal: Decimal | null
    remark: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
    deletedAt: Date | null
    version: number | null
  }

  export type InvoiceItemMaxAggregateOutputType = {
    id: number | null
    invoiceId: number | null
    itemId: number | null
    quantity: Decimal | null
    unitPrice: Decimal | null
    discountType: string | null
    discountAmount: Decimal | null
    taxAmount: Decimal | null
    subtotal: Decimal | null
    remark: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
    deletedAt: Date | null
    version: number | null
  }

  export type InvoiceItemCountAggregateOutputType = {
    id: number
    invoiceId: number
    itemId: number
    quantity: number
    unitPrice: number
    discountType: number
    discountAmount: number
    taxAmount: number
    subtotal: number
    remark: number
    createdAt: number
    updatedAt: number
    deleted: number
    deletedAt: number
    version: number
    _all: number
  }


  export type InvoiceItemAvgAggregateInputType = {
    id?: true
    invoiceId?: true
    itemId?: true
    quantity?: true
    unitPrice?: true
    discountAmount?: true
    taxAmount?: true
    subtotal?: true
    version?: true
  }

  export type InvoiceItemSumAggregateInputType = {
    id?: true
    invoiceId?: true
    itemId?: true
    quantity?: true
    unitPrice?: true
    discountAmount?: true
    taxAmount?: true
    subtotal?: true
    version?: true
  }

  export type InvoiceItemMinAggregateInputType = {
    id?: true
    invoiceId?: true
    itemId?: true
    quantity?: true
    unitPrice?: true
    discountType?: true
    discountAmount?: true
    taxAmount?: true
    subtotal?: true
    remark?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    version?: true
  }

  export type InvoiceItemMaxAggregateInputType = {
    id?: true
    invoiceId?: true
    itemId?: true
    quantity?: true
    unitPrice?: true
    discountType?: true
    discountAmount?: true
    taxAmount?: true
    subtotal?: true
    remark?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    version?: true
  }

  export type InvoiceItemCountAggregateInputType = {
    id?: true
    invoiceId?: true
    itemId?: true
    quantity?: true
    unitPrice?: true
    discountType?: true
    discountAmount?: true
    taxAmount?: true
    subtotal?: true
    remark?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    version?: true
    _all?: true
  }

  export type InvoiceItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InvoiceItem to aggregate.
     */
    where?: InvoiceItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceItems to fetch.
     */
    orderBy?: InvoiceItemOrderByWithRelationInput | InvoiceItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InvoiceItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InvoiceItems
    **/
    _count?: true | InvoiceItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InvoiceItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InvoiceItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvoiceItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvoiceItemMaxAggregateInputType
  }

  export type GetInvoiceItemAggregateType<T extends InvoiceItemAggregateArgs> = {
        [P in keyof T & keyof AggregateInvoiceItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvoiceItem[P]>
      : GetScalarType<T[P], AggregateInvoiceItem[P]>
  }




  export type InvoiceItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceItemWhereInput
    orderBy?: InvoiceItemOrderByWithAggregationInput | InvoiceItemOrderByWithAggregationInput[]
    by: InvoiceItemScalarFieldEnum[] | InvoiceItemScalarFieldEnum
    having?: InvoiceItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvoiceItemCountAggregateInputType | true
    _avg?: InvoiceItemAvgAggregateInputType
    _sum?: InvoiceItemSumAggregateInputType
    _min?: InvoiceItemMinAggregateInputType
    _max?: InvoiceItemMaxAggregateInputType
  }

  export type InvoiceItemGroupByOutputType = {
    id: number
    invoiceId: number
    itemId: number
    quantity: Decimal
    unitPrice: Decimal
    discountType: string | null
    discountAmount: Decimal | null
    taxAmount: Decimal | null
    subtotal: Decimal
    remark: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean
    deletedAt: Date | null
    version: number | null
    _count: InvoiceItemCountAggregateOutputType | null
    _avg: InvoiceItemAvgAggregateOutputType | null
    _sum: InvoiceItemSumAggregateOutputType | null
    _min: InvoiceItemMinAggregateOutputType | null
    _max: InvoiceItemMaxAggregateOutputType | null
  }

  type GetInvoiceItemGroupByPayload<T extends InvoiceItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvoiceItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvoiceItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvoiceItemGroupByOutputType[P]>
            : GetScalarType<T[P], InvoiceItemGroupByOutputType[P]>
        }
      >
    >


  export type InvoiceItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceId?: boolean
    itemId?: boolean
    quantity?: boolean
    unitPrice?: boolean
    discountType?: boolean
    discountAmount?: boolean
    taxAmount?: boolean
    subtotal?: boolean
    remark?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    deletedAt?: boolean
    version?: boolean
    invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    item?: boolean | ItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoiceItem"]>



  export type InvoiceItemSelectScalar = {
    id?: boolean
    invoiceId?: boolean
    itemId?: boolean
    quantity?: boolean
    unitPrice?: boolean
    discountType?: boolean
    discountAmount?: boolean
    taxAmount?: boolean
    subtotal?: boolean
    remark?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    deletedAt?: boolean
    version?: boolean
  }

  export type InvoiceItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "invoiceId" | "itemId" | "quantity" | "unitPrice" | "discountType" | "discountAmount" | "taxAmount" | "subtotal" | "remark" | "createdAt" | "updatedAt" | "deleted" | "deletedAt" | "version", ExtArgs["result"]["invoiceItem"]>
  export type InvoiceItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    item?: boolean | ItemDefaultArgs<ExtArgs>
  }

  export type $InvoiceItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InvoiceItem"
    objects: {
      invoice: Prisma.$InvoicePayload<ExtArgs>
      item: Prisma.$ItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      invoiceId: number
      itemId: number
      quantity: Prisma.Decimal
      unitPrice: Prisma.Decimal
      discountType: string | null
      discountAmount: Prisma.Decimal | null
      taxAmount: Prisma.Decimal | null
      subtotal: Prisma.Decimal
      remark: string | null
      createdAt: Date | null
      updatedAt: Date | null
      deleted: boolean
      deletedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["invoiceItem"]>
    composites: {}
  }

  type InvoiceItemGetPayload<S extends boolean | null | undefined | InvoiceItemDefaultArgs> = $Result.GetResult<Prisma.$InvoiceItemPayload, S>

  type InvoiceItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InvoiceItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InvoiceItemCountAggregateInputType | true
    }

  export interface InvoiceItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InvoiceItem'], meta: { name: 'InvoiceItem' } }
    /**
     * Find zero or one InvoiceItem that matches the filter.
     * @param {InvoiceItemFindUniqueArgs} args - Arguments to find a InvoiceItem
     * @example
     * // Get one InvoiceItem
     * const invoiceItem = await prisma.invoiceItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InvoiceItemFindUniqueArgs>(args: SelectSubset<T, InvoiceItemFindUniqueArgs<ExtArgs>>): Prisma__InvoiceItemClient<$Result.GetResult<Prisma.$InvoiceItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InvoiceItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InvoiceItemFindUniqueOrThrowArgs} args - Arguments to find a InvoiceItem
     * @example
     * // Get one InvoiceItem
     * const invoiceItem = await prisma.invoiceItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InvoiceItemFindUniqueOrThrowArgs>(args: SelectSubset<T, InvoiceItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InvoiceItemClient<$Result.GetResult<Prisma.$InvoiceItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InvoiceItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceItemFindFirstArgs} args - Arguments to find a InvoiceItem
     * @example
     * // Get one InvoiceItem
     * const invoiceItem = await prisma.invoiceItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InvoiceItemFindFirstArgs>(args?: SelectSubset<T, InvoiceItemFindFirstArgs<ExtArgs>>): Prisma__InvoiceItemClient<$Result.GetResult<Prisma.$InvoiceItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InvoiceItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceItemFindFirstOrThrowArgs} args - Arguments to find a InvoiceItem
     * @example
     * // Get one InvoiceItem
     * const invoiceItem = await prisma.invoiceItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InvoiceItemFindFirstOrThrowArgs>(args?: SelectSubset<T, InvoiceItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__InvoiceItemClient<$Result.GetResult<Prisma.$InvoiceItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InvoiceItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InvoiceItems
     * const invoiceItems = await prisma.invoiceItem.findMany()
     * 
     * // Get first 10 InvoiceItems
     * const invoiceItems = await prisma.invoiceItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invoiceItemWithIdOnly = await prisma.invoiceItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InvoiceItemFindManyArgs>(args?: SelectSubset<T, InvoiceItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoiceItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InvoiceItem.
     * @param {InvoiceItemCreateArgs} args - Arguments to create a InvoiceItem.
     * @example
     * // Create one InvoiceItem
     * const InvoiceItem = await prisma.invoiceItem.create({
     *   data: {
     *     // ... data to create a InvoiceItem
     *   }
     * })
     * 
     */
    create<T extends InvoiceItemCreateArgs>(args: SelectSubset<T, InvoiceItemCreateArgs<ExtArgs>>): Prisma__InvoiceItemClient<$Result.GetResult<Prisma.$InvoiceItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InvoiceItems.
     * @param {InvoiceItemCreateManyArgs} args - Arguments to create many InvoiceItems.
     * @example
     * // Create many InvoiceItems
     * const invoiceItem = await prisma.invoiceItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InvoiceItemCreateManyArgs>(args?: SelectSubset<T, InvoiceItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a InvoiceItem.
     * @param {InvoiceItemDeleteArgs} args - Arguments to delete one InvoiceItem.
     * @example
     * // Delete one InvoiceItem
     * const InvoiceItem = await prisma.invoiceItem.delete({
     *   where: {
     *     // ... filter to delete one InvoiceItem
     *   }
     * })
     * 
     */
    delete<T extends InvoiceItemDeleteArgs>(args: SelectSubset<T, InvoiceItemDeleteArgs<ExtArgs>>): Prisma__InvoiceItemClient<$Result.GetResult<Prisma.$InvoiceItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InvoiceItem.
     * @param {InvoiceItemUpdateArgs} args - Arguments to update one InvoiceItem.
     * @example
     * // Update one InvoiceItem
     * const invoiceItem = await prisma.invoiceItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InvoiceItemUpdateArgs>(args: SelectSubset<T, InvoiceItemUpdateArgs<ExtArgs>>): Prisma__InvoiceItemClient<$Result.GetResult<Prisma.$InvoiceItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InvoiceItems.
     * @param {InvoiceItemDeleteManyArgs} args - Arguments to filter InvoiceItems to delete.
     * @example
     * // Delete a few InvoiceItems
     * const { count } = await prisma.invoiceItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InvoiceItemDeleteManyArgs>(args?: SelectSubset<T, InvoiceItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InvoiceItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InvoiceItems
     * const invoiceItem = await prisma.invoiceItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InvoiceItemUpdateManyArgs>(args: SelectSubset<T, InvoiceItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one InvoiceItem.
     * @param {InvoiceItemUpsertArgs} args - Arguments to update or create a InvoiceItem.
     * @example
     * // Update or create a InvoiceItem
     * const invoiceItem = await prisma.invoiceItem.upsert({
     *   create: {
     *     // ... data to create a InvoiceItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InvoiceItem we want to update
     *   }
     * })
     */
    upsert<T extends InvoiceItemUpsertArgs>(args: SelectSubset<T, InvoiceItemUpsertArgs<ExtArgs>>): Prisma__InvoiceItemClient<$Result.GetResult<Prisma.$InvoiceItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InvoiceItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceItemCountArgs} args - Arguments to filter InvoiceItems to count.
     * @example
     * // Count the number of InvoiceItems
     * const count = await prisma.invoiceItem.count({
     *   where: {
     *     // ... the filter for the InvoiceItems we want to count
     *   }
     * })
    **/
    count<T extends InvoiceItemCountArgs>(
      args?: Subset<T, InvoiceItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvoiceItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InvoiceItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvoiceItemAggregateArgs>(args: Subset<T, InvoiceItemAggregateArgs>): Prisma.PrismaPromise<GetInvoiceItemAggregateType<T>>

    /**
     * Group by InvoiceItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InvoiceItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InvoiceItemGroupByArgs['orderBy'] }
        : { orderBy?: InvoiceItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InvoiceItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvoiceItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InvoiceItem model
   */
  readonly fields: InvoiceItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InvoiceItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InvoiceItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    invoice<T extends InvoiceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InvoiceDefaultArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    item<T extends ItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ItemDefaultArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InvoiceItem model
   */
  interface InvoiceItemFieldRefs {
    readonly id: FieldRef<"InvoiceItem", 'Int'>
    readonly invoiceId: FieldRef<"InvoiceItem", 'Int'>
    readonly itemId: FieldRef<"InvoiceItem", 'Int'>
    readonly quantity: FieldRef<"InvoiceItem", 'Decimal'>
    readonly unitPrice: FieldRef<"InvoiceItem", 'Decimal'>
    readonly discountType: FieldRef<"InvoiceItem", 'String'>
    readonly discountAmount: FieldRef<"InvoiceItem", 'Decimal'>
    readonly taxAmount: FieldRef<"InvoiceItem", 'Decimal'>
    readonly subtotal: FieldRef<"InvoiceItem", 'Decimal'>
    readonly remark: FieldRef<"InvoiceItem", 'String'>
    readonly createdAt: FieldRef<"InvoiceItem", 'DateTime'>
    readonly updatedAt: FieldRef<"InvoiceItem", 'DateTime'>
    readonly deleted: FieldRef<"InvoiceItem", 'Boolean'>
    readonly deletedAt: FieldRef<"InvoiceItem", 'DateTime'>
    readonly version: FieldRef<"InvoiceItem", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * InvoiceItem findUnique
   */
  export type InvoiceItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceItem
     */
    select?: InvoiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceItem
     */
    omit?: InvoiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceItemInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceItem to fetch.
     */
    where: InvoiceItemWhereUniqueInput
  }

  /**
   * InvoiceItem findUniqueOrThrow
   */
  export type InvoiceItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceItem
     */
    select?: InvoiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceItem
     */
    omit?: InvoiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceItemInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceItem to fetch.
     */
    where: InvoiceItemWhereUniqueInput
  }

  /**
   * InvoiceItem findFirst
   */
  export type InvoiceItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceItem
     */
    select?: InvoiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceItem
     */
    omit?: InvoiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceItemInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceItem to fetch.
     */
    where?: InvoiceItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceItems to fetch.
     */
    orderBy?: InvoiceItemOrderByWithRelationInput | InvoiceItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InvoiceItems.
     */
    cursor?: InvoiceItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InvoiceItems.
     */
    distinct?: InvoiceItemScalarFieldEnum | InvoiceItemScalarFieldEnum[]
  }

  /**
   * InvoiceItem findFirstOrThrow
   */
  export type InvoiceItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceItem
     */
    select?: InvoiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceItem
     */
    omit?: InvoiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceItemInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceItem to fetch.
     */
    where?: InvoiceItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceItems to fetch.
     */
    orderBy?: InvoiceItemOrderByWithRelationInput | InvoiceItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InvoiceItems.
     */
    cursor?: InvoiceItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InvoiceItems.
     */
    distinct?: InvoiceItemScalarFieldEnum | InvoiceItemScalarFieldEnum[]
  }

  /**
   * InvoiceItem findMany
   */
  export type InvoiceItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceItem
     */
    select?: InvoiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceItem
     */
    omit?: InvoiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceItemInclude<ExtArgs> | null
    /**
     * Filter, which InvoiceItems to fetch.
     */
    where?: InvoiceItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InvoiceItems to fetch.
     */
    orderBy?: InvoiceItemOrderByWithRelationInput | InvoiceItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InvoiceItems.
     */
    cursor?: InvoiceItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InvoiceItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InvoiceItems.
     */
    skip?: number
    distinct?: InvoiceItemScalarFieldEnum | InvoiceItemScalarFieldEnum[]
  }

  /**
   * InvoiceItem create
   */
  export type InvoiceItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceItem
     */
    select?: InvoiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceItem
     */
    omit?: InvoiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceItemInclude<ExtArgs> | null
    /**
     * The data needed to create a InvoiceItem.
     */
    data: XOR<InvoiceItemCreateInput, InvoiceItemUncheckedCreateInput>
  }

  /**
   * InvoiceItem createMany
   */
  export type InvoiceItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InvoiceItems.
     */
    data: InvoiceItemCreateManyInput | InvoiceItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InvoiceItem update
   */
  export type InvoiceItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceItem
     */
    select?: InvoiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceItem
     */
    omit?: InvoiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceItemInclude<ExtArgs> | null
    /**
     * The data needed to update a InvoiceItem.
     */
    data: XOR<InvoiceItemUpdateInput, InvoiceItemUncheckedUpdateInput>
    /**
     * Choose, which InvoiceItem to update.
     */
    where: InvoiceItemWhereUniqueInput
  }

  /**
   * InvoiceItem updateMany
   */
  export type InvoiceItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InvoiceItems.
     */
    data: XOR<InvoiceItemUpdateManyMutationInput, InvoiceItemUncheckedUpdateManyInput>
    /**
     * Filter which InvoiceItems to update
     */
    where?: InvoiceItemWhereInput
    /**
     * Limit how many InvoiceItems to update.
     */
    limit?: number
  }

  /**
   * InvoiceItem upsert
   */
  export type InvoiceItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceItem
     */
    select?: InvoiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceItem
     */
    omit?: InvoiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceItemInclude<ExtArgs> | null
    /**
     * The filter to search for the InvoiceItem to update in case it exists.
     */
    where: InvoiceItemWhereUniqueInput
    /**
     * In case the InvoiceItem found by the `where` argument doesn't exist, create a new InvoiceItem with this data.
     */
    create: XOR<InvoiceItemCreateInput, InvoiceItemUncheckedCreateInput>
    /**
     * In case the InvoiceItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InvoiceItemUpdateInput, InvoiceItemUncheckedUpdateInput>
  }

  /**
   * InvoiceItem delete
   */
  export type InvoiceItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceItem
     */
    select?: InvoiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceItem
     */
    omit?: InvoiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceItemInclude<ExtArgs> | null
    /**
     * Filter which InvoiceItem to delete.
     */
    where: InvoiceItemWhereUniqueInput
  }

  /**
   * InvoiceItem deleteMany
   */
  export type InvoiceItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InvoiceItems to delete
     */
    where?: InvoiceItemWhereInput
    /**
     * Limit how many InvoiceItems to delete.
     */
    limit?: number
  }

  /**
   * InvoiceItem without action
   */
  export type InvoiceItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceItem
     */
    select?: InvoiceItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InvoiceItem
     */
    omit?: InvoiceItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceItemInclude<ExtArgs> | null
  }


  /**
   * Model DeliveryOrder
   */

  export type AggregateDeliveryOrder = {
    _count: DeliveryOrderCountAggregateOutputType | null
    _avg: DeliveryOrderAvgAggregateOutputType | null
    _sum: DeliveryOrderSumAggregateOutputType | null
    _min: DeliveryOrderMinAggregateOutputType | null
    _max: DeliveryOrderMaxAggregateOutputType | null
  }

  export type DeliveryOrderAvgAggregateOutputType = {
    id: number | null
    outletId: number | null
    customerId: number | null
    purchaseOrderId: number | null
    supplierId: number | null
    invoiceId: number | null
    sessionId: number | null
    version: number | null
  }

  export type DeliveryOrderSumAggregateOutputType = {
    id: number | null
    outletId: number | null
    customerId: number | null
    purchaseOrderId: number | null
    supplierId: number | null
    invoiceId: number | null
    sessionId: number | null
    version: number | null
  }

  export type DeliveryOrderMinAggregateOutputType = {
    id: number | null
    trackingNumber: string | null
    outletId: number | null
    customerId: number | null
    purchaseOrderId: number | null
    supplierId: number | null
    invoiceId: number | null
    sessionId: number | null
    deliveryDate: Date | null
    deliveryStreet: string | null
    deliveryCity: string | null
    deliveryState: string | null
    deliveryPostalCode: string | null
    deliveryCountry: string | null
    status: string | null
    remark: string | null
    performedBy: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type DeliveryOrderMaxAggregateOutputType = {
    id: number | null
    trackingNumber: string | null
    outletId: number | null
    customerId: number | null
    purchaseOrderId: number | null
    supplierId: number | null
    invoiceId: number | null
    sessionId: number | null
    deliveryDate: Date | null
    deliveryStreet: string | null
    deliveryCity: string | null
    deliveryState: string | null
    deliveryPostalCode: string | null
    deliveryCountry: string | null
    status: string | null
    remark: string | null
    performedBy: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type DeliveryOrderCountAggregateOutputType = {
    id: number
    trackingNumber: number
    outletId: number
    customerId: number
    purchaseOrderId: number
    supplierId: number
    invoiceId: number
    sessionId: number
    deliveryDate: number
    deliveryStreet: number
    deliveryCity: number
    deliveryState: number
    deliveryPostalCode: number
    deliveryCountry: number
    status: number
    remark: number
    performedBy: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type DeliveryOrderAvgAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    purchaseOrderId?: true
    supplierId?: true
    invoiceId?: true
    sessionId?: true
    version?: true
  }

  export type DeliveryOrderSumAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    purchaseOrderId?: true
    supplierId?: true
    invoiceId?: true
    sessionId?: true
    version?: true
  }

  export type DeliveryOrderMinAggregateInputType = {
    id?: true
    trackingNumber?: true
    outletId?: true
    customerId?: true
    purchaseOrderId?: true
    supplierId?: true
    invoiceId?: true
    sessionId?: true
    deliveryDate?: true
    deliveryStreet?: true
    deliveryCity?: true
    deliveryState?: true
    deliveryPostalCode?: true
    deliveryCountry?: true
    status?: true
    remark?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type DeliveryOrderMaxAggregateInputType = {
    id?: true
    trackingNumber?: true
    outletId?: true
    customerId?: true
    purchaseOrderId?: true
    supplierId?: true
    invoiceId?: true
    sessionId?: true
    deliveryDate?: true
    deliveryStreet?: true
    deliveryCity?: true
    deliveryState?: true
    deliveryPostalCode?: true
    deliveryCountry?: true
    status?: true
    remark?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type DeliveryOrderCountAggregateInputType = {
    id?: true
    trackingNumber?: true
    outletId?: true
    customerId?: true
    purchaseOrderId?: true
    supplierId?: true
    invoiceId?: true
    sessionId?: true
    deliveryDate?: true
    deliveryStreet?: true
    deliveryCity?: true
    deliveryState?: true
    deliveryPostalCode?: true
    deliveryCountry?: true
    status?: true
    remark?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type DeliveryOrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DeliveryOrder to aggregate.
     */
    where?: DeliveryOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeliveryOrders to fetch.
     */
    orderBy?: DeliveryOrderOrderByWithRelationInput | DeliveryOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DeliveryOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeliveryOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeliveryOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DeliveryOrders
    **/
    _count?: true | DeliveryOrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DeliveryOrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DeliveryOrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DeliveryOrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DeliveryOrderMaxAggregateInputType
  }

  export type GetDeliveryOrderAggregateType<T extends DeliveryOrderAggregateArgs> = {
        [P in keyof T & keyof AggregateDeliveryOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDeliveryOrder[P]>
      : GetScalarType<T[P], AggregateDeliveryOrder[P]>
  }




  export type DeliveryOrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryOrderWhereInput
    orderBy?: DeliveryOrderOrderByWithAggregationInput | DeliveryOrderOrderByWithAggregationInput[]
    by: DeliveryOrderScalarFieldEnum[] | DeliveryOrderScalarFieldEnum
    having?: DeliveryOrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DeliveryOrderCountAggregateInputType | true
    _avg?: DeliveryOrderAvgAggregateInputType
    _sum?: DeliveryOrderSumAggregateInputType
    _min?: DeliveryOrderMinAggregateInputType
    _max?: DeliveryOrderMaxAggregateInputType
  }

  export type DeliveryOrderGroupByOutputType = {
    id: number
    trackingNumber: string | null
    outletId: number
    customerId: number | null
    purchaseOrderId: number | null
    supplierId: number | null
    invoiceId: number | null
    sessionId: number | null
    deliveryDate: Date | null
    deliveryStreet: string | null
    deliveryCity: string | null
    deliveryState: string | null
    deliveryPostalCode: string | null
    deliveryCountry: string | null
    status: string
    remark: string | null
    performedBy: string | null
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: DeliveryOrderCountAggregateOutputType | null
    _avg: DeliveryOrderAvgAggregateOutputType | null
    _sum: DeliveryOrderSumAggregateOutputType | null
    _min: DeliveryOrderMinAggregateOutputType | null
    _max: DeliveryOrderMaxAggregateOutputType | null
  }

  type GetDeliveryOrderGroupByPayload<T extends DeliveryOrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DeliveryOrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DeliveryOrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DeliveryOrderGroupByOutputType[P]>
            : GetScalarType<T[P], DeliveryOrderGroupByOutputType[P]>
        }
      >
    >


  export type DeliveryOrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    trackingNumber?: boolean
    outletId?: boolean
    customerId?: boolean
    purchaseOrderId?: boolean
    supplierId?: boolean
    invoiceId?: boolean
    sessionId?: boolean
    deliveryDate?: boolean
    deliveryStreet?: boolean
    deliveryCity?: boolean
    deliveryState?: boolean
    deliveryPostalCode?: boolean
    deliveryCountry?: boolean
    status?: boolean
    remark?: boolean
    performedBy?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    session?: boolean | DeliveryOrder$sessionArgs<ExtArgs>
    purchaseOrder?: boolean | DeliveryOrder$purchaseOrderArgs<ExtArgs>
    invoice?: boolean | DeliveryOrder$invoiceArgs<ExtArgs>
    deliveryOrderItems?: boolean | DeliveryOrder$deliveryOrderItemsArgs<ExtArgs>
    _count?: boolean | DeliveryOrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["deliveryOrder"]>



  export type DeliveryOrderSelectScalar = {
    id?: boolean
    trackingNumber?: boolean
    outletId?: boolean
    customerId?: boolean
    purchaseOrderId?: boolean
    supplierId?: boolean
    invoiceId?: boolean
    sessionId?: boolean
    deliveryDate?: boolean
    deliveryStreet?: boolean
    deliveryCity?: boolean
    deliveryState?: boolean
    deliveryPostalCode?: boolean
    deliveryCountry?: boolean
    status?: boolean
    remark?: boolean
    performedBy?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type DeliveryOrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "trackingNumber" | "outletId" | "customerId" | "purchaseOrderId" | "supplierId" | "invoiceId" | "sessionId" | "deliveryDate" | "deliveryStreet" | "deliveryCity" | "deliveryState" | "deliveryPostalCode" | "deliveryCountry" | "status" | "remark" | "performedBy" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["deliveryOrder"]>
  export type DeliveryOrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    session?: boolean | DeliveryOrder$sessionArgs<ExtArgs>
    purchaseOrder?: boolean | DeliveryOrder$purchaseOrderArgs<ExtArgs>
    invoice?: boolean | DeliveryOrder$invoiceArgs<ExtArgs>
    deliveryOrderItems?: boolean | DeliveryOrder$deliveryOrderItemsArgs<ExtArgs>
    _count?: boolean | DeliveryOrderCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $DeliveryOrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DeliveryOrder"
    objects: {
      session: Prisma.$SessionPayload<ExtArgs> | null
      purchaseOrder: Prisma.$PurchaseOrderPayload<ExtArgs> | null
      invoice: Prisma.$InvoicePayload<ExtArgs> | null
      deliveryOrderItems: Prisma.$DeliveryOrderItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      trackingNumber: string | null
      outletId: number
      customerId: number | null
      purchaseOrderId: number | null
      supplierId: number | null
      invoiceId: number | null
      sessionId: number | null
      deliveryDate: Date | null
      deliveryStreet: string | null
      deliveryCity: string | null
      deliveryState: string | null
      deliveryPostalCode: string | null
      deliveryCountry: string | null
      status: string
      remark: string | null
      performedBy: string | null
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["deliveryOrder"]>
    composites: {}
  }

  type DeliveryOrderGetPayload<S extends boolean | null | undefined | DeliveryOrderDefaultArgs> = $Result.GetResult<Prisma.$DeliveryOrderPayload, S>

  type DeliveryOrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DeliveryOrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DeliveryOrderCountAggregateInputType | true
    }

  export interface DeliveryOrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DeliveryOrder'], meta: { name: 'DeliveryOrder' } }
    /**
     * Find zero or one DeliveryOrder that matches the filter.
     * @param {DeliveryOrderFindUniqueArgs} args - Arguments to find a DeliveryOrder
     * @example
     * // Get one DeliveryOrder
     * const deliveryOrder = await prisma.deliveryOrder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DeliveryOrderFindUniqueArgs>(args: SelectSubset<T, DeliveryOrderFindUniqueArgs<ExtArgs>>): Prisma__DeliveryOrderClient<$Result.GetResult<Prisma.$DeliveryOrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DeliveryOrder that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DeliveryOrderFindUniqueOrThrowArgs} args - Arguments to find a DeliveryOrder
     * @example
     * // Get one DeliveryOrder
     * const deliveryOrder = await prisma.deliveryOrder.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DeliveryOrderFindUniqueOrThrowArgs>(args: SelectSubset<T, DeliveryOrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DeliveryOrderClient<$Result.GetResult<Prisma.$DeliveryOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DeliveryOrder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryOrderFindFirstArgs} args - Arguments to find a DeliveryOrder
     * @example
     * // Get one DeliveryOrder
     * const deliveryOrder = await prisma.deliveryOrder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DeliveryOrderFindFirstArgs>(args?: SelectSubset<T, DeliveryOrderFindFirstArgs<ExtArgs>>): Prisma__DeliveryOrderClient<$Result.GetResult<Prisma.$DeliveryOrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DeliveryOrder that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryOrderFindFirstOrThrowArgs} args - Arguments to find a DeliveryOrder
     * @example
     * // Get one DeliveryOrder
     * const deliveryOrder = await prisma.deliveryOrder.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DeliveryOrderFindFirstOrThrowArgs>(args?: SelectSubset<T, DeliveryOrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__DeliveryOrderClient<$Result.GetResult<Prisma.$DeliveryOrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DeliveryOrders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryOrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DeliveryOrders
     * const deliveryOrders = await prisma.deliveryOrder.findMany()
     * 
     * // Get first 10 DeliveryOrders
     * const deliveryOrders = await prisma.deliveryOrder.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const deliveryOrderWithIdOnly = await prisma.deliveryOrder.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DeliveryOrderFindManyArgs>(args?: SelectSubset<T, DeliveryOrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DeliveryOrder.
     * @param {DeliveryOrderCreateArgs} args - Arguments to create a DeliveryOrder.
     * @example
     * // Create one DeliveryOrder
     * const DeliveryOrder = await prisma.deliveryOrder.create({
     *   data: {
     *     // ... data to create a DeliveryOrder
     *   }
     * })
     * 
     */
    create<T extends DeliveryOrderCreateArgs>(args: SelectSubset<T, DeliveryOrderCreateArgs<ExtArgs>>): Prisma__DeliveryOrderClient<$Result.GetResult<Prisma.$DeliveryOrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DeliveryOrders.
     * @param {DeliveryOrderCreateManyArgs} args - Arguments to create many DeliveryOrders.
     * @example
     * // Create many DeliveryOrders
     * const deliveryOrder = await prisma.deliveryOrder.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DeliveryOrderCreateManyArgs>(args?: SelectSubset<T, DeliveryOrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a DeliveryOrder.
     * @param {DeliveryOrderDeleteArgs} args - Arguments to delete one DeliveryOrder.
     * @example
     * // Delete one DeliveryOrder
     * const DeliveryOrder = await prisma.deliveryOrder.delete({
     *   where: {
     *     // ... filter to delete one DeliveryOrder
     *   }
     * })
     * 
     */
    delete<T extends DeliveryOrderDeleteArgs>(args: SelectSubset<T, DeliveryOrderDeleteArgs<ExtArgs>>): Prisma__DeliveryOrderClient<$Result.GetResult<Prisma.$DeliveryOrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DeliveryOrder.
     * @param {DeliveryOrderUpdateArgs} args - Arguments to update one DeliveryOrder.
     * @example
     * // Update one DeliveryOrder
     * const deliveryOrder = await prisma.deliveryOrder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DeliveryOrderUpdateArgs>(args: SelectSubset<T, DeliveryOrderUpdateArgs<ExtArgs>>): Prisma__DeliveryOrderClient<$Result.GetResult<Prisma.$DeliveryOrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DeliveryOrders.
     * @param {DeliveryOrderDeleteManyArgs} args - Arguments to filter DeliveryOrders to delete.
     * @example
     * // Delete a few DeliveryOrders
     * const { count } = await prisma.deliveryOrder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DeliveryOrderDeleteManyArgs>(args?: SelectSubset<T, DeliveryOrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DeliveryOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryOrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DeliveryOrders
     * const deliveryOrder = await prisma.deliveryOrder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DeliveryOrderUpdateManyArgs>(args: SelectSubset<T, DeliveryOrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DeliveryOrder.
     * @param {DeliveryOrderUpsertArgs} args - Arguments to update or create a DeliveryOrder.
     * @example
     * // Update or create a DeliveryOrder
     * const deliveryOrder = await prisma.deliveryOrder.upsert({
     *   create: {
     *     // ... data to create a DeliveryOrder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DeliveryOrder we want to update
     *   }
     * })
     */
    upsert<T extends DeliveryOrderUpsertArgs>(args: SelectSubset<T, DeliveryOrderUpsertArgs<ExtArgs>>): Prisma__DeliveryOrderClient<$Result.GetResult<Prisma.$DeliveryOrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DeliveryOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryOrderCountArgs} args - Arguments to filter DeliveryOrders to count.
     * @example
     * // Count the number of DeliveryOrders
     * const count = await prisma.deliveryOrder.count({
     *   where: {
     *     // ... the filter for the DeliveryOrders we want to count
     *   }
     * })
    **/
    count<T extends DeliveryOrderCountArgs>(
      args?: Subset<T, DeliveryOrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DeliveryOrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DeliveryOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryOrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DeliveryOrderAggregateArgs>(args: Subset<T, DeliveryOrderAggregateArgs>): Prisma.PrismaPromise<GetDeliveryOrderAggregateType<T>>

    /**
     * Group by DeliveryOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryOrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DeliveryOrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DeliveryOrderGroupByArgs['orderBy'] }
        : { orderBy?: DeliveryOrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DeliveryOrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDeliveryOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DeliveryOrder model
   */
  readonly fields: DeliveryOrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DeliveryOrder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DeliveryOrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    session<T extends DeliveryOrder$sessionArgs<ExtArgs> = {}>(args?: Subset<T, DeliveryOrder$sessionArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    purchaseOrder<T extends DeliveryOrder$purchaseOrderArgs<ExtArgs> = {}>(args?: Subset<T, DeliveryOrder$purchaseOrderArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    invoice<T extends DeliveryOrder$invoiceArgs<ExtArgs> = {}>(args?: Subset<T, DeliveryOrder$invoiceArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    deliveryOrderItems<T extends DeliveryOrder$deliveryOrderItemsArgs<ExtArgs> = {}>(args?: Subset<T, DeliveryOrder$deliveryOrderItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryOrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DeliveryOrder model
   */
  interface DeliveryOrderFieldRefs {
    readonly id: FieldRef<"DeliveryOrder", 'Int'>
    readonly trackingNumber: FieldRef<"DeliveryOrder", 'String'>
    readonly outletId: FieldRef<"DeliveryOrder", 'Int'>
    readonly customerId: FieldRef<"DeliveryOrder", 'Int'>
    readonly purchaseOrderId: FieldRef<"DeliveryOrder", 'Int'>
    readonly supplierId: FieldRef<"DeliveryOrder", 'Int'>
    readonly invoiceId: FieldRef<"DeliveryOrder", 'Int'>
    readonly sessionId: FieldRef<"DeliveryOrder", 'Int'>
    readonly deliveryDate: FieldRef<"DeliveryOrder", 'DateTime'>
    readonly deliveryStreet: FieldRef<"DeliveryOrder", 'String'>
    readonly deliveryCity: FieldRef<"DeliveryOrder", 'String'>
    readonly deliveryState: FieldRef<"DeliveryOrder", 'String'>
    readonly deliveryPostalCode: FieldRef<"DeliveryOrder", 'String'>
    readonly deliveryCountry: FieldRef<"DeliveryOrder", 'String'>
    readonly status: FieldRef<"DeliveryOrder", 'String'>
    readonly remark: FieldRef<"DeliveryOrder", 'String'>
    readonly performedBy: FieldRef<"DeliveryOrder", 'String'>
    readonly deleted: FieldRef<"DeliveryOrder", 'Boolean'>
    readonly deletedAt: FieldRef<"DeliveryOrder", 'DateTime'>
    readonly createdAt: FieldRef<"DeliveryOrder", 'DateTime'>
    readonly updatedAt: FieldRef<"DeliveryOrder", 'DateTime'>
    readonly version: FieldRef<"DeliveryOrder", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * DeliveryOrder findUnique
   */
  export type DeliveryOrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrder
     */
    select?: DeliveryOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrder
     */
    omit?: DeliveryOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryOrder to fetch.
     */
    where: DeliveryOrderWhereUniqueInput
  }

  /**
   * DeliveryOrder findUniqueOrThrow
   */
  export type DeliveryOrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrder
     */
    select?: DeliveryOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrder
     */
    omit?: DeliveryOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryOrder to fetch.
     */
    where: DeliveryOrderWhereUniqueInput
  }

  /**
   * DeliveryOrder findFirst
   */
  export type DeliveryOrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrder
     */
    select?: DeliveryOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrder
     */
    omit?: DeliveryOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryOrder to fetch.
     */
    where?: DeliveryOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeliveryOrders to fetch.
     */
    orderBy?: DeliveryOrderOrderByWithRelationInput | DeliveryOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DeliveryOrders.
     */
    cursor?: DeliveryOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeliveryOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeliveryOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DeliveryOrders.
     */
    distinct?: DeliveryOrderScalarFieldEnum | DeliveryOrderScalarFieldEnum[]
  }

  /**
   * DeliveryOrder findFirstOrThrow
   */
  export type DeliveryOrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrder
     */
    select?: DeliveryOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrder
     */
    omit?: DeliveryOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryOrder to fetch.
     */
    where?: DeliveryOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeliveryOrders to fetch.
     */
    orderBy?: DeliveryOrderOrderByWithRelationInput | DeliveryOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DeliveryOrders.
     */
    cursor?: DeliveryOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeliveryOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeliveryOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DeliveryOrders.
     */
    distinct?: DeliveryOrderScalarFieldEnum | DeliveryOrderScalarFieldEnum[]
  }

  /**
   * DeliveryOrder findMany
   */
  export type DeliveryOrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrder
     */
    select?: DeliveryOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrder
     */
    omit?: DeliveryOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryOrders to fetch.
     */
    where?: DeliveryOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeliveryOrders to fetch.
     */
    orderBy?: DeliveryOrderOrderByWithRelationInput | DeliveryOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DeliveryOrders.
     */
    cursor?: DeliveryOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeliveryOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeliveryOrders.
     */
    skip?: number
    distinct?: DeliveryOrderScalarFieldEnum | DeliveryOrderScalarFieldEnum[]
  }

  /**
   * DeliveryOrder create
   */
  export type DeliveryOrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrder
     */
    select?: DeliveryOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrder
     */
    omit?: DeliveryOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderInclude<ExtArgs> | null
    /**
     * The data needed to create a DeliveryOrder.
     */
    data: XOR<DeliveryOrderCreateInput, DeliveryOrderUncheckedCreateInput>
  }

  /**
   * DeliveryOrder createMany
   */
  export type DeliveryOrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DeliveryOrders.
     */
    data: DeliveryOrderCreateManyInput | DeliveryOrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DeliveryOrder update
   */
  export type DeliveryOrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrder
     */
    select?: DeliveryOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrder
     */
    omit?: DeliveryOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderInclude<ExtArgs> | null
    /**
     * The data needed to update a DeliveryOrder.
     */
    data: XOR<DeliveryOrderUpdateInput, DeliveryOrderUncheckedUpdateInput>
    /**
     * Choose, which DeliveryOrder to update.
     */
    where: DeliveryOrderWhereUniqueInput
  }

  /**
   * DeliveryOrder updateMany
   */
  export type DeliveryOrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DeliveryOrders.
     */
    data: XOR<DeliveryOrderUpdateManyMutationInput, DeliveryOrderUncheckedUpdateManyInput>
    /**
     * Filter which DeliveryOrders to update
     */
    where?: DeliveryOrderWhereInput
    /**
     * Limit how many DeliveryOrders to update.
     */
    limit?: number
  }

  /**
   * DeliveryOrder upsert
   */
  export type DeliveryOrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrder
     */
    select?: DeliveryOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrder
     */
    omit?: DeliveryOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderInclude<ExtArgs> | null
    /**
     * The filter to search for the DeliveryOrder to update in case it exists.
     */
    where: DeliveryOrderWhereUniqueInput
    /**
     * In case the DeliveryOrder found by the `where` argument doesn't exist, create a new DeliveryOrder with this data.
     */
    create: XOR<DeliveryOrderCreateInput, DeliveryOrderUncheckedCreateInput>
    /**
     * In case the DeliveryOrder was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DeliveryOrderUpdateInput, DeliveryOrderUncheckedUpdateInput>
  }

  /**
   * DeliveryOrder delete
   */
  export type DeliveryOrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrder
     */
    select?: DeliveryOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrder
     */
    omit?: DeliveryOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderInclude<ExtArgs> | null
    /**
     * Filter which DeliveryOrder to delete.
     */
    where: DeliveryOrderWhereUniqueInput
  }

  /**
   * DeliveryOrder deleteMany
   */
  export type DeliveryOrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DeliveryOrders to delete
     */
    where?: DeliveryOrderWhereInput
    /**
     * Limit how many DeliveryOrders to delete.
     */
    limit?: number
  }

  /**
   * DeliveryOrder.session
   */
  export type DeliveryOrder$sessionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
  }

  /**
   * DeliveryOrder.purchaseOrder
   */
  export type DeliveryOrder$purchaseOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    where?: PurchaseOrderWhereInput
  }

  /**
   * DeliveryOrder.invoice
   */
  export type DeliveryOrder$invoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
  }

  /**
   * DeliveryOrder.deliveryOrderItems
   */
  export type DeliveryOrder$deliveryOrderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrderItem
     */
    select?: DeliveryOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrderItem
     */
    omit?: DeliveryOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderItemInclude<ExtArgs> | null
    where?: DeliveryOrderItemWhereInput
    orderBy?: DeliveryOrderItemOrderByWithRelationInput | DeliveryOrderItemOrderByWithRelationInput[]
    cursor?: DeliveryOrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeliveryOrderItemScalarFieldEnum | DeliveryOrderItemScalarFieldEnum[]
  }

  /**
   * DeliveryOrder without action
   */
  export type DeliveryOrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrder
     */
    select?: DeliveryOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrder
     */
    omit?: DeliveryOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderInclude<ExtArgs> | null
  }


  /**
   * Model DeliveryOrderItem
   */

  export type AggregateDeliveryOrderItem = {
    _count: DeliveryOrderItemCountAggregateOutputType | null
    _avg: DeliveryOrderItemAvgAggregateOutputType | null
    _sum: DeliveryOrderItemSumAggregateOutputType | null
    _min: DeliveryOrderItemMinAggregateOutputType | null
    _max: DeliveryOrderItemMaxAggregateOutputType | null
  }

  export type DeliveryOrderItemAvgAggregateOutputType = {
    id: number | null
    deliveryOrderId: number | null
    itemId: number | null
    orderedQuantity: number | null
    receivedQuantity: number | null
    unitPrice: Decimal | null
    version: number | null
  }

  export type DeliveryOrderItemSumAggregateOutputType = {
    id: number | null
    deliveryOrderId: number | null
    itemId: number | null
    orderedQuantity: number | null
    receivedQuantity: number | null
    unitPrice: Decimal | null
    version: number | null
  }

  export type DeliveryOrderItemMinAggregateOutputType = {
    id: number | null
    deliveryOrderId: number | null
    itemId: number | null
    orderedQuantity: number | null
    receivedQuantity: number | null
    unitPrice: Decimal | null
    remark: string | null
    version: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
    deletedAt: Date | null
  }

  export type DeliveryOrderItemMaxAggregateOutputType = {
    id: number | null
    deliveryOrderId: number | null
    itemId: number | null
    orderedQuantity: number | null
    receivedQuantity: number | null
    unitPrice: Decimal | null
    remark: string | null
    version: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
    deletedAt: Date | null
  }

  export type DeliveryOrderItemCountAggregateOutputType = {
    id: number
    deliveryOrderId: number
    itemId: number
    orderedQuantity: number
    receivedQuantity: number
    unitPrice: number
    remark: number
    version: number
    createdAt: number
    updatedAt: number
    deleted: number
    deletedAt: number
    _all: number
  }


  export type DeliveryOrderItemAvgAggregateInputType = {
    id?: true
    deliveryOrderId?: true
    itemId?: true
    orderedQuantity?: true
    receivedQuantity?: true
    unitPrice?: true
    version?: true
  }

  export type DeliveryOrderItemSumAggregateInputType = {
    id?: true
    deliveryOrderId?: true
    itemId?: true
    orderedQuantity?: true
    receivedQuantity?: true
    unitPrice?: true
    version?: true
  }

  export type DeliveryOrderItemMinAggregateInputType = {
    id?: true
    deliveryOrderId?: true
    itemId?: true
    orderedQuantity?: true
    receivedQuantity?: true
    unitPrice?: true
    remark?: true
    version?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
  }

  export type DeliveryOrderItemMaxAggregateInputType = {
    id?: true
    deliveryOrderId?: true
    itemId?: true
    orderedQuantity?: true
    receivedQuantity?: true
    unitPrice?: true
    remark?: true
    version?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
  }

  export type DeliveryOrderItemCountAggregateInputType = {
    id?: true
    deliveryOrderId?: true
    itemId?: true
    orderedQuantity?: true
    receivedQuantity?: true
    unitPrice?: true
    remark?: true
    version?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    _all?: true
  }

  export type DeliveryOrderItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DeliveryOrderItem to aggregate.
     */
    where?: DeliveryOrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeliveryOrderItems to fetch.
     */
    orderBy?: DeliveryOrderItemOrderByWithRelationInput | DeliveryOrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DeliveryOrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeliveryOrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeliveryOrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DeliveryOrderItems
    **/
    _count?: true | DeliveryOrderItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DeliveryOrderItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DeliveryOrderItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DeliveryOrderItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DeliveryOrderItemMaxAggregateInputType
  }

  export type GetDeliveryOrderItemAggregateType<T extends DeliveryOrderItemAggregateArgs> = {
        [P in keyof T & keyof AggregateDeliveryOrderItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDeliveryOrderItem[P]>
      : GetScalarType<T[P], AggregateDeliveryOrderItem[P]>
  }




  export type DeliveryOrderItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeliveryOrderItemWhereInput
    orderBy?: DeliveryOrderItemOrderByWithAggregationInput | DeliveryOrderItemOrderByWithAggregationInput[]
    by: DeliveryOrderItemScalarFieldEnum[] | DeliveryOrderItemScalarFieldEnum
    having?: DeliveryOrderItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DeliveryOrderItemCountAggregateInputType | true
    _avg?: DeliveryOrderItemAvgAggregateInputType
    _sum?: DeliveryOrderItemSumAggregateInputType
    _min?: DeliveryOrderItemMinAggregateInputType
    _max?: DeliveryOrderItemMaxAggregateInputType
  }

  export type DeliveryOrderItemGroupByOutputType = {
    id: number
    deliveryOrderId: number
    itemId: number
    orderedQuantity: number
    receivedQuantity: number
    unitPrice: Decimal | null
    remark: string | null
    version: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean
    deletedAt: Date | null
    _count: DeliveryOrderItemCountAggregateOutputType | null
    _avg: DeliveryOrderItemAvgAggregateOutputType | null
    _sum: DeliveryOrderItemSumAggregateOutputType | null
    _min: DeliveryOrderItemMinAggregateOutputType | null
    _max: DeliveryOrderItemMaxAggregateOutputType | null
  }

  type GetDeliveryOrderItemGroupByPayload<T extends DeliveryOrderItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DeliveryOrderItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DeliveryOrderItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DeliveryOrderItemGroupByOutputType[P]>
            : GetScalarType<T[P], DeliveryOrderItemGroupByOutputType[P]>
        }
      >
    >


  export type DeliveryOrderItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    deliveryOrderId?: boolean
    itemId?: boolean
    orderedQuantity?: boolean
    receivedQuantity?: boolean
    unitPrice?: boolean
    remark?: boolean
    version?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    deletedAt?: boolean
    deliveryOrder?: boolean | DeliveryOrderDefaultArgs<ExtArgs>
    item?: boolean | ItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["deliveryOrderItem"]>



  export type DeliveryOrderItemSelectScalar = {
    id?: boolean
    deliveryOrderId?: boolean
    itemId?: boolean
    orderedQuantity?: boolean
    receivedQuantity?: boolean
    unitPrice?: boolean
    remark?: boolean
    version?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    deletedAt?: boolean
  }

  export type DeliveryOrderItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "deliveryOrderId" | "itemId" | "orderedQuantity" | "receivedQuantity" | "unitPrice" | "remark" | "version" | "createdAt" | "updatedAt" | "deleted" | "deletedAt", ExtArgs["result"]["deliveryOrderItem"]>
  export type DeliveryOrderItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveryOrder?: boolean | DeliveryOrderDefaultArgs<ExtArgs>
    item?: boolean | ItemDefaultArgs<ExtArgs>
  }

  export type $DeliveryOrderItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DeliveryOrderItem"
    objects: {
      deliveryOrder: Prisma.$DeliveryOrderPayload<ExtArgs>
      item: Prisma.$ItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      deliveryOrderId: number
      itemId: number
      orderedQuantity: number
      receivedQuantity: number
      unitPrice: Prisma.Decimal | null
      remark: string | null
      version: number | null
      createdAt: Date | null
      updatedAt: Date | null
      deleted: boolean
      deletedAt: Date | null
    }, ExtArgs["result"]["deliveryOrderItem"]>
    composites: {}
  }

  type DeliveryOrderItemGetPayload<S extends boolean | null | undefined | DeliveryOrderItemDefaultArgs> = $Result.GetResult<Prisma.$DeliveryOrderItemPayload, S>

  type DeliveryOrderItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DeliveryOrderItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DeliveryOrderItemCountAggregateInputType | true
    }

  export interface DeliveryOrderItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DeliveryOrderItem'], meta: { name: 'DeliveryOrderItem' } }
    /**
     * Find zero or one DeliveryOrderItem that matches the filter.
     * @param {DeliveryOrderItemFindUniqueArgs} args - Arguments to find a DeliveryOrderItem
     * @example
     * // Get one DeliveryOrderItem
     * const deliveryOrderItem = await prisma.deliveryOrderItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DeliveryOrderItemFindUniqueArgs>(args: SelectSubset<T, DeliveryOrderItemFindUniqueArgs<ExtArgs>>): Prisma__DeliveryOrderItemClient<$Result.GetResult<Prisma.$DeliveryOrderItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DeliveryOrderItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DeliveryOrderItemFindUniqueOrThrowArgs} args - Arguments to find a DeliveryOrderItem
     * @example
     * // Get one DeliveryOrderItem
     * const deliveryOrderItem = await prisma.deliveryOrderItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DeliveryOrderItemFindUniqueOrThrowArgs>(args: SelectSubset<T, DeliveryOrderItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DeliveryOrderItemClient<$Result.GetResult<Prisma.$DeliveryOrderItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DeliveryOrderItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryOrderItemFindFirstArgs} args - Arguments to find a DeliveryOrderItem
     * @example
     * // Get one DeliveryOrderItem
     * const deliveryOrderItem = await prisma.deliveryOrderItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DeliveryOrderItemFindFirstArgs>(args?: SelectSubset<T, DeliveryOrderItemFindFirstArgs<ExtArgs>>): Prisma__DeliveryOrderItemClient<$Result.GetResult<Prisma.$DeliveryOrderItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DeliveryOrderItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryOrderItemFindFirstOrThrowArgs} args - Arguments to find a DeliveryOrderItem
     * @example
     * // Get one DeliveryOrderItem
     * const deliveryOrderItem = await prisma.deliveryOrderItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DeliveryOrderItemFindFirstOrThrowArgs>(args?: SelectSubset<T, DeliveryOrderItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__DeliveryOrderItemClient<$Result.GetResult<Prisma.$DeliveryOrderItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DeliveryOrderItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryOrderItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DeliveryOrderItems
     * const deliveryOrderItems = await prisma.deliveryOrderItem.findMany()
     * 
     * // Get first 10 DeliveryOrderItems
     * const deliveryOrderItems = await prisma.deliveryOrderItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const deliveryOrderItemWithIdOnly = await prisma.deliveryOrderItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DeliveryOrderItemFindManyArgs>(args?: SelectSubset<T, DeliveryOrderItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryOrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DeliveryOrderItem.
     * @param {DeliveryOrderItemCreateArgs} args - Arguments to create a DeliveryOrderItem.
     * @example
     * // Create one DeliveryOrderItem
     * const DeliveryOrderItem = await prisma.deliveryOrderItem.create({
     *   data: {
     *     // ... data to create a DeliveryOrderItem
     *   }
     * })
     * 
     */
    create<T extends DeliveryOrderItemCreateArgs>(args: SelectSubset<T, DeliveryOrderItemCreateArgs<ExtArgs>>): Prisma__DeliveryOrderItemClient<$Result.GetResult<Prisma.$DeliveryOrderItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DeliveryOrderItems.
     * @param {DeliveryOrderItemCreateManyArgs} args - Arguments to create many DeliveryOrderItems.
     * @example
     * // Create many DeliveryOrderItems
     * const deliveryOrderItem = await prisma.deliveryOrderItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DeliveryOrderItemCreateManyArgs>(args?: SelectSubset<T, DeliveryOrderItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a DeliveryOrderItem.
     * @param {DeliveryOrderItemDeleteArgs} args - Arguments to delete one DeliveryOrderItem.
     * @example
     * // Delete one DeliveryOrderItem
     * const DeliveryOrderItem = await prisma.deliveryOrderItem.delete({
     *   where: {
     *     // ... filter to delete one DeliveryOrderItem
     *   }
     * })
     * 
     */
    delete<T extends DeliveryOrderItemDeleteArgs>(args: SelectSubset<T, DeliveryOrderItemDeleteArgs<ExtArgs>>): Prisma__DeliveryOrderItemClient<$Result.GetResult<Prisma.$DeliveryOrderItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DeliveryOrderItem.
     * @param {DeliveryOrderItemUpdateArgs} args - Arguments to update one DeliveryOrderItem.
     * @example
     * // Update one DeliveryOrderItem
     * const deliveryOrderItem = await prisma.deliveryOrderItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DeliveryOrderItemUpdateArgs>(args: SelectSubset<T, DeliveryOrderItemUpdateArgs<ExtArgs>>): Prisma__DeliveryOrderItemClient<$Result.GetResult<Prisma.$DeliveryOrderItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DeliveryOrderItems.
     * @param {DeliveryOrderItemDeleteManyArgs} args - Arguments to filter DeliveryOrderItems to delete.
     * @example
     * // Delete a few DeliveryOrderItems
     * const { count } = await prisma.deliveryOrderItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DeliveryOrderItemDeleteManyArgs>(args?: SelectSubset<T, DeliveryOrderItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DeliveryOrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryOrderItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DeliveryOrderItems
     * const deliveryOrderItem = await prisma.deliveryOrderItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DeliveryOrderItemUpdateManyArgs>(args: SelectSubset<T, DeliveryOrderItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DeliveryOrderItem.
     * @param {DeliveryOrderItemUpsertArgs} args - Arguments to update or create a DeliveryOrderItem.
     * @example
     * // Update or create a DeliveryOrderItem
     * const deliveryOrderItem = await prisma.deliveryOrderItem.upsert({
     *   create: {
     *     // ... data to create a DeliveryOrderItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DeliveryOrderItem we want to update
     *   }
     * })
     */
    upsert<T extends DeliveryOrderItemUpsertArgs>(args: SelectSubset<T, DeliveryOrderItemUpsertArgs<ExtArgs>>): Prisma__DeliveryOrderItemClient<$Result.GetResult<Prisma.$DeliveryOrderItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DeliveryOrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryOrderItemCountArgs} args - Arguments to filter DeliveryOrderItems to count.
     * @example
     * // Count the number of DeliveryOrderItems
     * const count = await prisma.deliveryOrderItem.count({
     *   where: {
     *     // ... the filter for the DeliveryOrderItems we want to count
     *   }
     * })
    **/
    count<T extends DeliveryOrderItemCountArgs>(
      args?: Subset<T, DeliveryOrderItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DeliveryOrderItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DeliveryOrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryOrderItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DeliveryOrderItemAggregateArgs>(args: Subset<T, DeliveryOrderItemAggregateArgs>): Prisma.PrismaPromise<GetDeliveryOrderItemAggregateType<T>>

    /**
     * Group by DeliveryOrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveryOrderItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DeliveryOrderItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DeliveryOrderItemGroupByArgs['orderBy'] }
        : { orderBy?: DeliveryOrderItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DeliveryOrderItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDeliveryOrderItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DeliveryOrderItem model
   */
  readonly fields: DeliveryOrderItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DeliveryOrderItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DeliveryOrderItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    deliveryOrder<T extends DeliveryOrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DeliveryOrderDefaultArgs<ExtArgs>>): Prisma__DeliveryOrderClient<$Result.GetResult<Prisma.$DeliveryOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    item<T extends ItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ItemDefaultArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DeliveryOrderItem model
   */
  interface DeliveryOrderItemFieldRefs {
    readonly id: FieldRef<"DeliveryOrderItem", 'Int'>
    readonly deliveryOrderId: FieldRef<"DeliveryOrderItem", 'Int'>
    readonly itemId: FieldRef<"DeliveryOrderItem", 'Int'>
    readonly orderedQuantity: FieldRef<"DeliveryOrderItem", 'Float'>
    readonly receivedQuantity: FieldRef<"DeliveryOrderItem", 'Float'>
    readonly unitPrice: FieldRef<"DeliveryOrderItem", 'Decimal'>
    readonly remark: FieldRef<"DeliveryOrderItem", 'String'>
    readonly version: FieldRef<"DeliveryOrderItem", 'Int'>
    readonly createdAt: FieldRef<"DeliveryOrderItem", 'DateTime'>
    readonly updatedAt: FieldRef<"DeliveryOrderItem", 'DateTime'>
    readonly deleted: FieldRef<"DeliveryOrderItem", 'Boolean'>
    readonly deletedAt: FieldRef<"DeliveryOrderItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DeliveryOrderItem findUnique
   */
  export type DeliveryOrderItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrderItem
     */
    select?: DeliveryOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrderItem
     */
    omit?: DeliveryOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderItemInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryOrderItem to fetch.
     */
    where: DeliveryOrderItemWhereUniqueInput
  }

  /**
   * DeliveryOrderItem findUniqueOrThrow
   */
  export type DeliveryOrderItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrderItem
     */
    select?: DeliveryOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrderItem
     */
    omit?: DeliveryOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderItemInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryOrderItem to fetch.
     */
    where: DeliveryOrderItemWhereUniqueInput
  }

  /**
   * DeliveryOrderItem findFirst
   */
  export type DeliveryOrderItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrderItem
     */
    select?: DeliveryOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrderItem
     */
    omit?: DeliveryOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderItemInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryOrderItem to fetch.
     */
    where?: DeliveryOrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeliveryOrderItems to fetch.
     */
    orderBy?: DeliveryOrderItemOrderByWithRelationInput | DeliveryOrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DeliveryOrderItems.
     */
    cursor?: DeliveryOrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeliveryOrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeliveryOrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DeliveryOrderItems.
     */
    distinct?: DeliveryOrderItemScalarFieldEnum | DeliveryOrderItemScalarFieldEnum[]
  }

  /**
   * DeliveryOrderItem findFirstOrThrow
   */
  export type DeliveryOrderItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrderItem
     */
    select?: DeliveryOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrderItem
     */
    omit?: DeliveryOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderItemInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryOrderItem to fetch.
     */
    where?: DeliveryOrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeliveryOrderItems to fetch.
     */
    orderBy?: DeliveryOrderItemOrderByWithRelationInput | DeliveryOrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DeliveryOrderItems.
     */
    cursor?: DeliveryOrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeliveryOrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeliveryOrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DeliveryOrderItems.
     */
    distinct?: DeliveryOrderItemScalarFieldEnum | DeliveryOrderItemScalarFieldEnum[]
  }

  /**
   * DeliveryOrderItem findMany
   */
  export type DeliveryOrderItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrderItem
     */
    select?: DeliveryOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrderItem
     */
    omit?: DeliveryOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderItemInclude<ExtArgs> | null
    /**
     * Filter, which DeliveryOrderItems to fetch.
     */
    where?: DeliveryOrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeliveryOrderItems to fetch.
     */
    orderBy?: DeliveryOrderItemOrderByWithRelationInput | DeliveryOrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DeliveryOrderItems.
     */
    cursor?: DeliveryOrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeliveryOrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeliveryOrderItems.
     */
    skip?: number
    distinct?: DeliveryOrderItemScalarFieldEnum | DeliveryOrderItemScalarFieldEnum[]
  }

  /**
   * DeliveryOrderItem create
   */
  export type DeliveryOrderItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrderItem
     */
    select?: DeliveryOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrderItem
     */
    omit?: DeliveryOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderItemInclude<ExtArgs> | null
    /**
     * The data needed to create a DeliveryOrderItem.
     */
    data: XOR<DeliveryOrderItemCreateInput, DeliveryOrderItemUncheckedCreateInput>
  }

  /**
   * DeliveryOrderItem createMany
   */
  export type DeliveryOrderItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DeliveryOrderItems.
     */
    data: DeliveryOrderItemCreateManyInput | DeliveryOrderItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DeliveryOrderItem update
   */
  export type DeliveryOrderItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrderItem
     */
    select?: DeliveryOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrderItem
     */
    omit?: DeliveryOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderItemInclude<ExtArgs> | null
    /**
     * The data needed to update a DeliveryOrderItem.
     */
    data: XOR<DeliveryOrderItemUpdateInput, DeliveryOrderItemUncheckedUpdateInput>
    /**
     * Choose, which DeliveryOrderItem to update.
     */
    where: DeliveryOrderItemWhereUniqueInput
  }

  /**
   * DeliveryOrderItem updateMany
   */
  export type DeliveryOrderItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DeliveryOrderItems.
     */
    data: XOR<DeliveryOrderItemUpdateManyMutationInput, DeliveryOrderItemUncheckedUpdateManyInput>
    /**
     * Filter which DeliveryOrderItems to update
     */
    where?: DeliveryOrderItemWhereInput
    /**
     * Limit how many DeliveryOrderItems to update.
     */
    limit?: number
  }

  /**
   * DeliveryOrderItem upsert
   */
  export type DeliveryOrderItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrderItem
     */
    select?: DeliveryOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrderItem
     */
    omit?: DeliveryOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderItemInclude<ExtArgs> | null
    /**
     * The filter to search for the DeliveryOrderItem to update in case it exists.
     */
    where: DeliveryOrderItemWhereUniqueInput
    /**
     * In case the DeliveryOrderItem found by the `where` argument doesn't exist, create a new DeliveryOrderItem with this data.
     */
    create: XOR<DeliveryOrderItemCreateInput, DeliveryOrderItemUncheckedCreateInput>
    /**
     * In case the DeliveryOrderItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DeliveryOrderItemUpdateInput, DeliveryOrderItemUncheckedUpdateInput>
  }

  /**
   * DeliveryOrderItem delete
   */
  export type DeliveryOrderItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrderItem
     */
    select?: DeliveryOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrderItem
     */
    omit?: DeliveryOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderItemInclude<ExtArgs> | null
    /**
     * Filter which DeliveryOrderItem to delete.
     */
    where: DeliveryOrderItemWhereUniqueInput
  }

  /**
   * DeliveryOrderItem deleteMany
   */
  export type DeliveryOrderItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DeliveryOrderItems to delete
     */
    where?: DeliveryOrderItemWhereInput
    /**
     * Limit how many DeliveryOrderItems to delete.
     */
    limit?: number
  }

  /**
   * DeliveryOrderItem without action
   */
  export type DeliveryOrderItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrderItem
     */
    select?: DeliveryOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrderItem
     */
    omit?: DeliveryOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderItemInclude<ExtArgs> | null
  }


  /**
   * Model PurchaseOrder
   */

  export type AggregatePurchaseOrder = {
    _count: PurchaseOrderCountAggregateOutputType | null
    _avg: PurchaseOrderAvgAggregateOutputType | null
    _sum: PurchaseOrderSumAggregateOutputType | null
    _min: PurchaseOrderMinAggregateOutputType | null
    _max: PurchaseOrderMaxAggregateOutputType | null
  }

  export type PurchaseOrderAvgAggregateOutputType = {
    id: number | null
    outletId: number | null
    supplierId: number | null
    sessionId: number | null
    discountAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    roundingAmount: Decimal | null
    subtotalAmount: Decimal | null
    totalAmount: Decimal | null
    version: number | null
  }

  export type PurchaseOrderSumAggregateOutputType = {
    id: number | null
    outletId: number | null
    supplierId: number | null
    sessionId: number | null
    discountAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    roundingAmount: Decimal | null
    subtotalAmount: Decimal | null
    totalAmount: Decimal | null
    version: number | null
  }

  export type PurchaseOrderMinAggregateOutputType = {
    id: number | null
    purchaseOrderNumber: string | null
    outletId: number | null
    supplierId: number | null
    purchaseOrderDate: Date | null
    sessionId: number | null
    discountType: string | null
    discountAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    roundingAmount: Decimal | null
    subtotalAmount: Decimal | null
    totalAmount: Decimal | null
    status: string | null
    remark: string | null
    currency: string | null
    performedBy: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type PurchaseOrderMaxAggregateOutputType = {
    id: number | null
    purchaseOrderNumber: string | null
    outletId: number | null
    supplierId: number | null
    purchaseOrderDate: Date | null
    sessionId: number | null
    discountType: string | null
    discountAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    roundingAmount: Decimal | null
    subtotalAmount: Decimal | null
    totalAmount: Decimal | null
    status: string | null
    remark: string | null
    currency: string | null
    performedBy: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type PurchaseOrderCountAggregateOutputType = {
    id: number
    purchaseOrderNumber: number
    outletId: number
    supplierId: number
    purchaseOrderDate: number
    sessionId: number
    discountType: number
    discountAmount: number
    serviceChargeAmount: number
    taxAmount: number
    roundingAmount: number
    subtotalAmount: number
    totalAmount: number
    status: number
    remark: number
    currency: number
    performedBy: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type PurchaseOrderAvgAggregateInputType = {
    id?: true
    outletId?: true
    supplierId?: true
    sessionId?: true
    discountAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    roundingAmount?: true
    subtotalAmount?: true
    totalAmount?: true
    version?: true
  }

  export type PurchaseOrderSumAggregateInputType = {
    id?: true
    outletId?: true
    supplierId?: true
    sessionId?: true
    discountAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    roundingAmount?: true
    subtotalAmount?: true
    totalAmount?: true
    version?: true
  }

  export type PurchaseOrderMinAggregateInputType = {
    id?: true
    purchaseOrderNumber?: true
    outletId?: true
    supplierId?: true
    purchaseOrderDate?: true
    sessionId?: true
    discountType?: true
    discountAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    roundingAmount?: true
    subtotalAmount?: true
    totalAmount?: true
    status?: true
    remark?: true
    currency?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type PurchaseOrderMaxAggregateInputType = {
    id?: true
    purchaseOrderNumber?: true
    outletId?: true
    supplierId?: true
    purchaseOrderDate?: true
    sessionId?: true
    discountType?: true
    discountAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    roundingAmount?: true
    subtotalAmount?: true
    totalAmount?: true
    status?: true
    remark?: true
    currency?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type PurchaseOrderCountAggregateInputType = {
    id?: true
    purchaseOrderNumber?: true
    outletId?: true
    supplierId?: true
    purchaseOrderDate?: true
    sessionId?: true
    discountType?: true
    discountAmount?: true
    serviceChargeAmount?: true
    taxAmount?: true
    roundingAmount?: true
    subtotalAmount?: true
    totalAmount?: true
    status?: true
    remark?: true
    currency?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type PurchaseOrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PurchaseOrder to aggregate.
     */
    where?: PurchaseOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PurchaseOrders to fetch.
     */
    orderBy?: PurchaseOrderOrderByWithRelationInput | PurchaseOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PurchaseOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PurchaseOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PurchaseOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PurchaseOrders
    **/
    _count?: true | PurchaseOrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PurchaseOrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PurchaseOrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PurchaseOrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PurchaseOrderMaxAggregateInputType
  }

  export type GetPurchaseOrderAggregateType<T extends PurchaseOrderAggregateArgs> = {
        [P in keyof T & keyof AggregatePurchaseOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePurchaseOrder[P]>
      : GetScalarType<T[P], AggregatePurchaseOrder[P]>
  }




  export type PurchaseOrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PurchaseOrderWhereInput
    orderBy?: PurchaseOrderOrderByWithAggregationInput | PurchaseOrderOrderByWithAggregationInput[]
    by: PurchaseOrderScalarFieldEnum[] | PurchaseOrderScalarFieldEnum
    having?: PurchaseOrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PurchaseOrderCountAggregateInputType | true
    _avg?: PurchaseOrderAvgAggregateInputType
    _sum?: PurchaseOrderSumAggregateInputType
    _min?: PurchaseOrderMinAggregateInputType
    _max?: PurchaseOrderMaxAggregateInputType
  }

  export type PurchaseOrderGroupByOutputType = {
    id: number
    purchaseOrderNumber: string
    outletId: number
    supplierId: number
    purchaseOrderDate: Date | null
    sessionId: number | null
    discountType: string | null
    discountAmount: Decimal | null
    serviceChargeAmount: Decimal | null
    taxAmount: Decimal | null
    roundingAmount: Decimal | null
    subtotalAmount: Decimal | null
    totalAmount: Decimal | null
    status: string
    remark: string | null
    currency: string
    performedBy: string | null
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: PurchaseOrderCountAggregateOutputType | null
    _avg: PurchaseOrderAvgAggregateOutputType | null
    _sum: PurchaseOrderSumAggregateOutputType | null
    _min: PurchaseOrderMinAggregateOutputType | null
    _max: PurchaseOrderMaxAggregateOutputType | null
  }

  type GetPurchaseOrderGroupByPayload<T extends PurchaseOrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PurchaseOrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PurchaseOrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PurchaseOrderGroupByOutputType[P]>
            : GetScalarType<T[P], PurchaseOrderGroupByOutputType[P]>
        }
      >
    >


  export type PurchaseOrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    purchaseOrderNumber?: boolean
    outletId?: boolean
    supplierId?: boolean
    purchaseOrderDate?: boolean
    sessionId?: boolean
    discountType?: boolean
    discountAmount?: boolean
    serviceChargeAmount?: boolean
    taxAmount?: boolean
    roundingAmount?: boolean
    subtotalAmount?: boolean
    totalAmount?: boolean
    status?: boolean
    remark?: boolean
    currency?: boolean
    performedBy?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    session?: boolean | PurchaseOrder$sessionArgs<ExtArgs>
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
    purchaseOrderItems?: boolean | PurchaseOrder$purchaseOrderItemsArgs<ExtArgs>
    deliveryOrders?: boolean | PurchaseOrder$deliveryOrdersArgs<ExtArgs>
    invoices?: boolean | PurchaseOrder$invoicesArgs<ExtArgs>
    _count?: boolean | PurchaseOrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["purchaseOrder"]>



  export type PurchaseOrderSelectScalar = {
    id?: boolean
    purchaseOrderNumber?: boolean
    outletId?: boolean
    supplierId?: boolean
    purchaseOrderDate?: boolean
    sessionId?: boolean
    discountType?: boolean
    discountAmount?: boolean
    serviceChargeAmount?: boolean
    taxAmount?: boolean
    roundingAmount?: boolean
    subtotalAmount?: boolean
    totalAmount?: boolean
    status?: boolean
    remark?: boolean
    currency?: boolean
    performedBy?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type PurchaseOrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "purchaseOrderNumber" | "outletId" | "supplierId" | "purchaseOrderDate" | "sessionId" | "discountType" | "discountAmount" | "serviceChargeAmount" | "taxAmount" | "roundingAmount" | "subtotalAmount" | "totalAmount" | "status" | "remark" | "currency" | "performedBy" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["purchaseOrder"]>
  export type PurchaseOrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    session?: boolean | PurchaseOrder$sessionArgs<ExtArgs>
    supplier?: boolean | SupplierDefaultArgs<ExtArgs>
    purchaseOrderItems?: boolean | PurchaseOrder$purchaseOrderItemsArgs<ExtArgs>
    deliveryOrders?: boolean | PurchaseOrder$deliveryOrdersArgs<ExtArgs>
    invoices?: boolean | PurchaseOrder$invoicesArgs<ExtArgs>
    _count?: boolean | PurchaseOrderCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $PurchaseOrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PurchaseOrder"
    objects: {
      session: Prisma.$SessionPayload<ExtArgs> | null
      supplier: Prisma.$SupplierPayload<ExtArgs>
      purchaseOrderItems: Prisma.$PurchaseOrderItemPayload<ExtArgs>[]
      deliveryOrders: Prisma.$DeliveryOrderPayload<ExtArgs>[]
      invoices: Prisma.$InvoicePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      purchaseOrderNumber: string
      outletId: number
      supplierId: number
      purchaseOrderDate: Date | null
      sessionId: number | null
      discountType: string | null
      discountAmount: Prisma.Decimal | null
      serviceChargeAmount: Prisma.Decimal | null
      taxAmount: Prisma.Decimal | null
      roundingAmount: Prisma.Decimal | null
      subtotalAmount: Prisma.Decimal | null
      totalAmount: Prisma.Decimal | null
      status: string
      remark: string | null
      currency: string
      performedBy: string | null
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["purchaseOrder"]>
    composites: {}
  }

  type PurchaseOrderGetPayload<S extends boolean | null | undefined | PurchaseOrderDefaultArgs> = $Result.GetResult<Prisma.$PurchaseOrderPayload, S>

  type PurchaseOrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PurchaseOrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PurchaseOrderCountAggregateInputType | true
    }

  export interface PurchaseOrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PurchaseOrder'], meta: { name: 'PurchaseOrder' } }
    /**
     * Find zero or one PurchaseOrder that matches the filter.
     * @param {PurchaseOrderFindUniqueArgs} args - Arguments to find a PurchaseOrder
     * @example
     * // Get one PurchaseOrder
     * const purchaseOrder = await prisma.purchaseOrder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PurchaseOrderFindUniqueArgs>(args: SelectSubset<T, PurchaseOrderFindUniqueArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PurchaseOrder that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PurchaseOrderFindUniqueOrThrowArgs} args - Arguments to find a PurchaseOrder
     * @example
     * // Get one PurchaseOrder
     * const purchaseOrder = await prisma.purchaseOrder.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PurchaseOrderFindUniqueOrThrowArgs>(args: SelectSubset<T, PurchaseOrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PurchaseOrder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderFindFirstArgs} args - Arguments to find a PurchaseOrder
     * @example
     * // Get one PurchaseOrder
     * const purchaseOrder = await prisma.purchaseOrder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PurchaseOrderFindFirstArgs>(args?: SelectSubset<T, PurchaseOrderFindFirstArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PurchaseOrder that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderFindFirstOrThrowArgs} args - Arguments to find a PurchaseOrder
     * @example
     * // Get one PurchaseOrder
     * const purchaseOrder = await prisma.purchaseOrder.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PurchaseOrderFindFirstOrThrowArgs>(args?: SelectSubset<T, PurchaseOrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PurchaseOrders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PurchaseOrders
     * const purchaseOrders = await prisma.purchaseOrder.findMany()
     * 
     * // Get first 10 PurchaseOrders
     * const purchaseOrders = await prisma.purchaseOrder.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const purchaseOrderWithIdOnly = await prisma.purchaseOrder.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PurchaseOrderFindManyArgs>(args?: SelectSubset<T, PurchaseOrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PurchaseOrder.
     * @param {PurchaseOrderCreateArgs} args - Arguments to create a PurchaseOrder.
     * @example
     * // Create one PurchaseOrder
     * const PurchaseOrder = await prisma.purchaseOrder.create({
     *   data: {
     *     // ... data to create a PurchaseOrder
     *   }
     * })
     * 
     */
    create<T extends PurchaseOrderCreateArgs>(args: SelectSubset<T, PurchaseOrderCreateArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PurchaseOrders.
     * @param {PurchaseOrderCreateManyArgs} args - Arguments to create many PurchaseOrders.
     * @example
     * // Create many PurchaseOrders
     * const purchaseOrder = await prisma.purchaseOrder.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PurchaseOrderCreateManyArgs>(args?: SelectSubset<T, PurchaseOrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PurchaseOrder.
     * @param {PurchaseOrderDeleteArgs} args - Arguments to delete one PurchaseOrder.
     * @example
     * // Delete one PurchaseOrder
     * const PurchaseOrder = await prisma.purchaseOrder.delete({
     *   where: {
     *     // ... filter to delete one PurchaseOrder
     *   }
     * })
     * 
     */
    delete<T extends PurchaseOrderDeleteArgs>(args: SelectSubset<T, PurchaseOrderDeleteArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PurchaseOrder.
     * @param {PurchaseOrderUpdateArgs} args - Arguments to update one PurchaseOrder.
     * @example
     * // Update one PurchaseOrder
     * const purchaseOrder = await prisma.purchaseOrder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PurchaseOrderUpdateArgs>(args: SelectSubset<T, PurchaseOrderUpdateArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PurchaseOrders.
     * @param {PurchaseOrderDeleteManyArgs} args - Arguments to filter PurchaseOrders to delete.
     * @example
     * // Delete a few PurchaseOrders
     * const { count } = await prisma.purchaseOrder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PurchaseOrderDeleteManyArgs>(args?: SelectSubset<T, PurchaseOrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PurchaseOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PurchaseOrders
     * const purchaseOrder = await prisma.purchaseOrder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PurchaseOrderUpdateManyArgs>(args: SelectSubset<T, PurchaseOrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PurchaseOrder.
     * @param {PurchaseOrderUpsertArgs} args - Arguments to update or create a PurchaseOrder.
     * @example
     * // Update or create a PurchaseOrder
     * const purchaseOrder = await prisma.purchaseOrder.upsert({
     *   create: {
     *     // ... data to create a PurchaseOrder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PurchaseOrder we want to update
     *   }
     * })
     */
    upsert<T extends PurchaseOrderUpsertArgs>(args: SelectSubset<T, PurchaseOrderUpsertArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PurchaseOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderCountArgs} args - Arguments to filter PurchaseOrders to count.
     * @example
     * // Count the number of PurchaseOrders
     * const count = await prisma.purchaseOrder.count({
     *   where: {
     *     // ... the filter for the PurchaseOrders we want to count
     *   }
     * })
    **/
    count<T extends PurchaseOrderCountArgs>(
      args?: Subset<T, PurchaseOrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PurchaseOrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PurchaseOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PurchaseOrderAggregateArgs>(args: Subset<T, PurchaseOrderAggregateArgs>): Prisma.PrismaPromise<GetPurchaseOrderAggregateType<T>>

    /**
     * Group by PurchaseOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PurchaseOrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PurchaseOrderGroupByArgs['orderBy'] }
        : { orderBy?: PurchaseOrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PurchaseOrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPurchaseOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PurchaseOrder model
   */
  readonly fields: PurchaseOrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PurchaseOrder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PurchaseOrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    session<T extends PurchaseOrder$sessionArgs<ExtArgs> = {}>(args?: Subset<T, PurchaseOrder$sessionArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    supplier<T extends SupplierDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SupplierDefaultArgs<ExtArgs>>): Prisma__SupplierClient<$Result.GetResult<Prisma.$SupplierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    purchaseOrderItems<T extends PurchaseOrder$purchaseOrderItemsArgs<ExtArgs> = {}>(args?: Subset<T, PurchaseOrder$purchaseOrderItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deliveryOrders<T extends PurchaseOrder$deliveryOrdersArgs<ExtArgs> = {}>(args?: Subset<T, PurchaseOrder$deliveryOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    invoices<T extends PurchaseOrder$invoicesArgs<ExtArgs> = {}>(args?: Subset<T, PurchaseOrder$invoicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PurchaseOrder model
   */
  interface PurchaseOrderFieldRefs {
    readonly id: FieldRef<"PurchaseOrder", 'Int'>
    readonly purchaseOrderNumber: FieldRef<"PurchaseOrder", 'String'>
    readonly outletId: FieldRef<"PurchaseOrder", 'Int'>
    readonly supplierId: FieldRef<"PurchaseOrder", 'Int'>
    readonly purchaseOrderDate: FieldRef<"PurchaseOrder", 'DateTime'>
    readonly sessionId: FieldRef<"PurchaseOrder", 'Int'>
    readonly discountType: FieldRef<"PurchaseOrder", 'String'>
    readonly discountAmount: FieldRef<"PurchaseOrder", 'Decimal'>
    readonly serviceChargeAmount: FieldRef<"PurchaseOrder", 'Decimal'>
    readonly taxAmount: FieldRef<"PurchaseOrder", 'Decimal'>
    readonly roundingAmount: FieldRef<"PurchaseOrder", 'Decimal'>
    readonly subtotalAmount: FieldRef<"PurchaseOrder", 'Decimal'>
    readonly totalAmount: FieldRef<"PurchaseOrder", 'Decimal'>
    readonly status: FieldRef<"PurchaseOrder", 'String'>
    readonly remark: FieldRef<"PurchaseOrder", 'String'>
    readonly currency: FieldRef<"PurchaseOrder", 'String'>
    readonly performedBy: FieldRef<"PurchaseOrder", 'String'>
    readonly deleted: FieldRef<"PurchaseOrder", 'Boolean'>
    readonly deletedAt: FieldRef<"PurchaseOrder", 'DateTime'>
    readonly createdAt: FieldRef<"PurchaseOrder", 'DateTime'>
    readonly updatedAt: FieldRef<"PurchaseOrder", 'DateTime'>
    readonly version: FieldRef<"PurchaseOrder", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * PurchaseOrder findUnique
   */
  export type PurchaseOrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrder to fetch.
     */
    where: PurchaseOrderWhereUniqueInput
  }

  /**
   * PurchaseOrder findUniqueOrThrow
   */
  export type PurchaseOrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrder to fetch.
     */
    where: PurchaseOrderWhereUniqueInput
  }

  /**
   * PurchaseOrder findFirst
   */
  export type PurchaseOrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrder to fetch.
     */
    where?: PurchaseOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PurchaseOrders to fetch.
     */
    orderBy?: PurchaseOrderOrderByWithRelationInput | PurchaseOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PurchaseOrders.
     */
    cursor?: PurchaseOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PurchaseOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PurchaseOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PurchaseOrders.
     */
    distinct?: PurchaseOrderScalarFieldEnum | PurchaseOrderScalarFieldEnum[]
  }

  /**
   * PurchaseOrder findFirstOrThrow
   */
  export type PurchaseOrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrder to fetch.
     */
    where?: PurchaseOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PurchaseOrders to fetch.
     */
    orderBy?: PurchaseOrderOrderByWithRelationInput | PurchaseOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PurchaseOrders.
     */
    cursor?: PurchaseOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PurchaseOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PurchaseOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PurchaseOrders.
     */
    distinct?: PurchaseOrderScalarFieldEnum | PurchaseOrderScalarFieldEnum[]
  }

  /**
   * PurchaseOrder findMany
   */
  export type PurchaseOrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrders to fetch.
     */
    where?: PurchaseOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PurchaseOrders to fetch.
     */
    orderBy?: PurchaseOrderOrderByWithRelationInput | PurchaseOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PurchaseOrders.
     */
    cursor?: PurchaseOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PurchaseOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PurchaseOrders.
     */
    skip?: number
    distinct?: PurchaseOrderScalarFieldEnum | PurchaseOrderScalarFieldEnum[]
  }

  /**
   * PurchaseOrder create
   */
  export type PurchaseOrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * The data needed to create a PurchaseOrder.
     */
    data: XOR<PurchaseOrderCreateInput, PurchaseOrderUncheckedCreateInput>
  }

  /**
   * PurchaseOrder createMany
   */
  export type PurchaseOrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PurchaseOrders.
     */
    data: PurchaseOrderCreateManyInput | PurchaseOrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PurchaseOrder update
   */
  export type PurchaseOrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * The data needed to update a PurchaseOrder.
     */
    data: XOR<PurchaseOrderUpdateInput, PurchaseOrderUncheckedUpdateInput>
    /**
     * Choose, which PurchaseOrder to update.
     */
    where: PurchaseOrderWhereUniqueInput
  }

  /**
   * PurchaseOrder updateMany
   */
  export type PurchaseOrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PurchaseOrders.
     */
    data: XOR<PurchaseOrderUpdateManyMutationInput, PurchaseOrderUncheckedUpdateManyInput>
    /**
     * Filter which PurchaseOrders to update
     */
    where?: PurchaseOrderWhereInput
    /**
     * Limit how many PurchaseOrders to update.
     */
    limit?: number
  }

  /**
   * PurchaseOrder upsert
   */
  export type PurchaseOrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * The filter to search for the PurchaseOrder to update in case it exists.
     */
    where: PurchaseOrderWhereUniqueInput
    /**
     * In case the PurchaseOrder found by the `where` argument doesn't exist, create a new PurchaseOrder with this data.
     */
    create: XOR<PurchaseOrderCreateInput, PurchaseOrderUncheckedCreateInput>
    /**
     * In case the PurchaseOrder was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PurchaseOrderUpdateInput, PurchaseOrderUncheckedUpdateInput>
  }

  /**
   * PurchaseOrder delete
   */
  export type PurchaseOrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    /**
     * Filter which PurchaseOrder to delete.
     */
    where: PurchaseOrderWhereUniqueInput
  }

  /**
   * PurchaseOrder deleteMany
   */
  export type PurchaseOrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PurchaseOrders to delete
     */
    where?: PurchaseOrderWhereInput
    /**
     * Limit how many PurchaseOrders to delete.
     */
    limit?: number
  }

  /**
   * PurchaseOrder.session
   */
  export type PurchaseOrder$sessionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
  }

  /**
   * PurchaseOrder.purchaseOrderItems
   */
  export type PurchaseOrder$purchaseOrderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    where?: PurchaseOrderItemWhereInput
    orderBy?: PurchaseOrderItemOrderByWithRelationInput | PurchaseOrderItemOrderByWithRelationInput[]
    cursor?: PurchaseOrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PurchaseOrderItemScalarFieldEnum | PurchaseOrderItemScalarFieldEnum[]
  }

  /**
   * PurchaseOrder.deliveryOrders
   */
  export type PurchaseOrder$deliveryOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrder
     */
    select?: DeliveryOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrder
     */
    omit?: DeliveryOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderInclude<ExtArgs> | null
    where?: DeliveryOrderWhereInput
    orderBy?: DeliveryOrderOrderByWithRelationInput | DeliveryOrderOrderByWithRelationInput[]
    cursor?: DeliveryOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeliveryOrderScalarFieldEnum | DeliveryOrderScalarFieldEnum[]
  }

  /**
   * PurchaseOrder.invoices
   */
  export type PurchaseOrder$invoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    cursor?: InvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * PurchaseOrder without action
   */
  export type PurchaseOrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
  }


  /**
   * Model PurchaseOrderItem
   */

  export type AggregatePurchaseOrderItem = {
    _count: PurchaseOrderItemCountAggregateOutputType | null
    _avg: PurchaseOrderItemAvgAggregateOutputType | null
    _sum: PurchaseOrderItemSumAggregateOutputType | null
    _min: PurchaseOrderItemMinAggregateOutputType | null
    _max: PurchaseOrderItemMaxAggregateOutputType | null
  }

  export type PurchaseOrderItemAvgAggregateOutputType = {
    id: number | null
    purchaseOrderId: number | null
    itemId: number | null
    quantity: Decimal | null
    taxAmount: Decimal | null
    discountAmount: Decimal | null
    unitPrice: Decimal | null
    subtotal: Decimal | null
    version: number | null
  }

  export type PurchaseOrderItemSumAggregateOutputType = {
    id: number | null
    purchaseOrderId: number | null
    itemId: number | null
    quantity: Decimal | null
    taxAmount: Decimal | null
    discountAmount: Decimal | null
    unitPrice: Decimal | null
    subtotal: Decimal | null
    version: number | null
  }

  export type PurchaseOrderItemMinAggregateOutputType = {
    id: number | null
    purchaseOrderId: number | null
    itemId: number | null
    quantity: Decimal | null
    taxAmount: Decimal | null
    discountType: string | null
    discountAmount: Decimal | null
    unitPrice: Decimal | null
    subtotal: Decimal | null
    remark: string | null
    version: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
    deletedAt: Date | null
  }

  export type PurchaseOrderItemMaxAggregateOutputType = {
    id: number | null
    purchaseOrderId: number | null
    itemId: number | null
    quantity: Decimal | null
    taxAmount: Decimal | null
    discountType: string | null
    discountAmount: Decimal | null
    unitPrice: Decimal | null
    subtotal: Decimal | null
    remark: string | null
    version: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
    deletedAt: Date | null
  }

  export type PurchaseOrderItemCountAggregateOutputType = {
    id: number
    purchaseOrderId: number
    itemId: number
    quantity: number
    taxAmount: number
    discountType: number
    discountAmount: number
    unitPrice: number
    subtotal: number
    remark: number
    version: number
    createdAt: number
    updatedAt: number
    deleted: number
    deletedAt: number
    _all: number
  }


  export type PurchaseOrderItemAvgAggregateInputType = {
    id?: true
    purchaseOrderId?: true
    itemId?: true
    quantity?: true
    taxAmount?: true
    discountAmount?: true
    unitPrice?: true
    subtotal?: true
    version?: true
  }

  export type PurchaseOrderItemSumAggregateInputType = {
    id?: true
    purchaseOrderId?: true
    itemId?: true
    quantity?: true
    taxAmount?: true
    discountAmount?: true
    unitPrice?: true
    subtotal?: true
    version?: true
  }

  export type PurchaseOrderItemMinAggregateInputType = {
    id?: true
    purchaseOrderId?: true
    itemId?: true
    quantity?: true
    taxAmount?: true
    discountType?: true
    discountAmount?: true
    unitPrice?: true
    subtotal?: true
    remark?: true
    version?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
  }

  export type PurchaseOrderItemMaxAggregateInputType = {
    id?: true
    purchaseOrderId?: true
    itemId?: true
    quantity?: true
    taxAmount?: true
    discountType?: true
    discountAmount?: true
    unitPrice?: true
    subtotal?: true
    remark?: true
    version?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
  }

  export type PurchaseOrderItemCountAggregateInputType = {
    id?: true
    purchaseOrderId?: true
    itemId?: true
    quantity?: true
    taxAmount?: true
    discountType?: true
    discountAmount?: true
    unitPrice?: true
    subtotal?: true
    remark?: true
    version?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    _all?: true
  }

  export type PurchaseOrderItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PurchaseOrderItem to aggregate.
     */
    where?: PurchaseOrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PurchaseOrderItems to fetch.
     */
    orderBy?: PurchaseOrderItemOrderByWithRelationInput | PurchaseOrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PurchaseOrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PurchaseOrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PurchaseOrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PurchaseOrderItems
    **/
    _count?: true | PurchaseOrderItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PurchaseOrderItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PurchaseOrderItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PurchaseOrderItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PurchaseOrderItemMaxAggregateInputType
  }

  export type GetPurchaseOrderItemAggregateType<T extends PurchaseOrderItemAggregateArgs> = {
        [P in keyof T & keyof AggregatePurchaseOrderItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePurchaseOrderItem[P]>
      : GetScalarType<T[P], AggregatePurchaseOrderItem[P]>
  }




  export type PurchaseOrderItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PurchaseOrderItemWhereInput
    orderBy?: PurchaseOrderItemOrderByWithAggregationInput | PurchaseOrderItemOrderByWithAggregationInput[]
    by: PurchaseOrderItemScalarFieldEnum[] | PurchaseOrderItemScalarFieldEnum
    having?: PurchaseOrderItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PurchaseOrderItemCountAggregateInputType | true
    _avg?: PurchaseOrderItemAvgAggregateInputType
    _sum?: PurchaseOrderItemSumAggregateInputType
    _min?: PurchaseOrderItemMinAggregateInputType
    _max?: PurchaseOrderItemMaxAggregateInputType
  }

  export type PurchaseOrderItemGroupByOutputType = {
    id: number
    purchaseOrderId: number
    itemId: number
    quantity: Decimal
    taxAmount: Decimal | null
    discountType: string | null
    discountAmount: Decimal | null
    unitPrice: Decimal
    subtotal: Decimal
    remark: string | null
    version: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean
    deletedAt: Date | null
    _count: PurchaseOrderItemCountAggregateOutputType | null
    _avg: PurchaseOrderItemAvgAggregateOutputType | null
    _sum: PurchaseOrderItemSumAggregateOutputType | null
    _min: PurchaseOrderItemMinAggregateOutputType | null
    _max: PurchaseOrderItemMaxAggregateOutputType | null
  }

  type GetPurchaseOrderItemGroupByPayload<T extends PurchaseOrderItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PurchaseOrderItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PurchaseOrderItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PurchaseOrderItemGroupByOutputType[P]>
            : GetScalarType<T[P], PurchaseOrderItemGroupByOutputType[P]>
        }
      >
    >


  export type PurchaseOrderItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    purchaseOrderId?: boolean
    itemId?: boolean
    quantity?: boolean
    taxAmount?: boolean
    discountType?: boolean
    discountAmount?: boolean
    unitPrice?: boolean
    subtotal?: boolean
    remark?: boolean
    version?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    deletedAt?: boolean
    purchaseOrder?: boolean | PurchaseOrderDefaultArgs<ExtArgs>
    item?: boolean | ItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["purchaseOrderItem"]>



  export type PurchaseOrderItemSelectScalar = {
    id?: boolean
    purchaseOrderId?: boolean
    itemId?: boolean
    quantity?: boolean
    taxAmount?: boolean
    discountType?: boolean
    discountAmount?: boolean
    unitPrice?: boolean
    subtotal?: boolean
    remark?: boolean
    version?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    deletedAt?: boolean
  }

  export type PurchaseOrderItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "purchaseOrderId" | "itemId" | "quantity" | "taxAmount" | "discountType" | "discountAmount" | "unitPrice" | "subtotal" | "remark" | "version" | "createdAt" | "updatedAt" | "deleted" | "deletedAt", ExtArgs["result"]["purchaseOrderItem"]>
  export type PurchaseOrderItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    purchaseOrder?: boolean | PurchaseOrderDefaultArgs<ExtArgs>
    item?: boolean | ItemDefaultArgs<ExtArgs>
  }

  export type $PurchaseOrderItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PurchaseOrderItem"
    objects: {
      purchaseOrder: Prisma.$PurchaseOrderPayload<ExtArgs>
      item: Prisma.$ItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      purchaseOrderId: number
      itemId: number
      quantity: Prisma.Decimal
      taxAmount: Prisma.Decimal | null
      discountType: string | null
      discountAmount: Prisma.Decimal | null
      unitPrice: Prisma.Decimal
      subtotal: Prisma.Decimal
      remark: string | null
      version: number | null
      createdAt: Date | null
      updatedAt: Date | null
      deleted: boolean
      deletedAt: Date | null
    }, ExtArgs["result"]["purchaseOrderItem"]>
    composites: {}
  }

  type PurchaseOrderItemGetPayload<S extends boolean | null | undefined | PurchaseOrderItemDefaultArgs> = $Result.GetResult<Prisma.$PurchaseOrderItemPayload, S>

  type PurchaseOrderItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PurchaseOrderItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PurchaseOrderItemCountAggregateInputType | true
    }

  export interface PurchaseOrderItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PurchaseOrderItem'], meta: { name: 'PurchaseOrderItem' } }
    /**
     * Find zero or one PurchaseOrderItem that matches the filter.
     * @param {PurchaseOrderItemFindUniqueArgs} args - Arguments to find a PurchaseOrderItem
     * @example
     * // Get one PurchaseOrderItem
     * const purchaseOrderItem = await prisma.purchaseOrderItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PurchaseOrderItemFindUniqueArgs>(args: SelectSubset<T, PurchaseOrderItemFindUniqueArgs<ExtArgs>>): Prisma__PurchaseOrderItemClient<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PurchaseOrderItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PurchaseOrderItemFindUniqueOrThrowArgs} args - Arguments to find a PurchaseOrderItem
     * @example
     * // Get one PurchaseOrderItem
     * const purchaseOrderItem = await prisma.purchaseOrderItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PurchaseOrderItemFindUniqueOrThrowArgs>(args: SelectSubset<T, PurchaseOrderItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PurchaseOrderItemClient<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PurchaseOrderItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderItemFindFirstArgs} args - Arguments to find a PurchaseOrderItem
     * @example
     * // Get one PurchaseOrderItem
     * const purchaseOrderItem = await prisma.purchaseOrderItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PurchaseOrderItemFindFirstArgs>(args?: SelectSubset<T, PurchaseOrderItemFindFirstArgs<ExtArgs>>): Prisma__PurchaseOrderItemClient<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PurchaseOrderItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderItemFindFirstOrThrowArgs} args - Arguments to find a PurchaseOrderItem
     * @example
     * // Get one PurchaseOrderItem
     * const purchaseOrderItem = await prisma.purchaseOrderItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PurchaseOrderItemFindFirstOrThrowArgs>(args?: SelectSubset<T, PurchaseOrderItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__PurchaseOrderItemClient<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PurchaseOrderItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PurchaseOrderItems
     * const purchaseOrderItems = await prisma.purchaseOrderItem.findMany()
     * 
     * // Get first 10 PurchaseOrderItems
     * const purchaseOrderItems = await prisma.purchaseOrderItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const purchaseOrderItemWithIdOnly = await prisma.purchaseOrderItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PurchaseOrderItemFindManyArgs>(args?: SelectSubset<T, PurchaseOrderItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PurchaseOrderItem.
     * @param {PurchaseOrderItemCreateArgs} args - Arguments to create a PurchaseOrderItem.
     * @example
     * // Create one PurchaseOrderItem
     * const PurchaseOrderItem = await prisma.purchaseOrderItem.create({
     *   data: {
     *     // ... data to create a PurchaseOrderItem
     *   }
     * })
     * 
     */
    create<T extends PurchaseOrderItemCreateArgs>(args: SelectSubset<T, PurchaseOrderItemCreateArgs<ExtArgs>>): Prisma__PurchaseOrderItemClient<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PurchaseOrderItems.
     * @param {PurchaseOrderItemCreateManyArgs} args - Arguments to create many PurchaseOrderItems.
     * @example
     * // Create many PurchaseOrderItems
     * const purchaseOrderItem = await prisma.purchaseOrderItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PurchaseOrderItemCreateManyArgs>(args?: SelectSubset<T, PurchaseOrderItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PurchaseOrderItem.
     * @param {PurchaseOrderItemDeleteArgs} args - Arguments to delete one PurchaseOrderItem.
     * @example
     * // Delete one PurchaseOrderItem
     * const PurchaseOrderItem = await prisma.purchaseOrderItem.delete({
     *   where: {
     *     // ... filter to delete one PurchaseOrderItem
     *   }
     * })
     * 
     */
    delete<T extends PurchaseOrderItemDeleteArgs>(args: SelectSubset<T, PurchaseOrderItemDeleteArgs<ExtArgs>>): Prisma__PurchaseOrderItemClient<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PurchaseOrderItem.
     * @param {PurchaseOrderItemUpdateArgs} args - Arguments to update one PurchaseOrderItem.
     * @example
     * // Update one PurchaseOrderItem
     * const purchaseOrderItem = await prisma.purchaseOrderItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PurchaseOrderItemUpdateArgs>(args: SelectSubset<T, PurchaseOrderItemUpdateArgs<ExtArgs>>): Prisma__PurchaseOrderItemClient<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PurchaseOrderItems.
     * @param {PurchaseOrderItemDeleteManyArgs} args - Arguments to filter PurchaseOrderItems to delete.
     * @example
     * // Delete a few PurchaseOrderItems
     * const { count } = await prisma.purchaseOrderItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PurchaseOrderItemDeleteManyArgs>(args?: SelectSubset<T, PurchaseOrderItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PurchaseOrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PurchaseOrderItems
     * const purchaseOrderItem = await prisma.purchaseOrderItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PurchaseOrderItemUpdateManyArgs>(args: SelectSubset<T, PurchaseOrderItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PurchaseOrderItem.
     * @param {PurchaseOrderItemUpsertArgs} args - Arguments to update or create a PurchaseOrderItem.
     * @example
     * // Update or create a PurchaseOrderItem
     * const purchaseOrderItem = await prisma.purchaseOrderItem.upsert({
     *   create: {
     *     // ... data to create a PurchaseOrderItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PurchaseOrderItem we want to update
     *   }
     * })
     */
    upsert<T extends PurchaseOrderItemUpsertArgs>(args: SelectSubset<T, PurchaseOrderItemUpsertArgs<ExtArgs>>): Prisma__PurchaseOrderItemClient<$Result.GetResult<Prisma.$PurchaseOrderItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PurchaseOrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderItemCountArgs} args - Arguments to filter PurchaseOrderItems to count.
     * @example
     * // Count the number of PurchaseOrderItems
     * const count = await prisma.purchaseOrderItem.count({
     *   where: {
     *     // ... the filter for the PurchaseOrderItems we want to count
     *   }
     * })
    **/
    count<T extends PurchaseOrderItemCountArgs>(
      args?: Subset<T, PurchaseOrderItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PurchaseOrderItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PurchaseOrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PurchaseOrderItemAggregateArgs>(args: Subset<T, PurchaseOrderItemAggregateArgs>): Prisma.PrismaPromise<GetPurchaseOrderItemAggregateType<T>>

    /**
     * Group by PurchaseOrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PurchaseOrderItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PurchaseOrderItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PurchaseOrderItemGroupByArgs['orderBy'] }
        : { orderBy?: PurchaseOrderItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PurchaseOrderItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPurchaseOrderItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PurchaseOrderItem model
   */
  readonly fields: PurchaseOrderItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PurchaseOrderItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PurchaseOrderItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    purchaseOrder<T extends PurchaseOrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PurchaseOrderDefaultArgs<ExtArgs>>): Prisma__PurchaseOrderClient<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    item<T extends ItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ItemDefaultArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PurchaseOrderItem model
   */
  interface PurchaseOrderItemFieldRefs {
    readonly id: FieldRef<"PurchaseOrderItem", 'Int'>
    readonly purchaseOrderId: FieldRef<"PurchaseOrderItem", 'Int'>
    readonly itemId: FieldRef<"PurchaseOrderItem", 'Int'>
    readonly quantity: FieldRef<"PurchaseOrderItem", 'Decimal'>
    readonly taxAmount: FieldRef<"PurchaseOrderItem", 'Decimal'>
    readonly discountType: FieldRef<"PurchaseOrderItem", 'String'>
    readonly discountAmount: FieldRef<"PurchaseOrderItem", 'Decimal'>
    readonly unitPrice: FieldRef<"PurchaseOrderItem", 'Decimal'>
    readonly subtotal: FieldRef<"PurchaseOrderItem", 'Decimal'>
    readonly remark: FieldRef<"PurchaseOrderItem", 'String'>
    readonly version: FieldRef<"PurchaseOrderItem", 'Int'>
    readonly createdAt: FieldRef<"PurchaseOrderItem", 'DateTime'>
    readonly updatedAt: FieldRef<"PurchaseOrderItem", 'DateTime'>
    readonly deleted: FieldRef<"PurchaseOrderItem", 'Boolean'>
    readonly deletedAt: FieldRef<"PurchaseOrderItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PurchaseOrderItem findUnique
   */
  export type PurchaseOrderItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrderItem to fetch.
     */
    where: PurchaseOrderItemWhereUniqueInput
  }

  /**
   * PurchaseOrderItem findUniqueOrThrow
   */
  export type PurchaseOrderItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrderItem to fetch.
     */
    where: PurchaseOrderItemWhereUniqueInput
  }

  /**
   * PurchaseOrderItem findFirst
   */
  export type PurchaseOrderItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrderItem to fetch.
     */
    where?: PurchaseOrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PurchaseOrderItems to fetch.
     */
    orderBy?: PurchaseOrderItemOrderByWithRelationInput | PurchaseOrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PurchaseOrderItems.
     */
    cursor?: PurchaseOrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PurchaseOrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PurchaseOrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PurchaseOrderItems.
     */
    distinct?: PurchaseOrderItemScalarFieldEnum | PurchaseOrderItemScalarFieldEnum[]
  }

  /**
   * PurchaseOrderItem findFirstOrThrow
   */
  export type PurchaseOrderItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrderItem to fetch.
     */
    where?: PurchaseOrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PurchaseOrderItems to fetch.
     */
    orderBy?: PurchaseOrderItemOrderByWithRelationInput | PurchaseOrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PurchaseOrderItems.
     */
    cursor?: PurchaseOrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PurchaseOrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PurchaseOrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PurchaseOrderItems.
     */
    distinct?: PurchaseOrderItemScalarFieldEnum | PurchaseOrderItemScalarFieldEnum[]
  }

  /**
   * PurchaseOrderItem findMany
   */
  export type PurchaseOrderItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * Filter, which PurchaseOrderItems to fetch.
     */
    where?: PurchaseOrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PurchaseOrderItems to fetch.
     */
    orderBy?: PurchaseOrderItemOrderByWithRelationInput | PurchaseOrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PurchaseOrderItems.
     */
    cursor?: PurchaseOrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PurchaseOrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PurchaseOrderItems.
     */
    skip?: number
    distinct?: PurchaseOrderItemScalarFieldEnum | PurchaseOrderItemScalarFieldEnum[]
  }

  /**
   * PurchaseOrderItem create
   */
  export type PurchaseOrderItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * The data needed to create a PurchaseOrderItem.
     */
    data: XOR<PurchaseOrderItemCreateInput, PurchaseOrderItemUncheckedCreateInput>
  }

  /**
   * PurchaseOrderItem createMany
   */
  export type PurchaseOrderItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PurchaseOrderItems.
     */
    data: PurchaseOrderItemCreateManyInput | PurchaseOrderItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PurchaseOrderItem update
   */
  export type PurchaseOrderItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * The data needed to update a PurchaseOrderItem.
     */
    data: XOR<PurchaseOrderItemUpdateInput, PurchaseOrderItemUncheckedUpdateInput>
    /**
     * Choose, which PurchaseOrderItem to update.
     */
    where: PurchaseOrderItemWhereUniqueInput
  }

  /**
   * PurchaseOrderItem updateMany
   */
  export type PurchaseOrderItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PurchaseOrderItems.
     */
    data: XOR<PurchaseOrderItemUpdateManyMutationInput, PurchaseOrderItemUncheckedUpdateManyInput>
    /**
     * Filter which PurchaseOrderItems to update
     */
    where?: PurchaseOrderItemWhereInput
    /**
     * Limit how many PurchaseOrderItems to update.
     */
    limit?: number
  }

  /**
   * PurchaseOrderItem upsert
   */
  export type PurchaseOrderItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * The filter to search for the PurchaseOrderItem to update in case it exists.
     */
    where: PurchaseOrderItemWhereUniqueInput
    /**
     * In case the PurchaseOrderItem found by the `where` argument doesn't exist, create a new PurchaseOrderItem with this data.
     */
    create: XOR<PurchaseOrderItemCreateInput, PurchaseOrderItemUncheckedCreateInput>
    /**
     * In case the PurchaseOrderItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PurchaseOrderItemUpdateInput, PurchaseOrderItemUncheckedUpdateInput>
  }

  /**
   * PurchaseOrderItem delete
   */
  export type PurchaseOrderItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
    /**
     * Filter which PurchaseOrderItem to delete.
     */
    where: PurchaseOrderItemWhereUniqueInput
  }

  /**
   * PurchaseOrderItem deleteMany
   */
  export type PurchaseOrderItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PurchaseOrderItems to delete
     */
    where?: PurchaseOrderItemWhereInput
    /**
     * Limit how many PurchaseOrderItems to delete.
     */
    limit?: number
  }

  /**
   * PurchaseOrderItem without action
   */
  export type PurchaseOrderItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrderItem
     */
    select?: PurchaseOrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrderItem
     */
    omit?: PurchaseOrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderItemInclude<ExtArgs> | null
  }


  /**
   * Model Payment
   */

  export type AggregatePayment = {
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  export type PaymentAvgAggregateOutputType = {
    id: number | null
    tenderedAmount: Decimal | null
    paidAmount: Decimal | null
    salesId: number | null
    outletId: number | null
    sessionId: number | null
    eodId: number | null
    version: number | null
  }

  export type PaymentSumAggregateOutputType = {
    id: number | null
    tenderedAmount: Decimal | null
    paidAmount: Decimal | null
    salesId: number | null
    outletId: number | null
    sessionId: number | null
    eodId: number | null
    version: number | null
  }

  export type PaymentMinAggregateOutputType = {
    id: number | null
    method: string | null
    tenderedAmount: Decimal | null
    paidAmount: Decimal | null
    currencySymbol: string | null
    salesId: number | null
    reference: string | null
    remark: string | null
    businessDate: Date | null
    status: string | null
    outletId: number | null
    sessionId: number | null
    eodId: number | null
    performedBy: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type PaymentMaxAggregateOutputType = {
    id: number | null
    method: string | null
    tenderedAmount: Decimal | null
    paidAmount: Decimal | null
    currencySymbol: string | null
    salesId: number | null
    reference: string | null
    remark: string | null
    businessDate: Date | null
    status: string | null
    outletId: number | null
    sessionId: number | null
    eodId: number | null
    performedBy: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type PaymentCountAggregateOutputType = {
    id: number
    method: number
    tenderedAmount: number
    paidAmount: number
    currencySymbol: number
    salesId: number
    reference: number
    remark: number
    businessDate: number
    status: number
    outletId: number
    sessionId: number
    eodId: number
    performedBy: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type PaymentAvgAggregateInputType = {
    id?: true
    tenderedAmount?: true
    paidAmount?: true
    salesId?: true
    outletId?: true
    sessionId?: true
    eodId?: true
    version?: true
  }

  export type PaymentSumAggregateInputType = {
    id?: true
    tenderedAmount?: true
    paidAmount?: true
    salesId?: true
    outletId?: true
    sessionId?: true
    eodId?: true
    version?: true
  }

  export type PaymentMinAggregateInputType = {
    id?: true
    method?: true
    tenderedAmount?: true
    paidAmount?: true
    currencySymbol?: true
    salesId?: true
    reference?: true
    remark?: true
    businessDate?: true
    status?: true
    outletId?: true
    sessionId?: true
    eodId?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type PaymentMaxAggregateInputType = {
    id?: true
    method?: true
    tenderedAmount?: true
    paidAmount?: true
    currencySymbol?: true
    salesId?: true
    reference?: true
    remark?: true
    businessDate?: true
    status?: true
    outletId?: true
    sessionId?: true
    eodId?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type PaymentCountAggregateInputType = {
    id?: true
    method?: true
    tenderedAmount?: true
    paidAmount?: true
    currencySymbol?: true
    salesId?: true
    reference?: true
    remark?: true
    businessDate?: true
    status?: true
    outletId?: true
    sessionId?: true
    eodId?: true
    performedBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type PaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payment to aggregate.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Payments
    **/
    _count?: true | PaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMaxAggregateInputType
  }

  export type GetPaymentAggregateType<T extends PaymentAggregateArgs> = {
        [P in keyof T & keyof AggregatePayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayment[P]>
      : GetScalarType<T[P], AggregatePayment[P]>
  }




  export type PaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithAggregationInput | PaymentOrderByWithAggregationInput[]
    by: PaymentScalarFieldEnum[] | PaymentScalarFieldEnum
    having?: PaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentCountAggregateInputType | true
    _avg?: PaymentAvgAggregateInputType
    _sum?: PaymentSumAggregateInputType
    _min?: PaymentMinAggregateInputType
    _max?: PaymentMaxAggregateInputType
  }

  export type PaymentGroupByOutputType = {
    id: number
    method: string
    tenderedAmount: Decimal
    paidAmount: Decimal
    currencySymbol: string
    salesId: number
    reference: string
    remark: string
    businessDate: Date
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy: string | null
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  type GetPaymentGroupByPayload<T extends PaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentGroupByOutputType[P]>
        }
      >
    >


  export type PaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    method?: boolean
    tenderedAmount?: boolean
    paidAmount?: boolean
    currencySymbol?: boolean
    salesId?: boolean
    reference?: boolean
    remark?: boolean
    businessDate?: boolean
    status?: boolean
    outletId?: boolean
    sessionId?: boolean
    eodId?: boolean
    performedBy?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    cardInfos?: boolean | Payment$cardInfosArgs<ExtArgs>
    sales?: boolean | SalesDefaultArgs<ExtArgs>
    splitBills?: boolean | Payment$splitBillsArgs<ExtArgs>
    _count?: boolean | PaymentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>



  export type PaymentSelectScalar = {
    id?: boolean
    method?: boolean
    tenderedAmount?: boolean
    paidAmount?: boolean
    currencySymbol?: boolean
    salesId?: boolean
    reference?: boolean
    remark?: boolean
    businessDate?: boolean
    status?: boolean
    outletId?: boolean
    sessionId?: boolean
    eodId?: boolean
    performedBy?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type PaymentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "method" | "tenderedAmount" | "paidAmount" | "currencySymbol" | "salesId" | "reference" | "remark" | "businessDate" | "status" | "outletId" | "sessionId" | "eodId" | "performedBy" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["payment"]>
  export type PaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cardInfos?: boolean | Payment$cardInfosArgs<ExtArgs>
    sales?: boolean | SalesDefaultArgs<ExtArgs>
    splitBills?: boolean | Payment$splitBillsArgs<ExtArgs>
    _count?: boolean | PaymentCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $PaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Payment"
    objects: {
      cardInfos: Prisma.$CardInfoPayload<ExtArgs>[]
      sales: Prisma.$SalesPayload<ExtArgs>
      splitBills: Prisma.$SplitBillPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      method: string
      tenderedAmount: Prisma.Decimal
      paidAmount: Prisma.Decimal
      currencySymbol: string
      salesId: number
      reference: string
      remark: string
      businessDate: Date
      status: string
      outletId: number
      sessionId: number
      eodId: number
      performedBy: string | null
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["payment"]>
    composites: {}
  }

  type PaymentGetPayload<S extends boolean | null | undefined | PaymentDefaultArgs> = $Result.GetResult<Prisma.$PaymentPayload, S>

  type PaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentCountAggregateInputType | true
    }

  export interface PaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Payment'], meta: { name: 'Payment' } }
    /**
     * Find zero or one Payment that matches the filter.
     * @param {PaymentFindUniqueArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentFindUniqueArgs>(args: SelectSubset<T, PaymentFindUniqueArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Payment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentFindUniqueOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentFindFirstArgs>(args?: SelectSubset<T, PaymentFindFirstArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payment.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentWithIdOnly = await prisma.payment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentFindManyArgs>(args?: SelectSubset<T, PaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Payment.
     * @param {PaymentCreateArgs} args - Arguments to create a Payment.
     * @example
     * // Create one Payment
     * const Payment = await prisma.payment.create({
     *   data: {
     *     // ... data to create a Payment
     *   }
     * })
     * 
     */
    create<T extends PaymentCreateArgs>(args: SelectSubset<T, PaymentCreateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Payments.
     * @param {PaymentCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentCreateManyArgs>(args?: SelectSubset<T, PaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Payment.
     * @param {PaymentDeleteArgs} args - Arguments to delete one Payment.
     * @example
     * // Delete one Payment
     * const Payment = await prisma.payment.delete({
     *   where: {
     *     // ... filter to delete one Payment
     *   }
     * })
     * 
     */
    delete<T extends PaymentDeleteArgs>(args: SelectSubset<T, PaymentDeleteArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Payment.
     * @param {PaymentUpdateArgs} args - Arguments to update one Payment.
     * @example
     * // Update one Payment
     * const payment = await prisma.payment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentUpdateArgs>(args: SelectSubset<T, PaymentUpdateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Payments.
     * @param {PaymentDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentDeleteManyArgs>(args?: SelectSubset<T, PaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentUpdateManyArgs>(args: SelectSubset<T, PaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Payment.
     * @param {PaymentUpsertArgs} args - Arguments to update or create a Payment.
     * @example
     * // Update or create a Payment
     * const payment = await prisma.payment.upsert({
     *   create: {
     *     // ... data to create a Payment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payment we want to update
     *   }
     * })
     */
    upsert<T extends PaymentUpsertArgs>(args: SelectSubset<T, PaymentUpsertArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payment.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends PaymentCountArgs>(
      args?: Subset<T, PaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentAggregateArgs>(args: Subset<T, PaymentAggregateArgs>): Prisma.PrismaPromise<GetPaymentAggregateType<T>>

    /**
     * Group by Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentGroupByArgs['orderBy'] }
        : { orderBy?: PaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Payment model
   */
  readonly fields: PaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Payment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cardInfos<T extends Payment$cardInfosArgs<ExtArgs> = {}>(args?: Subset<T, Payment$cardInfosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CardInfoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sales<T extends SalesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SalesDefaultArgs<ExtArgs>>): Prisma__SalesClient<$Result.GetResult<Prisma.$SalesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    splitBills<T extends Payment$splitBillsArgs<ExtArgs> = {}>(args?: Subset<T, Payment$splitBillsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SplitBillPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Payment model
   */
  interface PaymentFieldRefs {
    readonly id: FieldRef<"Payment", 'Int'>
    readonly method: FieldRef<"Payment", 'String'>
    readonly tenderedAmount: FieldRef<"Payment", 'Decimal'>
    readonly paidAmount: FieldRef<"Payment", 'Decimal'>
    readonly currencySymbol: FieldRef<"Payment", 'String'>
    readonly salesId: FieldRef<"Payment", 'Int'>
    readonly reference: FieldRef<"Payment", 'String'>
    readonly remark: FieldRef<"Payment", 'String'>
    readonly businessDate: FieldRef<"Payment", 'DateTime'>
    readonly status: FieldRef<"Payment", 'String'>
    readonly outletId: FieldRef<"Payment", 'Int'>
    readonly sessionId: FieldRef<"Payment", 'Int'>
    readonly eodId: FieldRef<"Payment", 'Int'>
    readonly performedBy: FieldRef<"Payment", 'String'>
    readonly deleted: FieldRef<"Payment", 'Boolean'>
    readonly deletedAt: FieldRef<"Payment", 'DateTime'>
    readonly createdAt: FieldRef<"Payment", 'DateTime'>
    readonly updatedAt: FieldRef<"Payment", 'DateTime'>
    readonly version: FieldRef<"Payment", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Payment findUnique
   */
  export type PaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findUniqueOrThrow
   */
  export type PaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findFirst
   */
  export type PaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findFirstOrThrow
   */
  export type PaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findMany
   */
  export type PaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payments to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment create
   */
  export type PaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a Payment.
     */
    data: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
  }

  /**
   * Payment createMany
   */
  export type PaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Payment update
   */
  export type PaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a Payment.
     */
    data: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
    /**
     * Choose, which Payment to update.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment updateMany
   */
  export type PaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to update.
     */
    limit?: number
  }

  /**
   * Payment upsert
   */
  export type PaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the Payment to update in case it exists.
     */
    where: PaymentWhereUniqueInput
    /**
     * In case the Payment found by the `where` argument doesn't exist, create a new Payment with this data.
     */
    create: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
    /**
     * In case the Payment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
  }

  /**
   * Payment delete
   */
  export type PaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter which Payment to delete.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment deleteMany
   */
  export type PaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payments to delete
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to delete.
     */
    limit?: number
  }

  /**
   * Payment.cardInfos
   */
  export type Payment$cardInfosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CardInfo
     */
    select?: CardInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CardInfo
     */
    omit?: CardInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInfoInclude<ExtArgs> | null
    where?: CardInfoWhereInput
    orderBy?: CardInfoOrderByWithRelationInput | CardInfoOrderByWithRelationInput[]
    cursor?: CardInfoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CardInfoScalarFieldEnum | CardInfoScalarFieldEnum[]
  }

  /**
   * Payment.splitBills
   */
  export type Payment$splitBillsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SplitBill
     */
    select?: SplitBillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SplitBill
     */
    omit?: SplitBillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SplitBillInclude<ExtArgs> | null
    where?: SplitBillWhereInput
    orderBy?: SplitBillOrderByWithRelationInput | SplitBillOrderByWithRelationInput[]
    cursor?: SplitBillWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SplitBillScalarFieldEnum | SplitBillScalarFieldEnum[]
  }

  /**
   * Payment without action
   */
  export type PaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
  }


  /**
   * Model RegisterLog
   */

  export type AggregateRegisterLog = {
    _count: RegisterLogCountAggregateOutputType | null
    _avg: RegisterLogAvgAggregateOutputType | null
    _sum: RegisterLogSumAggregateOutputType | null
    _min: RegisterLogMinAggregateOutputType | null
    _max: RegisterLogMaxAggregateOutputType | null
  }

  export type RegisterLogAvgAggregateOutputType = {
    id: number | null
    modifiedAmount: Decimal | null
    salesId: number | null
    outletId: number | null
    sessionId: number | null
    eodId: number | null
    version: number | null
  }

  export type RegisterLogSumAggregateOutputType = {
    id: number | null
    modifiedAmount: Decimal | null
    salesId: number | null
    outletId: number | null
    sessionId: number | null
    eodId: number | null
    version: number | null
  }

  export type RegisterLogMinAggregateOutputType = {
    id: number | null
    type: string | null
    modifiedAmount: Decimal | null
    currencySymbol: string | null
    salesId: number | null
    remark: string | null
    status: string | null
    outletId: number | null
    sessionId: number | null
    eodId: number | null
    performedBy: string | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type RegisterLogMaxAggregateOutputType = {
    id: number | null
    type: string | null
    modifiedAmount: Decimal | null
    currencySymbol: string | null
    salesId: number | null
    remark: string | null
    status: string | null
    outletId: number | null
    sessionId: number | null
    eodId: number | null
    performedBy: string | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type RegisterLogCountAggregateOutputType = {
    id: number
    type: number
    modifiedAmount: number
    currencySymbol: number
    salesId: number
    remark: number
    status: number
    outletId: number
    sessionId: number
    eodId: number
    performedBy: number
    deleted: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type RegisterLogAvgAggregateInputType = {
    id?: true
    modifiedAmount?: true
    salesId?: true
    outletId?: true
    sessionId?: true
    eodId?: true
    version?: true
  }

  export type RegisterLogSumAggregateInputType = {
    id?: true
    modifiedAmount?: true
    salesId?: true
    outletId?: true
    sessionId?: true
    eodId?: true
    version?: true
  }

  export type RegisterLogMinAggregateInputType = {
    id?: true
    type?: true
    modifiedAmount?: true
    currencySymbol?: true
    salesId?: true
    remark?: true
    status?: true
    outletId?: true
    sessionId?: true
    eodId?: true
    performedBy?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type RegisterLogMaxAggregateInputType = {
    id?: true
    type?: true
    modifiedAmount?: true
    currencySymbol?: true
    salesId?: true
    remark?: true
    status?: true
    outletId?: true
    sessionId?: true
    eodId?: true
    performedBy?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type RegisterLogCountAggregateInputType = {
    id?: true
    type?: true
    modifiedAmount?: true
    currencySymbol?: true
    salesId?: true
    remark?: true
    status?: true
    outletId?: true
    sessionId?: true
    eodId?: true
    performedBy?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type RegisterLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegisterLog to aggregate.
     */
    where?: RegisterLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegisterLogs to fetch.
     */
    orderBy?: RegisterLogOrderByWithRelationInput | RegisterLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegisterLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegisterLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegisterLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RegisterLogs
    **/
    _count?: true | RegisterLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegisterLogAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegisterLogSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegisterLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegisterLogMaxAggregateInputType
  }

  export type GetRegisterLogAggregateType<T extends RegisterLogAggregateArgs> = {
        [P in keyof T & keyof AggregateRegisterLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegisterLog[P]>
      : GetScalarType<T[P], AggregateRegisterLog[P]>
  }




  export type RegisterLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegisterLogWhereInput
    orderBy?: RegisterLogOrderByWithAggregationInput | RegisterLogOrderByWithAggregationInput[]
    by: RegisterLogScalarFieldEnum[] | RegisterLogScalarFieldEnum
    having?: RegisterLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegisterLogCountAggregateInputType | true
    _avg?: RegisterLogAvgAggregateInputType
    _sum?: RegisterLogSumAggregateInputType
    _min?: RegisterLogMinAggregateInputType
    _max?: RegisterLogMaxAggregateInputType
  }

  export type RegisterLogGroupByOutputType = {
    id: number
    type: string
    modifiedAmount: Decimal
    currencySymbol: string
    salesId: number
    remark: string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy: string | null
    deleted: boolean
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: RegisterLogCountAggregateOutputType | null
    _avg: RegisterLogAvgAggregateOutputType | null
    _sum: RegisterLogSumAggregateOutputType | null
    _min: RegisterLogMinAggregateOutputType | null
    _max: RegisterLogMaxAggregateOutputType | null
  }

  type GetRegisterLogGroupByPayload<T extends RegisterLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegisterLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegisterLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegisterLogGroupByOutputType[P]>
            : GetScalarType<T[P], RegisterLogGroupByOutputType[P]>
        }
      >
    >


  export type RegisterLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    modifiedAmount?: boolean
    currencySymbol?: boolean
    salesId?: boolean
    remark?: boolean
    status?: boolean
    outletId?: boolean
    sessionId?: boolean
    eodId?: boolean
    performedBy?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    sales?: boolean | SalesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["registerLog"]>



  export type RegisterLogSelectScalar = {
    id?: boolean
    type?: boolean
    modifiedAmount?: boolean
    currencySymbol?: boolean
    salesId?: boolean
    remark?: boolean
    status?: boolean
    outletId?: boolean
    sessionId?: boolean
    eodId?: boolean
    performedBy?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type RegisterLogOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "modifiedAmount" | "currencySymbol" | "salesId" | "remark" | "status" | "outletId" | "sessionId" | "eodId" | "performedBy" | "deleted" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["registerLog"]>
  export type RegisterLogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sales?: boolean | SalesDefaultArgs<ExtArgs>
  }

  export type $RegisterLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RegisterLog"
    objects: {
      sales: Prisma.$SalesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      type: string
      modifiedAmount: Prisma.Decimal
      currencySymbol: string
      salesId: number
      remark: string
      status: string
      outletId: number
      sessionId: number
      eodId: number
      performedBy: string | null
      deleted: boolean
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["registerLog"]>
    composites: {}
  }

  type RegisterLogGetPayload<S extends boolean | null | undefined | RegisterLogDefaultArgs> = $Result.GetResult<Prisma.$RegisterLogPayload, S>

  type RegisterLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RegisterLogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RegisterLogCountAggregateInputType | true
    }

  export interface RegisterLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RegisterLog'], meta: { name: 'RegisterLog' } }
    /**
     * Find zero or one RegisterLog that matches the filter.
     * @param {RegisterLogFindUniqueArgs} args - Arguments to find a RegisterLog
     * @example
     * // Get one RegisterLog
     * const registerLog = await prisma.registerLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegisterLogFindUniqueArgs>(args: SelectSubset<T, RegisterLogFindUniqueArgs<ExtArgs>>): Prisma__RegisterLogClient<$Result.GetResult<Prisma.$RegisterLogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RegisterLog that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RegisterLogFindUniqueOrThrowArgs} args - Arguments to find a RegisterLog
     * @example
     * // Get one RegisterLog
     * const registerLog = await prisma.registerLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegisterLogFindUniqueOrThrowArgs>(args: SelectSubset<T, RegisterLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegisterLogClient<$Result.GetResult<Prisma.$RegisterLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegisterLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegisterLogFindFirstArgs} args - Arguments to find a RegisterLog
     * @example
     * // Get one RegisterLog
     * const registerLog = await prisma.registerLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegisterLogFindFirstArgs>(args?: SelectSubset<T, RegisterLogFindFirstArgs<ExtArgs>>): Prisma__RegisterLogClient<$Result.GetResult<Prisma.$RegisterLogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RegisterLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegisterLogFindFirstOrThrowArgs} args - Arguments to find a RegisterLog
     * @example
     * // Get one RegisterLog
     * const registerLog = await prisma.registerLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegisterLogFindFirstOrThrowArgs>(args?: SelectSubset<T, RegisterLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegisterLogClient<$Result.GetResult<Prisma.$RegisterLogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RegisterLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegisterLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RegisterLogs
     * const registerLogs = await prisma.registerLog.findMany()
     * 
     * // Get first 10 RegisterLogs
     * const registerLogs = await prisma.registerLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registerLogWithIdOnly = await prisma.registerLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegisterLogFindManyArgs>(args?: SelectSubset<T, RegisterLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegisterLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RegisterLog.
     * @param {RegisterLogCreateArgs} args - Arguments to create a RegisterLog.
     * @example
     * // Create one RegisterLog
     * const RegisterLog = await prisma.registerLog.create({
     *   data: {
     *     // ... data to create a RegisterLog
     *   }
     * })
     * 
     */
    create<T extends RegisterLogCreateArgs>(args: SelectSubset<T, RegisterLogCreateArgs<ExtArgs>>): Prisma__RegisterLogClient<$Result.GetResult<Prisma.$RegisterLogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RegisterLogs.
     * @param {RegisterLogCreateManyArgs} args - Arguments to create many RegisterLogs.
     * @example
     * // Create many RegisterLogs
     * const registerLog = await prisma.registerLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegisterLogCreateManyArgs>(args?: SelectSubset<T, RegisterLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a RegisterLog.
     * @param {RegisterLogDeleteArgs} args - Arguments to delete one RegisterLog.
     * @example
     * // Delete one RegisterLog
     * const RegisterLog = await prisma.registerLog.delete({
     *   where: {
     *     // ... filter to delete one RegisterLog
     *   }
     * })
     * 
     */
    delete<T extends RegisterLogDeleteArgs>(args: SelectSubset<T, RegisterLogDeleteArgs<ExtArgs>>): Prisma__RegisterLogClient<$Result.GetResult<Prisma.$RegisterLogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RegisterLog.
     * @param {RegisterLogUpdateArgs} args - Arguments to update one RegisterLog.
     * @example
     * // Update one RegisterLog
     * const registerLog = await prisma.registerLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegisterLogUpdateArgs>(args: SelectSubset<T, RegisterLogUpdateArgs<ExtArgs>>): Prisma__RegisterLogClient<$Result.GetResult<Prisma.$RegisterLogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RegisterLogs.
     * @param {RegisterLogDeleteManyArgs} args - Arguments to filter RegisterLogs to delete.
     * @example
     * // Delete a few RegisterLogs
     * const { count } = await prisma.registerLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegisterLogDeleteManyArgs>(args?: SelectSubset<T, RegisterLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RegisterLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegisterLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RegisterLogs
     * const registerLog = await prisma.registerLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegisterLogUpdateManyArgs>(args: SelectSubset<T, RegisterLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RegisterLog.
     * @param {RegisterLogUpsertArgs} args - Arguments to update or create a RegisterLog.
     * @example
     * // Update or create a RegisterLog
     * const registerLog = await prisma.registerLog.upsert({
     *   create: {
     *     // ... data to create a RegisterLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RegisterLog we want to update
     *   }
     * })
     */
    upsert<T extends RegisterLogUpsertArgs>(args: SelectSubset<T, RegisterLogUpsertArgs<ExtArgs>>): Prisma__RegisterLogClient<$Result.GetResult<Prisma.$RegisterLogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RegisterLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegisterLogCountArgs} args - Arguments to filter RegisterLogs to count.
     * @example
     * // Count the number of RegisterLogs
     * const count = await prisma.registerLog.count({
     *   where: {
     *     // ... the filter for the RegisterLogs we want to count
     *   }
     * })
    **/
    count<T extends RegisterLogCountArgs>(
      args?: Subset<T, RegisterLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegisterLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RegisterLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegisterLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegisterLogAggregateArgs>(args: Subset<T, RegisterLogAggregateArgs>): Prisma.PrismaPromise<GetRegisterLogAggregateType<T>>

    /**
     * Group by RegisterLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegisterLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegisterLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegisterLogGroupByArgs['orderBy'] }
        : { orderBy?: RegisterLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegisterLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegisterLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RegisterLog model
   */
  readonly fields: RegisterLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RegisterLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegisterLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sales<T extends SalesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SalesDefaultArgs<ExtArgs>>): Prisma__SalesClient<$Result.GetResult<Prisma.$SalesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RegisterLog model
   */
  interface RegisterLogFieldRefs {
    readonly id: FieldRef<"RegisterLog", 'Int'>
    readonly type: FieldRef<"RegisterLog", 'String'>
    readonly modifiedAmount: FieldRef<"RegisterLog", 'Decimal'>
    readonly currencySymbol: FieldRef<"RegisterLog", 'String'>
    readonly salesId: FieldRef<"RegisterLog", 'Int'>
    readonly remark: FieldRef<"RegisterLog", 'String'>
    readonly status: FieldRef<"RegisterLog", 'String'>
    readonly outletId: FieldRef<"RegisterLog", 'Int'>
    readonly sessionId: FieldRef<"RegisterLog", 'Int'>
    readonly eodId: FieldRef<"RegisterLog", 'Int'>
    readonly performedBy: FieldRef<"RegisterLog", 'String'>
    readonly deleted: FieldRef<"RegisterLog", 'Boolean'>
    readonly createdAt: FieldRef<"RegisterLog", 'DateTime'>
    readonly updatedAt: FieldRef<"RegisterLog", 'DateTime'>
    readonly version: FieldRef<"RegisterLog", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * RegisterLog findUnique
   */
  export type RegisterLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegisterLog
     */
    select?: RegisterLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegisterLog
     */
    omit?: RegisterLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegisterLogInclude<ExtArgs> | null
    /**
     * Filter, which RegisterLog to fetch.
     */
    where: RegisterLogWhereUniqueInput
  }

  /**
   * RegisterLog findUniqueOrThrow
   */
  export type RegisterLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegisterLog
     */
    select?: RegisterLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegisterLog
     */
    omit?: RegisterLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegisterLogInclude<ExtArgs> | null
    /**
     * Filter, which RegisterLog to fetch.
     */
    where: RegisterLogWhereUniqueInput
  }

  /**
   * RegisterLog findFirst
   */
  export type RegisterLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegisterLog
     */
    select?: RegisterLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegisterLog
     */
    omit?: RegisterLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegisterLogInclude<ExtArgs> | null
    /**
     * Filter, which RegisterLog to fetch.
     */
    where?: RegisterLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegisterLogs to fetch.
     */
    orderBy?: RegisterLogOrderByWithRelationInput | RegisterLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegisterLogs.
     */
    cursor?: RegisterLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegisterLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegisterLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegisterLogs.
     */
    distinct?: RegisterLogScalarFieldEnum | RegisterLogScalarFieldEnum[]
  }

  /**
   * RegisterLog findFirstOrThrow
   */
  export type RegisterLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegisterLog
     */
    select?: RegisterLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegisterLog
     */
    omit?: RegisterLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegisterLogInclude<ExtArgs> | null
    /**
     * Filter, which RegisterLog to fetch.
     */
    where?: RegisterLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegisterLogs to fetch.
     */
    orderBy?: RegisterLogOrderByWithRelationInput | RegisterLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RegisterLogs.
     */
    cursor?: RegisterLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegisterLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegisterLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RegisterLogs.
     */
    distinct?: RegisterLogScalarFieldEnum | RegisterLogScalarFieldEnum[]
  }

  /**
   * RegisterLog findMany
   */
  export type RegisterLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegisterLog
     */
    select?: RegisterLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegisterLog
     */
    omit?: RegisterLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegisterLogInclude<ExtArgs> | null
    /**
     * Filter, which RegisterLogs to fetch.
     */
    where?: RegisterLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RegisterLogs to fetch.
     */
    orderBy?: RegisterLogOrderByWithRelationInput | RegisterLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RegisterLogs.
     */
    cursor?: RegisterLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RegisterLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RegisterLogs.
     */
    skip?: number
    distinct?: RegisterLogScalarFieldEnum | RegisterLogScalarFieldEnum[]
  }

  /**
   * RegisterLog create
   */
  export type RegisterLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegisterLog
     */
    select?: RegisterLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegisterLog
     */
    omit?: RegisterLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegisterLogInclude<ExtArgs> | null
    /**
     * The data needed to create a RegisterLog.
     */
    data: XOR<RegisterLogCreateInput, RegisterLogUncheckedCreateInput>
  }

  /**
   * RegisterLog createMany
   */
  export type RegisterLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RegisterLogs.
     */
    data: RegisterLogCreateManyInput | RegisterLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RegisterLog update
   */
  export type RegisterLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegisterLog
     */
    select?: RegisterLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegisterLog
     */
    omit?: RegisterLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegisterLogInclude<ExtArgs> | null
    /**
     * The data needed to update a RegisterLog.
     */
    data: XOR<RegisterLogUpdateInput, RegisterLogUncheckedUpdateInput>
    /**
     * Choose, which RegisterLog to update.
     */
    where: RegisterLogWhereUniqueInput
  }

  /**
   * RegisterLog updateMany
   */
  export type RegisterLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RegisterLogs.
     */
    data: XOR<RegisterLogUpdateManyMutationInput, RegisterLogUncheckedUpdateManyInput>
    /**
     * Filter which RegisterLogs to update
     */
    where?: RegisterLogWhereInput
    /**
     * Limit how many RegisterLogs to update.
     */
    limit?: number
  }

  /**
   * RegisterLog upsert
   */
  export type RegisterLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegisterLog
     */
    select?: RegisterLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegisterLog
     */
    omit?: RegisterLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegisterLogInclude<ExtArgs> | null
    /**
     * The filter to search for the RegisterLog to update in case it exists.
     */
    where: RegisterLogWhereUniqueInput
    /**
     * In case the RegisterLog found by the `where` argument doesn't exist, create a new RegisterLog with this data.
     */
    create: XOR<RegisterLogCreateInput, RegisterLogUncheckedCreateInput>
    /**
     * In case the RegisterLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegisterLogUpdateInput, RegisterLogUncheckedUpdateInput>
  }

  /**
   * RegisterLog delete
   */
  export type RegisterLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegisterLog
     */
    select?: RegisterLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegisterLog
     */
    omit?: RegisterLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegisterLogInclude<ExtArgs> | null
    /**
     * Filter which RegisterLog to delete.
     */
    where: RegisterLogWhereUniqueInput
  }

  /**
   * RegisterLog deleteMany
   */
  export type RegisterLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RegisterLogs to delete
     */
    where?: RegisterLogWhereInput
    /**
     * Limit how many RegisterLogs to delete.
     */
    limit?: number
  }

  /**
   * RegisterLog without action
   */
  export type RegisterLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegisterLog
     */
    select?: RegisterLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RegisterLog
     */
    omit?: RegisterLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegisterLogInclude<ExtArgs> | null
  }


  /**
   * Model CardInfo
   */

  export type AggregateCardInfo = {
    _count: CardInfoCountAggregateOutputType | null
    _avg: CardInfoAvgAggregateOutputType | null
    _sum: CardInfoSumAggregateOutputType | null
    _min: CardInfoMinAggregateOutputType | null
    _max: CardInfoMaxAggregateOutputType | null
  }

  export type CardInfoAvgAggregateOutputType = {
    id: number | null
    paymentId: number | null
    cardRate: number | null
    version: number | null
  }

  export type CardInfoSumAggregateOutputType = {
    id: number | null
    paymentId: number | null
    cardRate: number | null
    version: number | null
  }

  export type CardInfoMinAggregateOutputType = {
    id: number | null
    paymentId: number | null
    cardNumber: string | null
    cardExpiry: string | null
    traceNumber: string | null
    type2: string | null
    type3: string | null
    cardRate: number | null
    appCode: string | null
    cardType: string | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type CardInfoMaxAggregateOutputType = {
    id: number | null
    paymentId: number | null
    cardNumber: string | null
    cardExpiry: string | null
    traceNumber: string | null
    type2: string | null
    type3: string | null
    cardRate: number | null
    appCode: string | null
    cardType: string | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type CardInfoCountAggregateOutputType = {
    id: number
    paymentId: number
    cardNumber: number
    cardExpiry: number
    traceNumber: number
    type2: number
    type3: number
    cardRate: number
    appCode: number
    cardType: number
    deleted: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type CardInfoAvgAggregateInputType = {
    id?: true
    paymentId?: true
    cardRate?: true
    version?: true
  }

  export type CardInfoSumAggregateInputType = {
    id?: true
    paymentId?: true
    cardRate?: true
    version?: true
  }

  export type CardInfoMinAggregateInputType = {
    id?: true
    paymentId?: true
    cardNumber?: true
    cardExpiry?: true
    traceNumber?: true
    type2?: true
    type3?: true
    cardRate?: true
    appCode?: true
    cardType?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type CardInfoMaxAggregateInputType = {
    id?: true
    paymentId?: true
    cardNumber?: true
    cardExpiry?: true
    traceNumber?: true
    type2?: true
    type3?: true
    cardRate?: true
    appCode?: true
    cardType?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type CardInfoCountAggregateInputType = {
    id?: true
    paymentId?: true
    cardNumber?: true
    cardExpiry?: true
    traceNumber?: true
    type2?: true
    type3?: true
    cardRate?: true
    appCode?: true
    cardType?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type CardInfoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CardInfo to aggregate.
     */
    where?: CardInfoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CardInfos to fetch.
     */
    orderBy?: CardInfoOrderByWithRelationInput | CardInfoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CardInfoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CardInfos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CardInfos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CardInfos
    **/
    _count?: true | CardInfoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CardInfoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CardInfoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CardInfoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CardInfoMaxAggregateInputType
  }

  export type GetCardInfoAggregateType<T extends CardInfoAggregateArgs> = {
        [P in keyof T & keyof AggregateCardInfo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCardInfo[P]>
      : GetScalarType<T[P], AggregateCardInfo[P]>
  }




  export type CardInfoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CardInfoWhereInput
    orderBy?: CardInfoOrderByWithAggregationInput | CardInfoOrderByWithAggregationInput[]
    by: CardInfoScalarFieldEnum[] | CardInfoScalarFieldEnum
    having?: CardInfoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CardInfoCountAggregateInputType | true
    _avg?: CardInfoAvgAggregateInputType
    _sum?: CardInfoSumAggregateInputType
    _min?: CardInfoMinAggregateInputType
    _max?: CardInfoMaxAggregateInputType
  }

  export type CardInfoGroupByOutputType = {
    id: number
    paymentId: number
    cardNumber: string | null
    cardExpiry: string | null
    traceNumber: string | null
    type2: string | null
    type3: string | null
    cardRate: number | null
    appCode: string | null
    cardType: string | null
    deleted: boolean
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: CardInfoCountAggregateOutputType | null
    _avg: CardInfoAvgAggregateOutputType | null
    _sum: CardInfoSumAggregateOutputType | null
    _min: CardInfoMinAggregateOutputType | null
    _max: CardInfoMaxAggregateOutputType | null
  }

  type GetCardInfoGroupByPayload<T extends CardInfoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CardInfoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CardInfoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CardInfoGroupByOutputType[P]>
            : GetScalarType<T[P], CardInfoGroupByOutputType[P]>
        }
      >
    >


  export type CardInfoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    paymentId?: boolean
    cardNumber?: boolean
    cardExpiry?: boolean
    traceNumber?: boolean
    type2?: boolean
    type3?: boolean
    cardRate?: boolean
    appCode?: boolean
    cardType?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    payment?: boolean | PaymentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cardInfo"]>



  export type CardInfoSelectScalar = {
    id?: boolean
    paymentId?: boolean
    cardNumber?: boolean
    cardExpiry?: boolean
    traceNumber?: boolean
    type2?: boolean
    type3?: boolean
    cardRate?: boolean
    appCode?: boolean
    cardType?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type CardInfoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "paymentId" | "cardNumber" | "cardExpiry" | "traceNumber" | "type2" | "type3" | "cardRate" | "appCode" | "cardType" | "deleted" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["cardInfo"]>
  export type CardInfoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    payment?: boolean | PaymentDefaultArgs<ExtArgs>
  }

  export type $CardInfoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CardInfo"
    objects: {
      payment: Prisma.$PaymentPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      paymentId: number
      cardNumber: string | null
      cardExpiry: string | null
      traceNumber: string | null
      type2: string | null
      type3: string | null
      cardRate: number | null
      appCode: string | null
      cardType: string | null
      deleted: boolean
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["cardInfo"]>
    composites: {}
  }

  type CardInfoGetPayload<S extends boolean | null | undefined | CardInfoDefaultArgs> = $Result.GetResult<Prisma.$CardInfoPayload, S>

  type CardInfoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CardInfoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CardInfoCountAggregateInputType | true
    }

  export interface CardInfoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CardInfo'], meta: { name: 'CardInfo' } }
    /**
     * Find zero or one CardInfo that matches the filter.
     * @param {CardInfoFindUniqueArgs} args - Arguments to find a CardInfo
     * @example
     * // Get one CardInfo
     * const cardInfo = await prisma.cardInfo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CardInfoFindUniqueArgs>(args: SelectSubset<T, CardInfoFindUniqueArgs<ExtArgs>>): Prisma__CardInfoClient<$Result.GetResult<Prisma.$CardInfoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CardInfo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CardInfoFindUniqueOrThrowArgs} args - Arguments to find a CardInfo
     * @example
     * // Get one CardInfo
     * const cardInfo = await prisma.cardInfo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CardInfoFindUniqueOrThrowArgs>(args: SelectSubset<T, CardInfoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CardInfoClient<$Result.GetResult<Prisma.$CardInfoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CardInfo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CardInfoFindFirstArgs} args - Arguments to find a CardInfo
     * @example
     * // Get one CardInfo
     * const cardInfo = await prisma.cardInfo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CardInfoFindFirstArgs>(args?: SelectSubset<T, CardInfoFindFirstArgs<ExtArgs>>): Prisma__CardInfoClient<$Result.GetResult<Prisma.$CardInfoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CardInfo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CardInfoFindFirstOrThrowArgs} args - Arguments to find a CardInfo
     * @example
     * // Get one CardInfo
     * const cardInfo = await prisma.cardInfo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CardInfoFindFirstOrThrowArgs>(args?: SelectSubset<T, CardInfoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CardInfoClient<$Result.GetResult<Prisma.$CardInfoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CardInfos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CardInfoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CardInfos
     * const cardInfos = await prisma.cardInfo.findMany()
     * 
     * // Get first 10 CardInfos
     * const cardInfos = await prisma.cardInfo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cardInfoWithIdOnly = await prisma.cardInfo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CardInfoFindManyArgs>(args?: SelectSubset<T, CardInfoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CardInfoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CardInfo.
     * @param {CardInfoCreateArgs} args - Arguments to create a CardInfo.
     * @example
     * // Create one CardInfo
     * const CardInfo = await prisma.cardInfo.create({
     *   data: {
     *     // ... data to create a CardInfo
     *   }
     * })
     * 
     */
    create<T extends CardInfoCreateArgs>(args: SelectSubset<T, CardInfoCreateArgs<ExtArgs>>): Prisma__CardInfoClient<$Result.GetResult<Prisma.$CardInfoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CardInfos.
     * @param {CardInfoCreateManyArgs} args - Arguments to create many CardInfos.
     * @example
     * // Create many CardInfos
     * const cardInfo = await prisma.cardInfo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CardInfoCreateManyArgs>(args?: SelectSubset<T, CardInfoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CardInfo.
     * @param {CardInfoDeleteArgs} args - Arguments to delete one CardInfo.
     * @example
     * // Delete one CardInfo
     * const CardInfo = await prisma.cardInfo.delete({
     *   where: {
     *     // ... filter to delete one CardInfo
     *   }
     * })
     * 
     */
    delete<T extends CardInfoDeleteArgs>(args: SelectSubset<T, CardInfoDeleteArgs<ExtArgs>>): Prisma__CardInfoClient<$Result.GetResult<Prisma.$CardInfoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CardInfo.
     * @param {CardInfoUpdateArgs} args - Arguments to update one CardInfo.
     * @example
     * // Update one CardInfo
     * const cardInfo = await prisma.cardInfo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CardInfoUpdateArgs>(args: SelectSubset<T, CardInfoUpdateArgs<ExtArgs>>): Prisma__CardInfoClient<$Result.GetResult<Prisma.$CardInfoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CardInfos.
     * @param {CardInfoDeleteManyArgs} args - Arguments to filter CardInfos to delete.
     * @example
     * // Delete a few CardInfos
     * const { count } = await prisma.cardInfo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CardInfoDeleteManyArgs>(args?: SelectSubset<T, CardInfoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CardInfos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CardInfoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CardInfos
     * const cardInfo = await prisma.cardInfo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CardInfoUpdateManyArgs>(args: SelectSubset<T, CardInfoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CardInfo.
     * @param {CardInfoUpsertArgs} args - Arguments to update or create a CardInfo.
     * @example
     * // Update or create a CardInfo
     * const cardInfo = await prisma.cardInfo.upsert({
     *   create: {
     *     // ... data to create a CardInfo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CardInfo we want to update
     *   }
     * })
     */
    upsert<T extends CardInfoUpsertArgs>(args: SelectSubset<T, CardInfoUpsertArgs<ExtArgs>>): Prisma__CardInfoClient<$Result.GetResult<Prisma.$CardInfoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CardInfos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CardInfoCountArgs} args - Arguments to filter CardInfos to count.
     * @example
     * // Count the number of CardInfos
     * const count = await prisma.cardInfo.count({
     *   where: {
     *     // ... the filter for the CardInfos we want to count
     *   }
     * })
    **/
    count<T extends CardInfoCountArgs>(
      args?: Subset<T, CardInfoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CardInfoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CardInfo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CardInfoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CardInfoAggregateArgs>(args: Subset<T, CardInfoAggregateArgs>): Prisma.PrismaPromise<GetCardInfoAggregateType<T>>

    /**
     * Group by CardInfo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CardInfoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CardInfoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CardInfoGroupByArgs['orderBy'] }
        : { orderBy?: CardInfoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CardInfoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCardInfoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CardInfo model
   */
  readonly fields: CardInfoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CardInfo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CardInfoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    payment<T extends PaymentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PaymentDefaultArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CardInfo model
   */
  interface CardInfoFieldRefs {
    readonly id: FieldRef<"CardInfo", 'Int'>
    readonly paymentId: FieldRef<"CardInfo", 'Int'>
    readonly cardNumber: FieldRef<"CardInfo", 'String'>
    readonly cardExpiry: FieldRef<"CardInfo", 'String'>
    readonly traceNumber: FieldRef<"CardInfo", 'String'>
    readonly type2: FieldRef<"CardInfo", 'String'>
    readonly type3: FieldRef<"CardInfo", 'String'>
    readonly cardRate: FieldRef<"CardInfo", 'Float'>
    readonly appCode: FieldRef<"CardInfo", 'String'>
    readonly cardType: FieldRef<"CardInfo", 'String'>
    readonly deleted: FieldRef<"CardInfo", 'Boolean'>
    readonly createdAt: FieldRef<"CardInfo", 'DateTime'>
    readonly updatedAt: FieldRef<"CardInfo", 'DateTime'>
    readonly version: FieldRef<"CardInfo", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * CardInfo findUnique
   */
  export type CardInfoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CardInfo
     */
    select?: CardInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CardInfo
     */
    omit?: CardInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInfoInclude<ExtArgs> | null
    /**
     * Filter, which CardInfo to fetch.
     */
    where: CardInfoWhereUniqueInput
  }

  /**
   * CardInfo findUniqueOrThrow
   */
  export type CardInfoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CardInfo
     */
    select?: CardInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CardInfo
     */
    omit?: CardInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInfoInclude<ExtArgs> | null
    /**
     * Filter, which CardInfo to fetch.
     */
    where: CardInfoWhereUniqueInput
  }

  /**
   * CardInfo findFirst
   */
  export type CardInfoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CardInfo
     */
    select?: CardInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CardInfo
     */
    omit?: CardInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInfoInclude<ExtArgs> | null
    /**
     * Filter, which CardInfo to fetch.
     */
    where?: CardInfoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CardInfos to fetch.
     */
    orderBy?: CardInfoOrderByWithRelationInput | CardInfoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CardInfos.
     */
    cursor?: CardInfoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CardInfos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CardInfos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CardInfos.
     */
    distinct?: CardInfoScalarFieldEnum | CardInfoScalarFieldEnum[]
  }

  /**
   * CardInfo findFirstOrThrow
   */
  export type CardInfoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CardInfo
     */
    select?: CardInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CardInfo
     */
    omit?: CardInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInfoInclude<ExtArgs> | null
    /**
     * Filter, which CardInfo to fetch.
     */
    where?: CardInfoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CardInfos to fetch.
     */
    orderBy?: CardInfoOrderByWithRelationInput | CardInfoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CardInfos.
     */
    cursor?: CardInfoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CardInfos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CardInfos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CardInfos.
     */
    distinct?: CardInfoScalarFieldEnum | CardInfoScalarFieldEnum[]
  }

  /**
   * CardInfo findMany
   */
  export type CardInfoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CardInfo
     */
    select?: CardInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CardInfo
     */
    omit?: CardInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInfoInclude<ExtArgs> | null
    /**
     * Filter, which CardInfos to fetch.
     */
    where?: CardInfoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CardInfos to fetch.
     */
    orderBy?: CardInfoOrderByWithRelationInput | CardInfoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CardInfos.
     */
    cursor?: CardInfoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CardInfos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CardInfos.
     */
    skip?: number
    distinct?: CardInfoScalarFieldEnum | CardInfoScalarFieldEnum[]
  }

  /**
   * CardInfo create
   */
  export type CardInfoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CardInfo
     */
    select?: CardInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CardInfo
     */
    omit?: CardInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInfoInclude<ExtArgs> | null
    /**
     * The data needed to create a CardInfo.
     */
    data: XOR<CardInfoCreateInput, CardInfoUncheckedCreateInput>
  }

  /**
   * CardInfo createMany
   */
  export type CardInfoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CardInfos.
     */
    data: CardInfoCreateManyInput | CardInfoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CardInfo update
   */
  export type CardInfoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CardInfo
     */
    select?: CardInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CardInfo
     */
    omit?: CardInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInfoInclude<ExtArgs> | null
    /**
     * The data needed to update a CardInfo.
     */
    data: XOR<CardInfoUpdateInput, CardInfoUncheckedUpdateInput>
    /**
     * Choose, which CardInfo to update.
     */
    where: CardInfoWhereUniqueInput
  }

  /**
   * CardInfo updateMany
   */
  export type CardInfoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CardInfos.
     */
    data: XOR<CardInfoUpdateManyMutationInput, CardInfoUncheckedUpdateManyInput>
    /**
     * Filter which CardInfos to update
     */
    where?: CardInfoWhereInput
    /**
     * Limit how many CardInfos to update.
     */
    limit?: number
  }

  /**
   * CardInfo upsert
   */
  export type CardInfoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CardInfo
     */
    select?: CardInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CardInfo
     */
    omit?: CardInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInfoInclude<ExtArgs> | null
    /**
     * The filter to search for the CardInfo to update in case it exists.
     */
    where: CardInfoWhereUniqueInput
    /**
     * In case the CardInfo found by the `where` argument doesn't exist, create a new CardInfo with this data.
     */
    create: XOR<CardInfoCreateInput, CardInfoUncheckedCreateInput>
    /**
     * In case the CardInfo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CardInfoUpdateInput, CardInfoUncheckedUpdateInput>
  }

  /**
   * CardInfo delete
   */
  export type CardInfoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CardInfo
     */
    select?: CardInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CardInfo
     */
    omit?: CardInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInfoInclude<ExtArgs> | null
    /**
     * Filter which CardInfo to delete.
     */
    where: CardInfoWhereUniqueInput
  }

  /**
   * CardInfo deleteMany
   */
  export type CardInfoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CardInfos to delete
     */
    where?: CardInfoWhereInput
    /**
     * Limit how many CardInfos to delete.
     */
    limit?: number
  }

  /**
   * CardInfo without action
   */
  export type CardInfoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CardInfo
     */
    select?: CardInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CardInfo
     */
    omit?: CardInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CardInfoInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _avg: SessionAvgAggregateOutputType | null
    _sum: SessionSumAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionAvgAggregateOutputType = {
    id: number | null
    outletId: number | null
    openingAmount: Decimal | null
    totalSalesCount: number | null
    openByUserID: number | null
    closeByUserID: number | null
    version: number | null
  }

  export type SessionSumAggregateOutputType = {
    id: number | null
    outletId: number | null
    openingAmount: Decimal | null
    totalSalesCount: number | null
    openByUserID: number | null
    closeByUserID: number | null
    version: number | null
  }

  export type SessionMinAggregateOutputType = {
    id: number | null
    outletId: number | null
    businessDate: Date | null
    openingDateTime: Date | null
    closingDateTime: Date | null
    openingAmount: Decimal | null
    totalSalesCount: number | null
    openByUserID: number | null
    closeByUserID: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type SessionMaxAggregateOutputType = {
    id: number | null
    outletId: number | null
    businessDate: Date | null
    openingDateTime: Date | null
    closingDateTime: Date | null
    openingAmount: Decimal | null
    totalSalesCount: number | null
    openByUserID: number | null
    closeByUserID: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type SessionCountAggregateOutputType = {
    id: number
    outletId: number
    businessDate: number
    openingDateTime: number
    closingDateTime: number
    openingAmount: number
    totalSalesCount: number
    openByUserID: number
    closeByUserID: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type SessionAvgAggregateInputType = {
    id?: true
    outletId?: true
    openingAmount?: true
    totalSalesCount?: true
    openByUserID?: true
    closeByUserID?: true
    version?: true
  }

  export type SessionSumAggregateInputType = {
    id?: true
    outletId?: true
    openingAmount?: true
    totalSalesCount?: true
    openByUserID?: true
    closeByUserID?: true
    version?: true
  }

  export type SessionMinAggregateInputType = {
    id?: true
    outletId?: true
    businessDate?: true
    openingDateTime?: true
    closingDateTime?: true
    openingAmount?: true
    totalSalesCount?: true
    openByUserID?: true
    closeByUserID?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type SessionMaxAggregateInputType = {
    id?: true
    outletId?: true
    businessDate?: true
    openingDateTime?: true
    closingDateTime?: true
    openingAmount?: true
    totalSalesCount?: true
    openByUserID?: true
    closeByUserID?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type SessionCountAggregateInputType = {
    id?: true
    outletId?: true
    businessDate?: true
    openingDateTime?: true
    closingDateTime?: true
    openingAmount?: true
    totalSalesCount?: true
    openByUserID?: true
    closeByUserID?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SessionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SessionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _avg?: SessionAvgAggregateInputType
    _sum?: SessionSumAggregateInputType
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    id: number
    outletId: number
    businessDate: Date
    openingDateTime: Date | null
    closingDateTime: Date | null
    openingAmount: Decimal
    totalSalesCount: number
    openByUserID: number
    closeByUserID: number
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: SessionCountAggregateOutputType | null
    _avg: SessionAvgAggregateOutputType | null
    _sum: SessionSumAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    outletId?: boolean
    businessDate?: boolean
    openingDateTime?: boolean
    closingDateTime?: boolean
    openingAmount?: boolean
    totalSalesCount?: boolean
    openByUserID?: boolean
    closeByUserID?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    declarations?: boolean | Session$declarationsArgs<ExtArgs>
    purchaseOrders?: boolean | Session$purchaseOrdersArgs<ExtArgs>
    deliveryOrders?: boolean | Session$deliveryOrdersArgs<ExtArgs>
    invoices?: boolean | Session$invoicesArgs<ExtArgs>
    _count?: boolean | SessionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>



  export type SessionSelectScalar = {
    id?: boolean
    outletId?: boolean
    businessDate?: boolean
    openingDateTime?: boolean
    closingDateTime?: boolean
    openingAmount?: boolean
    totalSalesCount?: boolean
    openByUserID?: boolean
    closeByUserID?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type SessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "outletId" | "businessDate" | "openingDateTime" | "closingDateTime" | "openingAmount" | "totalSalesCount" | "openByUserID" | "closeByUserID" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["session"]>
  export type SessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    declarations?: boolean | Session$declarationsArgs<ExtArgs>
    purchaseOrders?: boolean | Session$purchaseOrdersArgs<ExtArgs>
    deliveryOrders?: boolean | Session$deliveryOrdersArgs<ExtArgs>
    invoices?: boolean | Session$invoicesArgs<ExtArgs>
    _count?: boolean | SessionCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {
      declarations: Prisma.$DeclarationPayload<ExtArgs>[]
      purchaseOrders: Prisma.$PurchaseOrderPayload<ExtArgs>[]
      deliveryOrders: Prisma.$DeliveryOrderPayload<ExtArgs>[]
      invoices: Prisma.$InvoicePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      outletId: number
      businessDate: Date
      openingDateTime: Date | null
      closingDateTime: Date | null
      openingAmount: Prisma.Decimal
      totalSalesCount: number
      openByUserID: number
      closeByUserID: number
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionWithIdOnly = await prisma.session.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    declarations<T extends Session$declarationsArgs<ExtArgs> = {}>(args?: Subset<T, Session$declarationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeclarationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    purchaseOrders<T extends Session$purchaseOrdersArgs<ExtArgs> = {}>(args?: Subset<T, Session$purchaseOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PurchaseOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deliveryOrders<T extends Session$deliveryOrdersArgs<ExtArgs> = {}>(args?: Subset<T, Session$deliveryOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeliveryOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    invoices<T extends Session$invoicesArgs<ExtArgs> = {}>(args?: Subset<T, Session$invoicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */
  interface SessionFieldRefs {
    readonly id: FieldRef<"Session", 'Int'>
    readonly outletId: FieldRef<"Session", 'Int'>
    readonly businessDate: FieldRef<"Session", 'DateTime'>
    readonly openingDateTime: FieldRef<"Session", 'DateTime'>
    readonly closingDateTime: FieldRef<"Session", 'DateTime'>
    readonly openingAmount: FieldRef<"Session", 'Decimal'>
    readonly totalSalesCount: FieldRef<"Session", 'Int'>
    readonly openByUserID: FieldRef<"Session", 'Int'>
    readonly closeByUserID: FieldRef<"Session", 'Int'>
    readonly deleted: FieldRef<"Session", 'Boolean'>
    readonly deletedAt: FieldRef<"Session", 'DateTime'>
    readonly createdAt: FieldRef<"Session", 'DateTime'>
    readonly updatedAt: FieldRef<"Session", 'DateTime'>
    readonly version: FieldRef<"Session", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to delete.
     */
    limit?: number
  }

  /**
   * Session.declarations
   */
  export type Session$declarationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declaration
     */
    select?: DeclarationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Declaration
     */
    omit?: DeclarationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeclarationInclude<ExtArgs> | null
    where?: DeclarationWhereInput
    orderBy?: DeclarationOrderByWithRelationInput | DeclarationOrderByWithRelationInput[]
    cursor?: DeclarationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeclarationScalarFieldEnum | DeclarationScalarFieldEnum[]
  }

  /**
   * Session.purchaseOrders
   */
  export type Session$purchaseOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PurchaseOrder
     */
    select?: PurchaseOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PurchaseOrder
     */
    omit?: PurchaseOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PurchaseOrderInclude<ExtArgs> | null
    where?: PurchaseOrderWhereInput
    orderBy?: PurchaseOrderOrderByWithRelationInput | PurchaseOrderOrderByWithRelationInput[]
    cursor?: PurchaseOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PurchaseOrderScalarFieldEnum | PurchaseOrderScalarFieldEnum[]
  }

  /**
   * Session.deliveryOrders
   */
  export type Session$deliveryOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveryOrder
     */
    select?: DeliveryOrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DeliveryOrder
     */
    omit?: DeliveryOrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeliveryOrderInclude<ExtArgs> | null
    where?: DeliveryOrderWhereInput
    orderBy?: DeliveryOrderOrderByWithRelationInput | DeliveryOrderOrderByWithRelationInput[]
    cursor?: DeliveryOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeliveryOrderScalarFieldEnum | DeliveryOrderScalarFieldEnum[]
  }

  /**
   * Session.invoices
   */
  export type Session$invoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invoice
     */
    omit?: InvoiceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    cursor?: InvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
  }


  /**
   * Model Declaration
   */

  export type AggregateDeclaration = {
    _count: DeclarationCountAggregateOutputType | null
    _avg: DeclarationAvgAggregateOutputType | null
    _sum: DeclarationSumAggregateOutputType | null
    _min: DeclarationMinAggregateOutputType | null
    _max: DeclarationMaxAggregateOutputType | null
  }

  export type DeclarationAvgAggregateOutputType = {
    id: number | null
    totalPaymentAmount: Decimal | null
    declarationAmount: Decimal | null
    differenceAmount: Decimal | null
    version: number | null
    sessionID: number | null
  }

  export type DeclarationSumAggregateOutputType = {
    id: number | null
    totalPaymentAmount: Decimal | null
    declarationAmount: Decimal | null
    differenceAmount: Decimal | null
    version: number | null
    sessionID: number | null
  }

  export type DeclarationMinAggregateOutputType = {
    id: number | null
    paymentType: string | null
    totalPaymentAmount: Decimal | null
    declarationAmount: Decimal | null
    differenceAmount: Decimal | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    sessionID: number | null
  }

  export type DeclarationMaxAggregateOutputType = {
    id: number | null
    paymentType: string | null
    totalPaymentAmount: Decimal | null
    declarationAmount: Decimal | null
    differenceAmount: Decimal | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    sessionID: number | null
  }

  export type DeclarationCountAggregateOutputType = {
    id: number
    paymentType: number
    totalPaymentAmount: number
    declarationAmount: number
    differenceAmount: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    sessionID: number
    _all: number
  }


  export type DeclarationAvgAggregateInputType = {
    id?: true
    totalPaymentAmount?: true
    declarationAmount?: true
    differenceAmount?: true
    version?: true
    sessionID?: true
  }

  export type DeclarationSumAggregateInputType = {
    id?: true
    totalPaymentAmount?: true
    declarationAmount?: true
    differenceAmount?: true
    version?: true
    sessionID?: true
  }

  export type DeclarationMinAggregateInputType = {
    id?: true
    paymentType?: true
    totalPaymentAmount?: true
    declarationAmount?: true
    differenceAmount?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    sessionID?: true
  }

  export type DeclarationMaxAggregateInputType = {
    id?: true
    paymentType?: true
    totalPaymentAmount?: true
    declarationAmount?: true
    differenceAmount?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    sessionID?: true
  }

  export type DeclarationCountAggregateInputType = {
    id?: true
    paymentType?: true
    totalPaymentAmount?: true
    declarationAmount?: true
    differenceAmount?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    sessionID?: true
    _all?: true
  }

  export type DeclarationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Declaration to aggregate.
     */
    where?: DeclarationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Declarations to fetch.
     */
    orderBy?: DeclarationOrderByWithRelationInput | DeclarationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DeclarationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Declarations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Declarations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Declarations
    **/
    _count?: true | DeclarationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DeclarationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DeclarationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DeclarationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DeclarationMaxAggregateInputType
  }

  export type GetDeclarationAggregateType<T extends DeclarationAggregateArgs> = {
        [P in keyof T & keyof AggregateDeclaration]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDeclaration[P]>
      : GetScalarType<T[P], AggregateDeclaration[P]>
  }




  export type DeclarationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeclarationWhereInput
    orderBy?: DeclarationOrderByWithAggregationInput | DeclarationOrderByWithAggregationInput[]
    by: DeclarationScalarFieldEnum[] | DeclarationScalarFieldEnum
    having?: DeclarationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DeclarationCountAggregateInputType | true
    _avg?: DeclarationAvgAggregateInputType
    _sum?: DeclarationSumAggregateInputType
    _min?: DeclarationMinAggregateInputType
    _max?: DeclarationMaxAggregateInputType
  }

  export type DeclarationGroupByOutputType = {
    id: number
    paymentType: string
    totalPaymentAmount: Decimal
    declarationAmount: Decimal
    differenceAmount: Decimal
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    sessionID: number
    _count: DeclarationCountAggregateOutputType | null
    _avg: DeclarationAvgAggregateOutputType | null
    _sum: DeclarationSumAggregateOutputType | null
    _min: DeclarationMinAggregateOutputType | null
    _max: DeclarationMaxAggregateOutputType | null
  }

  type GetDeclarationGroupByPayload<T extends DeclarationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DeclarationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DeclarationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DeclarationGroupByOutputType[P]>
            : GetScalarType<T[P], DeclarationGroupByOutputType[P]>
        }
      >
    >


  export type DeclarationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    paymentType?: boolean
    totalPaymentAmount?: boolean
    declarationAmount?: boolean
    differenceAmount?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    sessionID?: boolean
    session?: boolean | SessionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["declaration"]>



  export type DeclarationSelectScalar = {
    id?: boolean
    paymentType?: boolean
    totalPaymentAmount?: boolean
    declarationAmount?: boolean
    differenceAmount?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    sessionID?: boolean
  }

  export type DeclarationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "paymentType" | "totalPaymentAmount" | "declarationAmount" | "differenceAmount" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version" | "sessionID", ExtArgs["result"]["declaration"]>
  export type DeclarationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    session?: boolean | SessionDefaultArgs<ExtArgs>
  }

  export type $DeclarationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Declaration"
    objects: {
      session: Prisma.$SessionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      paymentType: string
      totalPaymentAmount: Prisma.Decimal
      declarationAmount: Prisma.Decimal
      differenceAmount: Prisma.Decimal
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
      sessionID: number
    }, ExtArgs["result"]["declaration"]>
    composites: {}
  }

  type DeclarationGetPayload<S extends boolean | null | undefined | DeclarationDefaultArgs> = $Result.GetResult<Prisma.$DeclarationPayload, S>

  type DeclarationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DeclarationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DeclarationCountAggregateInputType | true
    }

  export interface DeclarationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Declaration'], meta: { name: 'Declaration' } }
    /**
     * Find zero or one Declaration that matches the filter.
     * @param {DeclarationFindUniqueArgs} args - Arguments to find a Declaration
     * @example
     * // Get one Declaration
     * const declaration = await prisma.declaration.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DeclarationFindUniqueArgs>(args: SelectSubset<T, DeclarationFindUniqueArgs<ExtArgs>>): Prisma__DeclarationClient<$Result.GetResult<Prisma.$DeclarationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Declaration that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DeclarationFindUniqueOrThrowArgs} args - Arguments to find a Declaration
     * @example
     * // Get one Declaration
     * const declaration = await prisma.declaration.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DeclarationFindUniqueOrThrowArgs>(args: SelectSubset<T, DeclarationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DeclarationClient<$Result.GetResult<Prisma.$DeclarationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Declaration that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeclarationFindFirstArgs} args - Arguments to find a Declaration
     * @example
     * // Get one Declaration
     * const declaration = await prisma.declaration.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DeclarationFindFirstArgs>(args?: SelectSubset<T, DeclarationFindFirstArgs<ExtArgs>>): Prisma__DeclarationClient<$Result.GetResult<Prisma.$DeclarationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Declaration that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeclarationFindFirstOrThrowArgs} args - Arguments to find a Declaration
     * @example
     * // Get one Declaration
     * const declaration = await prisma.declaration.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DeclarationFindFirstOrThrowArgs>(args?: SelectSubset<T, DeclarationFindFirstOrThrowArgs<ExtArgs>>): Prisma__DeclarationClient<$Result.GetResult<Prisma.$DeclarationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Declarations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeclarationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Declarations
     * const declarations = await prisma.declaration.findMany()
     * 
     * // Get first 10 Declarations
     * const declarations = await prisma.declaration.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const declarationWithIdOnly = await prisma.declaration.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DeclarationFindManyArgs>(args?: SelectSubset<T, DeclarationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeclarationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Declaration.
     * @param {DeclarationCreateArgs} args - Arguments to create a Declaration.
     * @example
     * // Create one Declaration
     * const Declaration = await prisma.declaration.create({
     *   data: {
     *     // ... data to create a Declaration
     *   }
     * })
     * 
     */
    create<T extends DeclarationCreateArgs>(args: SelectSubset<T, DeclarationCreateArgs<ExtArgs>>): Prisma__DeclarationClient<$Result.GetResult<Prisma.$DeclarationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Declarations.
     * @param {DeclarationCreateManyArgs} args - Arguments to create many Declarations.
     * @example
     * // Create many Declarations
     * const declaration = await prisma.declaration.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DeclarationCreateManyArgs>(args?: SelectSubset<T, DeclarationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Declaration.
     * @param {DeclarationDeleteArgs} args - Arguments to delete one Declaration.
     * @example
     * // Delete one Declaration
     * const Declaration = await prisma.declaration.delete({
     *   where: {
     *     // ... filter to delete one Declaration
     *   }
     * })
     * 
     */
    delete<T extends DeclarationDeleteArgs>(args: SelectSubset<T, DeclarationDeleteArgs<ExtArgs>>): Prisma__DeclarationClient<$Result.GetResult<Prisma.$DeclarationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Declaration.
     * @param {DeclarationUpdateArgs} args - Arguments to update one Declaration.
     * @example
     * // Update one Declaration
     * const declaration = await prisma.declaration.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DeclarationUpdateArgs>(args: SelectSubset<T, DeclarationUpdateArgs<ExtArgs>>): Prisma__DeclarationClient<$Result.GetResult<Prisma.$DeclarationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Declarations.
     * @param {DeclarationDeleteManyArgs} args - Arguments to filter Declarations to delete.
     * @example
     * // Delete a few Declarations
     * const { count } = await prisma.declaration.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DeclarationDeleteManyArgs>(args?: SelectSubset<T, DeclarationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Declarations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeclarationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Declarations
     * const declaration = await prisma.declaration.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DeclarationUpdateManyArgs>(args: SelectSubset<T, DeclarationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Declaration.
     * @param {DeclarationUpsertArgs} args - Arguments to update or create a Declaration.
     * @example
     * // Update or create a Declaration
     * const declaration = await prisma.declaration.upsert({
     *   create: {
     *     // ... data to create a Declaration
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Declaration we want to update
     *   }
     * })
     */
    upsert<T extends DeclarationUpsertArgs>(args: SelectSubset<T, DeclarationUpsertArgs<ExtArgs>>): Prisma__DeclarationClient<$Result.GetResult<Prisma.$DeclarationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Declarations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeclarationCountArgs} args - Arguments to filter Declarations to count.
     * @example
     * // Count the number of Declarations
     * const count = await prisma.declaration.count({
     *   where: {
     *     // ... the filter for the Declarations we want to count
     *   }
     * })
    **/
    count<T extends DeclarationCountArgs>(
      args?: Subset<T, DeclarationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DeclarationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Declaration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeclarationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DeclarationAggregateArgs>(args: Subset<T, DeclarationAggregateArgs>): Prisma.PrismaPromise<GetDeclarationAggregateType<T>>

    /**
     * Group by Declaration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeclarationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DeclarationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DeclarationGroupByArgs['orderBy'] }
        : { orderBy?: DeclarationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DeclarationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDeclarationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Declaration model
   */
  readonly fields: DeclarationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Declaration.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DeclarationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    session<T extends SessionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SessionDefaultArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Declaration model
   */
  interface DeclarationFieldRefs {
    readonly id: FieldRef<"Declaration", 'Int'>
    readonly paymentType: FieldRef<"Declaration", 'String'>
    readonly totalPaymentAmount: FieldRef<"Declaration", 'Decimal'>
    readonly declarationAmount: FieldRef<"Declaration", 'Decimal'>
    readonly differenceAmount: FieldRef<"Declaration", 'Decimal'>
    readonly deleted: FieldRef<"Declaration", 'Boolean'>
    readonly deletedAt: FieldRef<"Declaration", 'DateTime'>
    readonly createdAt: FieldRef<"Declaration", 'DateTime'>
    readonly updatedAt: FieldRef<"Declaration", 'DateTime'>
    readonly version: FieldRef<"Declaration", 'Int'>
    readonly sessionID: FieldRef<"Declaration", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Declaration findUnique
   */
  export type DeclarationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declaration
     */
    select?: DeclarationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Declaration
     */
    omit?: DeclarationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeclarationInclude<ExtArgs> | null
    /**
     * Filter, which Declaration to fetch.
     */
    where: DeclarationWhereUniqueInput
  }

  /**
   * Declaration findUniqueOrThrow
   */
  export type DeclarationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declaration
     */
    select?: DeclarationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Declaration
     */
    omit?: DeclarationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeclarationInclude<ExtArgs> | null
    /**
     * Filter, which Declaration to fetch.
     */
    where: DeclarationWhereUniqueInput
  }

  /**
   * Declaration findFirst
   */
  export type DeclarationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declaration
     */
    select?: DeclarationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Declaration
     */
    omit?: DeclarationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeclarationInclude<ExtArgs> | null
    /**
     * Filter, which Declaration to fetch.
     */
    where?: DeclarationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Declarations to fetch.
     */
    orderBy?: DeclarationOrderByWithRelationInput | DeclarationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Declarations.
     */
    cursor?: DeclarationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Declarations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Declarations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Declarations.
     */
    distinct?: DeclarationScalarFieldEnum | DeclarationScalarFieldEnum[]
  }

  /**
   * Declaration findFirstOrThrow
   */
  export type DeclarationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declaration
     */
    select?: DeclarationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Declaration
     */
    omit?: DeclarationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeclarationInclude<ExtArgs> | null
    /**
     * Filter, which Declaration to fetch.
     */
    where?: DeclarationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Declarations to fetch.
     */
    orderBy?: DeclarationOrderByWithRelationInput | DeclarationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Declarations.
     */
    cursor?: DeclarationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Declarations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Declarations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Declarations.
     */
    distinct?: DeclarationScalarFieldEnum | DeclarationScalarFieldEnum[]
  }

  /**
   * Declaration findMany
   */
  export type DeclarationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declaration
     */
    select?: DeclarationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Declaration
     */
    omit?: DeclarationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeclarationInclude<ExtArgs> | null
    /**
     * Filter, which Declarations to fetch.
     */
    where?: DeclarationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Declarations to fetch.
     */
    orderBy?: DeclarationOrderByWithRelationInput | DeclarationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Declarations.
     */
    cursor?: DeclarationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Declarations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Declarations.
     */
    skip?: number
    distinct?: DeclarationScalarFieldEnum | DeclarationScalarFieldEnum[]
  }

  /**
   * Declaration create
   */
  export type DeclarationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declaration
     */
    select?: DeclarationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Declaration
     */
    omit?: DeclarationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeclarationInclude<ExtArgs> | null
    /**
     * The data needed to create a Declaration.
     */
    data: XOR<DeclarationCreateInput, DeclarationUncheckedCreateInput>
  }

  /**
   * Declaration createMany
   */
  export type DeclarationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Declarations.
     */
    data: DeclarationCreateManyInput | DeclarationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Declaration update
   */
  export type DeclarationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declaration
     */
    select?: DeclarationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Declaration
     */
    omit?: DeclarationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeclarationInclude<ExtArgs> | null
    /**
     * The data needed to update a Declaration.
     */
    data: XOR<DeclarationUpdateInput, DeclarationUncheckedUpdateInput>
    /**
     * Choose, which Declaration to update.
     */
    where: DeclarationWhereUniqueInput
  }

  /**
   * Declaration updateMany
   */
  export type DeclarationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Declarations.
     */
    data: XOR<DeclarationUpdateManyMutationInput, DeclarationUncheckedUpdateManyInput>
    /**
     * Filter which Declarations to update
     */
    where?: DeclarationWhereInput
    /**
     * Limit how many Declarations to update.
     */
    limit?: number
  }

  /**
   * Declaration upsert
   */
  export type DeclarationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declaration
     */
    select?: DeclarationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Declaration
     */
    omit?: DeclarationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeclarationInclude<ExtArgs> | null
    /**
     * The filter to search for the Declaration to update in case it exists.
     */
    where: DeclarationWhereUniqueInput
    /**
     * In case the Declaration found by the `where` argument doesn't exist, create a new Declaration with this data.
     */
    create: XOR<DeclarationCreateInput, DeclarationUncheckedCreateInput>
    /**
     * In case the Declaration was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DeclarationUpdateInput, DeclarationUncheckedUpdateInput>
  }

  /**
   * Declaration delete
   */
  export type DeclarationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declaration
     */
    select?: DeclarationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Declaration
     */
    omit?: DeclarationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeclarationInclude<ExtArgs> | null
    /**
     * Filter which Declaration to delete.
     */
    where: DeclarationWhereUniqueInput
  }

  /**
   * Declaration deleteMany
   */
  export type DeclarationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Declarations to delete
     */
    where?: DeclarationWhereInput
    /**
     * Limit how many Declarations to delete.
     */
    limit?: number
  }

  /**
   * Declaration without action
   */
  export type DeclarationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Declaration
     */
    select?: DeclarationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Declaration
     */
    omit?: DeclarationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeclarationInclude<ExtArgs> | null
  }


  /**
   * Model StockBalance
   */

  export type AggregateStockBalance = {
    _count: StockBalanceCountAggregateOutputType | null
    _avg: StockBalanceAvgAggregateOutputType | null
    _sum: StockBalanceSumAggregateOutputType | null
    _min: StockBalanceMinAggregateOutputType | null
    _max: StockBalanceMaxAggregateOutputType | null
  }

  export type StockBalanceAvgAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    availableQuantity: Decimal | null
    onHandQuantity: Decimal | null
    reorderThreshold: Decimal | null
    version: number | null
  }

  export type StockBalanceSumAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    availableQuantity: Decimal | null
    onHandQuantity: Decimal | null
    reorderThreshold: Decimal | null
    version: number | null
  }

  export type StockBalanceMinAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    availableQuantity: Decimal | null
    onHandQuantity: Decimal | null
    reorderThreshold: Decimal | null
    deleted: boolean | null
    lastRestockDate: Date | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type StockBalanceMaxAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    availableQuantity: Decimal | null
    onHandQuantity: Decimal | null
    reorderThreshold: Decimal | null
    deleted: boolean | null
    lastRestockDate: Date | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type StockBalanceCountAggregateOutputType = {
    id: number
    itemId: number
    outletId: number
    availableQuantity: number
    onHandQuantity: number
    reorderThreshold: number
    deleted: number
    lastRestockDate: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type StockBalanceAvgAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    availableQuantity?: true
    onHandQuantity?: true
    reorderThreshold?: true
    version?: true
  }

  export type StockBalanceSumAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    availableQuantity?: true
    onHandQuantity?: true
    reorderThreshold?: true
    version?: true
  }

  export type StockBalanceMinAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    availableQuantity?: true
    onHandQuantity?: true
    reorderThreshold?: true
    deleted?: true
    lastRestockDate?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type StockBalanceMaxAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    availableQuantity?: true
    onHandQuantity?: true
    reorderThreshold?: true
    deleted?: true
    lastRestockDate?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type StockBalanceCountAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    availableQuantity?: true
    onHandQuantity?: true
    reorderThreshold?: true
    deleted?: true
    lastRestockDate?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type StockBalanceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockBalance to aggregate.
     */
    where?: StockBalanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockBalances to fetch.
     */
    orderBy?: StockBalanceOrderByWithRelationInput | StockBalanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StockBalanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockBalances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockBalances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StockBalances
    **/
    _count?: true | StockBalanceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StockBalanceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StockBalanceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StockBalanceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StockBalanceMaxAggregateInputType
  }

  export type GetStockBalanceAggregateType<T extends StockBalanceAggregateArgs> = {
        [P in keyof T & keyof AggregateStockBalance]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStockBalance[P]>
      : GetScalarType<T[P], AggregateStockBalance[P]>
  }




  export type StockBalanceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockBalanceWhereInput
    orderBy?: StockBalanceOrderByWithAggregationInput | StockBalanceOrderByWithAggregationInput[]
    by: StockBalanceScalarFieldEnum[] | StockBalanceScalarFieldEnum
    having?: StockBalanceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StockBalanceCountAggregateInputType | true
    _avg?: StockBalanceAvgAggregateInputType
    _sum?: StockBalanceSumAggregateInputType
    _min?: StockBalanceMinAggregateInputType
    _max?: StockBalanceMaxAggregateInputType
  }

  export type StockBalanceGroupByOutputType = {
    id: number
    itemId: number
    outletId: number
    availableQuantity: Decimal
    onHandQuantity: Decimal
    reorderThreshold: Decimal | null
    deleted: boolean
    lastRestockDate: Date | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: StockBalanceCountAggregateOutputType | null
    _avg: StockBalanceAvgAggregateOutputType | null
    _sum: StockBalanceSumAggregateOutputType | null
    _min: StockBalanceMinAggregateOutputType | null
    _max: StockBalanceMaxAggregateOutputType | null
  }

  type GetStockBalanceGroupByPayload<T extends StockBalanceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StockBalanceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StockBalanceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StockBalanceGroupByOutputType[P]>
            : GetScalarType<T[P], StockBalanceGroupByOutputType[P]>
        }
      >
    >


  export type StockBalanceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    itemId?: boolean
    outletId?: boolean
    availableQuantity?: boolean
    onHandQuantity?: boolean
    reorderThreshold?: boolean
    deleted?: boolean
    lastRestockDate?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    item?: boolean | ItemDefaultArgs<ExtArgs>
    outlet?: boolean | OutletDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stockBalance"]>



  export type StockBalanceSelectScalar = {
    id?: boolean
    itemId?: boolean
    outletId?: boolean
    availableQuantity?: boolean
    onHandQuantity?: boolean
    reorderThreshold?: boolean
    deleted?: boolean
    lastRestockDate?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type StockBalanceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "itemId" | "outletId" | "availableQuantity" | "onHandQuantity" | "reorderThreshold" | "deleted" | "lastRestockDate" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["stockBalance"]>
  export type StockBalanceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    item?: boolean | ItemDefaultArgs<ExtArgs>
    outlet?: boolean | OutletDefaultArgs<ExtArgs>
  }

  export type $StockBalancePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StockBalance"
    objects: {
      item: Prisma.$ItemPayload<ExtArgs>
      outlet: Prisma.$OutletPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      itemId: number
      outletId: number
      availableQuantity: Prisma.Decimal
      onHandQuantity: Prisma.Decimal
      reorderThreshold: Prisma.Decimal | null
      deleted: boolean
      lastRestockDate: Date | null
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["stockBalance"]>
    composites: {}
  }

  type StockBalanceGetPayload<S extends boolean | null | undefined | StockBalanceDefaultArgs> = $Result.GetResult<Prisma.$StockBalancePayload, S>

  type StockBalanceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StockBalanceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StockBalanceCountAggregateInputType | true
    }

  export interface StockBalanceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StockBalance'], meta: { name: 'StockBalance' } }
    /**
     * Find zero or one StockBalance that matches the filter.
     * @param {StockBalanceFindUniqueArgs} args - Arguments to find a StockBalance
     * @example
     * // Get one StockBalance
     * const stockBalance = await prisma.stockBalance.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StockBalanceFindUniqueArgs>(args: SelectSubset<T, StockBalanceFindUniqueArgs<ExtArgs>>): Prisma__StockBalanceClient<$Result.GetResult<Prisma.$StockBalancePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StockBalance that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StockBalanceFindUniqueOrThrowArgs} args - Arguments to find a StockBalance
     * @example
     * // Get one StockBalance
     * const stockBalance = await prisma.stockBalance.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StockBalanceFindUniqueOrThrowArgs>(args: SelectSubset<T, StockBalanceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StockBalanceClient<$Result.GetResult<Prisma.$StockBalancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockBalance that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBalanceFindFirstArgs} args - Arguments to find a StockBalance
     * @example
     * // Get one StockBalance
     * const stockBalance = await prisma.stockBalance.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StockBalanceFindFirstArgs>(args?: SelectSubset<T, StockBalanceFindFirstArgs<ExtArgs>>): Prisma__StockBalanceClient<$Result.GetResult<Prisma.$StockBalancePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockBalance that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBalanceFindFirstOrThrowArgs} args - Arguments to find a StockBalance
     * @example
     * // Get one StockBalance
     * const stockBalance = await prisma.stockBalance.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StockBalanceFindFirstOrThrowArgs>(args?: SelectSubset<T, StockBalanceFindFirstOrThrowArgs<ExtArgs>>): Prisma__StockBalanceClient<$Result.GetResult<Prisma.$StockBalancePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StockBalances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBalanceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StockBalances
     * const stockBalances = await prisma.stockBalance.findMany()
     * 
     * // Get first 10 StockBalances
     * const stockBalances = await prisma.stockBalance.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stockBalanceWithIdOnly = await prisma.stockBalance.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StockBalanceFindManyArgs>(args?: SelectSubset<T, StockBalanceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockBalancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StockBalance.
     * @param {StockBalanceCreateArgs} args - Arguments to create a StockBalance.
     * @example
     * // Create one StockBalance
     * const StockBalance = await prisma.stockBalance.create({
     *   data: {
     *     // ... data to create a StockBalance
     *   }
     * })
     * 
     */
    create<T extends StockBalanceCreateArgs>(args: SelectSubset<T, StockBalanceCreateArgs<ExtArgs>>): Prisma__StockBalanceClient<$Result.GetResult<Prisma.$StockBalancePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StockBalances.
     * @param {StockBalanceCreateManyArgs} args - Arguments to create many StockBalances.
     * @example
     * // Create many StockBalances
     * const stockBalance = await prisma.stockBalance.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StockBalanceCreateManyArgs>(args?: SelectSubset<T, StockBalanceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a StockBalance.
     * @param {StockBalanceDeleteArgs} args - Arguments to delete one StockBalance.
     * @example
     * // Delete one StockBalance
     * const StockBalance = await prisma.stockBalance.delete({
     *   where: {
     *     // ... filter to delete one StockBalance
     *   }
     * })
     * 
     */
    delete<T extends StockBalanceDeleteArgs>(args: SelectSubset<T, StockBalanceDeleteArgs<ExtArgs>>): Prisma__StockBalanceClient<$Result.GetResult<Prisma.$StockBalancePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StockBalance.
     * @param {StockBalanceUpdateArgs} args - Arguments to update one StockBalance.
     * @example
     * // Update one StockBalance
     * const stockBalance = await prisma.stockBalance.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StockBalanceUpdateArgs>(args: SelectSubset<T, StockBalanceUpdateArgs<ExtArgs>>): Prisma__StockBalanceClient<$Result.GetResult<Prisma.$StockBalancePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StockBalances.
     * @param {StockBalanceDeleteManyArgs} args - Arguments to filter StockBalances to delete.
     * @example
     * // Delete a few StockBalances
     * const { count } = await prisma.stockBalance.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StockBalanceDeleteManyArgs>(args?: SelectSubset<T, StockBalanceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StockBalances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBalanceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StockBalances
     * const stockBalance = await prisma.stockBalance.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StockBalanceUpdateManyArgs>(args: SelectSubset<T, StockBalanceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one StockBalance.
     * @param {StockBalanceUpsertArgs} args - Arguments to update or create a StockBalance.
     * @example
     * // Update or create a StockBalance
     * const stockBalance = await prisma.stockBalance.upsert({
     *   create: {
     *     // ... data to create a StockBalance
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StockBalance we want to update
     *   }
     * })
     */
    upsert<T extends StockBalanceUpsertArgs>(args: SelectSubset<T, StockBalanceUpsertArgs<ExtArgs>>): Prisma__StockBalanceClient<$Result.GetResult<Prisma.$StockBalancePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StockBalances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBalanceCountArgs} args - Arguments to filter StockBalances to count.
     * @example
     * // Count the number of StockBalances
     * const count = await prisma.stockBalance.count({
     *   where: {
     *     // ... the filter for the StockBalances we want to count
     *   }
     * })
    **/
    count<T extends StockBalanceCountArgs>(
      args?: Subset<T, StockBalanceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StockBalanceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StockBalance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBalanceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StockBalanceAggregateArgs>(args: Subset<T, StockBalanceAggregateArgs>): Prisma.PrismaPromise<GetStockBalanceAggregateType<T>>

    /**
     * Group by StockBalance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockBalanceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StockBalanceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StockBalanceGroupByArgs['orderBy'] }
        : { orderBy?: StockBalanceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StockBalanceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStockBalanceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StockBalance model
   */
  readonly fields: StockBalanceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StockBalance.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StockBalanceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    item<T extends ItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ItemDefaultArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    outlet<T extends OutletDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OutletDefaultArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StockBalance model
   */
  interface StockBalanceFieldRefs {
    readonly id: FieldRef<"StockBalance", 'Int'>
    readonly itemId: FieldRef<"StockBalance", 'Int'>
    readonly outletId: FieldRef<"StockBalance", 'Int'>
    readonly availableQuantity: FieldRef<"StockBalance", 'Decimal'>
    readonly onHandQuantity: FieldRef<"StockBalance", 'Decimal'>
    readonly reorderThreshold: FieldRef<"StockBalance", 'Decimal'>
    readonly deleted: FieldRef<"StockBalance", 'Boolean'>
    readonly lastRestockDate: FieldRef<"StockBalance", 'DateTime'>
    readonly deletedAt: FieldRef<"StockBalance", 'DateTime'>
    readonly createdAt: FieldRef<"StockBalance", 'DateTime'>
    readonly updatedAt: FieldRef<"StockBalance", 'DateTime'>
    readonly version: FieldRef<"StockBalance", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * StockBalance findUnique
   */
  export type StockBalanceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBalance
     */
    select?: StockBalanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBalance
     */
    omit?: StockBalanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBalanceInclude<ExtArgs> | null
    /**
     * Filter, which StockBalance to fetch.
     */
    where: StockBalanceWhereUniqueInput
  }

  /**
   * StockBalance findUniqueOrThrow
   */
  export type StockBalanceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBalance
     */
    select?: StockBalanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBalance
     */
    omit?: StockBalanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBalanceInclude<ExtArgs> | null
    /**
     * Filter, which StockBalance to fetch.
     */
    where: StockBalanceWhereUniqueInput
  }

  /**
   * StockBalance findFirst
   */
  export type StockBalanceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBalance
     */
    select?: StockBalanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBalance
     */
    omit?: StockBalanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBalanceInclude<ExtArgs> | null
    /**
     * Filter, which StockBalance to fetch.
     */
    where?: StockBalanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockBalances to fetch.
     */
    orderBy?: StockBalanceOrderByWithRelationInput | StockBalanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockBalances.
     */
    cursor?: StockBalanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockBalances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockBalances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockBalances.
     */
    distinct?: StockBalanceScalarFieldEnum | StockBalanceScalarFieldEnum[]
  }

  /**
   * StockBalance findFirstOrThrow
   */
  export type StockBalanceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBalance
     */
    select?: StockBalanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBalance
     */
    omit?: StockBalanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBalanceInclude<ExtArgs> | null
    /**
     * Filter, which StockBalance to fetch.
     */
    where?: StockBalanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockBalances to fetch.
     */
    orderBy?: StockBalanceOrderByWithRelationInput | StockBalanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockBalances.
     */
    cursor?: StockBalanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockBalances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockBalances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockBalances.
     */
    distinct?: StockBalanceScalarFieldEnum | StockBalanceScalarFieldEnum[]
  }

  /**
   * StockBalance findMany
   */
  export type StockBalanceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBalance
     */
    select?: StockBalanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBalance
     */
    omit?: StockBalanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBalanceInclude<ExtArgs> | null
    /**
     * Filter, which StockBalances to fetch.
     */
    where?: StockBalanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockBalances to fetch.
     */
    orderBy?: StockBalanceOrderByWithRelationInput | StockBalanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StockBalances.
     */
    cursor?: StockBalanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockBalances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockBalances.
     */
    skip?: number
    distinct?: StockBalanceScalarFieldEnum | StockBalanceScalarFieldEnum[]
  }

  /**
   * StockBalance create
   */
  export type StockBalanceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBalance
     */
    select?: StockBalanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBalance
     */
    omit?: StockBalanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBalanceInclude<ExtArgs> | null
    /**
     * The data needed to create a StockBalance.
     */
    data: XOR<StockBalanceCreateInput, StockBalanceUncheckedCreateInput>
  }

  /**
   * StockBalance createMany
   */
  export type StockBalanceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StockBalances.
     */
    data: StockBalanceCreateManyInput | StockBalanceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StockBalance update
   */
  export type StockBalanceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBalance
     */
    select?: StockBalanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBalance
     */
    omit?: StockBalanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBalanceInclude<ExtArgs> | null
    /**
     * The data needed to update a StockBalance.
     */
    data: XOR<StockBalanceUpdateInput, StockBalanceUncheckedUpdateInput>
    /**
     * Choose, which StockBalance to update.
     */
    where: StockBalanceWhereUniqueInput
  }

  /**
   * StockBalance updateMany
   */
  export type StockBalanceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StockBalances.
     */
    data: XOR<StockBalanceUpdateManyMutationInput, StockBalanceUncheckedUpdateManyInput>
    /**
     * Filter which StockBalances to update
     */
    where?: StockBalanceWhereInput
    /**
     * Limit how many StockBalances to update.
     */
    limit?: number
  }

  /**
   * StockBalance upsert
   */
  export type StockBalanceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBalance
     */
    select?: StockBalanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBalance
     */
    omit?: StockBalanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBalanceInclude<ExtArgs> | null
    /**
     * The filter to search for the StockBalance to update in case it exists.
     */
    where: StockBalanceWhereUniqueInput
    /**
     * In case the StockBalance found by the `where` argument doesn't exist, create a new StockBalance with this data.
     */
    create: XOR<StockBalanceCreateInput, StockBalanceUncheckedCreateInput>
    /**
     * In case the StockBalance was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StockBalanceUpdateInput, StockBalanceUncheckedUpdateInput>
  }

  /**
   * StockBalance delete
   */
  export type StockBalanceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBalance
     */
    select?: StockBalanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBalance
     */
    omit?: StockBalanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBalanceInclude<ExtArgs> | null
    /**
     * Filter which StockBalance to delete.
     */
    where: StockBalanceWhereUniqueInput
  }

  /**
   * StockBalance deleteMany
   */
  export type StockBalanceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockBalances to delete
     */
    where?: StockBalanceWhereInput
    /**
     * Limit how many StockBalances to delete.
     */
    limit?: number
  }

  /**
   * StockBalance without action
   */
  export type StockBalanceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockBalance
     */
    select?: StockBalanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockBalance
     */
    omit?: StockBalanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockBalanceInclude<ExtArgs> | null
  }


  /**
   * Model StockReceipt
   */

  export type AggregateStockReceipt = {
    _count: StockReceiptCountAggregateOutputType | null
    _avg: StockReceiptAvgAggregateOutputType | null
    _sum: StockReceiptSumAggregateOutputType | null
    _min: StockReceiptMinAggregateOutputType | null
    _max: StockReceiptMaxAggregateOutputType | null
  }

  export type StockReceiptAvgAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    quantity: Decimal | null
    cost: Decimal | null
    version: number | null
  }

  export type StockReceiptSumAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    quantity: Decimal | null
    cost: Decimal | null
    version: number | null
  }

  export type StockReceiptMinAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    quantity: Decimal | null
    cost: Decimal | null
    receiptDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
    deletedAt: Date | null
    version: number | null
  }

  export type StockReceiptMaxAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    quantity: Decimal | null
    cost: Decimal | null
    receiptDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
    deletedAt: Date | null
    version: number | null
  }

  export type StockReceiptCountAggregateOutputType = {
    id: number
    itemId: number
    outletId: number
    quantity: number
    cost: number
    receiptDate: number
    createdAt: number
    updatedAt: number
    deleted: number
    deletedAt: number
    version: number
    _all: number
  }


  export type StockReceiptAvgAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    quantity?: true
    cost?: true
    version?: true
  }

  export type StockReceiptSumAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    quantity?: true
    cost?: true
    version?: true
  }

  export type StockReceiptMinAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    quantity?: true
    cost?: true
    receiptDate?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    version?: true
  }

  export type StockReceiptMaxAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    quantity?: true
    cost?: true
    receiptDate?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    version?: true
  }

  export type StockReceiptCountAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    quantity?: true
    cost?: true
    receiptDate?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    version?: true
    _all?: true
  }

  export type StockReceiptAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockReceipt to aggregate.
     */
    where?: StockReceiptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockReceipts to fetch.
     */
    orderBy?: StockReceiptOrderByWithRelationInput | StockReceiptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StockReceiptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockReceipts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockReceipts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StockReceipts
    **/
    _count?: true | StockReceiptCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StockReceiptAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StockReceiptSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StockReceiptMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StockReceiptMaxAggregateInputType
  }

  export type GetStockReceiptAggregateType<T extends StockReceiptAggregateArgs> = {
        [P in keyof T & keyof AggregateStockReceipt]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStockReceipt[P]>
      : GetScalarType<T[P], AggregateStockReceipt[P]>
  }




  export type StockReceiptGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockReceiptWhereInput
    orderBy?: StockReceiptOrderByWithAggregationInput | StockReceiptOrderByWithAggregationInput[]
    by: StockReceiptScalarFieldEnum[] | StockReceiptScalarFieldEnum
    having?: StockReceiptScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StockReceiptCountAggregateInputType | true
    _avg?: StockReceiptAvgAggregateInputType
    _sum?: StockReceiptSumAggregateInputType
    _min?: StockReceiptMinAggregateInputType
    _max?: StockReceiptMaxAggregateInputType
  }

  export type StockReceiptGroupByOutputType = {
    id: number
    itemId: number
    outletId: number
    quantity: Decimal
    cost: Decimal
    receiptDate: Date
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean
    deletedAt: Date | null
    version: number | null
    _count: StockReceiptCountAggregateOutputType | null
    _avg: StockReceiptAvgAggregateOutputType | null
    _sum: StockReceiptSumAggregateOutputType | null
    _min: StockReceiptMinAggregateOutputType | null
    _max: StockReceiptMaxAggregateOutputType | null
  }

  type GetStockReceiptGroupByPayload<T extends StockReceiptGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StockReceiptGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StockReceiptGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StockReceiptGroupByOutputType[P]>
            : GetScalarType<T[P], StockReceiptGroupByOutputType[P]>
        }
      >
    >


  export type StockReceiptSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    itemId?: boolean
    outletId?: boolean
    quantity?: boolean
    cost?: boolean
    receiptDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    deletedAt?: boolean
    version?: boolean
    item?: boolean | ItemDefaultArgs<ExtArgs>
    outlet?: boolean | OutletDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stockReceipt"]>



  export type StockReceiptSelectScalar = {
    id?: boolean
    itemId?: boolean
    outletId?: boolean
    quantity?: boolean
    cost?: boolean
    receiptDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    deletedAt?: boolean
    version?: boolean
  }

  export type StockReceiptOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "itemId" | "outletId" | "quantity" | "cost" | "receiptDate" | "createdAt" | "updatedAt" | "deleted" | "deletedAt" | "version", ExtArgs["result"]["stockReceipt"]>
  export type StockReceiptInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    item?: boolean | ItemDefaultArgs<ExtArgs>
    outlet?: boolean | OutletDefaultArgs<ExtArgs>
  }

  export type $StockReceiptPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StockReceipt"
    objects: {
      item: Prisma.$ItemPayload<ExtArgs>
      outlet: Prisma.$OutletPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      itemId: number
      outletId: number
      quantity: Prisma.Decimal
      cost: Prisma.Decimal
      receiptDate: Date
      createdAt: Date | null
      updatedAt: Date | null
      deleted: boolean
      deletedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["stockReceipt"]>
    composites: {}
  }

  type StockReceiptGetPayload<S extends boolean | null | undefined | StockReceiptDefaultArgs> = $Result.GetResult<Prisma.$StockReceiptPayload, S>

  type StockReceiptCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StockReceiptFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StockReceiptCountAggregateInputType | true
    }

  export interface StockReceiptDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StockReceipt'], meta: { name: 'StockReceipt' } }
    /**
     * Find zero or one StockReceipt that matches the filter.
     * @param {StockReceiptFindUniqueArgs} args - Arguments to find a StockReceipt
     * @example
     * // Get one StockReceipt
     * const stockReceipt = await prisma.stockReceipt.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StockReceiptFindUniqueArgs>(args: SelectSubset<T, StockReceiptFindUniqueArgs<ExtArgs>>): Prisma__StockReceiptClient<$Result.GetResult<Prisma.$StockReceiptPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StockReceipt that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StockReceiptFindUniqueOrThrowArgs} args - Arguments to find a StockReceipt
     * @example
     * // Get one StockReceipt
     * const stockReceipt = await prisma.stockReceipt.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StockReceiptFindUniqueOrThrowArgs>(args: SelectSubset<T, StockReceiptFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StockReceiptClient<$Result.GetResult<Prisma.$StockReceiptPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockReceipt that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReceiptFindFirstArgs} args - Arguments to find a StockReceipt
     * @example
     * // Get one StockReceipt
     * const stockReceipt = await prisma.stockReceipt.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StockReceiptFindFirstArgs>(args?: SelectSubset<T, StockReceiptFindFirstArgs<ExtArgs>>): Prisma__StockReceiptClient<$Result.GetResult<Prisma.$StockReceiptPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockReceipt that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReceiptFindFirstOrThrowArgs} args - Arguments to find a StockReceipt
     * @example
     * // Get one StockReceipt
     * const stockReceipt = await prisma.stockReceipt.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StockReceiptFindFirstOrThrowArgs>(args?: SelectSubset<T, StockReceiptFindFirstOrThrowArgs<ExtArgs>>): Prisma__StockReceiptClient<$Result.GetResult<Prisma.$StockReceiptPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StockReceipts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReceiptFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StockReceipts
     * const stockReceipts = await prisma.stockReceipt.findMany()
     * 
     * // Get first 10 StockReceipts
     * const stockReceipts = await prisma.stockReceipt.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stockReceiptWithIdOnly = await prisma.stockReceipt.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StockReceiptFindManyArgs>(args?: SelectSubset<T, StockReceiptFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockReceiptPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StockReceipt.
     * @param {StockReceiptCreateArgs} args - Arguments to create a StockReceipt.
     * @example
     * // Create one StockReceipt
     * const StockReceipt = await prisma.stockReceipt.create({
     *   data: {
     *     // ... data to create a StockReceipt
     *   }
     * })
     * 
     */
    create<T extends StockReceiptCreateArgs>(args: SelectSubset<T, StockReceiptCreateArgs<ExtArgs>>): Prisma__StockReceiptClient<$Result.GetResult<Prisma.$StockReceiptPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StockReceipts.
     * @param {StockReceiptCreateManyArgs} args - Arguments to create many StockReceipts.
     * @example
     * // Create many StockReceipts
     * const stockReceipt = await prisma.stockReceipt.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StockReceiptCreateManyArgs>(args?: SelectSubset<T, StockReceiptCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a StockReceipt.
     * @param {StockReceiptDeleteArgs} args - Arguments to delete one StockReceipt.
     * @example
     * // Delete one StockReceipt
     * const StockReceipt = await prisma.stockReceipt.delete({
     *   where: {
     *     // ... filter to delete one StockReceipt
     *   }
     * })
     * 
     */
    delete<T extends StockReceiptDeleteArgs>(args: SelectSubset<T, StockReceiptDeleteArgs<ExtArgs>>): Prisma__StockReceiptClient<$Result.GetResult<Prisma.$StockReceiptPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StockReceipt.
     * @param {StockReceiptUpdateArgs} args - Arguments to update one StockReceipt.
     * @example
     * // Update one StockReceipt
     * const stockReceipt = await prisma.stockReceipt.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StockReceiptUpdateArgs>(args: SelectSubset<T, StockReceiptUpdateArgs<ExtArgs>>): Prisma__StockReceiptClient<$Result.GetResult<Prisma.$StockReceiptPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StockReceipts.
     * @param {StockReceiptDeleteManyArgs} args - Arguments to filter StockReceipts to delete.
     * @example
     * // Delete a few StockReceipts
     * const { count } = await prisma.stockReceipt.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StockReceiptDeleteManyArgs>(args?: SelectSubset<T, StockReceiptDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StockReceipts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReceiptUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StockReceipts
     * const stockReceipt = await prisma.stockReceipt.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StockReceiptUpdateManyArgs>(args: SelectSubset<T, StockReceiptUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one StockReceipt.
     * @param {StockReceiptUpsertArgs} args - Arguments to update or create a StockReceipt.
     * @example
     * // Update or create a StockReceipt
     * const stockReceipt = await prisma.stockReceipt.upsert({
     *   create: {
     *     // ... data to create a StockReceipt
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StockReceipt we want to update
     *   }
     * })
     */
    upsert<T extends StockReceiptUpsertArgs>(args: SelectSubset<T, StockReceiptUpsertArgs<ExtArgs>>): Prisma__StockReceiptClient<$Result.GetResult<Prisma.$StockReceiptPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StockReceipts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReceiptCountArgs} args - Arguments to filter StockReceipts to count.
     * @example
     * // Count the number of StockReceipts
     * const count = await prisma.stockReceipt.count({
     *   where: {
     *     // ... the filter for the StockReceipts we want to count
     *   }
     * })
    **/
    count<T extends StockReceiptCountArgs>(
      args?: Subset<T, StockReceiptCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StockReceiptCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StockReceipt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReceiptAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StockReceiptAggregateArgs>(args: Subset<T, StockReceiptAggregateArgs>): Prisma.PrismaPromise<GetStockReceiptAggregateType<T>>

    /**
     * Group by StockReceipt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReceiptGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StockReceiptGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StockReceiptGroupByArgs['orderBy'] }
        : { orderBy?: StockReceiptGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StockReceiptGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStockReceiptGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StockReceipt model
   */
  readonly fields: StockReceiptFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StockReceipt.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StockReceiptClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    item<T extends ItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ItemDefaultArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    outlet<T extends OutletDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OutletDefaultArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StockReceipt model
   */
  interface StockReceiptFieldRefs {
    readonly id: FieldRef<"StockReceipt", 'Int'>
    readonly itemId: FieldRef<"StockReceipt", 'Int'>
    readonly outletId: FieldRef<"StockReceipt", 'Int'>
    readonly quantity: FieldRef<"StockReceipt", 'Decimal'>
    readonly cost: FieldRef<"StockReceipt", 'Decimal'>
    readonly receiptDate: FieldRef<"StockReceipt", 'DateTime'>
    readonly createdAt: FieldRef<"StockReceipt", 'DateTime'>
    readonly updatedAt: FieldRef<"StockReceipt", 'DateTime'>
    readonly deleted: FieldRef<"StockReceipt", 'Boolean'>
    readonly deletedAt: FieldRef<"StockReceipt", 'DateTime'>
    readonly version: FieldRef<"StockReceipt", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * StockReceipt findUnique
   */
  export type StockReceiptFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceipt
     */
    select?: StockReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceipt
     */
    omit?: StockReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReceiptInclude<ExtArgs> | null
    /**
     * Filter, which StockReceipt to fetch.
     */
    where: StockReceiptWhereUniqueInput
  }

  /**
   * StockReceipt findUniqueOrThrow
   */
  export type StockReceiptFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceipt
     */
    select?: StockReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceipt
     */
    omit?: StockReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReceiptInclude<ExtArgs> | null
    /**
     * Filter, which StockReceipt to fetch.
     */
    where: StockReceiptWhereUniqueInput
  }

  /**
   * StockReceipt findFirst
   */
  export type StockReceiptFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceipt
     */
    select?: StockReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceipt
     */
    omit?: StockReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReceiptInclude<ExtArgs> | null
    /**
     * Filter, which StockReceipt to fetch.
     */
    where?: StockReceiptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockReceipts to fetch.
     */
    orderBy?: StockReceiptOrderByWithRelationInput | StockReceiptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockReceipts.
     */
    cursor?: StockReceiptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockReceipts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockReceipts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockReceipts.
     */
    distinct?: StockReceiptScalarFieldEnum | StockReceiptScalarFieldEnum[]
  }

  /**
   * StockReceipt findFirstOrThrow
   */
  export type StockReceiptFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceipt
     */
    select?: StockReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceipt
     */
    omit?: StockReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReceiptInclude<ExtArgs> | null
    /**
     * Filter, which StockReceipt to fetch.
     */
    where?: StockReceiptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockReceipts to fetch.
     */
    orderBy?: StockReceiptOrderByWithRelationInput | StockReceiptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockReceipts.
     */
    cursor?: StockReceiptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockReceipts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockReceipts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockReceipts.
     */
    distinct?: StockReceiptScalarFieldEnum | StockReceiptScalarFieldEnum[]
  }

  /**
   * StockReceipt findMany
   */
  export type StockReceiptFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceipt
     */
    select?: StockReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceipt
     */
    omit?: StockReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReceiptInclude<ExtArgs> | null
    /**
     * Filter, which StockReceipts to fetch.
     */
    where?: StockReceiptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockReceipts to fetch.
     */
    orderBy?: StockReceiptOrderByWithRelationInput | StockReceiptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StockReceipts.
     */
    cursor?: StockReceiptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockReceipts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockReceipts.
     */
    skip?: number
    distinct?: StockReceiptScalarFieldEnum | StockReceiptScalarFieldEnum[]
  }

  /**
   * StockReceipt create
   */
  export type StockReceiptCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceipt
     */
    select?: StockReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceipt
     */
    omit?: StockReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReceiptInclude<ExtArgs> | null
    /**
     * The data needed to create a StockReceipt.
     */
    data: XOR<StockReceiptCreateInput, StockReceiptUncheckedCreateInput>
  }

  /**
   * StockReceipt createMany
   */
  export type StockReceiptCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StockReceipts.
     */
    data: StockReceiptCreateManyInput | StockReceiptCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StockReceipt update
   */
  export type StockReceiptUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceipt
     */
    select?: StockReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceipt
     */
    omit?: StockReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReceiptInclude<ExtArgs> | null
    /**
     * The data needed to update a StockReceipt.
     */
    data: XOR<StockReceiptUpdateInput, StockReceiptUncheckedUpdateInput>
    /**
     * Choose, which StockReceipt to update.
     */
    where: StockReceiptWhereUniqueInput
  }

  /**
   * StockReceipt updateMany
   */
  export type StockReceiptUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StockReceipts.
     */
    data: XOR<StockReceiptUpdateManyMutationInput, StockReceiptUncheckedUpdateManyInput>
    /**
     * Filter which StockReceipts to update
     */
    where?: StockReceiptWhereInput
    /**
     * Limit how many StockReceipts to update.
     */
    limit?: number
  }

  /**
   * StockReceipt upsert
   */
  export type StockReceiptUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceipt
     */
    select?: StockReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceipt
     */
    omit?: StockReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReceiptInclude<ExtArgs> | null
    /**
     * The filter to search for the StockReceipt to update in case it exists.
     */
    where: StockReceiptWhereUniqueInput
    /**
     * In case the StockReceipt found by the `where` argument doesn't exist, create a new StockReceipt with this data.
     */
    create: XOR<StockReceiptCreateInput, StockReceiptUncheckedCreateInput>
    /**
     * In case the StockReceipt was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StockReceiptUpdateInput, StockReceiptUncheckedUpdateInput>
  }

  /**
   * StockReceipt delete
   */
  export type StockReceiptDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceipt
     */
    select?: StockReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceipt
     */
    omit?: StockReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReceiptInclude<ExtArgs> | null
    /**
     * Filter which StockReceipt to delete.
     */
    where: StockReceiptWhereUniqueInput
  }

  /**
   * StockReceipt deleteMany
   */
  export type StockReceiptDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockReceipts to delete
     */
    where?: StockReceiptWhereInput
    /**
     * Limit how many StockReceipts to delete.
     */
    limit?: number
  }

  /**
   * StockReceipt without action
   */
  export type StockReceiptDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceipt
     */
    select?: StockReceiptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceipt
     */
    omit?: StockReceiptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockReceiptInclude<ExtArgs> | null
  }


  /**
   * Model StockReceiptArchive
   */

  export type AggregateStockReceiptArchive = {
    _count: StockReceiptArchiveCountAggregateOutputType | null
    _avg: StockReceiptArchiveAvgAggregateOutputType | null
    _sum: StockReceiptArchiveSumAggregateOutputType | null
    _min: StockReceiptArchiveMinAggregateOutputType | null
    _max: StockReceiptArchiveMaxAggregateOutputType | null
  }

  export type StockReceiptArchiveAvgAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    quantity: Decimal | null
    cost: Decimal | null
    version: number | null
  }

  export type StockReceiptArchiveSumAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    quantity: Decimal | null
    cost: Decimal | null
    version: number | null
  }

  export type StockReceiptArchiveMinAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    quantity: Decimal | null
    cost: Decimal | null
    receiptDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
    deletedAt: Date | null
    version: number | null
  }

  export type StockReceiptArchiveMaxAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    quantity: Decimal | null
    cost: Decimal | null
    receiptDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean | null
    deletedAt: Date | null
    version: number | null
  }

  export type StockReceiptArchiveCountAggregateOutputType = {
    id: number
    itemId: number
    outletId: number
    quantity: number
    cost: number
    receiptDate: number
    createdAt: number
    updatedAt: number
    deleted: number
    deletedAt: number
    version: number
    _all: number
  }


  export type StockReceiptArchiveAvgAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    quantity?: true
    cost?: true
    version?: true
  }

  export type StockReceiptArchiveSumAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    quantity?: true
    cost?: true
    version?: true
  }

  export type StockReceiptArchiveMinAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    quantity?: true
    cost?: true
    receiptDate?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    version?: true
  }

  export type StockReceiptArchiveMaxAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    quantity?: true
    cost?: true
    receiptDate?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    version?: true
  }

  export type StockReceiptArchiveCountAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    quantity?: true
    cost?: true
    receiptDate?: true
    createdAt?: true
    updatedAt?: true
    deleted?: true
    deletedAt?: true
    version?: true
    _all?: true
  }

  export type StockReceiptArchiveAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockReceiptArchive to aggregate.
     */
    where?: StockReceiptArchiveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockReceiptArchives to fetch.
     */
    orderBy?: StockReceiptArchiveOrderByWithRelationInput | StockReceiptArchiveOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StockReceiptArchiveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockReceiptArchives from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockReceiptArchives.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StockReceiptArchives
    **/
    _count?: true | StockReceiptArchiveCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StockReceiptArchiveAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StockReceiptArchiveSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StockReceiptArchiveMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StockReceiptArchiveMaxAggregateInputType
  }

  export type GetStockReceiptArchiveAggregateType<T extends StockReceiptArchiveAggregateArgs> = {
        [P in keyof T & keyof AggregateStockReceiptArchive]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStockReceiptArchive[P]>
      : GetScalarType<T[P], AggregateStockReceiptArchive[P]>
  }




  export type StockReceiptArchiveGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockReceiptArchiveWhereInput
    orderBy?: StockReceiptArchiveOrderByWithAggregationInput | StockReceiptArchiveOrderByWithAggregationInput[]
    by: StockReceiptArchiveScalarFieldEnum[] | StockReceiptArchiveScalarFieldEnum
    having?: StockReceiptArchiveScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StockReceiptArchiveCountAggregateInputType | true
    _avg?: StockReceiptArchiveAvgAggregateInputType
    _sum?: StockReceiptArchiveSumAggregateInputType
    _min?: StockReceiptArchiveMinAggregateInputType
    _max?: StockReceiptArchiveMaxAggregateInputType
  }

  export type StockReceiptArchiveGroupByOutputType = {
    id: number
    itemId: number
    outletId: number
    quantity: Decimal
    cost: Decimal
    receiptDate: Date
    createdAt: Date | null
    updatedAt: Date | null
    deleted: boolean
    deletedAt: Date | null
    version: number | null
    _count: StockReceiptArchiveCountAggregateOutputType | null
    _avg: StockReceiptArchiveAvgAggregateOutputType | null
    _sum: StockReceiptArchiveSumAggregateOutputType | null
    _min: StockReceiptArchiveMinAggregateOutputType | null
    _max: StockReceiptArchiveMaxAggregateOutputType | null
  }

  type GetStockReceiptArchiveGroupByPayload<T extends StockReceiptArchiveGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StockReceiptArchiveGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StockReceiptArchiveGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StockReceiptArchiveGroupByOutputType[P]>
            : GetScalarType<T[P], StockReceiptArchiveGroupByOutputType[P]>
        }
      >
    >


  export type StockReceiptArchiveSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    itemId?: boolean
    outletId?: boolean
    quantity?: boolean
    cost?: boolean
    receiptDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    deletedAt?: boolean
    version?: boolean
  }, ExtArgs["result"]["stockReceiptArchive"]>



  export type StockReceiptArchiveSelectScalar = {
    id?: boolean
    itemId?: boolean
    outletId?: boolean
    quantity?: boolean
    cost?: boolean
    receiptDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deleted?: boolean
    deletedAt?: boolean
    version?: boolean
  }

  export type StockReceiptArchiveOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "itemId" | "outletId" | "quantity" | "cost" | "receiptDate" | "createdAt" | "updatedAt" | "deleted" | "deletedAt" | "version", ExtArgs["result"]["stockReceiptArchive"]>

  export type $StockReceiptArchivePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StockReceiptArchive"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      itemId: number
      outletId: number
      quantity: Prisma.Decimal
      cost: Prisma.Decimal
      receiptDate: Date
      createdAt: Date | null
      updatedAt: Date | null
      deleted: boolean
      deletedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["stockReceiptArchive"]>
    composites: {}
  }

  type StockReceiptArchiveGetPayload<S extends boolean | null | undefined | StockReceiptArchiveDefaultArgs> = $Result.GetResult<Prisma.$StockReceiptArchivePayload, S>

  type StockReceiptArchiveCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StockReceiptArchiveFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StockReceiptArchiveCountAggregateInputType | true
    }

  export interface StockReceiptArchiveDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StockReceiptArchive'], meta: { name: 'StockReceiptArchive' } }
    /**
     * Find zero or one StockReceiptArchive that matches the filter.
     * @param {StockReceiptArchiveFindUniqueArgs} args - Arguments to find a StockReceiptArchive
     * @example
     * // Get one StockReceiptArchive
     * const stockReceiptArchive = await prisma.stockReceiptArchive.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StockReceiptArchiveFindUniqueArgs>(args: SelectSubset<T, StockReceiptArchiveFindUniqueArgs<ExtArgs>>): Prisma__StockReceiptArchiveClient<$Result.GetResult<Prisma.$StockReceiptArchivePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StockReceiptArchive that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StockReceiptArchiveFindUniqueOrThrowArgs} args - Arguments to find a StockReceiptArchive
     * @example
     * // Get one StockReceiptArchive
     * const stockReceiptArchive = await prisma.stockReceiptArchive.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StockReceiptArchiveFindUniqueOrThrowArgs>(args: SelectSubset<T, StockReceiptArchiveFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StockReceiptArchiveClient<$Result.GetResult<Prisma.$StockReceiptArchivePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockReceiptArchive that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReceiptArchiveFindFirstArgs} args - Arguments to find a StockReceiptArchive
     * @example
     * // Get one StockReceiptArchive
     * const stockReceiptArchive = await prisma.stockReceiptArchive.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StockReceiptArchiveFindFirstArgs>(args?: SelectSubset<T, StockReceiptArchiveFindFirstArgs<ExtArgs>>): Prisma__StockReceiptArchiveClient<$Result.GetResult<Prisma.$StockReceiptArchivePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockReceiptArchive that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReceiptArchiveFindFirstOrThrowArgs} args - Arguments to find a StockReceiptArchive
     * @example
     * // Get one StockReceiptArchive
     * const stockReceiptArchive = await prisma.stockReceiptArchive.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StockReceiptArchiveFindFirstOrThrowArgs>(args?: SelectSubset<T, StockReceiptArchiveFindFirstOrThrowArgs<ExtArgs>>): Prisma__StockReceiptArchiveClient<$Result.GetResult<Prisma.$StockReceiptArchivePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StockReceiptArchives that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReceiptArchiveFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StockReceiptArchives
     * const stockReceiptArchives = await prisma.stockReceiptArchive.findMany()
     * 
     * // Get first 10 StockReceiptArchives
     * const stockReceiptArchives = await prisma.stockReceiptArchive.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stockReceiptArchiveWithIdOnly = await prisma.stockReceiptArchive.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StockReceiptArchiveFindManyArgs>(args?: SelectSubset<T, StockReceiptArchiveFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockReceiptArchivePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StockReceiptArchive.
     * @param {StockReceiptArchiveCreateArgs} args - Arguments to create a StockReceiptArchive.
     * @example
     * // Create one StockReceiptArchive
     * const StockReceiptArchive = await prisma.stockReceiptArchive.create({
     *   data: {
     *     // ... data to create a StockReceiptArchive
     *   }
     * })
     * 
     */
    create<T extends StockReceiptArchiveCreateArgs>(args: SelectSubset<T, StockReceiptArchiveCreateArgs<ExtArgs>>): Prisma__StockReceiptArchiveClient<$Result.GetResult<Prisma.$StockReceiptArchivePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StockReceiptArchives.
     * @param {StockReceiptArchiveCreateManyArgs} args - Arguments to create many StockReceiptArchives.
     * @example
     * // Create many StockReceiptArchives
     * const stockReceiptArchive = await prisma.stockReceiptArchive.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StockReceiptArchiveCreateManyArgs>(args?: SelectSubset<T, StockReceiptArchiveCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a StockReceiptArchive.
     * @param {StockReceiptArchiveDeleteArgs} args - Arguments to delete one StockReceiptArchive.
     * @example
     * // Delete one StockReceiptArchive
     * const StockReceiptArchive = await prisma.stockReceiptArchive.delete({
     *   where: {
     *     // ... filter to delete one StockReceiptArchive
     *   }
     * })
     * 
     */
    delete<T extends StockReceiptArchiveDeleteArgs>(args: SelectSubset<T, StockReceiptArchiveDeleteArgs<ExtArgs>>): Prisma__StockReceiptArchiveClient<$Result.GetResult<Prisma.$StockReceiptArchivePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StockReceiptArchive.
     * @param {StockReceiptArchiveUpdateArgs} args - Arguments to update one StockReceiptArchive.
     * @example
     * // Update one StockReceiptArchive
     * const stockReceiptArchive = await prisma.stockReceiptArchive.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StockReceiptArchiveUpdateArgs>(args: SelectSubset<T, StockReceiptArchiveUpdateArgs<ExtArgs>>): Prisma__StockReceiptArchiveClient<$Result.GetResult<Prisma.$StockReceiptArchivePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StockReceiptArchives.
     * @param {StockReceiptArchiveDeleteManyArgs} args - Arguments to filter StockReceiptArchives to delete.
     * @example
     * // Delete a few StockReceiptArchives
     * const { count } = await prisma.stockReceiptArchive.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StockReceiptArchiveDeleteManyArgs>(args?: SelectSubset<T, StockReceiptArchiveDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StockReceiptArchives.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReceiptArchiveUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StockReceiptArchives
     * const stockReceiptArchive = await prisma.stockReceiptArchive.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StockReceiptArchiveUpdateManyArgs>(args: SelectSubset<T, StockReceiptArchiveUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one StockReceiptArchive.
     * @param {StockReceiptArchiveUpsertArgs} args - Arguments to update or create a StockReceiptArchive.
     * @example
     * // Update or create a StockReceiptArchive
     * const stockReceiptArchive = await prisma.stockReceiptArchive.upsert({
     *   create: {
     *     // ... data to create a StockReceiptArchive
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StockReceiptArchive we want to update
     *   }
     * })
     */
    upsert<T extends StockReceiptArchiveUpsertArgs>(args: SelectSubset<T, StockReceiptArchiveUpsertArgs<ExtArgs>>): Prisma__StockReceiptArchiveClient<$Result.GetResult<Prisma.$StockReceiptArchivePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StockReceiptArchives.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReceiptArchiveCountArgs} args - Arguments to filter StockReceiptArchives to count.
     * @example
     * // Count the number of StockReceiptArchives
     * const count = await prisma.stockReceiptArchive.count({
     *   where: {
     *     // ... the filter for the StockReceiptArchives we want to count
     *   }
     * })
    **/
    count<T extends StockReceiptArchiveCountArgs>(
      args?: Subset<T, StockReceiptArchiveCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StockReceiptArchiveCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StockReceiptArchive.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReceiptArchiveAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StockReceiptArchiveAggregateArgs>(args: Subset<T, StockReceiptArchiveAggregateArgs>): Prisma.PrismaPromise<GetStockReceiptArchiveAggregateType<T>>

    /**
     * Group by StockReceiptArchive.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockReceiptArchiveGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StockReceiptArchiveGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StockReceiptArchiveGroupByArgs['orderBy'] }
        : { orderBy?: StockReceiptArchiveGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StockReceiptArchiveGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStockReceiptArchiveGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StockReceiptArchive model
   */
  readonly fields: StockReceiptArchiveFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StockReceiptArchive.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StockReceiptArchiveClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StockReceiptArchive model
   */
  interface StockReceiptArchiveFieldRefs {
    readonly id: FieldRef<"StockReceiptArchive", 'Int'>
    readonly itemId: FieldRef<"StockReceiptArchive", 'Int'>
    readonly outletId: FieldRef<"StockReceiptArchive", 'Int'>
    readonly quantity: FieldRef<"StockReceiptArchive", 'Decimal'>
    readonly cost: FieldRef<"StockReceiptArchive", 'Decimal'>
    readonly receiptDate: FieldRef<"StockReceiptArchive", 'DateTime'>
    readonly createdAt: FieldRef<"StockReceiptArchive", 'DateTime'>
    readonly updatedAt: FieldRef<"StockReceiptArchive", 'DateTime'>
    readonly deleted: FieldRef<"StockReceiptArchive", 'Boolean'>
    readonly deletedAt: FieldRef<"StockReceiptArchive", 'DateTime'>
    readonly version: FieldRef<"StockReceiptArchive", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * StockReceiptArchive findUnique
   */
  export type StockReceiptArchiveFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceiptArchive
     */
    select?: StockReceiptArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceiptArchive
     */
    omit?: StockReceiptArchiveOmit<ExtArgs> | null
    /**
     * Filter, which StockReceiptArchive to fetch.
     */
    where: StockReceiptArchiveWhereUniqueInput
  }

  /**
   * StockReceiptArchive findUniqueOrThrow
   */
  export type StockReceiptArchiveFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceiptArchive
     */
    select?: StockReceiptArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceiptArchive
     */
    omit?: StockReceiptArchiveOmit<ExtArgs> | null
    /**
     * Filter, which StockReceiptArchive to fetch.
     */
    where: StockReceiptArchiveWhereUniqueInput
  }

  /**
   * StockReceiptArchive findFirst
   */
  export type StockReceiptArchiveFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceiptArchive
     */
    select?: StockReceiptArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceiptArchive
     */
    omit?: StockReceiptArchiveOmit<ExtArgs> | null
    /**
     * Filter, which StockReceiptArchive to fetch.
     */
    where?: StockReceiptArchiveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockReceiptArchives to fetch.
     */
    orderBy?: StockReceiptArchiveOrderByWithRelationInput | StockReceiptArchiveOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockReceiptArchives.
     */
    cursor?: StockReceiptArchiveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockReceiptArchives from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockReceiptArchives.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockReceiptArchives.
     */
    distinct?: StockReceiptArchiveScalarFieldEnum | StockReceiptArchiveScalarFieldEnum[]
  }

  /**
   * StockReceiptArchive findFirstOrThrow
   */
  export type StockReceiptArchiveFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceiptArchive
     */
    select?: StockReceiptArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceiptArchive
     */
    omit?: StockReceiptArchiveOmit<ExtArgs> | null
    /**
     * Filter, which StockReceiptArchive to fetch.
     */
    where?: StockReceiptArchiveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockReceiptArchives to fetch.
     */
    orderBy?: StockReceiptArchiveOrderByWithRelationInput | StockReceiptArchiveOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockReceiptArchives.
     */
    cursor?: StockReceiptArchiveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockReceiptArchives from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockReceiptArchives.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockReceiptArchives.
     */
    distinct?: StockReceiptArchiveScalarFieldEnum | StockReceiptArchiveScalarFieldEnum[]
  }

  /**
   * StockReceiptArchive findMany
   */
  export type StockReceiptArchiveFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceiptArchive
     */
    select?: StockReceiptArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceiptArchive
     */
    omit?: StockReceiptArchiveOmit<ExtArgs> | null
    /**
     * Filter, which StockReceiptArchives to fetch.
     */
    where?: StockReceiptArchiveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockReceiptArchives to fetch.
     */
    orderBy?: StockReceiptArchiveOrderByWithRelationInput | StockReceiptArchiveOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StockReceiptArchives.
     */
    cursor?: StockReceiptArchiveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockReceiptArchives from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockReceiptArchives.
     */
    skip?: number
    distinct?: StockReceiptArchiveScalarFieldEnum | StockReceiptArchiveScalarFieldEnum[]
  }

  /**
   * StockReceiptArchive create
   */
  export type StockReceiptArchiveCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceiptArchive
     */
    select?: StockReceiptArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceiptArchive
     */
    omit?: StockReceiptArchiveOmit<ExtArgs> | null
    /**
     * The data needed to create a StockReceiptArchive.
     */
    data: XOR<StockReceiptArchiveCreateInput, StockReceiptArchiveUncheckedCreateInput>
  }

  /**
   * StockReceiptArchive createMany
   */
  export type StockReceiptArchiveCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StockReceiptArchives.
     */
    data: StockReceiptArchiveCreateManyInput | StockReceiptArchiveCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StockReceiptArchive update
   */
  export type StockReceiptArchiveUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceiptArchive
     */
    select?: StockReceiptArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceiptArchive
     */
    omit?: StockReceiptArchiveOmit<ExtArgs> | null
    /**
     * The data needed to update a StockReceiptArchive.
     */
    data: XOR<StockReceiptArchiveUpdateInput, StockReceiptArchiveUncheckedUpdateInput>
    /**
     * Choose, which StockReceiptArchive to update.
     */
    where: StockReceiptArchiveWhereUniqueInput
  }

  /**
   * StockReceiptArchive updateMany
   */
  export type StockReceiptArchiveUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StockReceiptArchives.
     */
    data: XOR<StockReceiptArchiveUpdateManyMutationInput, StockReceiptArchiveUncheckedUpdateManyInput>
    /**
     * Filter which StockReceiptArchives to update
     */
    where?: StockReceiptArchiveWhereInput
    /**
     * Limit how many StockReceiptArchives to update.
     */
    limit?: number
  }

  /**
   * StockReceiptArchive upsert
   */
  export type StockReceiptArchiveUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceiptArchive
     */
    select?: StockReceiptArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceiptArchive
     */
    omit?: StockReceiptArchiveOmit<ExtArgs> | null
    /**
     * The filter to search for the StockReceiptArchive to update in case it exists.
     */
    where: StockReceiptArchiveWhereUniqueInput
    /**
     * In case the StockReceiptArchive found by the `where` argument doesn't exist, create a new StockReceiptArchive with this data.
     */
    create: XOR<StockReceiptArchiveCreateInput, StockReceiptArchiveUncheckedCreateInput>
    /**
     * In case the StockReceiptArchive was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StockReceiptArchiveUpdateInput, StockReceiptArchiveUncheckedUpdateInput>
  }

  /**
   * StockReceiptArchive delete
   */
  export type StockReceiptArchiveDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceiptArchive
     */
    select?: StockReceiptArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceiptArchive
     */
    omit?: StockReceiptArchiveOmit<ExtArgs> | null
    /**
     * Filter which StockReceiptArchive to delete.
     */
    where: StockReceiptArchiveWhereUniqueInput
  }

  /**
   * StockReceiptArchive deleteMany
   */
  export type StockReceiptArchiveDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockReceiptArchives to delete
     */
    where?: StockReceiptArchiveWhereInput
    /**
     * Limit how many StockReceiptArchives to delete.
     */
    limit?: number
  }

  /**
   * StockReceiptArchive without action
   */
  export type StockReceiptArchiveDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockReceiptArchive
     */
    select?: StockReceiptArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockReceiptArchive
     */
    omit?: StockReceiptArchiveOmit<ExtArgs> | null
  }


  /**
   * Model StockMovement
   */

  export type AggregateStockMovement = {
    _count: StockMovementCountAggregateOutputType | null
    _avg: StockMovementAvgAggregateOutputType | null
    _sum: StockMovementSumAggregateOutputType | null
    _min: StockMovementMinAggregateOutputType | null
    _max: StockMovementMaxAggregateOutputType | null
  }

  export type StockMovementAvgAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    previousAvailableQuantity: Decimal | null
    previousOnHandQuantity: Decimal | null
    availableQuantityDelta: Decimal | null
    onHandQuantityDelta: Decimal | null
    documentId: number | null
    version: number | null
  }

  export type StockMovementSumAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    previousAvailableQuantity: Decimal | null
    previousOnHandQuantity: Decimal | null
    availableQuantityDelta: Decimal | null
    onHandQuantityDelta: Decimal | null
    documentId: number | null
    version: number | null
  }

  export type StockMovementMinAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    previousAvailableQuantity: Decimal | null
    previousOnHandQuantity: Decimal | null
    availableQuantityDelta: Decimal | null
    onHandQuantityDelta: Decimal | null
    movementType: string | null
    documentId: number | null
    reason: string | null
    remark: string | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    performedBy: string | null
  }

  export type StockMovementMaxAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    previousAvailableQuantity: Decimal | null
    previousOnHandQuantity: Decimal | null
    availableQuantityDelta: Decimal | null
    onHandQuantityDelta: Decimal | null
    movementType: string | null
    documentId: number | null
    reason: string | null
    remark: string | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    performedBy: string | null
  }

  export type StockMovementCountAggregateOutputType = {
    id: number
    itemId: number
    outletId: number
    previousAvailableQuantity: number
    previousOnHandQuantity: number
    availableQuantityDelta: number
    onHandQuantityDelta: number
    movementType: number
    documentId: number
    reason: number
    remark: number
    deleted: number
    createdAt: number
    updatedAt: number
    version: number
    performedBy: number
    _all: number
  }


  export type StockMovementAvgAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    previousAvailableQuantity?: true
    previousOnHandQuantity?: true
    availableQuantityDelta?: true
    onHandQuantityDelta?: true
    documentId?: true
    version?: true
  }

  export type StockMovementSumAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    previousAvailableQuantity?: true
    previousOnHandQuantity?: true
    availableQuantityDelta?: true
    onHandQuantityDelta?: true
    documentId?: true
    version?: true
  }

  export type StockMovementMinAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    previousAvailableQuantity?: true
    previousOnHandQuantity?: true
    availableQuantityDelta?: true
    onHandQuantityDelta?: true
    movementType?: true
    documentId?: true
    reason?: true
    remark?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    performedBy?: true
  }

  export type StockMovementMaxAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    previousAvailableQuantity?: true
    previousOnHandQuantity?: true
    availableQuantityDelta?: true
    onHandQuantityDelta?: true
    movementType?: true
    documentId?: true
    reason?: true
    remark?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    performedBy?: true
  }

  export type StockMovementCountAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    previousAvailableQuantity?: true
    previousOnHandQuantity?: true
    availableQuantityDelta?: true
    onHandQuantityDelta?: true
    movementType?: true
    documentId?: true
    reason?: true
    remark?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    performedBy?: true
    _all?: true
  }

  export type StockMovementAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockMovement to aggregate.
     */
    where?: StockMovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockMovements to fetch.
     */
    orderBy?: StockMovementOrderByWithRelationInput | StockMovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StockMovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockMovements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockMovements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StockMovements
    **/
    _count?: true | StockMovementCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StockMovementAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StockMovementSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StockMovementMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StockMovementMaxAggregateInputType
  }

  export type GetStockMovementAggregateType<T extends StockMovementAggregateArgs> = {
        [P in keyof T & keyof AggregateStockMovement]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStockMovement[P]>
      : GetScalarType<T[P], AggregateStockMovement[P]>
  }




  export type StockMovementGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockMovementWhereInput
    orderBy?: StockMovementOrderByWithAggregationInput | StockMovementOrderByWithAggregationInput[]
    by: StockMovementScalarFieldEnum[] | StockMovementScalarFieldEnum
    having?: StockMovementScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StockMovementCountAggregateInputType | true
    _avg?: StockMovementAvgAggregateInputType
    _sum?: StockMovementSumAggregateInputType
    _min?: StockMovementMinAggregateInputType
    _max?: StockMovementMaxAggregateInputType
  }

  export type StockMovementGroupByOutputType = {
    id: number
    itemId: number
    outletId: number
    previousAvailableQuantity: Decimal
    previousOnHandQuantity: Decimal
    availableQuantityDelta: Decimal
    onHandQuantityDelta: Decimal
    movementType: string
    documentId: number
    reason: string
    remark: string
    deleted: boolean
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    performedBy: string | null
    _count: StockMovementCountAggregateOutputType | null
    _avg: StockMovementAvgAggregateOutputType | null
    _sum: StockMovementSumAggregateOutputType | null
    _min: StockMovementMinAggregateOutputType | null
    _max: StockMovementMaxAggregateOutputType | null
  }

  type GetStockMovementGroupByPayload<T extends StockMovementGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StockMovementGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StockMovementGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StockMovementGroupByOutputType[P]>
            : GetScalarType<T[P], StockMovementGroupByOutputType[P]>
        }
      >
    >


  export type StockMovementSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    itemId?: boolean
    outletId?: boolean
    previousAvailableQuantity?: boolean
    previousOnHandQuantity?: boolean
    availableQuantityDelta?: boolean
    onHandQuantityDelta?: boolean
    movementType?: boolean
    documentId?: boolean
    reason?: boolean
    remark?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    performedBy?: boolean
    item?: boolean | ItemDefaultArgs<ExtArgs>
    outlet?: boolean | OutletDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stockMovement"]>



  export type StockMovementSelectScalar = {
    id?: boolean
    itemId?: boolean
    outletId?: boolean
    previousAvailableQuantity?: boolean
    previousOnHandQuantity?: boolean
    availableQuantityDelta?: boolean
    onHandQuantityDelta?: boolean
    movementType?: boolean
    documentId?: boolean
    reason?: boolean
    remark?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    performedBy?: boolean
  }

  export type StockMovementOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "itemId" | "outletId" | "previousAvailableQuantity" | "previousOnHandQuantity" | "availableQuantityDelta" | "onHandQuantityDelta" | "movementType" | "documentId" | "reason" | "remark" | "deleted" | "createdAt" | "updatedAt" | "version" | "performedBy", ExtArgs["result"]["stockMovement"]>
  export type StockMovementInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    item?: boolean | ItemDefaultArgs<ExtArgs>
    outlet?: boolean | OutletDefaultArgs<ExtArgs>
  }

  export type $StockMovementPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StockMovement"
    objects: {
      item: Prisma.$ItemPayload<ExtArgs>
      outlet: Prisma.$OutletPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      itemId: number
      outletId: number
      previousAvailableQuantity: Prisma.Decimal
      previousOnHandQuantity: Prisma.Decimal
      availableQuantityDelta: Prisma.Decimal
      onHandQuantityDelta: Prisma.Decimal
      movementType: string
      documentId: number
      reason: string
      remark: string
      deleted: boolean
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
      performedBy: string | null
    }, ExtArgs["result"]["stockMovement"]>
    composites: {}
  }

  type StockMovementGetPayload<S extends boolean | null | undefined | StockMovementDefaultArgs> = $Result.GetResult<Prisma.$StockMovementPayload, S>

  type StockMovementCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StockMovementFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StockMovementCountAggregateInputType | true
    }

  export interface StockMovementDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StockMovement'], meta: { name: 'StockMovement' } }
    /**
     * Find zero or one StockMovement that matches the filter.
     * @param {StockMovementFindUniqueArgs} args - Arguments to find a StockMovement
     * @example
     * // Get one StockMovement
     * const stockMovement = await prisma.stockMovement.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StockMovementFindUniqueArgs>(args: SelectSubset<T, StockMovementFindUniqueArgs<ExtArgs>>): Prisma__StockMovementClient<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StockMovement that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StockMovementFindUniqueOrThrowArgs} args - Arguments to find a StockMovement
     * @example
     * // Get one StockMovement
     * const stockMovement = await prisma.stockMovement.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StockMovementFindUniqueOrThrowArgs>(args: SelectSubset<T, StockMovementFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StockMovementClient<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockMovement that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementFindFirstArgs} args - Arguments to find a StockMovement
     * @example
     * // Get one StockMovement
     * const stockMovement = await prisma.stockMovement.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StockMovementFindFirstArgs>(args?: SelectSubset<T, StockMovementFindFirstArgs<ExtArgs>>): Prisma__StockMovementClient<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockMovement that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementFindFirstOrThrowArgs} args - Arguments to find a StockMovement
     * @example
     * // Get one StockMovement
     * const stockMovement = await prisma.stockMovement.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StockMovementFindFirstOrThrowArgs>(args?: SelectSubset<T, StockMovementFindFirstOrThrowArgs<ExtArgs>>): Prisma__StockMovementClient<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StockMovements that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StockMovements
     * const stockMovements = await prisma.stockMovement.findMany()
     * 
     * // Get first 10 StockMovements
     * const stockMovements = await prisma.stockMovement.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stockMovementWithIdOnly = await prisma.stockMovement.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StockMovementFindManyArgs>(args?: SelectSubset<T, StockMovementFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StockMovement.
     * @param {StockMovementCreateArgs} args - Arguments to create a StockMovement.
     * @example
     * // Create one StockMovement
     * const StockMovement = await prisma.stockMovement.create({
     *   data: {
     *     // ... data to create a StockMovement
     *   }
     * })
     * 
     */
    create<T extends StockMovementCreateArgs>(args: SelectSubset<T, StockMovementCreateArgs<ExtArgs>>): Prisma__StockMovementClient<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StockMovements.
     * @param {StockMovementCreateManyArgs} args - Arguments to create many StockMovements.
     * @example
     * // Create many StockMovements
     * const stockMovement = await prisma.stockMovement.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StockMovementCreateManyArgs>(args?: SelectSubset<T, StockMovementCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a StockMovement.
     * @param {StockMovementDeleteArgs} args - Arguments to delete one StockMovement.
     * @example
     * // Delete one StockMovement
     * const StockMovement = await prisma.stockMovement.delete({
     *   where: {
     *     // ... filter to delete one StockMovement
     *   }
     * })
     * 
     */
    delete<T extends StockMovementDeleteArgs>(args: SelectSubset<T, StockMovementDeleteArgs<ExtArgs>>): Prisma__StockMovementClient<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StockMovement.
     * @param {StockMovementUpdateArgs} args - Arguments to update one StockMovement.
     * @example
     * // Update one StockMovement
     * const stockMovement = await prisma.stockMovement.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StockMovementUpdateArgs>(args: SelectSubset<T, StockMovementUpdateArgs<ExtArgs>>): Prisma__StockMovementClient<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StockMovements.
     * @param {StockMovementDeleteManyArgs} args - Arguments to filter StockMovements to delete.
     * @example
     * // Delete a few StockMovements
     * const { count } = await prisma.stockMovement.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StockMovementDeleteManyArgs>(args?: SelectSubset<T, StockMovementDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StockMovements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StockMovements
     * const stockMovement = await prisma.stockMovement.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StockMovementUpdateManyArgs>(args: SelectSubset<T, StockMovementUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one StockMovement.
     * @param {StockMovementUpsertArgs} args - Arguments to update or create a StockMovement.
     * @example
     * // Update or create a StockMovement
     * const stockMovement = await prisma.stockMovement.upsert({
     *   create: {
     *     // ... data to create a StockMovement
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StockMovement we want to update
     *   }
     * })
     */
    upsert<T extends StockMovementUpsertArgs>(args: SelectSubset<T, StockMovementUpsertArgs<ExtArgs>>): Prisma__StockMovementClient<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StockMovements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementCountArgs} args - Arguments to filter StockMovements to count.
     * @example
     * // Count the number of StockMovements
     * const count = await prisma.stockMovement.count({
     *   where: {
     *     // ... the filter for the StockMovements we want to count
     *   }
     * })
    **/
    count<T extends StockMovementCountArgs>(
      args?: Subset<T, StockMovementCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StockMovementCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StockMovement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StockMovementAggregateArgs>(args: Subset<T, StockMovementAggregateArgs>): Prisma.PrismaPromise<GetStockMovementAggregateType<T>>

    /**
     * Group by StockMovement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StockMovementGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StockMovementGroupByArgs['orderBy'] }
        : { orderBy?: StockMovementGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StockMovementGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStockMovementGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StockMovement model
   */
  readonly fields: StockMovementFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StockMovement.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StockMovementClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    item<T extends ItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ItemDefaultArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    outlet<T extends OutletDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OutletDefaultArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StockMovement model
   */
  interface StockMovementFieldRefs {
    readonly id: FieldRef<"StockMovement", 'Int'>
    readonly itemId: FieldRef<"StockMovement", 'Int'>
    readonly outletId: FieldRef<"StockMovement", 'Int'>
    readonly previousAvailableQuantity: FieldRef<"StockMovement", 'Decimal'>
    readonly previousOnHandQuantity: FieldRef<"StockMovement", 'Decimal'>
    readonly availableQuantityDelta: FieldRef<"StockMovement", 'Decimal'>
    readonly onHandQuantityDelta: FieldRef<"StockMovement", 'Decimal'>
    readonly movementType: FieldRef<"StockMovement", 'String'>
    readonly documentId: FieldRef<"StockMovement", 'Int'>
    readonly reason: FieldRef<"StockMovement", 'String'>
    readonly remark: FieldRef<"StockMovement", 'String'>
    readonly deleted: FieldRef<"StockMovement", 'Boolean'>
    readonly createdAt: FieldRef<"StockMovement", 'DateTime'>
    readonly updatedAt: FieldRef<"StockMovement", 'DateTime'>
    readonly version: FieldRef<"StockMovement", 'Int'>
    readonly performedBy: FieldRef<"StockMovement", 'String'>
  }
    

  // Custom InputTypes
  /**
   * StockMovement findUnique
   */
  export type StockMovementFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovement
     */
    omit?: StockMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockMovementInclude<ExtArgs> | null
    /**
     * Filter, which StockMovement to fetch.
     */
    where: StockMovementWhereUniqueInput
  }

  /**
   * StockMovement findUniqueOrThrow
   */
  export type StockMovementFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovement
     */
    omit?: StockMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockMovementInclude<ExtArgs> | null
    /**
     * Filter, which StockMovement to fetch.
     */
    where: StockMovementWhereUniqueInput
  }

  /**
   * StockMovement findFirst
   */
  export type StockMovementFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovement
     */
    omit?: StockMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockMovementInclude<ExtArgs> | null
    /**
     * Filter, which StockMovement to fetch.
     */
    where?: StockMovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockMovements to fetch.
     */
    orderBy?: StockMovementOrderByWithRelationInput | StockMovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockMovements.
     */
    cursor?: StockMovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockMovements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockMovements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockMovements.
     */
    distinct?: StockMovementScalarFieldEnum | StockMovementScalarFieldEnum[]
  }

  /**
   * StockMovement findFirstOrThrow
   */
  export type StockMovementFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovement
     */
    omit?: StockMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockMovementInclude<ExtArgs> | null
    /**
     * Filter, which StockMovement to fetch.
     */
    where?: StockMovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockMovements to fetch.
     */
    orderBy?: StockMovementOrderByWithRelationInput | StockMovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockMovements.
     */
    cursor?: StockMovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockMovements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockMovements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockMovements.
     */
    distinct?: StockMovementScalarFieldEnum | StockMovementScalarFieldEnum[]
  }

  /**
   * StockMovement findMany
   */
  export type StockMovementFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovement
     */
    omit?: StockMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockMovementInclude<ExtArgs> | null
    /**
     * Filter, which StockMovements to fetch.
     */
    where?: StockMovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockMovements to fetch.
     */
    orderBy?: StockMovementOrderByWithRelationInput | StockMovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StockMovements.
     */
    cursor?: StockMovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockMovements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockMovements.
     */
    skip?: number
    distinct?: StockMovementScalarFieldEnum | StockMovementScalarFieldEnum[]
  }

  /**
   * StockMovement create
   */
  export type StockMovementCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovement
     */
    omit?: StockMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockMovementInclude<ExtArgs> | null
    /**
     * The data needed to create a StockMovement.
     */
    data: XOR<StockMovementCreateInput, StockMovementUncheckedCreateInput>
  }

  /**
   * StockMovement createMany
   */
  export type StockMovementCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StockMovements.
     */
    data: StockMovementCreateManyInput | StockMovementCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StockMovement update
   */
  export type StockMovementUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovement
     */
    omit?: StockMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockMovementInclude<ExtArgs> | null
    /**
     * The data needed to update a StockMovement.
     */
    data: XOR<StockMovementUpdateInput, StockMovementUncheckedUpdateInput>
    /**
     * Choose, which StockMovement to update.
     */
    where: StockMovementWhereUniqueInput
  }

  /**
   * StockMovement updateMany
   */
  export type StockMovementUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StockMovements.
     */
    data: XOR<StockMovementUpdateManyMutationInput, StockMovementUncheckedUpdateManyInput>
    /**
     * Filter which StockMovements to update
     */
    where?: StockMovementWhereInput
    /**
     * Limit how many StockMovements to update.
     */
    limit?: number
  }

  /**
   * StockMovement upsert
   */
  export type StockMovementUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovement
     */
    omit?: StockMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockMovementInclude<ExtArgs> | null
    /**
     * The filter to search for the StockMovement to update in case it exists.
     */
    where: StockMovementWhereUniqueInput
    /**
     * In case the StockMovement found by the `where` argument doesn't exist, create a new StockMovement with this data.
     */
    create: XOR<StockMovementCreateInput, StockMovementUncheckedCreateInput>
    /**
     * In case the StockMovement was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StockMovementUpdateInput, StockMovementUncheckedUpdateInput>
  }

  /**
   * StockMovement delete
   */
  export type StockMovementDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovement
     */
    omit?: StockMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockMovementInclude<ExtArgs> | null
    /**
     * Filter which StockMovement to delete.
     */
    where: StockMovementWhereUniqueInput
  }

  /**
   * StockMovement deleteMany
   */
  export type StockMovementDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockMovements to delete
     */
    where?: StockMovementWhereInput
    /**
     * Limit how many StockMovements to delete.
     */
    limit?: number
  }

  /**
   * StockMovement without action
   */
  export type StockMovementDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovement
     */
    omit?: StockMovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockMovementInclude<ExtArgs> | null
  }


  /**
   * Model StockMovementArchive
   */

  export type AggregateStockMovementArchive = {
    _count: StockMovementArchiveCountAggregateOutputType | null
    _avg: StockMovementArchiveAvgAggregateOutputType | null
    _sum: StockMovementArchiveSumAggregateOutputType | null
    _min: StockMovementArchiveMinAggregateOutputType | null
    _max: StockMovementArchiveMaxAggregateOutputType | null
  }

  export type StockMovementArchiveAvgAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    previousAvailableQuantity: Decimal | null
    previousOnHandQuantity: Decimal | null
    availableQuantityDelta: Decimal | null
    onHandQuantityDelta: Decimal | null
    documentId: number | null
    version: number | null
  }

  export type StockMovementArchiveSumAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    previousAvailableQuantity: Decimal | null
    previousOnHandQuantity: Decimal | null
    availableQuantityDelta: Decimal | null
    onHandQuantityDelta: Decimal | null
    documentId: number | null
    version: number | null
  }

  export type StockMovementArchiveMinAggregateOutputType = {
    id: number | null
    itemId: number | null
    itemCode: string | null
    itemName: string | null
    outletId: number | null
    outletName: string | null
    previousAvailableQuantity: Decimal | null
    previousOnHandQuantity: Decimal | null
    availableQuantityDelta: Decimal | null
    onHandQuantityDelta: Decimal | null
    movementType: string | null
    documentId: number | null
    documentType: string | null
    reason: string | null
    remark: string | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type StockMovementArchiveMaxAggregateOutputType = {
    id: number | null
    itemId: number | null
    itemCode: string | null
    itemName: string | null
    outletId: number | null
    outletName: string | null
    previousAvailableQuantity: Decimal | null
    previousOnHandQuantity: Decimal | null
    availableQuantityDelta: Decimal | null
    onHandQuantityDelta: Decimal | null
    movementType: string | null
    documentId: number | null
    documentType: string | null
    reason: string | null
    remark: string | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type StockMovementArchiveCountAggregateOutputType = {
    id: number
    itemId: number
    itemCode: number
    itemName: number
    outletId: number
    outletName: number
    previousAvailableQuantity: number
    previousOnHandQuantity: number
    availableQuantityDelta: number
    onHandQuantityDelta: number
    movementType: number
    documentId: number
    documentType: number
    reason: number
    remark: number
    deleted: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type StockMovementArchiveAvgAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    previousAvailableQuantity?: true
    previousOnHandQuantity?: true
    availableQuantityDelta?: true
    onHandQuantityDelta?: true
    documentId?: true
    version?: true
  }

  export type StockMovementArchiveSumAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    previousAvailableQuantity?: true
    previousOnHandQuantity?: true
    availableQuantityDelta?: true
    onHandQuantityDelta?: true
    documentId?: true
    version?: true
  }

  export type StockMovementArchiveMinAggregateInputType = {
    id?: true
    itemId?: true
    itemCode?: true
    itemName?: true
    outletId?: true
    outletName?: true
    previousAvailableQuantity?: true
    previousOnHandQuantity?: true
    availableQuantityDelta?: true
    onHandQuantityDelta?: true
    movementType?: true
    documentId?: true
    documentType?: true
    reason?: true
    remark?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type StockMovementArchiveMaxAggregateInputType = {
    id?: true
    itemId?: true
    itemCode?: true
    itemName?: true
    outletId?: true
    outletName?: true
    previousAvailableQuantity?: true
    previousOnHandQuantity?: true
    availableQuantityDelta?: true
    onHandQuantityDelta?: true
    movementType?: true
    documentId?: true
    documentType?: true
    reason?: true
    remark?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type StockMovementArchiveCountAggregateInputType = {
    id?: true
    itemId?: true
    itemCode?: true
    itemName?: true
    outletId?: true
    outletName?: true
    previousAvailableQuantity?: true
    previousOnHandQuantity?: true
    availableQuantityDelta?: true
    onHandQuantityDelta?: true
    movementType?: true
    documentId?: true
    documentType?: true
    reason?: true
    remark?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type StockMovementArchiveAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockMovementArchive to aggregate.
     */
    where?: StockMovementArchiveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockMovementArchives to fetch.
     */
    orderBy?: StockMovementArchiveOrderByWithRelationInput | StockMovementArchiveOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StockMovementArchiveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockMovementArchives from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockMovementArchives.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StockMovementArchives
    **/
    _count?: true | StockMovementArchiveCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StockMovementArchiveAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StockMovementArchiveSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StockMovementArchiveMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StockMovementArchiveMaxAggregateInputType
  }

  export type GetStockMovementArchiveAggregateType<T extends StockMovementArchiveAggregateArgs> = {
        [P in keyof T & keyof AggregateStockMovementArchive]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStockMovementArchive[P]>
      : GetScalarType<T[P], AggregateStockMovementArchive[P]>
  }




  export type StockMovementArchiveGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockMovementArchiveWhereInput
    orderBy?: StockMovementArchiveOrderByWithAggregationInput | StockMovementArchiveOrderByWithAggregationInput[]
    by: StockMovementArchiveScalarFieldEnum[] | StockMovementArchiveScalarFieldEnum
    having?: StockMovementArchiveScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StockMovementArchiveCountAggregateInputType | true
    _avg?: StockMovementArchiveAvgAggregateInputType
    _sum?: StockMovementArchiveSumAggregateInputType
    _min?: StockMovementArchiveMinAggregateInputType
    _max?: StockMovementArchiveMaxAggregateInputType
  }

  export type StockMovementArchiveGroupByOutputType = {
    id: number
    itemId: number
    itemCode: string
    itemName: string
    outletId: number
    outletName: string
    previousAvailableQuantity: Decimal
    previousOnHandQuantity: Decimal
    availableQuantityDelta: Decimal
    onHandQuantityDelta: Decimal
    movementType: string
    documentId: number
    documentType: string
    reason: string
    remark: string
    deleted: boolean
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: StockMovementArchiveCountAggregateOutputType | null
    _avg: StockMovementArchiveAvgAggregateOutputType | null
    _sum: StockMovementArchiveSumAggregateOutputType | null
    _min: StockMovementArchiveMinAggregateOutputType | null
    _max: StockMovementArchiveMaxAggregateOutputType | null
  }

  type GetStockMovementArchiveGroupByPayload<T extends StockMovementArchiveGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StockMovementArchiveGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StockMovementArchiveGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StockMovementArchiveGroupByOutputType[P]>
            : GetScalarType<T[P], StockMovementArchiveGroupByOutputType[P]>
        }
      >
    >


  export type StockMovementArchiveSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    itemId?: boolean
    itemCode?: boolean
    itemName?: boolean
    outletId?: boolean
    outletName?: boolean
    previousAvailableQuantity?: boolean
    previousOnHandQuantity?: boolean
    availableQuantityDelta?: boolean
    onHandQuantityDelta?: boolean
    movementType?: boolean
    documentId?: boolean
    documentType?: boolean
    reason?: boolean
    remark?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }, ExtArgs["result"]["stockMovementArchive"]>



  export type StockMovementArchiveSelectScalar = {
    id?: boolean
    itemId?: boolean
    itemCode?: boolean
    itemName?: boolean
    outletId?: boolean
    outletName?: boolean
    previousAvailableQuantity?: boolean
    previousOnHandQuantity?: boolean
    availableQuantityDelta?: boolean
    onHandQuantityDelta?: boolean
    movementType?: boolean
    documentId?: boolean
    documentType?: boolean
    reason?: boolean
    remark?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type StockMovementArchiveOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "itemId" | "itemCode" | "itemName" | "outletId" | "outletName" | "previousAvailableQuantity" | "previousOnHandQuantity" | "availableQuantityDelta" | "onHandQuantityDelta" | "movementType" | "documentId" | "documentType" | "reason" | "remark" | "deleted" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["stockMovementArchive"]>

  export type $StockMovementArchivePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StockMovementArchive"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      itemId: number
      itemCode: string
      itemName: string
      outletId: number
      outletName: string
      previousAvailableQuantity: Prisma.Decimal
      previousOnHandQuantity: Prisma.Decimal
      availableQuantityDelta: Prisma.Decimal
      onHandQuantityDelta: Prisma.Decimal
      movementType: string
      documentId: number
      documentType: string
      reason: string
      remark: string
      deleted: boolean
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["stockMovementArchive"]>
    composites: {}
  }

  type StockMovementArchiveGetPayload<S extends boolean | null | undefined | StockMovementArchiveDefaultArgs> = $Result.GetResult<Prisma.$StockMovementArchivePayload, S>

  type StockMovementArchiveCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StockMovementArchiveFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StockMovementArchiveCountAggregateInputType | true
    }

  export interface StockMovementArchiveDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StockMovementArchive'], meta: { name: 'StockMovementArchive' } }
    /**
     * Find zero or one StockMovementArchive that matches the filter.
     * @param {StockMovementArchiveFindUniqueArgs} args - Arguments to find a StockMovementArchive
     * @example
     * // Get one StockMovementArchive
     * const stockMovementArchive = await prisma.stockMovementArchive.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StockMovementArchiveFindUniqueArgs>(args: SelectSubset<T, StockMovementArchiveFindUniqueArgs<ExtArgs>>): Prisma__StockMovementArchiveClient<$Result.GetResult<Prisma.$StockMovementArchivePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StockMovementArchive that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StockMovementArchiveFindUniqueOrThrowArgs} args - Arguments to find a StockMovementArchive
     * @example
     * // Get one StockMovementArchive
     * const stockMovementArchive = await prisma.stockMovementArchive.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StockMovementArchiveFindUniqueOrThrowArgs>(args: SelectSubset<T, StockMovementArchiveFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StockMovementArchiveClient<$Result.GetResult<Prisma.$StockMovementArchivePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockMovementArchive that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementArchiveFindFirstArgs} args - Arguments to find a StockMovementArchive
     * @example
     * // Get one StockMovementArchive
     * const stockMovementArchive = await prisma.stockMovementArchive.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StockMovementArchiveFindFirstArgs>(args?: SelectSubset<T, StockMovementArchiveFindFirstArgs<ExtArgs>>): Prisma__StockMovementArchiveClient<$Result.GetResult<Prisma.$StockMovementArchivePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockMovementArchive that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementArchiveFindFirstOrThrowArgs} args - Arguments to find a StockMovementArchive
     * @example
     * // Get one StockMovementArchive
     * const stockMovementArchive = await prisma.stockMovementArchive.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StockMovementArchiveFindFirstOrThrowArgs>(args?: SelectSubset<T, StockMovementArchiveFindFirstOrThrowArgs<ExtArgs>>): Prisma__StockMovementArchiveClient<$Result.GetResult<Prisma.$StockMovementArchivePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StockMovementArchives that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementArchiveFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StockMovementArchives
     * const stockMovementArchives = await prisma.stockMovementArchive.findMany()
     * 
     * // Get first 10 StockMovementArchives
     * const stockMovementArchives = await prisma.stockMovementArchive.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stockMovementArchiveWithIdOnly = await prisma.stockMovementArchive.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StockMovementArchiveFindManyArgs>(args?: SelectSubset<T, StockMovementArchiveFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockMovementArchivePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StockMovementArchive.
     * @param {StockMovementArchiveCreateArgs} args - Arguments to create a StockMovementArchive.
     * @example
     * // Create one StockMovementArchive
     * const StockMovementArchive = await prisma.stockMovementArchive.create({
     *   data: {
     *     // ... data to create a StockMovementArchive
     *   }
     * })
     * 
     */
    create<T extends StockMovementArchiveCreateArgs>(args: SelectSubset<T, StockMovementArchiveCreateArgs<ExtArgs>>): Prisma__StockMovementArchiveClient<$Result.GetResult<Prisma.$StockMovementArchivePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StockMovementArchives.
     * @param {StockMovementArchiveCreateManyArgs} args - Arguments to create many StockMovementArchives.
     * @example
     * // Create many StockMovementArchives
     * const stockMovementArchive = await prisma.stockMovementArchive.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StockMovementArchiveCreateManyArgs>(args?: SelectSubset<T, StockMovementArchiveCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a StockMovementArchive.
     * @param {StockMovementArchiveDeleteArgs} args - Arguments to delete one StockMovementArchive.
     * @example
     * // Delete one StockMovementArchive
     * const StockMovementArchive = await prisma.stockMovementArchive.delete({
     *   where: {
     *     // ... filter to delete one StockMovementArchive
     *   }
     * })
     * 
     */
    delete<T extends StockMovementArchiveDeleteArgs>(args: SelectSubset<T, StockMovementArchiveDeleteArgs<ExtArgs>>): Prisma__StockMovementArchiveClient<$Result.GetResult<Prisma.$StockMovementArchivePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StockMovementArchive.
     * @param {StockMovementArchiveUpdateArgs} args - Arguments to update one StockMovementArchive.
     * @example
     * // Update one StockMovementArchive
     * const stockMovementArchive = await prisma.stockMovementArchive.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StockMovementArchiveUpdateArgs>(args: SelectSubset<T, StockMovementArchiveUpdateArgs<ExtArgs>>): Prisma__StockMovementArchiveClient<$Result.GetResult<Prisma.$StockMovementArchivePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StockMovementArchives.
     * @param {StockMovementArchiveDeleteManyArgs} args - Arguments to filter StockMovementArchives to delete.
     * @example
     * // Delete a few StockMovementArchives
     * const { count } = await prisma.stockMovementArchive.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StockMovementArchiveDeleteManyArgs>(args?: SelectSubset<T, StockMovementArchiveDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StockMovementArchives.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementArchiveUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StockMovementArchives
     * const stockMovementArchive = await prisma.stockMovementArchive.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StockMovementArchiveUpdateManyArgs>(args: SelectSubset<T, StockMovementArchiveUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one StockMovementArchive.
     * @param {StockMovementArchiveUpsertArgs} args - Arguments to update or create a StockMovementArchive.
     * @example
     * // Update or create a StockMovementArchive
     * const stockMovementArchive = await prisma.stockMovementArchive.upsert({
     *   create: {
     *     // ... data to create a StockMovementArchive
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StockMovementArchive we want to update
     *   }
     * })
     */
    upsert<T extends StockMovementArchiveUpsertArgs>(args: SelectSubset<T, StockMovementArchiveUpsertArgs<ExtArgs>>): Prisma__StockMovementArchiveClient<$Result.GetResult<Prisma.$StockMovementArchivePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StockMovementArchives.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementArchiveCountArgs} args - Arguments to filter StockMovementArchives to count.
     * @example
     * // Count the number of StockMovementArchives
     * const count = await prisma.stockMovementArchive.count({
     *   where: {
     *     // ... the filter for the StockMovementArchives we want to count
     *   }
     * })
    **/
    count<T extends StockMovementArchiveCountArgs>(
      args?: Subset<T, StockMovementArchiveCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StockMovementArchiveCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StockMovementArchive.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementArchiveAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StockMovementArchiveAggregateArgs>(args: Subset<T, StockMovementArchiveAggregateArgs>): Prisma.PrismaPromise<GetStockMovementArchiveAggregateType<T>>

    /**
     * Group by StockMovementArchive.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementArchiveGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StockMovementArchiveGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StockMovementArchiveGroupByArgs['orderBy'] }
        : { orderBy?: StockMovementArchiveGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StockMovementArchiveGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStockMovementArchiveGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StockMovementArchive model
   */
  readonly fields: StockMovementArchiveFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StockMovementArchive.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StockMovementArchiveClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StockMovementArchive model
   */
  interface StockMovementArchiveFieldRefs {
    readonly id: FieldRef<"StockMovementArchive", 'Int'>
    readonly itemId: FieldRef<"StockMovementArchive", 'Int'>
    readonly itemCode: FieldRef<"StockMovementArchive", 'String'>
    readonly itemName: FieldRef<"StockMovementArchive", 'String'>
    readonly outletId: FieldRef<"StockMovementArchive", 'Int'>
    readonly outletName: FieldRef<"StockMovementArchive", 'String'>
    readonly previousAvailableQuantity: FieldRef<"StockMovementArchive", 'Decimal'>
    readonly previousOnHandQuantity: FieldRef<"StockMovementArchive", 'Decimal'>
    readonly availableQuantityDelta: FieldRef<"StockMovementArchive", 'Decimal'>
    readonly onHandQuantityDelta: FieldRef<"StockMovementArchive", 'Decimal'>
    readonly movementType: FieldRef<"StockMovementArchive", 'String'>
    readonly documentId: FieldRef<"StockMovementArchive", 'Int'>
    readonly documentType: FieldRef<"StockMovementArchive", 'String'>
    readonly reason: FieldRef<"StockMovementArchive", 'String'>
    readonly remark: FieldRef<"StockMovementArchive", 'String'>
    readonly deleted: FieldRef<"StockMovementArchive", 'Boolean'>
    readonly createdAt: FieldRef<"StockMovementArchive", 'DateTime'>
    readonly updatedAt: FieldRef<"StockMovementArchive", 'DateTime'>
    readonly version: FieldRef<"StockMovementArchive", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * StockMovementArchive findUnique
   */
  export type StockMovementArchiveFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovementArchive
     */
    select?: StockMovementArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovementArchive
     */
    omit?: StockMovementArchiveOmit<ExtArgs> | null
    /**
     * Filter, which StockMovementArchive to fetch.
     */
    where: StockMovementArchiveWhereUniqueInput
  }

  /**
   * StockMovementArchive findUniqueOrThrow
   */
  export type StockMovementArchiveFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovementArchive
     */
    select?: StockMovementArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovementArchive
     */
    omit?: StockMovementArchiveOmit<ExtArgs> | null
    /**
     * Filter, which StockMovementArchive to fetch.
     */
    where: StockMovementArchiveWhereUniqueInput
  }

  /**
   * StockMovementArchive findFirst
   */
  export type StockMovementArchiveFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovementArchive
     */
    select?: StockMovementArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovementArchive
     */
    omit?: StockMovementArchiveOmit<ExtArgs> | null
    /**
     * Filter, which StockMovementArchive to fetch.
     */
    where?: StockMovementArchiveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockMovementArchives to fetch.
     */
    orderBy?: StockMovementArchiveOrderByWithRelationInput | StockMovementArchiveOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockMovementArchives.
     */
    cursor?: StockMovementArchiveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockMovementArchives from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockMovementArchives.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockMovementArchives.
     */
    distinct?: StockMovementArchiveScalarFieldEnum | StockMovementArchiveScalarFieldEnum[]
  }

  /**
   * StockMovementArchive findFirstOrThrow
   */
  export type StockMovementArchiveFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovementArchive
     */
    select?: StockMovementArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovementArchive
     */
    omit?: StockMovementArchiveOmit<ExtArgs> | null
    /**
     * Filter, which StockMovementArchive to fetch.
     */
    where?: StockMovementArchiveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockMovementArchives to fetch.
     */
    orderBy?: StockMovementArchiveOrderByWithRelationInput | StockMovementArchiveOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockMovementArchives.
     */
    cursor?: StockMovementArchiveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockMovementArchives from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockMovementArchives.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockMovementArchives.
     */
    distinct?: StockMovementArchiveScalarFieldEnum | StockMovementArchiveScalarFieldEnum[]
  }

  /**
   * StockMovementArchive findMany
   */
  export type StockMovementArchiveFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovementArchive
     */
    select?: StockMovementArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovementArchive
     */
    omit?: StockMovementArchiveOmit<ExtArgs> | null
    /**
     * Filter, which StockMovementArchives to fetch.
     */
    where?: StockMovementArchiveWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockMovementArchives to fetch.
     */
    orderBy?: StockMovementArchiveOrderByWithRelationInput | StockMovementArchiveOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StockMovementArchives.
     */
    cursor?: StockMovementArchiveWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockMovementArchives from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockMovementArchives.
     */
    skip?: number
    distinct?: StockMovementArchiveScalarFieldEnum | StockMovementArchiveScalarFieldEnum[]
  }

  /**
   * StockMovementArchive create
   */
  export type StockMovementArchiveCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovementArchive
     */
    select?: StockMovementArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovementArchive
     */
    omit?: StockMovementArchiveOmit<ExtArgs> | null
    /**
     * The data needed to create a StockMovementArchive.
     */
    data: XOR<StockMovementArchiveCreateInput, StockMovementArchiveUncheckedCreateInput>
  }

  /**
   * StockMovementArchive createMany
   */
  export type StockMovementArchiveCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StockMovementArchives.
     */
    data: StockMovementArchiveCreateManyInput | StockMovementArchiveCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StockMovementArchive update
   */
  export type StockMovementArchiveUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovementArchive
     */
    select?: StockMovementArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovementArchive
     */
    omit?: StockMovementArchiveOmit<ExtArgs> | null
    /**
     * The data needed to update a StockMovementArchive.
     */
    data: XOR<StockMovementArchiveUpdateInput, StockMovementArchiveUncheckedUpdateInput>
    /**
     * Choose, which StockMovementArchive to update.
     */
    where: StockMovementArchiveWhereUniqueInput
  }

  /**
   * StockMovementArchive updateMany
   */
  export type StockMovementArchiveUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StockMovementArchives.
     */
    data: XOR<StockMovementArchiveUpdateManyMutationInput, StockMovementArchiveUncheckedUpdateManyInput>
    /**
     * Filter which StockMovementArchives to update
     */
    where?: StockMovementArchiveWhereInput
    /**
     * Limit how many StockMovementArchives to update.
     */
    limit?: number
  }

  /**
   * StockMovementArchive upsert
   */
  export type StockMovementArchiveUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovementArchive
     */
    select?: StockMovementArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovementArchive
     */
    omit?: StockMovementArchiveOmit<ExtArgs> | null
    /**
     * The filter to search for the StockMovementArchive to update in case it exists.
     */
    where: StockMovementArchiveWhereUniqueInput
    /**
     * In case the StockMovementArchive found by the `where` argument doesn't exist, create a new StockMovementArchive with this data.
     */
    create: XOR<StockMovementArchiveCreateInput, StockMovementArchiveUncheckedCreateInput>
    /**
     * In case the StockMovementArchive was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StockMovementArchiveUpdateInput, StockMovementArchiveUncheckedUpdateInput>
  }

  /**
   * StockMovementArchive delete
   */
  export type StockMovementArchiveDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovementArchive
     */
    select?: StockMovementArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovementArchive
     */
    omit?: StockMovementArchiveOmit<ExtArgs> | null
    /**
     * Filter which StockMovementArchive to delete.
     */
    where: StockMovementArchiveWhereUniqueInput
  }

  /**
   * StockMovementArchive deleteMany
   */
  export type StockMovementArchiveDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockMovementArchives to delete
     */
    where?: StockMovementArchiveWhereInput
    /**
     * Limit how many StockMovementArchives to delete.
     */
    limit?: number
  }

  /**
   * StockMovementArchive without action
   */
  export type StockMovementArchiveDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovementArchive
     */
    select?: StockMovementArchiveSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockMovementArchive
     */
    omit?: StockMovementArchiveOmit<ExtArgs> | null
  }


  /**
   * Model StockSnapshot
   */

  export type AggregateStockSnapshot = {
    _count: StockSnapshotCountAggregateOutputType | null
    _avg: StockSnapshotAvgAggregateOutputType | null
    _sum: StockSnapshotSumAggregateOutputType | null
    _min: StockSnapshotMinAggregateOutputType | null
    _max: StockSnapshotMaxAggregateOutputType | null
  }

  export type StockSnapshotAvgAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    availableQuantity: Decimal | null
    onHandQuantity: Decimal | null
    version: number | null
  }

  export type StockSnapshotSumAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    availableQuantity: Decimal | null
    onHandQuantity: Decimal | null
    version: number | null
  }

  export type StockSnapshotMinAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    availableQuantity: Decimal | null
    onHandQuantity: Decimal | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type StockSnapshotMaxAggregateOutputType = {
    id: number | null
    itemId: number | null
    outletId: number | null
    availableQuantity: Decimal | null
    onHandQuantity: Decimal | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type StockSnapshotCountAggregateOutputType = {
    id: number
    itemId: number
    outletId: number
    availableQuantity: number
    onHandQuantity: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type StockSnapshotAvgAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    availableQuantity?: true
    onHandQuantity?: true
    version?: true
  }

  export type StockSnapshotSumAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    availableQuantity?: true
    onHandQuantity?: true
    version?: true
  }

  export type StockSnapshotMinAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    availableQuantity?: true
    onHandQuantity?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type StockSnapshotMaxAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    availableQuantity?: true
    onHandQuantity?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type StockSnapshotCountAggregateInputType = {
    id?: true
    itemId?: true
    outletId?: true
    availableQuantity?: true
    onHandQuantity?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type StockSnapshotAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockSnapshot to aggregate.
     */
    where?: StockSnapshotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockSnapshots to fetch.
     */
    orderBy?: StockSnapshotOrderByWithRelationInput | StockSnapshotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StockSnapshotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockSnapshots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockSnapshots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StockSnapshots
    **/
    _count?: true | StockSnapshotCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StockSnapshotAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StockSnapshotSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StockSnapshotMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StockSnapshotMaxAggregateInputType
  }

  export type GetStockSnapshotAggregateType<T extends StockSnapshotAggregateArgs> = {
        [P in keyof T & keyof AggregateStockSnapshot]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStockSnapshot[P]>
      : GetScalarType<T[P], AggregateStockSnapshot[P]>
  }




  export type StockSnapshotGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockSnapshotWhereInput
    orderBy?: StockSnapshotOrderByWithAggregationInput | StockSnapshotOrderByWithAggregationInput[]
    by: StockSnapshotScalarFieldEnum[] | StockSnapshotScalarFieldEnum
    having?: StockSnapshotScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StockSnapshotCountAggregateInputType | true
    _avg?: StockSnapshotAvgAggregateInputType
    _sum?: StockSnapshotSumAggregateInputType
    _min?: StockSnapshotMinAggregateInputType
    _max?: StockSnapshotMaxAggregateInputType
  }

  export type StockSnapshotGroupByOutputType = {
    id: number
    itemId: number
    outletId: number
    availableQuantity: Decimal
    onHandQuantity: Decimal
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: StockSnapshotCountAggregateOutputType | null
    _avg: StockSnapshotAvgAggregateOutputType | null
    _sum: StockSnapshotSumAggregateOutputType | null
    _min: StockSnapshotMinAggregateOutputType | null
    _max: StockSnapshotMaxAggregateOutputType | null
  }

  type GetStockSnapshotGroupByPayload<T extends StockSnapshotGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StockSnapshotGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StockSnapshotGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StockSnapshotGroupByOutputType[P]>
            : GetScalarType<T[P], StockSnapshotGroupByOutputType[P]>
        }
      >
    >


  export type StockSnapshotSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    itemId?: boolean
    outletId?: boolean
    availableQuantity?: boolean
    onHandQuantity?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    item?: boolean | ItemDefaultArgs<ExtArgs>
    outlet?: boolean | OutletDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["stockSnapshot"]>



  export type StockSnapshotSelectScalar = {
    id?: boolean
    itemId?: boolean
    outletId?: boolean
    availableQuantity?: boolean
    onHandQuantity?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type StockSnapshotOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "itemId" | "outletId" | "availableQuantity" | "onHandQuantity" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["stockSnapshot"]>
  export type StockSnapshotInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    item?: boolean | ItemDefaultArgs<ExtArgs>
    outlet?: boolean | OutletDefaultArgs<ExtArgs>
  }

  export type $StockSnapshotPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StockSnapshot"
    objects: {
      item: Prisma.$ItemPayload<ExtArgs>
      outlet: Prisma.$OutletPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      itemId: number
      outletId: number
      availableQuantity: Prisma.Decimal
      onHandQuantity: Prisma.Decimal
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["stockSnapshot"]>
    composites: {}
  }

  type StockSnapshotGetPayload<S extends boolean | null | undefined | StockSnapshotDefaultArgs> = $Result.GetResult<Prisma.$StockSnapshotPayload, S>

  type StockSnapshotCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StockSnapshotFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StockSnapshotCountAggregateInputType | true
    }

  export interface StockSnapshotDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StockSnapshot'], meta: { name: 'StockSnapshot' } }
    /**
     * Find zero or one StockSnapshot that matches the filter.
     * @param {StockSnapshotFindUniqueArgs} args - Arguments to find a StockSnapshot
     * @example
     * // Get one StockSnapshot
     * const stockSnapshot = await prisma.stockSnapshot.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StockSnapshotFindUniqueArgs>(args: SelectSubset<T, StockSnapshotFindUniqueArgs<ExtArgs>>): Prisma__StockSnapshotClient<$Result.GetResult<Prisma.$StockSnapshotPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StockSnapshot that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StockSnapshotFindUniqueOrThrowArgs} args - Arguments to find a StockSnapshot
     * @example
     * // Get one StockSnapshot
     * const stockSnapshot = await prisma.stockSnapshot.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StockSnapshotFindUniqueOrThrowArgs>(args: SelectSubset<T, StockSnapshotFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StockSnapshotClient<$Result.GetResult<Prisma.$StockSnapshotPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockSnapshot that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockSnapshotFindFirstArgs} args - Arguments to find a StockSnapshot
     * @example
     * // Get one StockSnapshot
     * const stockSnapshot = await prisma.stockSnapshot.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StockSnapshotFindFirstArgs>(args?: SelectSubset<T, StockSnapshotFindFirstArgs<ExtArgs>>): Prisma__StockSnapshotClient<$Result.GetResult<Prisma.$StockSnapshotPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StockSnapshot that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockSnapshotFindFirstOrThrowArgs} args - Arguments to find a StockSnapshot
     * @example
     * // Get one StockSnapshot
     * const stockSnapshot = await prisma.stockSnapshot.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StockSnapshotFindFirstOrThrowArgs>(args?: SelectSubset<T, StockSnapshotFindFirstOrThrowArgs<ExtArgs>>): Prisma__StockSnapshotClient<$Result.GetResult<Prisma.$StockSnapshotPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StockSnapshots that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockSnapshotFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StockSnapshots
     * const stockSnapshots = await prisma.stockSnapshot.findMany()
     * 
     * // Get first 10 StockSnapshots
     * const stockSnapshots = await prisma.stockSnapshot.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stockSnapshotWithIdOnly = await prisma.stockSnapshot.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StockSnapshotFindManyArgs>(args?: SelectSubset<T, StockSnapshotFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockSnapshotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StockSnapshot.
     * @param {StockSnapshotCreateArgs} args - Arguments to create a StockSnapshot.
     * @example
     * // Create one StockSnapshot
     * const StockSnapshot = await prisma.stockSnapshot.create({
     *   data: {
     *     // ... data to create a StockSnapshot
     *   }
     * })
     * 
     */
    create<T extends StockSnapshotCreateArgs>(args: SelectSubset<T, StockSnapshotCreateArgs<ExtArgs>>): Prisma__StockSnapshotClient<$Result.GetResult<Prisma.$StockSnapshotPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StockSnapshots.
     * @param {StockSnapshotCreateManyArgs} args - Arguments to create many StockSnapshots.
     * @example
     * // Create many StockSnapshots
     * const stockSnapshot = await prisma.stockSnapshot.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StockSnapshotCreateManyArgs>(args?: SelectSubset<T, StockSnapshotCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a StockSnapshot.
     * @param {StockSnapshotDeleteArgs} args - Arguments to delete one StockSnapshot.
     * @example
     * // Delete one StockSnapshot
     * const StockSnapshot = await prisma.stockSnapshot.delete({
     *   where: {
     *     // ... filter to delete one StockSnapshot
     *   }
     * })
     * 
     */
    delete<T extends StockSnapshotDeleteArgs>(args: SelectSubset<T, StockSnapshotDeleteArgs<ExtArgs>>): Prisma__StockSnapshotClient<$Result.GetResult<Prisma.$StockSnapshotPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StockSnapshot.
     * @param {StockSnapshotUpdateArgs} args - Arguments to update one StockSnapshot.
     * @example
     * // Update one StockSnapshot
     * const stockSnapshot = await prisma.stockSnapshot.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StockSnapshotUpdateArgs>(args: SelectSubset<T, StockSnapshotUpdateArgs<ExtArgs>>): Prisma__StockSnapshotClient<$Result.GetResult<Prisma.$StockSnapshotPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StockSnapshots.
     * @param {StockSnapshotDeleteManyArgs} args - Arguments to filter StockSnapshots to delete.
     * @example
     * // Delete a few StockSnapshots
     * const { count } = await prisma.stockSnapshot.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StockSnapshotDeleteManyArgs>(args?: SelectSubset<T, StockSnapshotDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StockSnapshots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockSnapshotUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StockSnapshots
     * const stockSnapshot = await prisma.stockSnapshot.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StockSnapshotUpdateManyArgs>(args: SelectSubset<T, StockSnapshotUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one StockSnapshot.
     * @param {StockSnapshotUpsertArgs} args - Arguments to update or create a StockSnapshot.
     * @example
     * // Update or create a StockSnapshot
     * const stockSnapshot = await prisma.stockSnapshot.upsert({
     *   create: {
     *     // ... data to create a StockSnapshot
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StockSnapshot we want to update
     *   }
     * })
     */
    upsert<T extends StockSnapshotUpsertArgs>(args: SelectSubset<T, StockSnapshotUpsertArgs<ExtArgs>>): Prisma__StockSnapshotClient<$Result.GetResult<Prisma.$StockSnapshotPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StockSnapshots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockSnapshotCountArgs} args - Arguments to filter StockSnapshots to count.
     * @example
     * // Count the number of StockSnapshots
     * const count = await prisma.stockSnapshot.count({
     *   where: {
     *     // ... the filter for the StockSnapshots we want to count
     *   }
     * })
    **/
    count<T extends StockSnapshotCountArgs>(
      args?: Subset<T, StockSnapshotCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StockSnapshotCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StockSnapshot.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockSnapshotAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StockSnapshotAggregateArgs>(args: Subset<T, StockSnapshotAggregateArgs>): Prisma.PrismaPromise<GetStockSnapshotAggregateType<T>>

    /**
     * Group by StockSnapshot.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockSnapshotGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StockSnapshotGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StockSnapshotGroupByArgs['orderBy'] }
        : { orderBy?: StockSnapshotGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StockSnapshotGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStockSnapshotGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StockSnapshot model
   */
  readonly fields: StockSnapshotFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StockSnapshot.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StockSnapshotClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    item<T extends ItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ItemDefaultArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    outlet<T extends OutletDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OutletDefaultArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StockSnapshot model
   */
  interface StockSnapshotFieldRefs {
    readonly id: FieldRef<"StockSnapshot", 'Int'>
    readonly itemId: FieldRef<"StockSnapshot", 'Int'>
    readonly outletId: FieldRef<"StockSnapshot", 'Int'>
    readonly availableQuantity: FieldRef<"StockSnapshot", 'Decimal'>
    readonly onHandQuantity: FieldRef<"StockSnapshot", 'Decimal'>
    readonly deleted: FieldRef<"StockSnapshot", 'Boolean'>
    readonly deletedAt: FieldRef<"StockSnapshot", 'DateTime'>
    readonly createdAt: FieldRef<"StockSnapshot", 'DateTime'>
    readonly updatedAt: FieldRef<"StockSnapshot", 'DateTime'>
    readonly version: FieldRef<"StockSnapshot", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * StockSnapshot findUnique
   */
  export type StockSnapshotFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockSnapshot
     */
    select?: StockSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockSnapshot
     */
    omit?: StockSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which StockSnapshot to fetch.
     */
    where: StockSnapshotWhereUniqueInput
  }

  /**
   * StockSnapshot findUniqueOrThrow
   */
  export type StockSnapshotFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockSnapshot
     */
    select?: StockSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockSnapshot
     */
    omit?: StockSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which StockSnapshot to fetch.
     */
    where: StockSnapshotWhereUniqueInput
  }

  /**
   * StockSnapshot findFirst
   */
  export type StockSnapshotFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockSnapshot
     */
    select?: StockSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockSnapshot
     */
    omit?: StockSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which StockSnapshot to fetch.
     */
    where?: StockSnapshotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockSnapshots to fetch.
     */
    orderBy?: StockSnapshotOrderByWithRelationInput | StockSnapshotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockSnapshots.
     */
    cursor?: StockSnapshotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockSnapshots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockSnapshots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockSnapshots.
     */
    distinct?: StockSnapshotScalarFieldEnum | StockSnapshotScalarFieldEnum[]
  }

  /**
   * StockSnapshot findFirstOrThrow
   */
  export type StockSnapshotFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockSnapshot
     */
    select?: StockSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockSnapshot
     */
    omit?: StockSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which StockSnapshot to fetch.
     */
    where?: StockSnapshotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockSnapshots to fetch.
     */
    orderBy?: StockSnapshotOrderByWithRelationInput | StockSnapshotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockSnapshots.
     */
    cursor?: StockSnapshotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockSnapshots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockSnapshots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockSnapshots.
     */
    distinct?: StockSnapshotScalarFieldEnum | StockSnapshotScalarFieldEnum[]
  }

  /**
   * StockSnapshot findMany
   */
  export type StockSnapshotFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockSnapshot
     */
    select?: StockSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockSnapshot
     */
    omit?: StockSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which StockSnapshots to fetch.
     */
    where?: StockSnapshotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockSnapshots to fetch.
     */
    orderBy?: StockSnapshotOrderByWithRelationInput | StockSnapshotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StockSnapshots.
     */
    cursor?: StockSnapshotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockSnapshots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockSnapshots.
     */
    skip?: number
    distinct?: StockSnapshotScalarFieldEnum | StockSnapshotScalarFieldEnum[]
  }

  /**
   * StockSnapshot create
   */
  export type StockSnapshotCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockSnapshot
     */
    select?: StockSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockSnapshot
     */
    omit?: StockSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockSnapshotInclude<ExtArgs> | null
    /**
     * The data needed to create a StockSnapshot.
     */
    data: XOR<StockSnapshotCreateInput, StockSnapshotUncheckedCreateInput>
  }

  /**
   * StockSnapshot createMany
   */
  export type StockSnapshotCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StockSnapshots.
     */
    data: StockSnapshotCreateManyInput | StockSnapshotCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StockSnapshot update
   */
  export type StockSnapshotUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockSnapshot
     */
    select?: StockSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockSnapshot
     */
    omit?: StockSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockSnapshotInclude<ExtArgs> | null
    /**
     * The data needed to update a StockSnapshot.
     */
    data: XOR<StockSnapshotUpdateInput, StockSnapshotUncheckedUpdateInput>
    /**
     * Choose, which StockSnapshot to update.
     */
    where: StockSnapshotWhereUniqueInput
  }

  /**
   * StockSnapshot updateMany
   */
  export type StockSnapshotUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StockSnapshots.
     */
    data: XOR<StockSnapshotUpdateManyMutationInput, StockSnapshotUncheckedUpdateManyInput>
    /**
     * Filter which StockSnapshots to update
     */
    where?: StockSnapshotWhereInput
    /**
     * Limit how many StockSnapshots to update.
     */
    limit?: number
  }

  /**
   * StockSnapshot upsert
   */
  export type StockSnapshotUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockSnapshot
     */
    select?: StockSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockSnapshot
     */
    omit?: StockSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockSnapshotInclude<ExtArgs> | null
    /**
     * The filter to search for the StockSnapshot to update in case it exists.
     */
    where: StockSnapshotWhereUniqueInput
    /**
     * In case the StockSnapshot found by the `where` argument doesn't exist, create a new StockSnapshot with this data.
     */
    create: XOR<StockSnapshotCreateInput, StockSnapshotUncheckedCreateInput>
    /**
     * In case the StockSnapshot was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StockSnapshotUpdateInput, StockSnapshotUncheckedUpdateInput>
  }

  /**
   * StockSnapshot delete
   */
  export type StockSnapshotDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockSnapshot
     */
    select?: StockSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockSnapshot
     */
    omit?: StockSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockSnapshotInclude<ExtArgs> | null
    /**
     * Filter which StockSnapshot to delete.
     */
    where: StockSnapshotWhereUniqueInput
  }

  /**
   * StockSnapshot deleteMany
   */
  export type StockSnapshotDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockSnapshots to delete
     */
    where?: StockSnapshotWhereInput
    /**
     * Limit how many StockSnapshots to delete.
     */
    limit?: number
  }

  /**
   * StockSnapshot without action
   */
  export type StockSnapshotDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockSnapshot
     */
    select?: StockSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StockSnapshot
     */
    omit?: StockSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StockSnapshotInclude<ExtArgs> | null
  }


  /**
   * Model MenuProfileOutlet
   */

  export type AggregateMenuProfileOutlet = {
    _count: MenuProfileOutletCountAggregateOutputType | null
    _avg: MenuProfileOutletAvgAggregateOutputType | null
    _sum: MenuProfileOutletSumAggregateOutputType | null
    _min: MenuProfileOutletMinAggregateOutputType | null
    _max: MenuProfileOutletMaxAggregateOutputType | null
  }

  export type MenuProfileOutletAvgAggregateOutputType = {
    id: number | null
    outletId: number | null
    menuProfileID: number | null
    version: number | null
  }

  export type MenuProfileOutletSumAggregateOutputType = {
    id: number | null
    outletId: number | null
    menuProfileID: number | null
    version: number | null
  }

  export type MenuProfileOutletMinAggregateOutputType = {
    id: number | null
    outletId: number | null
    menuProfileID: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type MenuProfileOutletMaxAggregateOutputType = {
    id: number | null
    outletId: number | null
    menuProfileID: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type MenuProfileOutletCountAggregateOutputType = {
    id: number
    outletId: number
    menuProfileID: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type MenuProfileOutletAvgAggregateInputType = {
    id?: true
    outletId?: true
    menuProfileID?: true
    version?: true
  }

  export type MenuProfileOutletSumAggregateInputType = {
    id?: true
    outletId?: true
    menuProfileID?: true
    version?: true
  }

  export type MenuProfileOutletMinAggregateInputType = {
    id?: true
    outletId?: true
    menuProfileID?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type MenuProfileOutletMaxAggregateInputType = {
    id?: true
    outletId?: true
    menuProfileID?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type MenuProfileOutletCountAggregateInputType = {
    id?: true
    outletId?: true
    menuProfileID?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type MenuProfileOutletAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MenuProfileOutlet to aggregate.
     */
    where?: MenuProfileOutletWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuProfileOutlets to fetch.
     */
    orderBy?: MenuProfileOutletOrderByWithRelationInput | MenuProfileOutletOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MenuProfileOutletWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuProfileOutlets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuProfileOutlets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MenuProfileOutlets
    **/
    _count?: true | MenuProfileOutletCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MenuProfileOutletAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MenuProfileOutletSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MenuProfileOutletMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MenuProfileOutletMaxAggregateInputType
  }

  export type GetMenuProfileOutletAggregateType<T extends MenuProfileOutletAggregateArgs> = {
        [P in keyof T & keyof AggregateMenuProfileOutlet]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMenuProfileOutlet[P]>
      : GetScalarType<T[P], AggregateMenuProfileOutlet[P]>
  }




  export type MenuProfileOutletGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuProfileOutletWhereInput
    orderBy?: MenuProfileOutletOrderByWithAggregationInput | MenuProfileOutletOrderByWithAggregationInput[]
    by: MenuProfileOutletScalarFieldEnum[] | MenuProfileOutletScalarFieldEnum
    having?: MenuProfileOutletScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MenuProfileOutletCountAggregateInputType | true
    _avg?: MenuProfileOutletAvgAggregateInputType
    _sum?: MenuProfileOutletSumAggregateInputType
    _min?: MenuProfileOutletMinAggregateInputType
    _max?: MenuProfileOutletMaxAggregateInputType
  }

  export type MenuProfileOutletGroupByOutputType = {
    id: number
    outletId: number
    menuProfileID: number
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: MenuProfileOutletCountAggregateOutputType | null
    _avg: MenuProfileOutletAvgAggregateOutputType | null
    _sum: MenuProfileOutletSumAggregateOutputType | null
    _min: MenuProfileOutletMinAggregateOutputType | null
    _max: MenuProfileOutletMaxAggregateOutputType | null
  }

  type GetMenuProfileOutletGroupByPayload<T extends MenuProfileOutletGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MenuProfileOutletGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MenuProfileOutletGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MenuProfileOutletGroupByOutputType[P]>
            : GetScalarType<T[P], MenuProfileOutletGroupByOutputType[P]>
        }
      >
    >


  export type MenuProfileOutletSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    outletId?: boolean
    menuProfileID?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }, ExtArgs["result"]["menuProfileOutlet"]>



  export type MenuProfileOutletSelectScalar = {
    id?: boolean
    outletId?: boolean
    menuProfileID?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type MenuProfileOutletOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "outletId" | "menuProfileID" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["menuProfileOutlet"]>

  export type $MenuProfileOutletPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MenuProfileOutlet"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      outletId: number
      menuProfileID: number
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["menuProfileOutlet"]>
    composites: {}
  }

  type MenuProfileOutletGetPayload<S extends boolean | null | undefined | MenuProfileOutletDefaultArgs> = $Result.GetResult<Prisma.$MenuProfileOutletPayload, S>

  type MenuProfileOutletCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MenuProfileOutletFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MenuProfileOutletCountAggregateInputType | true
    }

  export interface MenuProfileOutletDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MenuProfileOutlet'], meta: { name: 'MenuProfileOutlet' } }
    /**
     * Find zero or one MenuProfileOutlet that matches the filter.
     * @param {MenuProfileOutletFindUniqueArgs} args - Arguments to find a MenuProfileOutlet
     * @example
     * // Get one MenuProfileOutlet
     * const menuProfileOutlet = await prisma.menuProfileOutlet.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MenuProfileOutletFindUniqueArgs>(args: SelectSubset<T, MenuProfileOutletFindUniqueArgs<ExtArgs>>): Prisma__MenuProfileOutletClient<$Result.GetResult<Prisma.$MenuProfileOutletPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MenuProfileOutlet that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MenuProfileOutletFindUniqueOrThrowArgs} args - Arguments to find a MenuProfileOutlet
     * @example
     * // Get one MenuProfileOutlet
     * const menuProfileOutlet = await prisma.menuProfileOutlet.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MenuProfileOutletFindUniqueOrThrowArgs>(args: SelectSubset<T, MenuProfileOutletFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MenuProfileOutletClient<$Result.GetResult<Prisma.$MenuProfileOutletPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MenuProfileOutlet that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProfileOutletFindFirstArgs} args - Arguments to find a MenuProfileOutlet
     * @example
     * // Get one MenuProfileOutlet
     * const menuProfileOutlet = await prisma.menuProfileOutlet.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MenuProfileOutletFindFirstArgs>(args?: SelectSubset<T, MenuProfileOutletFindFirstArgs<ExtArgs>>): Prisma__MenuProfileOutletClient<$Result.GetResult<Prisma.$MenuProfileOutletPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MenuProfileOutlet that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProfileOutletFindFirstOrThrowArgs} args - Arguments to find a MenuProfileOutlet
     * @example
     * // Get one MenuProfileOutlet
     * const menuProfileOutlet = await prisma.menuProfileOutlet.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MenuProfileOutletFindFirstOrThrowArgs>(args?: SelectSubset<T, MenuProfileOutletFindFirstOrThrowArgs<ExtArgs>>): Prisma__MenuProfileOutletClient<$Result.GetResult<Prisma.$MenuProfileOutletPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MenuProfileOutlets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProfileOutletFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MenuProfileOutlets
     * const menuProfileOutlets = await prisma.menuProfileOutlet.findMany()
     * 
     * // Get first 10 MenuProfileOutlets
     * const menuProfileOutlets = await prisma.menuProfileOutlet.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const menuProfileOutletWithIdOnly = await prisma.menuProfileOutlet.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MenuProfileOutletFindManyArgs>(args?: SelectSubset<T, MenuProfileOutletFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuProfileOutletPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MenuProfileOutlet.
     * @param {MenuProfileOutletCreateArgs} args - Arguments to create a MenuProfileOutlet.
     * @example
     * // Create one MenuProfileOutlet
     * const MenuProfileOutlet = await prisma.menuProfileOutlet.create({
     *   data: {
     *     // ... data to create a MenuProfileOutlet
     *   }
     * })
     * 
     */
    create<T extends MenuProfileOutletCreateArgs>(args: SelectSubset<T, MenuProfileOutletCreateArgs<ExtArgs>>): Prisma__MenuProfileOutletClient<$Result.GetResult<Prisma.$MenuProfileOutletPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MenuProfileOutlets.
     * @param {MenuProfileOutletCreateManyArgs} args - Arguments to create many MenuProfileOutlets.
     * @example
     * // Create many MenuProfileOutlets
     * const menuProfileOutlet = await prisma.menuProfileOutlet.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MenuProfileOutletCreateManyArgs>(args?: SelectSubset<T, MenuProfileOutletCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a MenuProfileOutlet.
     * @param {MenuProfileOutletDeleteArgs} args - Arguments to delete one MenuProfileOutlet.
     * @example
     * // Delete one MenuProfileOutlet
     * const MenuProfileOutlet = await prisma.menuProfileOutlet.delete({
     *   where: {
     *     // ... filter to delete one MenuProfileOutlet
     *   }
     * })
     * 
     */
    delete<T extends MenuProfileOutletDeleteArgs>(args: SelectSubset<T, MenuProfileOutletDeleteArgs<ExtArgs>>): Prisma__MenuProfileOutletClient<$Result.GetResult<Prisma.$MenuProfileOutletPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MenuProfileOutlet.
     * @param {MenuProfileOutletUpdateArgs} args - Arguments to update one MenuProfileOutlet.
     * @example
     * // Update one MenuProfileOutlet
     * const menuProfileOutlet = await prisma.menuProfileOutlet.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MenuProfileOutletUpdateArgs>(args: SelectSubset<T, MenuProfileOutletUpdateArgs<ExtArgs>>): Prisma__MenuProfileOutletClient<$Result.GetResult<Prisma.$MenuProfileOutletPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MenuProfileOutlets.
     * @param {MenuProfileOutletDeleteManyArgs} args - Arguments to filter MenuProfileOutlets to delete.
     * @example
     * // Delete a few MenuProfileOutlets
     * const { count } = await prisma.menuProfileOutlet.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MenuProfileOutletDeleteManyArgs>(args?: SelectSubset<T, MenuProfileOutletDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MenuProfileOutlets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProfileOutletUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MenuProfileOutlets
     * const menuProfileOutlet = await prisma.menuProfileOutlet.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MenuProfileOutletUpdateManyArgs>(args: SelectSubset<T, MenuProfileOutletUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MenuProfileOutlet.
     * @param {MenuProfileOutletUpsertArgs} args - Arguments to update or create a MenuProfileOutlet.
     * @example
     * // Update or create a MenuProfileOutlet
     * const menuProfileOutlet = await prisma.menuProfileOutlet.upsert({
     *   create: {
     *     // ... data to create a MenuProfileOutlet
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MenuProfileOutlet we want to update
     *   }
     * })
     */
    upsert<T extends MenuProfileOutletUpsertArgs>(args: SelectSubset<T, MenuProfileOutletUpsertArgs<ExtArgs>>): Prisma__MenuProfileOutletClient<$Result.GetResult<Prisma.$MenuProfileOutletPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MenuProfileOutlets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProfileOutletCountArgs} args - Arguments to filter MenuProfileOutlets to count.
     * @example
     * // Count the number of MenuProfileOutlets
     * const count = await prisma.menuProfileOutlet.count({
     *   where: {
     *     // ... the filter for the MenuProfileOutlets we want to count
     *   }
     * })
    **/
    count<T extends MenuProfileOutletCountArgs>(
      args?: Subset<T, MenuProfileOutletCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MenuProfileOutletCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MenuProfileOutlet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProfileOutletAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MenuProfileOutletAggregateArgs>(args: Subset<T, MenuProfileOutletAggregateArgs>): Prisma.PrismaPromise<GetMenuProfileOutletAggregateType<T>>

    /**
     * Group by MenuProfileOutlet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProfileOutletGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MenuProfileOutletGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MenuProfileOutletGroupByArgs['orderBy'] }
        : { orderBy?: MenuProfileOutletGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MenuProfileOutletGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMenuProfileOutletGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MenuProfileOutlet model
   */
  readonly fields: MenuProfileOutletFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MenuProfileOutlet.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MenuProfileOutletClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MenuProfileOutlet model
   */
  interface MenuProfileOutletFieldRefs {
    readonly id: FieldRef<"MenuProfileOutlet", 'Int'>
    readonly outletId: FieldRef<"MenuProfileOutlet", 'Int'>
    readonly menuProfileID: FieldRef<"MenuProfileOutlet", 'Int'>
    readonly deleted: FieldRef<"MenuProfileOutlet", 'Boolean'>
    readonly deletedAt: FieldRef<"MenuProfileOutlet", 'DateTime'>
    readonly createdAt: FieldRef<"MenuProfileOutlet", 'DateTime'>
    readonly updatedAt: FieldRef<"MenuProfileOutlet", 'DateTime'>
    readonly version: FieldRef<"MenuProfileOutlet", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MenuProfileOutlet findUnique
   */
  export type MenuProfileOutletFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfileOutlet
     */
    select?: MenuProfileOutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfileOutlet
     */
    omit?: MenuProfileOutletOmit<ExtArgs> | null
    /**
     * Filter, which MenuProfileOutlet to fetch.
     */
    where: MenuProfileOutletWhereUniqueInput
  }

  /**
   * MenuProfileOutlet findUniqueOrThrow
   */
  export type MenuProfileOutletFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfileOutlet
     */
    select?: MenuProfileOutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfileOutlet
     */
    omit?: MenuProfileOutletOmit<ExtArgs> | null
    /**
     * Filter, which MenuProfileOutlet to fetch.
     */
    where: MenuProfileOutletWhereUniqueInput
  }

  /**
   * MenuProfileOutlet findFirst
   */
  export type MenuProfileOutletFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfileOutlet
     */
    select?: MenuProfileOutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfileOutlet
     */
    omit?: MenuProfileOutletOmit<ExtArgs> | null
    /**
     * Filter, which MenuProfileOutlet to fetch.
     */
    where?: MenuProfileOutletWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuProfileOutlets to fetch.
     */
    orderBy?: MenuProfileOutletOrderByWithRelationInput | MenuProfileOutletOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MenuProfileOutlets.
     */
    cursor?: MenuProfileOutletWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuProfileOutlets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuProfileOutlets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MenuProfileOutlets.
     */
    distinct?: MenuProfileOutletScalarFieldEnum | MenuProfileOutletScalarFieldEnum[]
  }

  /**
   * MenuProfileOutlet findFirstOrThrow
   */
  export type MenuProfileOutletFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfileOutlet
     */
    select?: MenuProfileOutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfileOutlet
     */
    omit?: MenuProfileOutletOmit<ExtArgs> | null
    /**
     * Filter, which MenuProfileOutlet to fetch.
     */
    where?: MenuProfileOutletWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuProfileOutlets to fetch.
     */
    orderBy?: MenuProfileOutletOrderByWithRelationInput | MenuProfileOutletOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MenuProfileOutlets.
     */
    cursor?: MenuProfileOutletWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuProfileOutlets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuProfileOutlets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MenuProfileOutlets.
     */
    distinct?: MenuProfileOutletScalarFieldEnum | MenuProfileOutletScalarFieldEnum[]
  }

  /**
   * MenuProfileOutlet findMany
   */
  export type MenuProfileOutletFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfileOutlet
     */
    select?: MenuProfileOutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfileOutlet
     */
    omit?: MenuProfileOutletOmit<ExtArgs> | null
    /**
     * Filter, which MenuProfileOutlets to fetch.
     */
    where?: MenuProfileOutletWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuProfileOutlets to fetch.
     */
    orderBy?: MenuProfileOutletOrderByWithRelationInput | MenuProfileOutletOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MenuProfileOutlets.
     */
    cursor?: MenuProfileOutletWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuProfileOutlets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuProfileOutlets.
     */
    skip?: number
    distinct?: MenuProfileOutletScalarFieldEnum | MenuProfileOutletScalarFieldEnum[]
  }

  /**
   * MenuProfileOutlet create
   */
  export type MenuProfileOutletCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfileOutlet
     */
    select?: MenuProfileOutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfileOutlet
     */
    omit?: MenuProfileOutletOmit<ExtArgs> | null
    /**
     * The data needed to create a MenuProfileOutlet.
     */
    data: XOR<MenuProfileOutletCreateInput, MenuProfileOutletUncheckedCreateInput>
  }

  /**
   * MenuProfileOutlet createMany
   */
  export type MenuProfileOutletCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MenuProfileOutlets.
     */
    data: MenuProfileOutletCreateManyInput | MenuProfileOutletCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MenuProfileOutlet update
   */
  export type MenuProfileOutletUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfileOutlet
     */
    select?: MenuProfileOutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfileOutlet
     */
    omit?: MenuProfileOutletOmit<ExtArgs> | null
    /**
     * The data needed to update a MenuProfileOutlet.
     */
    data: XOR<MenuProfileOutletUpdateInput, MenuProfileOutletUncheckedUpdateInput>
    /**
     * Choose, which MenuProfileOutlet to update.
     */
    where: MenuProfileOutletWhereUniqueInput
  }

  /**
   * MenuProfileOutlet updateMany
   */
  export type MenuProfileOutletUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MenuProfileOutlets.
     */
    data: XOR<MenuProfileOutletUpdateManyMutationInput, MenuProfileOutletUncheckedUpdateManyInput>
    /**
     * Filter which MenuProfileOutlets to update
     */
    where?: MenuProfileOutletWhereInput
    /**
     * Limit how many MenuProfileOutlets to update.
     */
    limit?: number
  }

  /**
   * MenuProfileOutlet upsert
   */
  export type MenuProfileOutletUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfileOutlet
     */
    select?: MenuProfileOutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfileOutlet
     */
    omit?: MenuProfileOutletOmit<ExtArgs> | null
    /**
     * The filter to search for the MenuProfileOutlet to update in case it exists.
     */
    where: MenuProfileOutletWhereUniqueInput
    /**
     * In case the MenuProfileOutlet found by the `where` argument doesn't exist, create a new MenuProfileOutlet with this data.
     */
    create: XOR<MenuProfileOutletCreateInput, MenuProfileOutletUncheckedCreateInput>
    /**
     * In case the MenuProfileOutlet was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MenuProfileOutletUpdateInput, MenuProfileOutletUncheckedUpdateInput>
  }

  /**
   * MenuProfileOutlet delete
   */
  export type MenuProfileOutletDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfileOutlet
     */
    select?: MenuProfileOutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfileOutlet
     */
    omit?: MenuProfileOutletOmit<ExtArgs> | null
    /**
     * Filter which MenuProfileOutlet to delete.
     */
    where: MenuProfileOutletWhereUniqueInput
  }

  /**
   * MenuProfileOutlet deleteMany
   */
  export type MenuProfileOutletDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MenuProfileOutlets to delete
     */
    where?: MenuProfileOutletWhereInput
    /**
     * Limit how many MenuProfileOutlets to delete.
     */
    limit?: number
  }

  /**
   * MenuProfileOutlet without action
   */
  export type MenuProfileOutletDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfileOutlet
     */
    select?: MenuProfileOutletSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfileOutlet
     */
    omit?: MenuProfileOutletOmit<ExtArgs> | null
  }


  /**
   * Model MenuProfile
   */

  export type AggregateMenuProfile = {
    _count: MenuProfileCountAggregateOutputType | null
    _avg: MenuProfileAvgAggregateOutputType | null
    _sum: MenuProfileSumAggregateOutputType | null
    _min: MenuProfileMinAggregateOutputType | null
    _max: MenuProfileMaxAggregateOutputType | null
  }

  export type MenuProfileAvgAggregateOutputType = {
    id: number | null
    sequence: number | null
    version: number | null
  }

  export type MenuProfileSumAggregateOutputType = {
    id: number | null
    sequence: number | null
    version: number | null
  }

  export type MenuProfileMinAggregateOutputType = {
    id: number | null
    name: string | null
    dateStart: string | null
    dateEnd: string | null
    timeStart: string | null
    timeEnd: string | null
    isMonday: boolean | null
    isTuesday: boolean | null
    isWednesday: boolean | null
    isThursday: boolean | null
    isFriday: boolean | null
    isSaturday: boolean | null
    isSunday: boolean | null
    sequence: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type MenuProfileMaxAggregateOutputType = {
    id: number | null
    name: string | null
    dateStart: string | null
    dateEnd: string | null
    timeStart: string | null
    timeEnd: string | null
    isMonday: boolean | null
    isTuesday: boolean | null
    isWednesday: boolean | null
    isThursday: boolean | null
    isFriday: boolean | null
    isSaturday: boolean | null
    isSunday: boolean | null
    sequence: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type MenuProfileCountAggregateOutputType = {
    id: number
    name: number
    dateStart: number
    dateEnd: number
    timeStart: number
    timeEnd: number
    isMonday: number
    isTuesday: number
    isWednesday: number
    isThursday: number
    isFriday: number
    isSaturday: number
    isSunday: number
    sequence: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type MenuProfileAvgAggregateInputType = {
    id?: true
    sequence?: true
    version?: true
  }

  export type MenuProfileSumAggregateInputType = {
    id?: true
    sequence?: true
    version?: true
  }

  export type MenuProfileMinAggregateInputType = {
    id?: true
    name?: true
    dateStart?: true
    dateEnd?: true
    timeStart?: true
    timeEnd?: true
    isMonday?: true
    isTuesday?: true
    isWednesday?: true
    isThursday?: true
    isFriday?: true
    isSaturday?: true
    isSunday?: true
    sequence?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type MenuProfileMaxAggregateInputType = {
    id?: true
    name?: true
    dateStart?: true
    dateEnd?: true
    timeStart?: true
    timeEnd?: true
    isMonday?: true
    isTuesday?: true
    isWednesday?: true
    isThursday?: true
    isFriday?: true
    isSaturday?: true
    isSunday?: true
    sequence?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type MenuProfileCountAggregateInputType = {
    id?: true
    name?: true
    dateStart?: true
    dateEnd?: true
    timeStart?: true
    timeEnd?: true
    isMonday?: true
    isTuesday?: true
    isWednesday?: true
    isThursday?: true
    isFriday?: true
    isSaturday?: true
    isSunday?: true
    sequence?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type MenuProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MenuProfile to aggregate.
     */
    where?: MenuProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuProfiles to fetch.
     */
    orderBy?: MenuProfileOrderByWithRelationInput | MenuProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MenuProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MenuProfiles
    **/
    _count?: true | MenuProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MenuProfileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MenuProfileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MenuProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MenuProfileMaxAggregateInputType
  }

  export type GetMenuProfileAggregateType<T extends MenuProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateMenuProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMenuProfile[P]>
      : GetScalarType<T[P], AggregateMenuProfile[P]>
  }




  export type MenuProfileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuProfileWhereInput
    orderBy?: MenuProfileOrderByWithAggregationInput | MenuProfileOrderByWithAggregationInput[]
    by: MenuProfileScalarFieldEnum[] | MenuProfileScalarFieldEnum
    having?: MenuProfileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MenuProfileCountAggregateInputType | true
    _avg?: MenuProfileAvgAggregateInputType
    _sum?: MenuProfileSumAggregateInputType
    _min?: MenuProfileMinAggregateInputType
    _max?: MenuProfileMaxAggregateInputType
  }

  export type MenuProfileGroupByOutputType = {
    id: number
    name: string
    dateStart: string
    dateEnd: string
    timeStart: string
    timeEnd: string
    isMonday: boolean
    isTuesday: boolean
    isWednesday: boolean
    isThursday: boolean
    isFriday: boolean
    isSaturday: boolean
    isSunday: boolean
    sequence: number
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: MenuProfileCountAggregateOutputType | null
    _avg: MenuProfileAvgAggregateOutputType | null
    _sum: MenuProfileSumAggregateOutputType | null
    _min: MenuProfileMinAggregateOutputType | null
    _max: MenuProfileMaxAggregateOutputType | null
  }

  type GetMenuProfileGroupByPayload<T extends MenuProfileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MenuProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MenuProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MenuProfileGroupByOutputType[P]>
            : GetScalarType<T[P], MenuProfileGroupByOutputType[P]>
        }
      >
    >


  export type MenuProfileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    dateStart?: boolean
    dateEnd?: boolean
    timeStart?: boolean
    timeEnd?: boolean
    isMonday?: boolean
    isTuesday?: boolean
    isWednesday?: boolean
    isThursday?: boolean
    isFriday?: boolean
    isSaturday?: boolean
    isSunday?: boolean
    sequence?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    menuCategories?: boolean | MenuProfile$menuCategoriesArgs<ExtArgs>
    _count?: boolean | MenuProfileCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["menuProfile"]>



  export type MenuProfileSelectScalar = {
    id?: boolean
    name?: boolean
    dateStart?: boolean
    dateEnd?: boolean
    timeStart?: boolean
    timeEnd?: boolean
    isMonday?: boolean
    isTuesday?: boolean
    isWednesday?: boolean
    isThursday?: boolean
    isFriday?: boolean
    isSaturday?: boolean
    isSunday?: boolean
    sequence?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type MenuProfileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "dateStart" | "dateEnd" | "timeStart" | "timeEnd" | "isMonday" | "isTuesday" | "isWednesday" | "isThursday" | "isFriday" | "isSaturday" | "isSunday" | "sequence" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["menuProfile"]>
  export type MenuProfileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menuCategories?: boolean | MenuProfile$menuCategoriesArgs<ExtArgs>
    _count?: boolean | MenuProfileCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $MenuProfilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MenuProfile"
    objects: {
      menuCategories: Prisma.$MenuCategoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      dateStart: string
      dateEnd: string
      timeStart: string
      timeEnd: string
      isMonday: boolean
      isTuesday: boolean
      isWednesday: boolean
      isThursday: boolean
      isFriday: boolean
      isSaturday: boolean
      isSunday: boolean
      sequence: number
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["menuProfile"]>
    composites: {}
  }

  type MenuProfileGetPayload<S extends boolean | null | undefined | MenuProfileDefaultArgs> = $Result.GetResult<Prisma.$MenuProfilePayload, S>

  type MenuProfileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MenuProfileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MenuProfileCountAggregateInputType | true
    }

  export interface MenuProfileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MenuProfile'], meta: { name: 'MenuProfile' } }
    /**
     * Find zero or one MenuProfile that matches the filter.
     * @param {MenuProfileFindUniqueArgs} args - Arguments to find a MenuProfile
     * @example
     * // Get one MenuProfile
     * const menuProfile = await prisma.menuProfile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MenuProfileFindUniqueArgs>(args: SelectSubset<T, MenuProfileFindUniqueArgs<ExtArgs>>): Prisma__MenuProfileClient<$Result.GetResult<Prisma.$MenuProfilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MenuProfile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MenuProfileFindUniqueOrThrowArgs} args - Arguments to find a MenuProfile
     * @example
     * // Get one MenuProfile
     * const menuProfile = await prisma.menuProfile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MenuProfileFindUniqueOrThrowArgs>(args: SelectSubset<T, MenuProfileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MenuProfileClient<$Result.GetResult<Prisma.$MenuProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MenuProfile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProfileFindFirstArgs} args - Arguments to find a MenuProfile
     * @example
     * // Get one MenuProfile
     * const menuProfile = await prisma.menuProfile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MenuProfileFindFirstArgs>(args?: SelectSubset<T, MenuProfileFindFirstArgs<ExtArgs>>): Prisma__MenuProfileClient<$Result.GetResult<Prisma.$MenuProfilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MenuProfile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProfileFindFirstOrThrowArgs} args - Arguments to find a MenuProfile
     * @example
     * // Get one MenuProfile
     * const menuProfile = await prisma.menuProfile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MenuProfileFindFirstOrThrowArgs>(args?: SelectSubset<T, MenuProfileFindFirstOrThrowArgs<ExtArgs>>): Prisma__MenuProfileClient<$Result.GetResult<Prisma.$MenuProfilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MenuProfiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProfileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MenuProfiles
     * const menuProfiles = await prisma.menuProfile.findMany()
     * 
     * // Get first 10 MenuProfiles
     * const menuProfiles = await prisma.menuProfile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const menuProfileWithIdOnly = await prisma.menuProfile.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MenuProfileFindManyArgs>(args?: SelectSubset<T, MenuProfileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MenuProfile.
     * @param {MenuProfileCreateArgs} args - Arguments to create a MenuProfile.
     * @example
     * // Create one MenuProfile
     * const MenuProfile = await prisma.menuProfile.create({
     *   data: {
     *     // ... data to create a MenuProfile
     *   }
     * })
     * 
     */
    create<T extends MenuProfileCreateArgs>(args: SelectSubset<T, MenuProfileCreateArgs<ExtArgs>>): Prisma__MenuProfileClient<$Result.GetResult<Prisma.$MenuProfilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MenuProfiles.
     * @param {MenuProfileCreateManyArgs} args - Arguments to create many MenuProfiles.
     * @example
     * // Create many MenuProfiles
     * const menuProfile = await prisma.menuProfile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MenuProfileCreateManyArgs>(args?: SelectSubset<T, MenuProfileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a MenuProfile.
     * @param {MenuProfileDeleteArgs} args - Arguments to delete one MenuProfile.
     * @example
     * // Delete one MenuProfile
     * const MenuProfile = await prisma.menuProfile.delete({
     *   where: {
     *     // ... filter to delete one MenuProfile
     *   }
     * })
     * 
     */
    delete<T extends MenuProfileDeleteArgs>(args: SelectSubset<T, MenuProfileDeleteArgs<ExtArgs>>): Prisma__MenuProfileClient<$Result.GetResult<Prisma.$MenuProfilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MenuProfile.
     * @param {MenuProfileUpdateArgs} args - Arguments to update one MenuProfile.
     * @example
     * // Update one MenuProfile
     * const menuProfile = await prisma.menuProfile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MenuProfileUpdateArgs>(args: SelectSubset<T, MenuProfileUpdateArgs<ExtArgs>>): Prisma__MenuProfileClient<$Result.GetResult<Prisma.$MenuProfilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MenuProfiles.
     * @param {MenuProfileDeleteManyArgs} args - Arguments to filter MenuProfiles to delete.
     * @example
     * // Delete a few MenuProfiles
     * const { count } = await prisma.menuProfile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MenuProfileDeleteManyArgs>(args?: SelectSubset<T, MenuProfileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MenuProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MenuProfiles
     * const menuProfile = await prisma.menuProfile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MenuProfileUpdateManyArgs>(args: SelectSubset<T, MenuProfileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MenuProfile.
     * @param {MenuProfileUpsertArgs} args - Arguments to update or create a MenuProfile.
     * @example
     * // Update or create a MenuProfile
     * const menuProfile = await prisma.menuProfile.upsert({
     *   create: {
     *     // ... data to create a MenuProfile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MenuProfile we want to update
     *   }
     * })
     */
    upsert<T extends MenuProfileUpsertArgs>(args: SelectSubset<T, MenuProfileUpsertArgs<ExtArgs>>): Prisma__MenuProfileClient<$Result.GetResult<Prisma.$MenuProfilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MenuProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProfileCountArgs} args - Arguments to filter MenuProfiles to count.
     * @example
     * // Count the number of MenuProfiles
     * const count = await prisma.menuProfile.count({
     *   where: {
     *     // ... the filter for the MenuProfiles we want to count
     *   }
     * })
    **/
    count<T extends MenuProfileCountArgs>(
      args?: Subset<T, MenuProfileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MenuProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MenuProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MenuProfileAggregateArgs>(args: Subset<T, MenuProfileAggregateArgs>): Prisma.PrismaPromise<GetMenuProfileAggregateType<T>>

    /**
     * Group by MenuProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProfileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MenuProfileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MenuProfileGroupByArgs['orderBy'] }
        : { orderBy?: MenuProfileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MenuProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMenuProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MenuProfile model
   */
  readonly fields: MenuProfileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MenuProfile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MenuProfileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    menuCategories<T extends MenuProfile$menuCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, MenuProfile$menuCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MenuProfile model
   */
  interface MenuProfileFieldRefs {
    readonly id: FieldRef<"MenuProfile", 'Int'>
    readonly name: FieldRef<"MenuProfile", 'String'>
    readonly dateStart: FieldRef<"MenuProfile", 'String'>
    readonly dateEnd: FieldRef<"MenuProfile", 'String'>
    readonly timeStart: FieldRef<"MenuProfile", 'String'>
    readonly timeEnd: FieldRef<"MenuProfile", 'String'>
    readonly isMonday: FieldRef<"MenuProfile", 'Boolean'>
    readonly isTuesday: FieldRef<"MenuProfile", 'Boolean'>
    readonly isWednesday: FieldRef<"MenuProfile", 'Boolean'>
    readonly isThursday: FieldRef<"MenuProfile", 'Boolean'>
    readonly isFriday: FieldRef<"MenuProfile", 'Boolean'>
    readonly isSaturday: FieldRef<"MenuProfile", 'Boolean'>
    readonly isSunday: FieldRef<"MenuProfile", 'Boolean'>
    readonly sequence: FieldRef<"MenuProfile", 'Int'>
    readonly deleted: FieldRef<"MenuProfile", 'Boolean'>
    readonly deletedAt: FieldRef<"MenuProfile", 'DateTime'>
    readonly createdAt: FieldRef<"MenuProfile", 'DateTime'>
    readonly updatedAt: FieldRef<"MenuProfile", 'DateTime'>
    readonly version: FieldRef<"MenuProfile", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MenuProfile findUnique
   */
  export type MenuProfileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfile
     */
    select?: MenuProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfile
     */
    omit?: MenuProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProfileInclude<ExtArgs> | null
    /**
     * Filter, which MenuProfile to fetch.
     */
    where: MenuProfileWhereUniqueInput
  }

  /**
   * MenuProfile findUniqueOrThrow
   */
  export type MenuProfileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfile
     */
    select?: MenuProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfile
     */
    omit?: MenuProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProfileInclude<ExtArgs> | null
    /**
     * Filter, which MenuProfile to fetch.
     */
    where: MenuProfileWhereUniqueInput
  }

  /**
   * MenuProfile findFirst
   */
  export type MenuProfileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfile
     */
    select?: MenuProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfile
     */
    omit?: MenuProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProfileInclude<ExtArgs> | null
    /**
     * Filter, which MenuProfile to fetch.
     */
    where?: MenuProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuProfiles to fetch.
     */
    orderBy?: MenuProfileOrderByWithRelationInput | MenuProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MenuProfiles.
     */
    cursor?: MenuProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MenuProfiles.
     */
    distinct?: MenuProfileScalarFieldEnum | MenuProfileScalarFieldEnum[]
  }

  /**
   * MenuProfile findFirstOrThrow
   */
  export type MenuProfileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfile
     */
    select?: MenuProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfile
     */
    omit?: MenuProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProfileInclude<ExtArgs> | null
    /**
     * Filter, which MenuProfile to fetch.
     */
    where?: MenuProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuProfiles to fetch.
     */
    orderBy?: MenuProfileOrderByWithRelationInput | MenuProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MenuProfiles.
     */
    cursor?: MenuProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MenuProfiles.
     */
    distinct?: MenuProfileScalarFieldEnum | MenuProfileScalarFieldEnum[]
  }

  /**
   * MenuProfile findMany
   */
  export type MenuProfileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfile
     */
    select?: MenuProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfile
     */
    omit?: MenuProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProfileInclude<ExtArgs> | null
    /**
     * Filter, which MenuProfiles to fetch.
     */
    where?: MenuProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuProfiles to fetch.
     */
    orderBy?: MenuProfileOrderByWithRelationInput | MenuProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MenuProfiles.
     */
    cursor?: MenuProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuProfiles.
     */
    skip?: number
    distinct?: MenuProfileScalarFieldEnum | MenuProfileScalarFieldEnum[]
  }

  /**
   * MenuProfile create
   */
  export type MenuProfileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfile
     */
    select?: MenuProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfile
     */
    omit?: MenuProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProfileInclude<ExtArgs> | null
    /**
     * The data needed to create a MenuProfile.
     */
    data: XOR<MenuProfileCreateInput, MenuProfileUncheckedCreateInput>
  }

  /**
   * MenuProfile createMany
   */
  export type MenuProfileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MenuProfiles.
     */
    data: MenuProfileCreateManyInput | MenuProfileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MenuProfile update
   */
  export type MenuProfileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfile
     */
    select?: MenuProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfile
     */
    omit?: MenuProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProfileInclude<ExtArgs> | null
    /**
     * The data needed to update a MenuProfile.
     */
    data: XOR<MenuProfileUpdateInput, MenuProfileUncheckedUpdateInput>
    /**
     * Choose, which MenuProfile to update.
     */
    where: MenuProfileWhereUniqueInput
  }

  /**
   * MenuProfile updateMany
   */
  export type MenuProfileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MenuProfiles.
     */
    data: XOR<MenuProfileUpdateManyMutationInput, MenuProfileUncheckedUpdateManyInput>
    /**
     * Filter which MenuProfiles to update
     */
    where?: MenuProfileWhereInput
    /**
     * Limit how many MenuProfiles to update.
     */
    limit?: number
  }

  /**
   * MenuProfile upsert
   */
  export type MenuProfileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfile
     */
    select?: MenuProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfile
     */
    omit?: MenuProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProfileInclude<ExtArgs> | null
    /**
     * The filter to search for the MenuProfile to update in case it exists.
     */
    where: MenuProfileWhereUniqueInput
    /**
     * In case the MenuProfile found by the `where` argument doesn't exist, create a new MenuProfile with this data.
     */
    create: XOR<MenuProfileCreateInput, MenuProfileUncheckedCreateInput>
    /**
     * In case the MenuProfile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MenuProfileUpdateInput, MenuProfileUncheckedUpdateInput>
  }

  /**
   * MenuProfile delete
   */
  export type MenuProfileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfile
     */
    select?: MenuProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfile
     */
    omit?: MenuProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProfileInclude<ExtArgs> | null
    /**
     * Filter which MenuProfile to delete.
     */
    where: MenuProfileWhereUniqueInput
  }

  /**
   * MenuProfile deleteMany
   */
  export type MenuProfileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MenuProfiles to delete
     */
    where?: MenuProfileWhereInput
    /**
     * Limit how many MenuProfiles to delete.
     */
    limit?: number
  }

  /**
   * MenuProfile.menuCategories
   */
  export type MenuProfile$menuCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuCategory
     */
    omit?: MenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    where?: MenuCategoryWhereInput
    orderBy?: MenuCategoryOrderByWithRelationInput | MenuCategoryOrderByWithRelationInput[]
    cursor?: MenuCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MenuCategoryScalarFieldEnum | MenuCategoryScalarFieldEnum[]
  }

  /**
   * MenuProfile without action
   */
  export type MenuProfileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProfile
     */
    select?: MenuProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuProfile
     */
    omit?: MenuProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProfileInclude<ExtArgs> | null
  }


  /**
   * Model MenuCategory
   */

  export type AggregateMenuCategory = {
    _count: MenuCategoryCountAggregateOutputType | null
    _avg: MenuCategoryAvgAggregateOutputType | null
    _sum: MenuCategorySumAggregateOutputType | null
    _min: MenuCategoryMinAggregateOutputType | null
    _max: MenuCategoryMaxAggregateOutputType | null
  }

  export type MenuCategoryAvgAggregateOutputType = {
    id: number | null
    menuProfileID: number | null
    version: number | null
  }

  export type MenuCategorySumAggregateOutputType = {
    id: number | null
    menuProfileID: number | null
    version: number | null
  }

  export type MenuCategoryMinAggregateOutputType = {
    id: number | null
    name: string | null
    menuProfileID: number | null
    imageURL: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type MenuCategoryMaxAggregateOutputType = {
    id: number | null
    name: string | null
    menuProfileID: number | null
    imageURL: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type MenuCategoryCountAggregateOutputType = {
    id: number
    name: number
    menuProfileID: number
    imageURL: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type MenuCategoryAvgAggregateInputType = {
    id?: true
    menuProfileID?: true
    version?: true
  }

  export type MenuCategorySumAggregateInputType = {
    id?: true
    menuProfileID?: true
    version?: true
  }

  export type MenuCategoryMinAggregateInputType = {
    id?: true
    name?: true
    menuProfileID?: true
    imageURL?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type MenuCategoryMaxAggregateInputType = {
    id?: true
    name?: true
    menuProfileID?: true
    imageURL?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type MenuCategoryCountAggregateInputType = {
    id?: true
    name?: true
    menuProfileID?: true
    imageURL?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type MenuCategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MenuCategory to aggregate.
     */
    where?: MenuCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuCategories to fetch.
     */
    orderBy?: MenuCategoryOrderByWithRelationInput | MenuCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MenuCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MenuCategories
    **/
    _count?: true | MenuCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MenuCategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MenuCategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MenuCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MenuCategoryMaxAggregateInputType
  }

  export type GetMenuCategoryAggregateType<T extends MenuCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateMenuCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMenuCategory[P]>
      : GetScalarType<T[P], AggregateMenuCategory[P]>
  }




  export type MenuCategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuCategoryWhereInput
    orderBy?: MenuCategoryOrderByWithAggregationInput | MenuCategoryOrderByWithAggregationInput[]
    by: MenuCategoryScalarFieldEnum[] | MenuCategoryScalarFieldEnum
    having?: MenuCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MenuCategoryCountAggregateInputType | true
    _avg?: MenuCategoryAvgAggregateInputType
    _sum?: MenuCategorySumAggregateInputType
    _min?: MenuCategoryMinAggregateInputType
    _max?: MenuCategoryMaxAggregateInputType
  }

  export type MenuCategoryGroupByOutputType = {
    id: number
    name: string
    menuProfileID: number
    imageURL: string | null
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: MenuCategoryCountAggregateOutputType | null
    _avg: MenuCategoryAvgAggregateOutputType | null
    _sum: MenuCategorySumAggregateOutputType | null
    _min: MenuCategoryMinAggregateOutputType | null
    _max: MenuCategoryMaxAggregateOutputType | null
  }

  type GetMenuCategoryGroupByPayload<T extends MenuCategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MenuCategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MenuCategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MenuCategoryGroupByOutputType[P]>
            : GetScalarType<T[P], MenuCategoryGroupByOutputType[P]>
        }
      >
    >


  export type MenuCategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    menuProfileID?: boolean
    imageURL?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    menuProfile?: boolean | MenuProfileDefaultArgs<ExtArgs>
    menuItems?: boolean | MenuCategory$menuItemsArgs<ExtArgs>
    _count?: boolean | MenuCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["menuCategory"]>



  export type MenuCategorySelectScalar = {
    id?: boolean
    name?: boolean
    menuProfileID?: boolean
    imageURL?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type MenuCategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "menuProfileID" | "imageURL" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["menuCategory"]>
  export type MenuCategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menuProfile?: boolean | MenuProfileDefaultArgs<ExtArgs>
    menuItems?: boolean | MenuCategory$menuItemsArgs<ExtArgs>
    _count?: boolean | MenuCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $MenuCategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MenuCategory"
    objects: {
      menuProfile: Prisma.$MenuProfilePayload<ExtArgs>
      menuItems: Prisma.$MenuItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      menuProfileID: number
      imageURL: string | null
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["menuCategory"]>
    composites: {}
  }

  type MenuCategoryGetPayload<S extends boolean | null | undefined | MenuCategoryDefaultArgs> = $Result.GetResult<Prisma.$MenuCategoryPayload, S>

  type MenuCategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MenuCategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MenuCategoryCountAggregateInputType | true
    }

  export interface MenuCategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MenuCategory'], meta: { name: 'MenuCategory' } }
    /**
     * Find zero or one MenuCategory that matches the filter.
     * @param {MenuCategoryFindUniqueArgs} args - Arguments to find a MenuCategory
     * @example
     * // Get one MenuCategory
     * const menuCategory = await prisma.menuCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MenuCategoryFindUniqueArgs>(args: SelectSubset<T, MenuCategoryFindUniqueArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MenuCategory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MenuCategoryFindUniqueOrThrowArgs} args - Arguments to find a MenuCategory
     * @example
     * // Get one MenuCategory
     * const menuCategory = await prisma.menuCategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MenuCategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, MenuCategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MenuCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuCategoryFindFirstArgs} args - Arguments to find a MenuCategory
     * @example
     * // Get one MenuCategory
     * const menuCategory = await prisma.menuCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MenuCategoryFindFirstArgs>(args?: SelectSubset<T, MenuCategoryFindFirstArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MenuCategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuCategoryFindFirstOrThrowArgs} args - Arguments to find a MenuCategory
     * @example
     * // Get one MenuCategory
     * const menuCategory = await prisma.menuCategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MenuCategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, MenuCategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MenuCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuCategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MenuCategories
     * const menuCategories = await prisma.menuCategory.findMany()
     * 
     * // Get first 10 MenuCategories
     * const menuCategories = await prisma.menuCategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const menuCategoryWithIdOnly = await prisma.menuCategory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MenuCategoryFindManyArgs>(args?: SelectSubset<T, MenuCategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MenuCategory.
     * @param {MenuCategoryCreateArgs} args - Arguments to create a MenuCategory.
     * @example
     * // Create one MenuCategory
     * const MenuCategory = await prisma.menuCategory.create({
     *   data: {
     *     // ... data to create a MenuCategory
     *   }
     * })
     * 
     */
    create<T extends MenuCategoryCreateArgs>(args: SelectSubset<T, MenuCategoryCreateArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MenuCategories.
     * @param {MenuCategoryCreateManyArgs} args - Arguments to create many MenuCategories.
     * @example
     * // Create many MenuCategories
     * const menuCategory = await prisma.menuCategory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MenuCategoryCreateManyArgs>(args?: SelectSubset<T, MenuCategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a MenuCategory.
     * @param {MenuCategoryDeleteArgs} args - Arguments to delete one MenuCategory.
     * @example
     * // Delete one MenuCategory
     * const MenuCategory = await prisma.menuCategory.delete({
     *   where: {
     *     // ... filter to delete one MenuCategory
     *   }
     * })
     * 
     */
    delete<T extends MenuCategoryDeleteArgs>(args: SelectSubset<T, MenuCategoryDeleteArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MenuCategory.
     * @param {MenuCategoryUpdateArgs} args - Arguments to update one MenuCategory.
     * @example
     * // Update one MenuCategory
     * const menuCategory = await prisma.menuCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MenuCategoryUpdateArgs>(args: SelectSubset<T, MenuCategoryUpdateArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MenuCategories.
     * @param {MenuCategoryDeleteManyArgs} args - Arguments to filter MenuCategories to delete.
     * @example
     * // Delete a few MenuCategories
     * const { count } = await prisma.menuCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MenuCategoryDeleteManyArgs>(args?: SelectSubset<T, MenuCategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MenuCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MenuCategories
     * const menuCategory = await prisma.menuCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MenuCategoryUpdateManyArgs>(args: SelectSubset<T, MenuCategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MenuCategory.
     * @param {MenuCategoryUpsertArgs} args - Arguments to update or create a MenuCategory.
     * @example
     * // Update or create a MenuCategory
     * const menuCategory = await prisma.menuCategory.upsert({
     *   create: {
     *     // ... data to create a MenuCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MenuCategory we want to update
     *   }
     * })
     */
    upsert<T extends MenuCategoryUpsertArgs>(args: SelectSubset<T, MenuCategoryUpsertArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MenuCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuCategoryCountArgs} args - Arguments to filter MenuCategories to count.
     * @example
     * // Count the number of MenuCategories
     * const count = await prisma.menuCategory.count({
     *   where: {
     *     // ... the filter for the MenuCategories we want to count
     *   }
     * })
    **/
    count<T extends MenuCategoryCountArgs>(
      args?: Subset<T, MenuCategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MenuCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MenuCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MenuCategoryAggregateArgs>(args: Subset<T, MenuCategoryAggregateArgs>): Prisma.PrismaPromise<GetMenuCategoryAggregateType<T>>

    /**
     * Group by MenuCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MenuCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MenuCategoryGroupByArgs['orderBy'] }
        : { orderBy?: MenuCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MenuCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMenuCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MenuCategory model
   */
  readonly fields: MenuCategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MenuCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MenuCategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    menuProfile<T extends MenuProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MenuProfileDefaultArgs<ExtArgs>>): Prisma__MenuProfileClient<$Result.GetResult<Prisma.$MenuProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    menuItems<T extends MenuCategory$menuItemsArgs<ExtArgs> = {}>(args?: Subset<T, MenuCategory$menuItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MenuCategory model
   */
  interface MenuCategoryFieldRefs {
    readonly id: FieldRef<"MenuCategory", 'Int'>
    readonly name: FieldRef<"MenuCategory", 'String'>
    readonly menuProfileID: FieldRef<"MenuCategory", 'Int'>
    readonly imageURL: FieldRef<"MenuCategory", 'String'>
    readonly deleted: FieldRef<"MenuCategory", 'Boolean'>
    readonly deletedAt: FieldRef<"MenuCategory", 'DateTime'>
    readonly createdAt: FieldRef<"MenuCategory", 'DateTime'>
    readonly updatedAt: FieldRef<"MenuCategory", 'DateTime'>
    readonly version: FieldRef<"MenuCategory", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MenuCategory findUnique
   */
  export type MenuCategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuCategory
     */
    omit?: MenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * Filter, which MenuCategory to fetch.
     */
    where: MenuCategoryWhereUniqueInput
  }

  /**
   * MenuCategory findUniqueOrThrow
   */
  export type MenuCategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuCategory
     */
    omit?: MenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * Filter, which MenuCategory to fetch.
     */
    where: MenuCategoryWhereUniqueInput
  }

  /**
   * MenuCategory findFirst
   */
  export type MenuCategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuCategory
     */
    omit?: MenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * Filter, which MenuCategory to fetch.
     */
    where?: MenuCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuCategories to fetch.
     */
    orderBy?: MenuCategoryOrderByWithRelationInput | MenuCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MenuCategories.
     */
    cursor?: MenuCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MenuCategories.
     */
    distinct?: MenuCategoryScalarFieldEnum | MenuCategoryScalarFieldEnum[]
  }

  /**
   * MenuCategory findFirstOrThrow
   */
  export type MenuCategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuCategory
     */
    omit?: MenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * Filter, which MenuCategory to fetch.
     */
    where?: MenuCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuCategories to fetch.
     */
    orderBy?: MenuCategoryOrderByWithRelationInput | MenuCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MenuCategories.
     */
    cursor?: MenuCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MenuCategories.
     */
    distinct?: MenuCategoryScalarFieldEnum | MenuCategoryScalarFieldEnum[]
  }

  /**
   * MenuCategory findMany
   */
  export type MenuCategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuCategory
     */
    omit?: MenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * Filter, which MenuCategories to fetch.
     */
    where?: MenuCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuCategories to fetch.
     */
    orderBy?: MenuCategoryOrderByWithRelationInput | MenuCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MenuCategories.
     */
    cursor?: MenuCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuCategories.
     */
    skip?: number
    distinct?: MenuCategoryScalarFieldEnum | MenuCategoryScalarFieldEnum[]
  }

  /**
   * MenuCategory create
   */
  export type MenuCategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuCategory
     */
    omit?: MenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a MenuCategory.
     */
    data: XOR<MenuCategoryCreateInput, MenuCategoryUncheckedCreateInput>
  }

  /**
   * MenuCategory createMany
   */
  export type MenuCategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MenuCategories.
     */
    data: MenuCategoryCreateManyInput | MenuCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MenuCategory update
   */
  export type MenuCategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuCategory
     */
    omit?: MenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a MenuCategory.
     */
    data: XOR<MenuCategoryUpdateInput, MenuCategoryUncheckedUpdateInput>
    /**
     * Choose, which MenuCategory to update.
     */
    where: MenuCategoryWhereUniqueInput
  }

  /**
   * MenuCategory updateMany
   */
  export type MenuCategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MenuCategories.
     */
    data: XOR<MenuCategoryUpdateManyMutationInput, MenuCategoryUncheckedUpdateManyInput>
    /**
     * Filter which MenuCategories to update
     */
    where?: MenuCategoryWhereInput
    /**
     * Limit how many MenuCategories to update.
     */
    limit?: number
  }

  /**
   * MenuCategory upsert
   */
  export type MenuCategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuCategory
     */
    omit?: MenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the MenuCategory to update in case it exists.
     */
    where: MenuCategoryWhereUniqueInput
    /**
     * In case the MenuCategory found by the `where` argument doesn't exist, create a new MenuCategory with this data.
     */
    create: XOR<MenuCategoryCreateInput, MenuCategoryUncheckedCreateInput>
    /**
     * In case the MenuCategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MenuCategoryUpdateInput, MenuCategoryUncheckedUpdateInput>
  }

  /**
   * MenuCategory delete
   */
  export type MenuCategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuCategory
     */
    omit?: MenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * Filter which MenuCategory to delete.
     */
    where: MenuCategoryWhereUniqueInput
  }

  /**
   * MenuCategory deleteMany
   */
  export type MenuCategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MenuCategories to delete
     */
    where?: MenuCategoryWhereInput
    /**
     * Limit how many MenuCategories to delete.
     */
    limit?: number
  }

  /**
   * MenuCategory.menuItems
   */
  export type MenuCategory$menuItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItem
     */
    select?: MenuItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItem
     */
    omit?: MenuItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemInclude<ExtArgs> | null
    where?: MenuItemWhereInput
    orderBy?: MenuItemOrderByWithRelationInput | MenuItemOrderByWithRelationInput[]
    cursor?: MenuItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MenuItemScalarFieldEnum | MenuItemScalarFieldEnum[]
  }

  /**
   * MenuCategory without action
   */
  export type MenuCategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuCategory
     */
    omit?: MenuCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
  }


  /**
   * Model MenuItem
   */

  export type AggregateMenuItem = {
    _count: MenuItemCountAggregateOutputType | null
    _avg: MenuItemAvgAggregateOutputType | null
    _sum: MenuItemSumAggregateOutputType | null
    _min: MenuItemMinAggregateOutputType | null
    _max: MenuItemMaxAggregateOutputType | null
  }

  export type MenuItemAvgAggregateOutputType = {
    id: number | null
    itemID: number | null
    price: Decimal | null
    sequence: number | null
    menuCategoryID: number | null
    version: number | null
  }

  export type MenuItemSumAggregateOutputType = {
    id: number | null
    itemID: number | null
    price: Decimal | null
    sequence: number | null
    menuCategoryID: number | null
    version: number | null
  }

  export type MenuItemMinAggregateOutputType = {
    id: number | null
    name: string | null
    itemID: number | null
    itemCode: string | null
    imageURL: string | null
    price: Decimal | null
    sequence: number | null
    menuCategoryID: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type MenuItemMaxAggregateOutputType = {
    id: number | null
    name: string | null
    itemID: number | null
    itemCode: string | null
    imageURL: string | null
    price: Decimal | null
    sequence: number | null
    menuCategoryID: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type MenuItemCountAggregateOutputType = {
    id: number
    name: number
    itemID: number
    itemCode: number
    imageURL: number
    price: number
    sequence: number
    menuCategoryID: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type MenuItemAvgAggregateInputType = {
    id?: true
    itemID?: true
    price?: true
    sequence?: true
    menuCategoryID?: true
    version?: true
  }

  export type MenuItemSumAggregateInputType = {
    id?: true
    itemID?: true
    price?: true
    sequence?: true
    menuCategoryID?: true
    version?: true
  }

  export type MenuItemMinAggregateInputType = {
    id?: true
    name?: true
    itemID?: true
    itemCode?: true
    imageURL?: true
    price?: true
    sequence?: true
    menuCategoryID?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type MenuItemMaxAggregateInputType = {
    id?: true
    name?: true
    itemID?: true
    itemCode?: true
    imageURL?: true
    price?: true
    sequence?: true
    menuCategoryID?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type MenuItemCountAggregateInputType = {
    id?: true
    name?: true
    itemID?: true
    itemCode?: true
    imageURL?: true
    price?: true
    sequence?: true
    menuCategoryID?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type MenuItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MenuItem to aggregate.
     */
    where?: MenuItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuItems to fetch.
     */
    orderBy?: MenuItemOrderByWithRelationInput | MenuItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MenuItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MenuItems
    **/
    _count?: true | MenuItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MenuItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MenuItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MenuItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MenuItemMaxAggregateInputType
  }

  export type GetMenuItemAggregateType<T extends MenuItemAggregateArgs> = {
        [P in keyof T & keyof AggregateMenuItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMenuItem[P]>
      : GetScalarType<T[P], AggregateMenuItem[P]>
  }




  export type MenuItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuItemWhereInput
    orderBy?: MenuItemOrderByWithAggregationInput | MenuItemOrderByWithAggregationInput[]
    by: MenuItemScalarFieldEnum[] | MenuItemScalarFieldEnum
    having?: MenuItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MenuItemCountAggregateInputType | true
    _avg?: MenuItemAvgAggregateInputType
    _sum?: MenuItemSumAggregateInputType
    _min?: MenuItemMinAggregateInputType
    _max?: MenuItemMaxAggregateInputType
  }

  export type MenuItemGroupByOutputType = {
    id: number
    name: string
    itemID: number
    itemCode: string
    imageURL: string | null
    price: Decimal
    sequence: number
    menuCategoryID: number
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: MenuItemCountAggregateOutputType | null
    _avg: MenuItemAvgAggregateOutputType | null
    _sum: MenuItemSumAggregateOutputType | null
    _min: MenuItemMinAggregateOutputType | null
    _max: MenuItemMaxAggregateOutputType | null
  }

  type GetMenuItemGroupByPayload<T extends MenuItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MenuItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MenuItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MenuItemGroupByOutputType[P]>
            : GetScalarType<T[P], MenuItemGroupByOutputType[P]>
        }
      >
    >


  export type MenuItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    itemID?: boolean
    itemCode?: boolean
    imageURL?: boolean
    price?: boolean
    sequence?: boolean
    menuCategoryID?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    menuCategory?: boolean | MenuCategoryDefaultArgs<ExtArgs>
    menuItemModifierGroups?: boolean | MenuItem$menuItemModifierGroupsArgs<ExtArgs>
    recipes?: boolean | MenuItem$recipesArgs<ExtArgs>
    _count?: boolean | MenuItemCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["menuItem"]>



  export type MenuItemSelectScalar = {
    id?: boolean
    name?: boolean
    itemID?: boolean
    itemCode?: boolean
    imageURL?: boolean
    price?: boolean
    sequence?: boolean
    menuCategoryID?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type MenuItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "itemID" | "itemCode" | "imageURL" | "price" | "sequence" | "menuCategoryID" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["menuItem"]>
  export type MenuItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menuCategory?: boolean | MenuCategoryDefaultArgs<ExtArgs>
    menuItemModifierGroups?: boolean | MenuItem$menuItemModifierGroupsArgs<ExtArgs>
    recipes?: boolean | MenuItem$recipesArgs<ExtArgs>
    _count?: boolean | MenuItemCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $MenuItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MenuItem"
    objects: {
      menuCategory: Prisma.$MenuCategoryPayload<ExtArgs>
      menuItemModifierGroups: Prisma.$MenuItemModifierGroupPayload<ExtArgs>[]
      recipes: Prisma.$RecipePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      itemID: number
      itemCode: string
      imageURL: string | null
      price: Prisma.Decimal
      sequence: number
      menuCategoryID: number
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["menuItem"]>
    composites: {}
  }

  type MenuItemGetPayload<S extends boolean | null | undefined | MenuItemDefaultArgs> = $Result.GetResult<Prisma.$MenuItemPayload, S>

  type MenuItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MenuItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MenuItemCountAggregateInputType | true
    }

  export interface MenuItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MenuItem'], meta: { name: 'MenuItem' } }
    /**
     * Find zero or one MenuItem that matches the filter.
     * @param {MenuItemFindUniqueArgs} args - Arguments to find a MenuItem
     * @example
     * // Get one MenuItem
     * const menuItem = await prisma.menuItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MenuItemFindUniqueArgs>(args: SelectSubset<T, MenuItemFindUniqueArgs<ExtArgs>>): Prisma__MenuItemClient<$Result.GetResult<Prisma.$MenuItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MenuItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MenuItemFindUniqueOrThrowArgs} args - Arguments to find a MenuItem
     * @example
     * // Get one MenuItem
     * const menuItem = await prisma.menuItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MenuItemFindUniqueOrThrowArgs>(args: SelectSubset<T, MenuItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MenuItemClient<$Result.GetResult<Prisma.$MenuItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MenuItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemFindFirstArgs} args - Arguments to find a MenuItem
     * @example
     * // Get one MenuItem
     * const menuItem = await prisma.menuItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MenuItemFindFirstArgs>(args?: SelectSubset<T, MenuItemFindFirstArgs<ExtArgs>>): Prisma__MenuItemClient<$Result.GetResult<Prisma.$MenuItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MenuItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemFindFirstOrThrowArgs} args - Arguments to find a MenuItem
     * @example
     * // Get one MenuItem
     * const menuItem = await prisma.menuItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MenuItemFindFirstOrThrowArgs>(args?: SelectSubset<T, MenuItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__MenuItemClient<$Result.GetResult<Prisma.$MenuItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MenuItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MenuItems
     * const menuItems = await prisma.menuItem.findMany()
     * 
     * // Get first 10 MenuItems
     * const menuItems = await prisma.menuItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const menuItemWithIdOnly = await prisma.menuItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MenuItemFindManyArgs>(args?: SelectSubset<T, MenuItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MenuItem.
     * @param {MenuItemCreateArgs} args - Arguments to create a MenuItem.
     * @example
     * // Create one MenuItem
     * const MenuItem = await prisma.menuItem.create({
     *   data: {
     *     // ... data to create a MenuItem
     *   }
     * })
     * 
     */
    create<T extends MenuItemCreateArgs>(args: SelectSubset<T, MenuItemCreateArgs<ExtArgs>>): Prisma__MenuItemClient<$Result.GetResult<Prisma.$MenuItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MenuItems.
     * @param {MenuItemCreateManyArgs} args - Arguments to create many MenuItems.
     * @example
     * // Create many MenuItems
     * const menuItem = await prisma.menuItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MenuItemCreateManyArgs>(args?: SelectSubset<T, MenuItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a MenuItem.
     * @param {MenuItemDeleteArgs} args - Arguments to delete one MenuItem.
     * @example
     * // Delete one MenuItem
     * const MenuItem = await prisma.menuItem.delete({
     *   where: {
     *     // ... filter to delete one MenuItem
     *   }
     * })
     * 
     */
    delete<T extends MenuItemDeleteArgs>(args: SelectSubset<T, MenuItemDeleteArgs<ExtArgs>>): Prisma__MenuItemClient<$Result.GetResult<Prisma.$MenuItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MenuItem.
     * @param {MenuItemUpdateArgs} args - Arguments to update one MenuItem.
     * @example
     * // Update one MenuItem
     * const menuItem = await prisma.menuItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MenuItemUpdateArgs>(args: SelectSubset<T, MenuItemUpdateArgs<ExtArgs>>): Prisma__MenuItemClient<$Result.GetResult<Prisma.$MenuItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MenuItems.
     * @param {MenuItemDeleteManyArgs} args - Arguments to filter MenuItems to delete.
     * @example
     * // Delete a few MenuItems
     * const { count } = await prisma.menuItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MenuItemDeleteManyArgs>(args?: SelectSubset<T, MenuItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MenuItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MenuItems
     * const menuItem = await prisma.menuItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MenuItemUpdateManyArgs>(args: SelectSubset<T, MenuItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MenuItem.
     * @param {MenuItemUpsertArgs} args - Arguments to update or create a MenuItem.
     * @example
     * // Update or create a MenuItem
     * const menuItem = await prisma.menuItem.upsert({
     *   create: {
     *     // ... data to create a MenuItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MenuItem we want to update
     *   }
     * })
     */
    upsert<T extends MenuItemUpsertArgs>(args: SelectSubset<T, MenuItemUpsertArgs<ExtArgs>>): Prisma__MenuItemClient<$Result.GetResult<Prisma.$MenuItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MenuItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemCountArgs} args - Arguments to filter MenuItems to count.
     * @example
     * // Count the number of MenuItems
     * const count = await prisma.menuItem.count({
     *   where: {
     *     // ... the filter for the MenuItems we want to count
     *   }
     * })
    **/
    count<T extends MenuItemCountArgs>(
      args?: Subset<T, MenuItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MenuItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MenuItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MenuItemAggregateArgs>(args: Subset<T, MenuItemAggregateArgs>): Prisma.PrismaPromise<GetMenuItemAggregateType<T>>

    /**
     * Group by MenuItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MenuItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MenuItemGroupByArgs['orderBy'] }
        : { orderBy?: MenuItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MenuItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMenuItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MenuItem model
   */
  readonly fields: MenuItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MenuItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MenuItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    menuCategory<T extends MenuCategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MenuCategoryDefaultArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    menuItemModifierGroups<T extends MenuItem$menuItemModifierGroupsArgs<ExtArgs> = {}>(args?: Subset<T, MenuItem$menuItemModifierGroupsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuItemModifierGroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    recipes<T extends MenuItem$recipesArgs<ExtArgs> = {}>(args?: Subset<T, MenuItem$recipesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RecipePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MenuItem model
   */
  interface MenuItemFieldRefs {
    readonly id: FieldRef<"MenuItem", 'Int'>
    readonly name: FieldRef<"MenuItem", 'String'>
    readonly itemID: FieldRef<"MenuItem", 'Int'>
    readonly itemCode: FieldRef<"MenuItem", 'String'>
    readonly imageURL: FieldRef<"MenuItem", 'String'>
    readonly price: FieldRef<"MenuItem", 'Decimal'>
    readonly sequence: FieldRef<"MenuItem", 'Int'>
    readonly menuCategoryID: FieldRef<"MenuItem", 'Int'>
    readonly deleted: FieldRef<"MenuItem", 'Boolean'>
    readonly deletedAt: FieldRef<"MenuItem", 'DateTime'>
    readonly createdAt: FieldRef<"MenuItem", 'DateTime'>
    readonly updatedAt: FieldRef<"MenuItem", 'DateTime'>
    readonly version: FieldRef<"MenuItem", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MenuItem findUnique
   */
  export type MenuItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItem
     */
    select?: MenuItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItem
     */
    omit?: MenuItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemInclude<ExtArgs> | null
    /**
     * Filter, which MenuItem to fetch.
     */
    where: MenuItemWhereUniqueInput
  }

  /**
   * MenuItem findUniqueOrThrow
   */
  export type MenuItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItem
     */
    select?: MenuItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItem
     */
    omit?: MenuItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemInclude<ExtArgs> | null
    /**
     * Filter, which MenuItem to fetch.
     */
    where: MenuItemWhereUniqueInput
  }

  /**
   * MenuItem findFirst
   */
  export type MenuItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItem
     */
    select?: MenuItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItem
     */
    omit?: MenuItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemInclude<ExtArgs> | null
    /**
     * Filter, which MenuItem to fetch.
     */
    where?: MenuItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuItems to fetch.
     */
    orderBy?: MenuItemOrderByWithRelationInput | MenuItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MenuItems.
     */
    cursor?: MenuItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MenuItems.
     */
    distinct?: MenuItemScalarFieldEnum | MenuItemScalarFieldEnum[]
  }

  /**
   * MenuItem findFirstOrThrow
   */
  export type MenuItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItem
     */
    select?: MenuItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItem
     */
    omit?: MenuItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemInclude<ExtArgs> | null
    /**
     * Filter, which MenuItem to fetch.
     */
    where?: MenuItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuItems to fetch.
     */
    orderBy?: MenuItemOrderByWithRelationInput | MenuItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MenuItems.
     */
    cursor?: MenuItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MenuItems.
     */
    distinct?: MenuItemScalarFieldEnum | MenuItemScalarFieldEnum[]
  }

  /**
   * MenuItem findMany
   */
  export type MenuItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItem
     */
    select?: MenuItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItem
     */
    omit?: MenuItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemInclude<ExtArgs> | null
    /**
     * Filter, which MenuItems to fetch.
     */
    where?: MenuItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuItems to fetch.
     */
    orderBy?: MenuItemOrderByWithRelationInput | MenuItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MenuItems.
     */
    cursor?: MenuItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuItems.
     */
    skip?: number
    distinct?: MenuItemScalarFieldEnum | MenuItemScalarFieldEnum[]
  }

  /**
   * MenuItem create
   */
  export type MenuItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItem
     */
    select?: MenuItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItem
     */
    omit?: MenuItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemInclude<ExtArgs> | null
    /**
     * The data needed to create a MenuItem.
     */
    data: XOR<MenuItemCreateInput, MenuItemUncheckedCreateInput>
  }

  /**
   * MenuItem createMany
   */
  export type MenuItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MenuItems.
     */
    data: MenuItemCreateManyInput | MenuItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MenuItem update
   */
  export type MenuItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItem
     */
    select?: MenuItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItem
     */
    omit?: MenuItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemInclude<ExtArgs> | null
    /**
     * The data needed to update a MenuItem.
     */
    data: XOR<MenuItemUpdateInput, MenuItemUncheckedUpdateInput>
    /**
     * Choose, which MenuItem to update.
     */
    where: MenuItemWhereUniqueInput
  }

  /**
   * MenuItem updateMany
   */
  export type MenuItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MenuItems.
     */
    data: XOR<MenuItemUpdateManyMutationInput, MenuItemUncheckedUpdateManyInput>
    /**
     * Filter which MenuItems to update
     */
    where?: MenuItemWhereInput
    /**
     * Limit how many MenuItems to update.
     */
    limit?: number
  }

  /**
   * MenuItem upsert
   */
  export type MenuItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItem
     */
    select?: MenuItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItem
     */
    omit?: MenuItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemInclude<ExtArgs> | null
    /**
     * The filter to search for the MenuItem to update in case it exists.
     */
    where: MenuItemWhereUniqueInput
    /**
     * In case the MenuItem found by the `where` argument doesn't exist, create a new MenuItem with this data.
     */
    create: XOR<MenuItemCreateInput, MenuItemUncheckedCreateInput>
    /**
     * In case the MenuItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MenuItemUpdateInput, MenuItemUncheckedUpdateInput>
  }

  /**
   * MenuItem delete
   */
  export type MenuItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItem
     */
    select?: MenuItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItem
     */
    omit?: MenuItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemInclude<ExtArgs> | null
    /**
     * Filter which MenuItem to delete.
     */
    where: MenuItemWhereUniqueInput
  }

  /**
   * MenuItem deleteMany
   */
  export type MenuItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MenuItems to delete
     */
    where?: MenuItemWhereInput
    /**
     * Limit how many MenuItems to delete.
     */
    limit?: number
  }

  /**
   * MenuItem.menuItemModifierGroups
   */
  export type MenuItem$menuItemModifierGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifierGroup
     */
    select?: MenuItemModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifierGroup
     */
    omit?: MenuItemModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierGroupInclude<ExtArgs> | null
    where?: MenuItemModifierGroupWhereInput
    orderBy?: MenuItemModifierGroupOrderByWithRelationInput | MenuItemModifierGroupOrderByWithRelationInput[]
    cursor?: MenuItemModifierGroupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MenuItemModifierGroupScalarFieldEnum | MenuItemModifierGroupScalarFieldEnum[]
  }

  /**
   * MenuItem.recipes
   */
  export type MenuItem$recipesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recipe
     */
    select?: RecipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recipe
     */
    omit?: RecipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecipeInclude<ExtArgs> | null
    where?: RecipeWhereInput
    orderBy?: RecipeOrderByWithRelationInput | RecipeOrderByWithRelationInput[]
    cursor?: RecipeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RecipeScalarFieldEnum | RecipeScalarFieldEnum[]
  }

  /**
   * MenuItem without action
   */
  export type MenuItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItem
     */
    select?: MenuItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItem
     */
    omit?: MenuItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemInclude<ExtArgs> | null
  }


  /**
   * Model MenuItemModifierGroup
   */

  export type AggregateMenuItemModifierGroup = {
    _count: MenuItemModifierGroupCountAggregateOutputType | null
    _avg: MenuItemModifierGroupAvgAggregateOutputType | null
    _sum: MenuItemModifierGroupSumAggregateOutputType | null
    _min: MenuItemModifierGroupMinAggregateOutputType | null
    _max: MenuItemModifierGroupMaxAggregateOutputType | null
  }

  export type MenuItemModifierGroupAvgAggregateOutputType = {
    id: number | null
    minSelection: number | null
    maxSelection: number | null
    sequence: number | null
    menuItemID: number | null
    version: number | null
    freeModifierLimit: number | null
  }

  export type MenuItemModifierGroupSumAggregateOutputType = {
    id: number | null
    minSelection: number | null
    maxSelection: number | null
    sequence: number | null
    menuItemID: number | null
    version: number | null
    freeModifierLimit: number | null
  }

  export type MenuItemModifierGroupMinAggregateOutputType = {
    id: number | null
    name: string | null
    minSelection: number | null
    maxSelection: number | null
    sequence: number | null
    menuItemID: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    freeModifierLimit: number | null
  }

  export type MenuItemModifierGroupMaxAggregateOutputType = {
    id: number | null
    name: string | null
    minSelection: number | null
    maxSelection: number | null
    sequence: number | null
    menuItemID: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    freeModifierLimit: number | null
  }

  export type MenuItemModifierGroupCountAggregateOutputType = {
    id: number
    name: number
    minSelection: number
    maxSelection: number
    sequence: number
    menuItemID: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    freeModifierLimit: number
    _all: number
  }


  export type MenuItemModifierGroupAvgAggregateInputType = {
    id?: true
    minSelection?: true
    maxSelection?: true
    sequence?: true
    menuItemID?: true
    version?: true
    freeModifierLimit?: true
  }

  export type MenuItemModifierGroupSumAggregateInputType = {
    id?: true
    minSelection?: true
    maxSelection?: true
    sequence?: true
    menuItemID?: true
    version?: true
    freeModifierLimit?: true
  }

  export type MenuItemModifierGroupMinAggregateInputType = {
    id?: true
    name?: true
    minSelection?: true
    maxSelection?: true
    sequence?: true
    menuItemID?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    freeModifierLimit?: true
  }

  export type MenuItemModifierGroupMaxAggregateInputType = {
    id?: true
    name?: true
    minSelection?: true
    maxSelection?: true
    sequence?: true
    menuItemID?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    freeModifierLimit?: true
  }

  export type MenuItemModifierGroupCountAggregateInputType = {
    id?: true
    name?: true
    minSelection?: true
    maxSelection?: true
    sequence?: true
    menuItemID?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    freeModifierLimit?: true
    _all?: true
  }

  export type MenuItemModifierGroupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MenuItemModifierGroup to aggregate.
     */
    where?: MenuItemModifierGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuItemModifierGroups to fetch.
     */
    orderBy?: MenuItemModifierGroupOrderByWithRelationInput | MenuItemModifierGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MenuItemModifierGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuItemModifierGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuItemModifierGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MenuItemModifierGroups
    **/
    _count?: true | MenuItemModifierGroupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MenuItemModifierGroupAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MenuItemModifierGroupSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MenuItemModifierGroupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MenuItemModifierGroupMaxAggregateInputType
  }

  export type GetMenuItemModifierGroupAggregateType<T extends MenuItemModifierGroupAggregateArgs> = {
        [P in keyof T & keyof AggregateMenuItemModifierGroup]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMenuItemModifierGroup[P]>
      : GetScalarType<T[P], AggregateMenuItemModifierGroup[P]>
  }




  export type MenuItemModifierGroupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuItemModifierGroupWhereInput
    orderBy?: MenuItemModifierGroupOrderByWithAggregationInput | MenuItemModifierGroupOrderByWithAggregationInput[]
    by: MenuItemModifierGroupScalarFieldEnum[] | MenuItemModifierGroupScalarFieldEnum
    having?: MenuItemModifierGroupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MenuItemModifierGroupCountAggregateInputType | true
    _avg?: MenuItemModifierGroupAvgAggregateInputType
    _sum?: MenuItemModifierGroupSumAggregateInputType
    _min?: MenuItemModifierGroupMinAggregateInputType
    _max?: MenuItemModifierGroupMaxAggregateInputType
  }

  export type MenuItemModifierGroupGroupByOutputType = {
    id: number
    name: string
    minSelection: number
    maxSelection: number
    sequence: number
    menuItemID: number
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    freeModifierLimit: number | null
    _count: MenuItemModifierGroupCountAggregateOutputType | null
    _avg: MenuItemModifierGroupAvgAggregateOutputType | null
    _sum: MenuItemModifierGroupSumAggregateOutputType | null
    _min: MenuItemModifierGroupMinAggregateOutputType | null
    _max: MenuItemModifierGroupMaxAggregateOutputType | null
  }

  type GetMenuItemModifierGroupGroupByPayload<T extends MenuItemModifierGroupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MenuItemModifierGroupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MenuItemModifierGroupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MenuItemModifierGroupGroupByOutputType[P]>
            : GetScalarType<T[P], MenuItemModifierGroupGroupByOutputType[P]>
        }
      >
    >


  export type MenuItemModifierGroupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    minSelection?: boolean
    maxSelection?: boolean
    sequence?: boolean
    menuItemID?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    freeModifierLimit?: boolean
    menuItem?: boolean | MenuItemDefaultArgs<ExtArgs>
    menuItemModifiers?: boolean | MenuItemModifierGroup$menuItemModifiersArgs<ExtArgs>
    _count?: boolean | MenuItemModifierGroupCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["menuItemModifierGroup"]>



  export type MenuItemModifierGroupSelectScalar = {
    id?: boolean
    name?: boolean
    minSelection?: boolean
    maxSelection?: boolean
    sequence?: boolean
    menuItemID?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    freeModifierLimit?: boolean
  }

  export type MenuItemModifierGroupOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "minSelection" | "maxSelection" | "sequence" | "menuItemID" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version" | "freeModifierLimit", ExtArgs["result"]["menuItemModifierGroup"]>
  export type MenuItemModifierGroupInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menuItem?: boolean | MenuItemDefaultArgs<ExtArgs>
    menuItemModifiers?: boolean | MenuItemModifierGroup$menuItemModifiersArgs<ExtArgs>
    _count?: boolean | MenuItemModifierGroupCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $MenuItemModifierGroupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MenuItemModifierGroup"
    objects: {
      menuItem: Prisma.$MenuItemPayload<ExtArgs>
      menuItemModifiers: Prisma.$MenuItemModifierPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      minSelection: number
      maxSelection: number
      sequence: number
      menuItemID: number
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
      freeModifierLimit: number | null
    }, ExtArgs["result"]["menuItemModifierGroup"]>
    composites: {}
  }

  type MenuItemModifierGroupGetPayload<S extends boolean | null | undefined | MenuItemModifierGroupDefaultArgs> = $Result.GetResult<Prisma.$MenuItemModifierGroupPayload, S>

  type MenuItemModifierGroupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MenuItemModifierGroupFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MenuItemModifierGroupCountAggregateInputType | true
    }

  export interface MenuItemModifierGroupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MenuItemModifierGroup'], meta: { name: 'MenuItemModifierGroup' } }
    /**
     * Find zero or one MenuItemModifierGroup that matches the filter.
     * @param {MenuItemModifierGroupFindUniqueArgs} args - Arguments to find a MenuItemModifierGroup
     * @example
     * // Get one MenuItemModifierGroup
     * const menuItemModifierGroup = await prisma.menuItemModifierGroup.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MenuItemModifierGroupFindUniqueArgs>(args: SelectSubset<T, MenuItemModifierGroupFindUniqueArgs<ExtArgs>>): Prisma__MenuItemModifierGroupClient<$Result.GetResult<Prisma.$MenuItemModifierGroupPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MenuItemModifierGroup that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MenuItemModifierGroupFindUniqueOrThrowArgs} args - Arguments to find a MenuItemModifierGroup
     * @example
     * // Get one MenuItemModifierGroup
     * const menuItemModifierGroup = await prisma.menuItemModifierGroup.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MenuItemModifierGroupFindUniqueOrThrowArgs>(args: SelectSubset<T, MenuItemModifierGroupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MenuItemModifierGroupClient<$Result.GetResult<Prisma.$MenuItemModifierGroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MenuItemModifierGroup that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemModifierGroupFindFirstArgs} args - Arguments to find a MenuItemModifierGroup
     * @example
     * // Get one MenuItemModifierGroup
     * const menuItemModifierGroup = await prisma.menuItemModifierGroup.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MenuItemModifierGroupFindFirstArgs>(args?: SelectSubset<T, MenuItemModifierGroupFindFirstArgs<ExtArgs>>): Prisma__MenuItemModifierGroupClient<$Result.GetResult<Prisma.$MenuItemModifierGroupPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MenuItemModifierGroup that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemModifierGroupFindFirstOrThrowArgs} args - Arguments to find a MenuItemModifierGroup
     * @example
     * // Get one MenuItemModifierGroup
     * const menuItemModifierGroup = await prisma.menuItemModifierGroup.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MenuItemModifierGroupFindFirstOrThrowArgs>(args?: SelectSubset<T, MenuItemModifierGroupFindFirstOrThrowArgs<ExtArgs>>): Prisma__MenuItemModifierGroupClient<$Result.GetResult<Prisma.$MenuItemModifierGroupPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MenuItemModifierGroups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemModifierGroupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MenuItemModifierGroups
     * const menuItemModifierGroups = await prisma.menuItemModifierGroup.findMany()
     * 
     * // Get first 10 MenuItemModifierGroups
     * const menuItemModifierGroups = await prisma.menuItemModifierGroup.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const menuItemModifierGroupWithIdOnly = await prisma.menuItemModifierGroup.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MenuItemModifierGroupFindManyArgs>(args?: SelectSubset<T, MenuItemModifierGroupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuItemModifierGroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MenuItemModifierGroup.
     * @param {MenuItemModifierGroupCreateArgs} args - Arguments to create a MenuItemModifierGroup.
     * @example
     * // Create one MenuItemModifierGroup
     * const MenuItemModifierGroup = await prisma.menuItemModifierGroup.create({
     *   data: {
     *     // ... data to create a MenuItemModifierGroup
     *   }
     * })
     * 
     */
    create<T extends MenuItemModifierGroupCreateArgs>(args: SelectSubset<T, MenuItemModifierGroupCreateArgs<ExtArgs>>): Prisma__MenuItemModifierGroupClient<$Result.GetResult<Prisma.$MenuItemModifierGroupPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MenuItemModifierGroups.
     * @param {MenuItemModifierGroupCreateManyArgs} args - Arguments to create many MenuItemModifierGroups.
     * @example
     * // Create many MenuItemModifierGroups
     * const menuItemModifierGroup = await prisma.menuItemModifierGroup.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MenuItemModifierGroupCreateManyArgs>(args?: SelectSubset<T, MenuItemModifierGroupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a MenuItemModifierGroup.
     * @param {MenuItemModifierGroupDeleteArgs} args - Arguments to delete one MenuItemModifierGroup.
     * @example
     * // Delete one MenuItemModifierGroup
     * const MenuItemModifierGroup = await prisma.menuItemModifierGroup.delete({
     *   where: {
     *     // ... filter to delete one MenuItemModifierGroup
     *   }
     * })
     * 
     */
    delete<T extends MenuItemModifierGroupDeleteArgs>(args: SelectSubset<T, MenuItemModifierGroupDeleteArgs<ExtArgs>>): Prisma__MenuItemModifierGroupClient<$Result.GetResult<Prisma.$MenuItemModifierGroupPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MenuItemModifierGroup.
     * @param {MenuItemModifierGroupUpdateArgs} args - Arguments to update one MenuItemModifierGroup.
     * @example
     * // Update one MenuItemModifierGroup
     * const menuItemModifierGroup = await prisma.menuItemModifierGroup.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MenuItemModifierGroupUpdateArgs>(args: SelectSubset<T, MenuItemModifierGroupUpdateArgs<ExtArgs>>): Prisma__MenuItemModifierGroupClient<$Result.GetResult<Prisma.$MenuItemModifierGroupPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MenuItemModifierGroups.
     * @param {MenuItemModifierGroupDeleteManyArgs} args - Arguments to filter MenuItemModifierGroups to delete.
     * @example
     * // Delete a few MenuItemModifierGroups
     * const { count } = await prisma.menuItemModifierGroup.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MenuItemModifierGroupDeleteManyArgs>(args?: SelectSubset<T, MenuItemModifierGroupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MenuItemModifierGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemModifierGroupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MenuItemModifierGroups
     * const menuItemModifierGroup = await prisma.menuItemModifierGroup.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MenuItemModifierGroupUpdateManyArgs>(args: SelectSubset<T, MenuItemModifierGroupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MenuItemModifierGroup.
     * @param {MenuItemModifierGroupUpsertArgs} args - Arguments to update or create a MenuItemModifierGroup.
     * @example
     * // Update or create a MenuItemModifierGroup
     * const menuItemModifierGroup = await prisma.menuItemModifierGroup.upsert({
     *   create: {
     *     // ... data to create a MenuItemModifierGroup
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MenuItemModifierGroup we want to update
     *   }
     * })
     */
    upsert<T extends MenuItemModifierGroupUpsertArgs>(args: SelectSubset<T, MenuItemModifierGroupUpsertArgs<ExtArgs>>): Prisma__MenuItemModifierGroupClient<$Result.GetResult<Prisma.$MenuItemModifierGroupPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MenuItemModifierGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemModifierGroupCountArgs} args - Arguments to filter MenuItemModifierGroups to count.
     * @example
     * // Count the number of MenuItemModifierGroups
     * const count = await prisma.menuItemModifierGroup.count({
     *   where: {
     *     // ... the filter for the MenuItemModifierGroups we want to count
     *   }
     * })
    **/
    count<T extends MenuItemModifierGroupCountArgs>(
      args?: Subset<T, MenuItemModifierGroupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MenuItemModifierGroupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MenuItemModifierGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemModifierGroupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MenuItemModifierGroupAggregateArgs>(args: Subset<T, MenuItemModifierGroupAggregateArgs>): Prisma.PrismaPromise<GetMenuItemModifierGroupAggregateType<T>>

    /**
     * Group by MenuItemModifierGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemModifierGroupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MenuItemModifierGroupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MenuItemModifierGroupGroupByArgs['orderBy'] }
        : { orderBy?: MenuItemModifierGroupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MenuItemModifierGroupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMenuItemModifierGroupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MenuItemModifierGroup model
   */
  readonly fields: MenuItemModifierGroupFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MenuItemModifierGroup.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MenuItemModifierGroupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    menuItem<T extends MenuItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MenuItemDefaultArgs<ExtArgs>>): Prisma__MenuItemClient<$Result.GetResult<Prisma.$MenuItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    menuItemModifiers<T extends MenuItemModifierGroup$menuItemModifiersArgs<ExtArgs> = {}>(args?: Subset<T, MenuItemModifierGroup$menuItemModifiersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuItemModifierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MenuItemModifierGroup model
   */
  interface MenuItemModifierGroupFieldRefs {
    readonly id: FieldRef<"MenuItemModifierGroup", 'Int'>
    readonly name: FieldRef<"MenuItemModifierGroup", 'String'>
    readonly minSelection: FieldRef<"MenuItemModifierGroup", 'Int'>
    readonly maxSelection: FieldRef<"MenuItemModifierGroup", 'Int'>
    readonly sequence: FieldRef<"MenuItemModifierGroup", 'Int'>
    readonly menuItemID: FieldRef<"MenuItemModifierGroup", 'Int'>
    readonly deleted: FieldRef<"MenuItemModifierGroup", 'Boolean'>
    readonly deletedAt: FieldRef<"MenuItemModifierGroup", 'DateTime'>
    readonly createdAt: FieldRef<"MenuItemModifierGroup", 'DateTime'>
    readonly updatedAt: FieldRef<"MenuItemModifierGroup", 'DateTime'>
    readonly version: FieldRef<"MenuItemModifierGroup", 'Int'>
    readonly freeModifierLimit: FieldRef<"MenuItemModifierGroup", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MenuItemModifierGroup findUnique
   */
  export type MenuItemModifierGroupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifierGroup
     */
    select?: MenuItemModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifierGroup
     */
    omit?: MenuItemModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierGroupInclude<ExtArgs> | null
    /**
     * Filter, which MenuItemModifierGroup to fetch.
     */
    where: MenuItemModifierGroupWhereUniqueInput
  }

  /**
   * MenuItemModifierGroup findUniqueOrThrow
   */
  export type MenuItemModifierGroupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifierGroup
     */
    select?: MenuItemModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifierGroup
     */
    omit?: MenuItemModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierGroupInclude<ExtArgs> | null
    /**
     * Filter, which MenuItemModifierGroup to fetch.
     */
    where: MenuItemModifierGroupWhereUniqueInput
  }

  /**
   * MenuItemModifierGroup findFirst
   */
  export type MenuItemModifierGroupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifierGroup
     */
    select?: MenuItemModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifierGroup
     */
    omit?: MenuItemModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierGroupInclude<ExtArgs> | null
    /**
     * Filter, which MenuItemModifierGroup to fetch.
     */
    where?: MenuItemModifierGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuItemModifierGroups to fetch.
     */
    orderBy?: MenuItemModifierGroupOrderByWithRelationInput | MenuItemModifierGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MenuItemModifierGroups.
     */
    cursor?: MenuItemModifierGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuItemModifierGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuItemModifierGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MenuItemModifierGroups.
     */
    distinct?: MenuItemModifierGroupScalarFieldEnum | MenuItemModifierGroupScalarFieldEnum[]
  }

  /**
   * MenuItemModifierGroup findFirstOrThrow
   */
  export type MenuItemModifierGroupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifierGroup
     */
    select?: MenuItemModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifierGroup
     */
    omit?: MenuItemModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierGroupInclude<ExtArgs> | null
    /**
     * Filter, which MenuItemModifierGroup to fetch.
     */
    where?: MenuItemModifierGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuItemModifierGroups to fetch.
     */
    orderBy?: MenuItemModifierGroupOrderByWithRelationInput | MenuItemModifierGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MenuItemModifierGroups.
     */
    cursor?: MenuItemModifierGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuItemModifierGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuItemModifierGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MenuItemModifierGroups.
     */
    distinct?: MenuItemModifierGroupScalarFieldEnum | MenuItemModifierGroupScalarFieldEnum[]
  }

  /**
   * MenuItemModifierGroup findMany
   */
  export type MenuItemModifierGroupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifierGroup
     */
    select?: MenuItemModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifierGroup
     */
    omit?: MenuItemModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierGroupInclude<ExtArgs> | null
    /**
     * Filter, which MenuItemModifierGroups to fetch.
     */
    where?: MenuItemModifierGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuItemModifierGroups to fetch.
     */
    orderBy?: MenuItemModifierGroupOrderByWithRelationInput | MenuItemModifierGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MenuItemModifierGroups.
     */
    cursor?: MenuItemModifierGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuItemModifierGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuItemModifierGroups.
     */
    skip?: number
    distinct?: MenuItemModifierGroupScalarFieldEnum | MenuItemModifierGroupScalarFieldEnum[]
  }

  /**
   * MenuItemModifierGroup create
   */
  export type MenuItemModifierGroupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifierGroup
     */
    select?: MenuItemModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifierGroup
     */
    omit?: MenuItemModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierGroupInclude<ExtArgs> | null
    /**
     * The data needed to create a MenuItemModifierGroup.
     */
    data: XOR<MenuItemModifierGroupCreateInput, MenuItemModifierGroupUncheckedCreateInput>
  }

  /**
   * MenuItemModifierGroup createMany
   */
  export type MenuItemModifierGroupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MenuItemModifierGroups.
     */
    data: MenuItemModifierGroupCreateManyInput | MenuItemModifierGroupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MenuItemModifierGroup update
   */
  export type MenuItemModifierGroupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifierGroup
     */
    select?: MenuItemModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifierGroup
     */
    omit?: MenuItemModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierGroupInclude<ExtArgs> | null
    /**
     * The data needed to update a MenuItemModifierGroup.
     */
    data: XOR<MenuItemModifierGroupUpdateInput, MenuItemModifierGroupUncheckedUpdateInput>
    /**
     * Choose, which MenuItemModifierGroup to update.
     */
    where: MenuItemModifierGroupWhereUniqueInput
  }

  /**
   * MenuItemModifierGroup updateMany
   */
  export type MenuItemModifierGroupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MenuItemModifierGroups.
     */
    data: XOR<MenuItemModifierGroupUpdateManyMutationInput, MenuItemModifierGroupUncheckedUpdateManyInput>
    /**
     * Filter which MenuItemModifierGroups to update
     */
    where?: MenuItemModifierGroupWhereInput
    /**
     * Limit how many MenuItemModifierGroups to update.
     */
    limit?: number
  }

  /**
   * MenuItemModifierGroup upsert
   */
  export type MenuItemModifierGroupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifierGroup
     */
    select?: MenuItemModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifierGroup
     */
    omit?: MenuItemModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierGroupInclude<ExtArgs> | null
    /**
     * The filter to search for the MenuItemModifierGroup to update in case it exists.
     */
    where: MenuItemModifierGroupWhereUniqueInput
    /**
     * In case the MenuItemModifierGroup found by the `where` argument doesn't exist, create a new MenuItemModifierGroup with this data.
     */
    create: XOR<MenuItemModifierGroupCreateInput, MenuItemModifierGroupUncheckedCreateInput>
    /**
     * In case the MenuItemModifierGroup was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MenuItemModifierGroupUpdateInput, MenuItemModifierGroupUncheckedUpdateInput>
  }

  /**
   * MenuItemModifierGroup delete
   */
  export type MenuItemModifierGroupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifierGroup
     */
    select?: MenuItemModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifierGroup
     */
    omit?: MenuItemModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierGroupInclude<ExtArgs> | null
    /**
     * Filter which MenuItemModifierGroup to delete.
     */
    where: MenuItemModifierGroupWhereUniqueInput
  }

  /**
   * MenuItemModifierGroup deleteMany
   */
  export type MenuItemModifierGroupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MenuItemModifierGroups to delete
     */
    where?: MenuItemModifierGroupWhereInput
    /**
     * Limit how many MenuItemModifierGroups to delete.
     */
    limit?: number
  }

  /**
   * MenuItemModifierGroup.menuItemModifiers
   */
  export type MenuItemModifierGroup$menuItemModifiersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifier
     */
    select?: MenuItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifier
     */
    omit?: MenuItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierInclude<ExtArgs> | null
    where?: MenuItemModifierWhereInput
    orderBy?: MenuItemModifierOrderByWithRelationInput | MenuItemModifierOrderByWithRelationInput[]
    cursor?: MenuItemModifierWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MenuItemModifierScalarFieldEnum | MenuItemModifierScalarFieldEnum[]
  }

  /**
   * MenuItemModifierGroup without action
   */
  export type MenuItemModifierGroupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifierGroup
     */
    select?: MenuItemModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifierGroup
     */
    omit?: MenuItemModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierGroupInclude<ExtArgs> | null
  }


  /**
   * Model MenuItemModifier
   */

  export type AggregateMenuItemModifier = {
    _count: MenuItemModifierCountAggregateOutputType | null
    _avg: MenuItemModifierAvgAggregateOutputType | null
    _sum: MenuItemModifierSumAggregateOutputType | null
    _min: MenuItemModifierMinAggregateOutputType | null
    _max: MenuItemModifierMaxAggregateOutputType | null
  }

  export type MenuItemModifierAvgAggregateOutputType = {
    id: number | null
    itemID: number | null
    price: Decimal | null
    defaultSelectionQty: number | null
    sequence: number | null
    menuItemModifierGroupID: number | null
    version: number | null
  }

  export type MenuItemModifierSumAggregateOutputType = {
    id: number | null
    itemID: number | null
    price: Decimal | null
    defaultSelectionQty: number | null
    sequence: number | null
    menuItemModifierGroupID: number | null
    version: number | null
  }

  export type MenuItemModifierMinAggregateOutputType = {
    id: number | null
    name: string | null
    itemID: number | null
    itemCode: string | null
    imageURL: string | null
    price: Decimal | null
    defaultSelectionQty: number | null
    sequence: number | null
    menuItemModifierGroupID: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type MenuItemModifierMaxAggregateOutputType = {
    id: number | null
    name: string | null
    itemID: number | null
    itemCode: string | null
    imageURL: string | null
    price: Decimal | null
    defaultSelectionQty: number | null
    sequence: number | null
    menuItemModifierGroupID: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type MenuItemModifierCountAggregateOutputType = {
    id: number
    name: number
    itemID: number
    itemCode: number
    imageURL: number
    price: number
    defaultSelectionQty: number
    sequence: number
    menuItemModifierGroupID: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type MenuItemModifierAvgAggregateInputType = {
    id?: true
    itemID?: true
    price?: true
    defaultSelectionQty?: true
    sequence?: true
    menuItemModifierGroupID?: true
    version?: true
  }

  export type MenuItemModifierSumAggregateInputType = {
    id?: true
    itemID?: true
    price?: true
    defaultSelectionQty?: true
    sequence?: true
    menuItemModifierGroupID?: true
    version?: true
  }

  export type MenuItemModifierMinAggregateInputType = {
    id?: true
    name?: true
    itemID?: true
    itemCode?: true
    imageURL?: true
    price?: true
    defaultSelectionQty?: true
    sequence?: true
    menuItemModifierGroupID?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type MenuItemModifierMaxAggregateInputType = {
    id?: true
    name?: true
    itemID?: true
    itemCode?: true
    imageURL?: true
    price?: true
    defaultSelectionQty?: true
    sequence?: true
    menuItemModifierGroupID?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type MenuItemModifierCountAggregateInputType = {
    id?: true
    name?: true
    itemID?: true
    itemCode?: true
    imageURL?: true
    price?: true
    defaultSelectionQty?: true
    sequence?: true
    menuItemModifierGroupID?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type MenuItemModifierAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MenuItemModifier to aggregate.
     */
    where?: MenuItemModifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuItemModifiers to fetch.
     */
    orderBy?: MenuItemModifierOrderByWithRelationInput | MenuItemModifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MenuItemModifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuItemModifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuItemModifiers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MenuItemModifiers
    **/
    _count?: true | MenuItemModifierCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MenuItemModifierAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MenuItemModifierSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MenuItemModifierMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MenuItemModifierMaxAggregateInputType
  }

  export type GetMenuItemModifierAggregateType<T extends MenuItemModifierAggregateArgs> = {
        [P in keyof T & keyof AggregateMenuItemModifier]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMenuItemModifier[P]>
      : GetScalarType<T[P], AggregateMenuItemModifier[P]>
  }




  export type MenuItemModifierGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuItemModifierWhereInput
    orderBy?: MenuItemModifierOrderByWithAggregationInput | MenuItemModifierOrderByWithAggregationInput[]
    by: MenuItemModifierScalarFieldEnum[] | MenuItemModifierScalarFieldEnum
    having?: MenuItemModifierScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MenuItemModifierCountAggregateInputType | true
    _avg?: MenuItemModifierAvgAggregateInputType
    _sum?: MenuItemModifierSumAggregateInputType
    _min?: MenuItemModifierMinAggregateInputType
    _max?: MenuItemModifierMaxAggregateInputType
  }

  export type MenuItemModifierGroupByOutputType = {
    id: number
    name: string
    itemID: number
    itemCode: string
    imageURL: string | null
    price: Decimal
    defaultSelectionQty: number
    sequence: number
    menuItemModifierGroupID: number
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: MenuItemModifierCountAggregateOutputType | null
    _avg: MenuItemModifierAvgAggregateOutputType | null
    _sum: MenuItemModifierSumAggregateOutputType | null
    _min: MenuItemModifierMinAggregateOutputType | null
    _max: MenuItemModifierMaxAggregateOutputType | null
  }

  type GetMenuItemModifierGroupByPayload<T extends MenuItemModifierGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MenuItemModifierGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MenuItemModifierGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MenuItemModifierGroupByOutputType[P]>
            : GetScalarType<T[P], MenuItemModifierGroupByOutputType[P]>
        }
      >
    >


  export type MenuItemModifierSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    itemID?: boolean
    itemCode?: boolean
    imageURL?: boolean
    price?: boolean
    defaultSelectionQty?: boolean
    sequence?: boolean
    menuItemModifierGroupID?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    menuItemModifierGroup?: boolean | MenuItemModifierGroupDefaultArgs<ExtArgs>
    salesItemModifiers?: boolean | MenuItemModifier$salesItemModifiersArgs<ExtArgs>
    recipes?: boolean | MenuItemModifier$recipesArgs<ExtArgs>
    _count?: boolean | MenuItemModifierCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["menuItemModifier"]>



  export type MenuItemModifierSelectScalar = {
    id?: boolean
    name?: boolean
    itemID?: boolean
    itemCode?: boolean
    imageURL?: boolean
    price?: boolean
    defaultSelectionQty?: boolean
    sequence?: boolean
    menuItemModifierGroupID?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type MenuItemModifierOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "itemID" | "itemCode" | "imageURL" | "price" | "defaultSelectionQty" | "sequence" | "menuItemModifierGroupID" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["menuItemModifier"]>
  export type MenuItemModifierInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menuItemModifierGroup?: boolean | MenuItemModifierGroupDefaultArgs<ExtArgs>
    salesItemModifiers?: boolean | MenuItemModifier$salesItemModifiersArgs<ExtArgs>
    recipes?: boolean | MenuItemModifier$recipesArgs<ExtArgs>
    _count?: boolean | MenuItemModifierCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $MenuItemModifierPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MenuItemModifier"
    objects: {
      menuItemModifierGroup: Prisma.$MenuItemModifierGroupPayload<ExtArgs>
      salesItemModifiers: Prisma.$SalesItemModifierPayload<ExtArgs>[]
      recipes: Prisma.$RecipePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      itemID: number
      itemCode: string
      imageURL: string | null
      price: Prisma.Decimal
      defaultSelectionQty: number
      sequence: number
      menuItemModifierGroupID: number
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["menuItemModifier"]>
    composites: {}
  }

  type MenuItemModifierGetPayload<S extends boolean | null | undefined | MenuItemModifierDefaultArgs> = $Result.GetResult<Prisma.$MenuItemModifierPayload, S>

  type MenuItemModifierCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MenuItemModifierFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MenuItemModifierCountAggregateInputType | true
    }

  export interface MenuItemModifierDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MenuItemModifier'], meta: { name: 'MenuItemModifier' } }
    /**
     * Find zero or one MenuItemModifier that matches the filter.
     * @param {MenuItemModifierFindUniqueArgs} args - Arguments to find a MenuItemModifier
     * @example
     * // Get one MenuItemModifier
     * const menuItemModifier = await prisma.menuItemModifier.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MenuItemModifierFindUniqueArgs>(args: SelectSubset<T, MenuItemModifierFindUniqueArgs<ExtArgs>>): Prisma__MenuItemModifierClient<$Result.GetResult<Prisma.$MenuItemModifierPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MenuItemModifier that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MenuItemModifierFindUniqueOrThrowArgs} args - Arguments to find a MenuItemModifier
     * @example
     * // Get one MenuItemModifier
     * const menuItemModifier = await prisma.menuItemModifier.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MenuItemModifierFindUniqueOrThrowArgs>(args: SelectSubset<T, MenuItemModifierFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MenuItemModifierClient<$Result.GetResult<Prisma.$MenuItemModifierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MenuItemModifier that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemModifierFindFirstArgs} args - Arguments to find a MenuItemModifier
     * @example
     * // Get one MenuItemModifier
     * const menuItemModifier = await prisma.menuItemModifier.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MenuItemModifierFindFirstArgs>(args?: SelectSubset<T, MenuItemModifierFindFirstArgs<ExtArgs>>): Prisma__MenuItemModifierClient<$Result.GetResult<Prisma.$MenuItemModifierPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MenuItemModifier that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemModifierFindFirstOrThrowArgs} args - Arguments to find a MenuItemModifier
     * @example
     * // Get one MenuItemModifier
     * const menuItemModifier = await prisma.menuItemModifier.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MenuItemModifierFindFirstOrThrowArgs>(args?: SelectSubset<T, MenuItemModifierFindFirstOrThrowArgs<ExtArgs>>): Prisma__MenuItemModifierClient<$Result.GetResult<Prisma.$MenuItemModifierPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MenuItemModifiers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemModifierFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MenuItemModifiers
     * const menuItemModifiers = await prisma.menuItemModifier.findMany()
     * 
     * // Get first 10 MenuItemModifiers
     * const menuItemModifiers = await prisma.menuItemModifier.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const menuItemModifierWithIdOnly = await prisma.menuItemModifier.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MenuItemModifierFindManyArgs>(args?: SelectSubset<T, MenuItemModifierFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuItemModifierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MenuItemModifier.
     * @param {MenuItemModifierCreateArgs} args - Arguments to create a MenuItemModifier.
     * @example
     * // Create one MenuItemModifier
     * const MenuItemModifier = await prisma.menuItemModifier.create({
     *   data: {
     *     // ... data to create a MenuItemModifier
     *   }
     * })
     * 
     */
    create<T extends MenuItemModifierCreateArgs>(args: SelectSubset<T, MenuItemModifierCreateArgs<ExtArgs>>): Prisma__MenuItemModifierClient<$Result.GetResult<Prisma.$MenuItemModifierPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MenuItemModifiers.
     * @param {MenuItemModifierCreateManyArgs} args - Arguments to create many MenuItemModifiers.
     * @example
     * // Create many MenuItemModifiers
     * const menuItemModifier = await prisma.menuItemModifier.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MenuItemModifierCreateManyArgs>(args?: SelectSubset<T, MenuItemModifierCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a MenuItemModifier.
     * @param {MenuItemModifierDeleteArgs} args - Arguments to delete one MenuItemModifier.
     * @example
     * // Delete one MenuItemModifier
     * const MenuItemModifier = await prisma.menuItemModifier.delete({
     *   where: {
     *     // ... filter to delete one MenuItemModifier
     *   }
     * })
     * 
     */
    delete<T extends MenuItemModifierDeleteArgs>(args: SelectSubset<T, MenuItemModifierDeleteArgs<ExtArgs>>): Prisma__MenuItemModifierClient<$Result.GetResult<Prisma.$MenuItemModifierPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MenuItemModifier.
     * @param {MenuItemModifierUpdateArgs} args - Arguments to update one MenuItemModifier.
     * @example
     * // Update one MenuItemModifier
     * const menuItemModifier = await prisma.menuItemModifier.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MenuItemModifierUpdateArgs>(args: SelectSubset<T, MenuItemModifierUpdateArgs<ExtArgs>>): Prisma__MenuItemModifierClient<$Result.GetResult<Prisma.$MenuItemModifierPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MenuItemModifiers.
     * @param {MenuItemModifierDeleteManyArgs} args - Arguments to filter MenuItemModifiers to delete.
     * @example
     * // Delete a few MenuItemModifiers
     * const { count } = await prisma.menuItemModifier.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MenuItemModifierDeleteManyArgs>(args?: SelectSubset<T, MenuItemModifierDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MenuItemModifiers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemModifierUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MenuItemModifiers
     * const menuItemModifier = await prisma.menuItemModifier.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MenuItemModifierUpdateManyArgs>(args: SelectSubset<T, MenuItemModifierUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MenuItemModifier.
     * @param {MenuItemModifierUpsertArgs} args - Arguments to update or create a MenuItemModifier.
     * @example
     * // Update or create a MenuItemModifier
     * const menuItemModifier = await prisma.menuItemModifier.upsert({
     *   create: {
     *     // ... data to create a MenuItemModifier
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MenuItemModifier we want to update
     *   }
     * })
     */
    upsert<T extends MenuItemModifierUpsertArgs>(args: SelectSubset<T, MenuItemModifierUpsertArgs<ExtArgs>>): Prisma__MenuItemModifierClient<$Result.GetResult<Prisma.$MenuItemModifierPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MenuItemModifiers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemModifierCountArgs} args - Arguments to filter MenuItemModifiers to count.
     * @example
     * // Count the number of MenuItemModifiers
     * const count = await prisma.menuItemModifier.count({
     *   where: {
     *     // ... the filter for the MenuItemModifiers we want to count
     *   }
     * })
    **/
    count<T extends MenuItemModifierCountArgs>(
      args?: Subset<T, MenuItemModifierCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MenuItemModifierCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MenuItemModifier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemModifierAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MenuItemModifierAggregateArgs>(args: Subset<T, MenuItemModifierAggregateArgs>): Prisma.PrismaPromise<GetMenuItemModifierAggregateType<T>>

    /**
     * Group by MenuItemModifier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuItemModifierGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MenuItemModifierGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MenuItemModifierGroupByArgs['orderBy'] }
        : { orderBy?: MenuItemModifierGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MenuItemModifierGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMenuItemModifierGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MenuItemModifier model
   */
  readonly fields: MenuItemModifierFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MenuItemModifier.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MenuItemModifierClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    menuItemModifierGroup<T extends MenuItemModifierGroupDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MenuItemModifierGroupDefaultArgs<ExtArgs>>): Prisma__MenuItemModifierGroupClient<$Result.GetResult<Prisma.$MenuItemModifierGroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    salesItemModifiers<T extends MenuItemModifier$salesItemModifiersArgs<ExtArgs> = {}>(args?: Subset<T, MenuItemModifier$salesItemModifiersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalesItemModifierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    recipes<T extends MenuItemModifier$recipesArgs<ExtArgs> = {}>(args?: Subset<T, MenuItemModifier$recipesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RecipePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MenuItemModifier model
   */
  interface MenuItemModifierFieldRefs {
    readonly id: FieldRef<"MenuItemModifier", 'Int'>
    readonly name: FieldRef<"MenuItemModifier", 'String'>
    readonly itemID: FieldRef<"MenuItemModifier", 'Int'>
    readonly itemCode: FieldRef<"MenuItemModifier", 'String'>
    readonly imageURL: FieldRef<"MenuItemModifier", 'String'>
    readonly price: FieldRef<"MenuItemModifier", 'Decimal'>
    readonly defaultSelectionQty: FieldRef<"MenuItemModifier", 'Int'>
    readonly sequence: FieldRef<"MenuItemModifier", 'Int'>
    readonly menuItemModifierGroupID: FieldRef<"MenuItemModifier", 'Int'>
    readonly deleted: FieldRef<"MenuItemModifier", 'Boolean'>
    readonly deletedAt: FieldRef<"MenuItemModifier", 'DateTime'>
    readonly createdAt: FieldRef<"MenuItemModifier", 'DateTime'>
    readonly updatedAt: FieldRef<"MenuItemModifier", 'DateTime'>
    readonly version: FieldRef<"MenuItemModifier", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MenuItemModifier findUnique
   */
  export type MenuItemModifierFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifier
     */
    select?: MenuItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifier
     */
    omit?: MenuItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierInclude<ExtArgs> | null
    /**
     * Filter, which MenuItemModifier to fetch.
     */
    where: MenuItemModifierWhereUniqueInput
  }

  /**
   * MenuItemModifier findUniqueOrThrow
   */
  export type MenuItemModifierFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifier
     */
    select?: MenuItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifier
     */
    omit?: MenuItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierInclude<ExtArgs> | null
    /**
     * Filter, which MenuItemModifier to fetch.
     */
    where: MenuItemModifierWhereUniqueInput
  }

  /**
   * MenuItemModifier findFirst
   */
  export type MenuItemModifierFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifier
     */
    select?: MenuItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifier
     */
    omit?: MenuItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierInclude<ExtArgs> | null
    /**
     * Filter, which MenuItemModifier to fetch.
     */
    where?: MenuItemModifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuItemModifiers to fetch.
     */
    orderBy?: MenuItemModifierOrderByWithRelationInput | MenuItemModifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MenuItemModifiers.
     */
    cursor?: MenuItemModifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuItemModifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuItemModifiers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MenuItemModifiers.
     */
    distinct?: MenuItemModifierScalarFieldEnum | MenuItemModifierScalarFieldEnum[]
  }

  /**
   * MenuItemModifier findFirstOrThrow
   */
  export type MenuItemModifierFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifier
     */
    select?: MenuItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifier
     */
    omit?: MenuItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierInclude<ExtArgs> | null
    /**
     * Filter, which MenuItemModifier to fetch.
     */
    where?: MenuItemModifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuItemModifiers to fetch.
     */
    orderBy?: MenuItemModifierOrderByWithRelationInput | MenuItemModifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MenuItemModifiers.
     */
    cursor?: MenuItemModifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuItemModifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuItemModifiers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MenuItemModifiers.
     */
    distinct?: MenuItemModifierScalarFieldEnum | MenuItemModifierScalarFieldEnum[]
  }

  /**
   * MenuItemModifier findMany
   */
  export type MenuItemModifierFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifier
     */
    select?: MenuItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifier
     */
    omit?: MenuItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierInclude<ExtArgs> | null
    /**
     * Filter, which MenuItemModifiers to fetch.
     */
    where?: MenuItemModifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuItemModifiers to fetch.
     */
    orderBy?: MenuItemModifierOrderByWithRelationInput | MenuItemModifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MenuItemModifiers.
     */
    cursor?: MenuItemModifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuItemModifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuItemModifiers.
     */
    skip?: number
    distinct?: MenuItemModifierScalarFieldEnum | MenuItemModifierScalarFieldEnum[]
  }

  /**
   * MenuItemModifier create
   */
  export type MenuItemModifierCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifier
     */
    select?: MenuItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifier
     */
    omit?: MenuItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierInclude<ExtArgs> | null
    /**
     * The data needed to create a MenuItemModifier.
     */
    data: XOR<MenuItemModifierCreateInput, MenuItemModifierUncheckedCreateInput>
  }

  /**
   * MenuItemModifier createMany
   */
  export type MenuItemModifierCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MenuItemModifiers.
     */
    data: MenuItemModifierCreateManyInput | MenuItemModifierCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MenuItemModifier update
   */
  export type MenuItemModifierUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifier
     */
    select?: MenuItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifier
     */
    omit?: MenuItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierInclude<ExtArgs> | null
    /**
     * The data needed to update a MenuItemModifier.
     */
    data: XOR<MenuItemModifierUpdateInput, MenuItemModifierUncheckedUpdateInput>
    /**
     * Choose, which MenuItemModifier to update.
     */
    where: MenuItemModifierWhereUniqueInput
  }

  /**
   * MenuItemModifier updateMany
   */
  export type MenuItemModifierUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MenuItemModifiers.
     */
    data: XOR<MenuItemModifierUpdateManyMutationInput, MenuItemModifierUncheckedUpdateManyInput>
    /**
     * Filter which MenuItemModifiers to update
     */
    where?: MenuItemModifierWhereInput
    /**
     * Limit how many MenuItemModifiers to update.
     */
    limit?: number
  }

  /**
   * MenuItemModifier upsert
   */
  export type MenuItemModifierUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifier
     */
    select?: MenuItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifier
     */
    omit?: MenuItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierInclude<ExtArgs> | null
    /**
     * The filter to search for the MenuItemModifier to update in case it exists.
     */
    where: MenuItemModifierWhereUniqueInput
    /**
     * In case the MenuItemModifier found by the `where` argument doesn't exist, create a new MenuItemModifier with this data.
     */
    create: XOR<MenuItemModifierCreateInput, MenuItemModifierUncheckedCreateInput>
    /**
     * In case the MenuItemModifier was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MenuItemModifierUpdateInput, MenuItemModifierUncheckedUpdateInput>
  }

  /**
   * MenuItemModifier delete
   */
  export type MenuItemModifierDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifier
     */
    select?: MenuItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifier
     */
    omit?: MenuItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierInclude<ExtArgs> | null
    /**
     * Filter which MenuItemModifier to delete.
     */
    where: MenuItemModifierWhereUniqueInput
  }

  /**
   * MenuItemModifier deleteMany
   */
  export type MenuItemModifierDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MenuItemModifiers to delete
     */
    where?: MenuItemModifierWhereInput
    /**
     * Limit how many MenuItemModifiers to delete.
     */
    limit?: number
  }

  /**
   * MenuItemModifier.salesItemModifiers
   */
  export type MenuItemModifier$salesItemModifiersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SalesItemModifier
     */
    select?: SalesItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SalesItemModifier
     */
    omit?: SalesItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesItemModifierInclude<ExtArgs> | null
    where?: SalesItemModifierWhereInput
    orderBy?: SalesItemModifierOrderByWithRelationInput | SalesItemModifierOrderByWithRelationInput[]
    cursor?: SalesItemModifierWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SalesItemModifierScalarFieldEnum | SalesItemModifierScalarFieldEnum[]
  }

  /**
   * MenuItemModifier.recipes
   */
  export type MenuItemModifier$recipesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recipe
     */
    select?: RecipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recipe
     */
    omit?: RecipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecipeInclude<ExtArgs> | null
    where?: RecipeWhereInput
    orderBy?: RecipeOrderByWithRelationInput | RecipeOrderByWithRelationInput[]
    cursor?: RecipeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RecipeScalarFieldEnum | RecipeScalarFieldEnum[]
  }

  /**
   * MenuItemModifier without action
   */
  export type MenuItemModifierDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifier
     */
    select?: MenuItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifier
     */
    omit?: MenuItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierInclude<ExtArgs> | null
  }


  /**
   * Model Table
   */

  export type AggregateTable = {
    _count: TableCountAggregateOutputType | null
    _avg: TableAvgAggregateOutputType | null
    _sum: TableSumAggregateOutputType | null
    _min: TableMinAggregateOutputType | null
    _max: TableMaxAggregateOutputType | null
  }

  export type TableAvgAggregateOutputType = {
    id: number | null
    outletId: number | null
    capacity: number | null
    salesId: number | null
    version: number | null
  }

  export type TableSumAggregateOutputType = {
    id: number | null
    outletId: number | null
    capacity: number | null
    salesId: number | null
    version: number | null
  }

  export type TableMinAggregateOutputType = {
    id: number | null
    outletId: number | null
    tableNumber: string | null
    capacity: number | null
    status: string | null
    salesId: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type TableMaxAggregateOutputType = {
    id: number | null
    outletId: number | null
    tableNumber: string | null
    capacity: number | null
    status: string | null
    salesId: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type TableCountAggregateOutputType = {
    id: number
    outletId: number
    tableNumber: number
    capacity: number
    status: number
    salesId: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type TableAvgAggregateInputType = {
    id?: true
    outletId?: true
    capacity?: true
    salesId?: true
    version?: true
  }

  export type TableSumAggregateInputType = {
    id?: true
    outletId?: true
    capacity?: true
    salesId?: true
    version?: true
  }

  export type TableMinAggregateInputType = {
    id?: true
    outletId?: true
    tableNumber?: true
    capacity?: true
    status?: true
    salesId?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type TableMaxAggregateInputType = {
    id?: true
    outletId?: true
    tableNumber?: true
    capacity?: true
    status?: true
    salesId?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type TableCountAggregateInputType = {
    id?: true
    outletId?: true
    tableNumber?: true
    capacity?: true
    status?: true
    salesId?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type TableAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Table to aggregate.
     */
    where?: TableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tables to fetch.
     */
    orderBy?: TableOrderByWithRelationInput | TableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tables
    **/
    _count?: true | TableCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TableAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TableSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TableMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TableMaxAggregateInputType
  }

  export type GetTableAggregateType<T extends TableAggregateArgs> = {
        [P in keyof T & keyof AggregateTable]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTable[P]>
      : GetScalarType<T[P], AggregateTable[P]>
  }




  export type TableGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TableWhereInput
    orderBy?: TableOrderByWithAggregationInput | TableOrderByWithAggregationInput[]
    by: TableScalarFieldEnum[] | TableScalarFieldEnum
    having?: TableScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TableCountAggregateInputType | true
    _avg?: TableAvgAggregateInputType
    _sum?: TableSumAggregateInputType
    _min?: TableMinAggregateInputType
    _max?: TableMaxAggregateInputType
  }

  export type TableGroupByOutputType = {
    id: number
    outletId: number
    tableNumber: string
    capacity: number
    status: string
    salesId: number | null
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: TableCountAggregateOutputType | null
    _avg: TableAvgAggregateOutputType | null
    _sum: TableSumAggregateOutputType | null
    _min: TableMinAggregateOutputType | null
    _max: TableMaxAggregateOutputType | null
  }

  type GetTableGroupByPayload<T extends TableGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TableGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TableGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TableGroupByOutputType[P]>
            : GetScalarType<T[P], TableGroupByOutputType[P]>
        }
      >
    >


  export type TableSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    outletId?: boolean
    tableNumber?: boolean
    capacity?: boolean
    status?: boolean
    salesId?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    outlet?: boolean | OutletDefaultArgs<ExtArgs>
    sales?: boolean | Table$salesArgs<ExtArgs>
    reservations?: boolean | Table$reservationsArgs<ExtArgs>
    _count?: boolean | TableCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["table"]>



  export type TableSelectScalar = {
    id?: boolean
    outletId?: boolean
    tableNumber?: boolean
    capacity?: boolean
    status?: boolean
    salesId?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type TableOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "outletId" | "tableNumber" | "capacity" | "status" | "salesId" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["table"]>
  export type TableInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    outlet?: boolean | OutletDefaultArgs<ExtArgs>
    sales?: boolean | Table$salesArgs<ExtArgs>
    reservations?: boolean | Table$reservationsArgs<ExtArgs>
    _count?: boolean | TableCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $TablePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Table"
    objects: {
      outlet: Prisma.$OutletPayload<ExtArgs>
      sales: Prisma.$SalesPayload<ExtArgs>[]
      reservations: Prisma.$ReservationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      outletId: number
      tableNumber: string
      capacity: number
      status: string
      salesId: number | null
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["table"]>
    composites: {}
  }

  type TableGetPayload<S extends boolean | null | undefined | TableDefaultArgs> = $Result.GetResult<Prisma.$TablePayload, S>

  type TableCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TableFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TableCountAggregateInputType | true
    }

  export interface TableDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Table'], meta: { name: 'Table' } }
    /**
     * Find zero or one Table that matches the filter.
     * @param {TableFindUniqueArgs} args - Arguments to find a Table
     * @example
     * // Get one Table
     * const table = await prisma.table.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TableFindUniqueArgs>(args: SelectSubset<T, TableFindUniqueArgs<ExtArgs>>): Prisma__TableClient<$Result.GetResult<Prisma.$TablePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Table that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TableFindUniqueOrThrowArgs} args - Arguments to find a Table
     * @example
     * // Get one Table
     * const table = await prisma.table.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TableFindUniqueOrThrowArgs>(args: SelectSubset<T, TableFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TableClient<$Result.GetResult<Prisma.$TablePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Table that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TableFindFirstArgs} args - Arguments to find a Table
     * @example
     * // Get one Table
     * const table = await prisma.table.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TableFindFirstArgs>(args?: SelectSubset<T, TableFindFirstArgs<ExtArgs>>): Prisma__TableClient<$Result.GetResult<Prisma.$TablePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Table that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TableFindFirstOrThrowArgs} args - Arguments to find a Table
     * @example
     * // Get one Table
     * const table = await prisma.table.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TableFindFirstOrThrowArgs>(args?: SelectSubset<T, TableFindFirstOrThrowArgs<ExtArgs>>): Prisma__TableClient<$Result.GetResult<Prisma.$TablePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tables that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TableFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tables
     * const tables = await prisma.table.findMany()
     * 
     * // Get first 10 Tables
     * const tables = await prisma.table.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tableWithIdOnly = await prisma.table.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TableFindManyArgs>(args?: SelectSubset<T, TableFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TablePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Table.
     * @param {TableCreateArgs} args - Arguments to create a Table.
     * @example
     * // Create one Table
     * const Table = await prisma.table.create({
     *   data: {
     *     // ... data to create a Table
     *   }
     * })
     * 
     */
    create<T extends TableCreateArgs>(args: SelectSubset<T, TableCreateArgs<ExtArgs>>): Prisma__TableClient<$Result.GetResult<Prisma.$TablePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tables.
     * @param {TableCreateManyArgs} args - Arguments to create many Tables.
     * @example
     * // Create many Tables
     * const table = await prisma.table.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TableCreateManyArgs>(args?: SelectSubset<T, TableCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Table.
     * @param {TableDeleteArgs} args - Arguments to delete one Table.
     * @example
     * // Delete one Table
     * const Table = await prisma.table.delete({
     *   where: {
     *     // ... filter to delete one Table
     *   }
     * })
     * 
     */
    delete<T extends TableDeleteArgs>(args: SelectSubset<T, TableDeleteArgs<ExtArgs>>): Prisma__TableClient<$Result.GetResult<Prisma.$TablePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Table.
     * @param {TableUpdateArgs} args - Arguments to update one Table.
     * @example
     * // Update one Table
     * const table = await prisma.table.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TableUpdateArgs>(args: SelectSubset<T, TableUpdateArgs<ExtArgs>>): Prisma__TableClient<$Result.GetResult<Prisma.$TablePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tables.
     * @param {TableDeleteManyArgs} args - Arguments to filter Tables to delete.
     * @example
     * // Delete a few Tables
     * const { count } = await prisma.table.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TableDeleteManyArgs>(args?: SelectSubset<T, TableDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TableUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tables
     * const table = await prisma.table.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TableUpdateManyArgs>(args: SelectSubset<T, TableUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Table.
     * @param {TableUpsertArgs} args - Arguments to update or create a Table.
     * @example
     * // Update or create a Table
     * const table = await prisma.table.upsert({
     *   create: {
     *     // ... data to create a Table
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Table we want to update
     *   }
     * })
     */
    upsert<T extends TableUpsertArgs>(args: SelectSubset<T, TableUpsertArgs<ExtArgs>>): Prisma__TableClient<$Result.GetResult<Prisma.$TablePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TableCountArgs} args - Arguments to filter Tables to count.
     * @example
     * // Count the number of Tables
     * const count = await prisma.table.count({
     *   where: {
     *     // ... the filter for the Tables we want to count
     *   }
     * })
    **/
    count<T extends TableCountArgs>(
      args?: Subset<T, TableCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TableCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Table.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TableAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TableAggregateArgs>(args: Subset<T, TableAggregateArgs>): Prisma.PrismaPromise<GetTableAggregateType<T>>

    /**
     * Group by Table.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TableGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TableGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TableGroupByArgs['orderBy'] }
        : { orderBy?: TableGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TableGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTableGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Table model
   */
  readonly fields: TableFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Table.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TableClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    outlet<T extends OutletDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OutletDefaultArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sales<T extends Table$salesArgs<ExtArgs> = {}>(args?: Subset<T, Table$salesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SalesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservations<T extends Table$reservationsArgs<ExtArgs> = {}>(args?: Subset<T, Table$reservationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Table model
   */
  interface TableFieldRefs {
    readonly id: FieldRef<"Table", 'Int'>
    readonly outletId: FieldRef<"Table", 'Int'>
    readonly tableNumber: FieldRef<"Table", 'String'>
    readonly capacity: FieldRef<"Table", 'Int'>
    readonly status: FieldRef<"Table", 'String'>
    readonly salesId: FieldRef<"Table", 'Int'>
    readonly deleted: FieldRef<"Table", 'Boolean'>
    readonly deletedAt: FieldRef<"Table", 'DateTime'>
    readonly createdAt: FieldRef<"Table", 'DateTime'>
    readonly updatedAt: FieldRef<"Table", 'DateTime'>
    readonly version: FieldRef<"Table", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Table findUnique
   */
  export type TableFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Table
     */
    select?: TableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Table
     */
    omit?: TableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TableInclude<ExtArgs> | null
    /**
     * Filter, which Table to fetch.
     */
    where: TableWhereUniqueInput
  }

  /**
   * Table findUniqueOrThrow
   */
  export type TableFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Table
     */
    select?: TableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Table
     */
    omit?: TableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TableInclude<ExtArgs> | null
    /**
     * Filter, which Table to fetch.
     */
    where: TableWhereUniqueInput
  }

  /**
   * Table findFirst
   */
  export type TableFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Table
     */
    select?: TableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Table
     */
    omit?: TableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TableInclude<ExtArgs> | null
    /**
     * Filter, which Table to fetch.
     */
    where?: TableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tables to fetch.
     */
    orderBy?: TableOrderByWithRelationInput | TableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tables.
     */
    cursor?: TableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tables.
     */
    distinct?: TableScalarFieldEnum | TableScalarFieldEnum[]
  }

  /**
   * Table findFirstOrThrow
   */
  export type TableFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Table
     */
    select?: TableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Table
     */
    omit?: TableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TableInclude<ExtArgs> | null
    /**
     * Filter, which Table to fetch.
     */
    where?: TableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tables to fetch.
     */
    orderBy?: TableOrderByWithRelationInput | TableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tables.
     */
    cursor?: TableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tables.
     */
    distinct?: TableScalarFieldEnum | TableScalarFieldEnum[]
  }

  /**
   * Table findMany
   */
  export type TableFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Table
     */
    select?: TableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Table
     */
    omit?: TableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TableInclude<ExtArgs> | null
    /**
     * Filter, which Tables to fetch.
     */
    where?: TableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tables to fetch.
     */
    orderBy?: TableOrderByWithRelationInput | TableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tables.
     */
    cursor?: TableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tables.
     */
    skip?: number
    distinct?: TableScalarFieldEnum | TableScalarFieldEnum[]
  }

  /**
   * Table create
   */
  export type TableCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Table
     */
    select?: TableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Table
     */
    omit?: TableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TableInclude<ExtArgs> | null
    /**
     * The data needed to create a Table.
     */
    data: XOR<TableCreateInput, TableUncheckedCreateInput>
  }

  /**
   * Table createMany
   */
  export type TableCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tables.
     */
    data: TableCreateManyInput | TableCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Table update
   */
  export type TableUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Table
     */
    select?: TableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Table
     */
    omit?: TableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TableInclude<ExtArgs> | null
    /**
     * The data needed to update a Table.
     */
    data: XOR<TableUpdateInput, TableUncheckedUpdateInput>
    /**
     * Choose, which Table to update.
     */
    where: TableWhereUniqueInput
  }

  /**
   * Table updateMany
   */
  export type TableUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tables.
     */
    data: XOR<TableUpdateManyMutationInput, TableUncheckedUpdateManyInput>
    /**
     * Filter which Tables to update
     */
    where?: TableWhereInput
    /**
     * Limit how many Tables to update.
     */
    limit?: number
  }

  /**
   * Table upsert
   */
  export type TableUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Table
     */
    select?: TableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Table
     */
    omit?: TableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TableInclude<ExtArgs> | null
    /**
     * The filter to search for the Table to update in case it exists.
     */
    where: TableWhereUniqueInput
    /**
     * In case the Table found by the `where` argument doesn't exist, create a new Table with this data.
     */
    create: XOR<TableCreateInput, TableUncheckedCreateInput>
    /**
     * In case the Table was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TableUpdateInput, TableUncheckedUpdateInput>
  }

  /**
   * Table delete
   */
  export type TableDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Table
     */
    select?: TableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Table
     */
    omit?: TableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TableInclude<ExtArgs> | null
    /**
     * Filter which Table to delete.
     */
    where: TableWhereUniqueInput
  }

  /**
   * Table deleteMany
   */
  export type TableDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tables to delete
     */
    where?: TableWhereInput
    /**
     * Limit how many Tables to delete.
     */
    limit?: number
  }

  /**
   * Table.sales
   */
  export type Table$salesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sales
     */
    select?: SalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sales
     */
    omit?: SalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SalesInclude<ExtArgs> | null
    where?: SalesWhereInput
    orderBy?: SalesOrderByWithRelationInput | SalesOrderByWithRelationInput[]
    cursor?: SalesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SalesScalarFieldEnum | SalesScalarFieldEnum[]
  }

  /**
   * Table.reservations
   */
  export type Table$reservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    where?: ReservationWhereInput
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    cursor?: ReservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Table without action
   */
  export type TableDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Table
     */
    select?: TableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Table
     */
    omit?: TableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TableInclude<ExtArgs> | null
  }


  /**
   * Model Recipe
   */

  export type AggregateRecipe = {
    _count: RecipeCountAggregateOutputType | null
    _avg: RecipeAvgAggregateOutputType | null
    _sum: RecipeSumAggregateOutputType | null
    _min: RecipeMinAggregateOutputType | null
    _max: RecipeMaxAggregateOutputType | null
  }

  export type RecipeAvgAggregateOutputType = {
    id: number | null
    menuItemId: number | null
    itemId: number | null
    quantity: number | null
    version: number | null
    batchYield: number | null
    menuItemModifierId: number | null
  }

  export type RecipeSumAggregateOutputType = {
    id: number | null
    menuItemId: number | null
    itemId: number | null
    quantity: number | null
    version: number | null
    batchYield: number | null
    menuItemModifierId: number | null
  }

  export type RecipeMinAggregateOutputType = {
    id: number | null
    menuItemId: number | null
    itemId: number | null
    quantity: number | null
    unit: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    batchYield: number | null
    menuItemModifierId: number | null
  }

  export type RecipeMaxAggregateOutputType = {
    id: number | null
    menuItemId: number | null
    itemId: number | null
    quantity: number | null
    unit: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    batchYield: number | null
    menuItemModifierId: number | null
  }

  export type RecipeCountAggregateOutputType = {
    id: number
    menuItemId: number
    itemId: number
    quantity: number
    unit: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    batchYield: number
    menuItemModifierId: number
    _all: number
  }


  export type RecipeAvgAggregateInputType = {
    id?: true
    menuItemId?: true
    itemId?: true
    quantity?: true
    version?: true
    batchYield?: true
    menuItemModifierId?: true
  }

  export type RecipeSumAggregateInputType = {
    id?: true
    menuItemId?: true
    itemId?: true
    quantity?: true
    version?: true
    batchYield?: true
    menuItemModifierId?: true
  }

  export type RecipeMinAggregateInputType = {
    id?: true
    menuItemId?: true
    itemId?: true
    quantity?: true
    unit?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    batchYield?: true
    menuItemModifierId?: true
  }

  export type RecipeMaxAggregateInputType = {
    id?: true
    menuItemId?: true
    itemId?: true
    quantity?: true
    unit?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    batchYield?: true
    menuItemModifierId?: true
  }

  export type RecipeCountAggregateInputType = {
    id?: true
    menuItemId?: true
    itemId?: true
    quantity?: true
    unit?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    batchYield?: true
    menuItemModifierId?: true
    _all?: true
  }

  export type RecipeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Recipe to aggregate.
     */
    where?: RecipeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Recipes to fetch.
     */
    orderBy?: RecipeOrderByWithRelationInput | RecipeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RecipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Recipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Recipes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Recipes
    **/
    _count?: true | RecipeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RecipeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RecipeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RecipeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RecipeMaxAggregateInputType
  }

  export type GetRecipeAggregateType<T extends RecipeAggregateArgs> = {
        [P in keyof T & keyof AggregateRecipe]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRecipe[P]>
      : GetScalarType<T[P], AggregateRecipe[P]>
  }




  export type RecipeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RecipeWhereInput
    orderBy?: RecipeOrderByWithAggregationInput | RecipeOrderByWithAggregationInput[]
    by: RecipeScalarFieldEnum[] | RecipeScalarFieldEnum
    having?: RecipeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RecipeCountAggregateInputType | true
    _avg?: RecipeAvgAggregateInputType
    _sum?: RecipeSumAggregateInputType
    _min?: RecipeMinAggregateInputType
    _max?: RecipeMaxAggregateInputType
  }

  export type RecipeGroupByOutputType = {
    id: number
    menuItemId: number
    itemId: number
    quantity: number
    unit: string
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    batchYield: number | null
    menuItemModifierId: number | null
    _count: RecipeCountAggregateOutputType | null
    _avg: RecipeAvgAggregateOutputType | null
    _sum: RecipeSumAggregateOutputType | null
    _min: RecipeMinAggregateOutputType | null
    _max: RecipeMaxAggregateOutputType | null
  }

  type GetRecipeGroupByPayload<T extends RecipeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RecipeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RecipeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RecipeGroupByOutputType[P]>
            : GetScalarType<T[P], RecipeGroupByOutputType[P]>
        }
      >
    >


  export type RecipeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    menuItemId?: boolean
    itemId?: boolean
    quantity?: boolean
    unit?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    batchYield?: boolean
    menuItemModifierId?: boolean
    menuItemModifier?: boolean | Recipe$menuItemModifierArgs<ExtArgs>
    menuItem?: boolean | MenuItemDefaultArgs<ExtArgs>
    item?: boolean | ItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["recipe"]>



  export type RecipeSelectScalar = {
    id?: boolean
    menuItemId?: boolean
    itemId?: boolean
    quantity?: boolean
    unit?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    batchYield?: boolean
    menuItemModifierId?: boolean
  }

  export type RecipeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "menuItemId" | "itemId" | "quantity" | "unit" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version" | "batchYield" | "menuItemModifierId", ExtArgs["result"]["recipe"]>
  export type RecipeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    menuItemModifier?: boolean | Recipe$menuItemModifierArgs<ExtArgs>
    menuItem?: boolean | MenuItemDefaultArgs<ExtArgs>
    item?: boolean | ItemDefaultArgs<ExtArgs>
  }

  export type $RecipePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Recipe"
    objects: {
      menuItemModifier: Prisma.$MenuItemModifierPayload<ExtArgs> | null
      menuItem: Prisma.$MenuItemPayload<ExtArgs>
      item: Prisma.$ItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      menuItemId: number
      itemId: number
      quantity: number
      unit: string
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
      batchYield: number | null
      menuItemModifierId: number | null
    }, ExtArgs["result"]["recipe"]>
    composites: {}
  }

  type RecipeGetPayload<S extends boolean | null | undefined | RecipeDefaultArgs> = $Result.GetResult<Prisma.$RecipePayload, S>

  type RecipeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RecipeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RecipeCountAggregateInputType | true
    }

  export interface RecipeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Recipe'], meta: { name: 'Recipe' } }
    /**
     * Find zero or one Recipe that matches the filter.
     * @param {RecipeFindUniqueArgs} args - Arguments to find a Recipe
     * @example
     * // Get one Recipe
     * const recipe = await prisma.recipe.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RecipeFindUniqueArgs>(args: SelectSubset<T, RecipeFindUniqueArgs<ExtArgs>>): Prisma__RecipeClient<$Result.GetResult<Prisma.$RecipePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Recipe that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RecipeFindUniqueOrThrowArgs} args - Arguments to find a Recipe
     * @example
     * // Get one Recipe
     * const recipe = await prisma.recipe.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RecipeFindUniqueOrThrowArgs>(args: SelectSubset<T, RecipeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RecipeClient<$Result.GetResult<Prisma.$RecipePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Recipe that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecipeFindFirstArgs} args - Arguments to find a Recipe
     * @example
     * // Get one Recipe
     * const recipe = await prisma.recipe.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RecipeFindFirstArgs>(args?: SelectSubset<T, RecipeFindFirstArgs<ExtArgs>>): Prisma__RecipeClient<$Result.GetResult<Prisma.$RecipePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Recipe that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecipeFindFirstOrThrowArgs} args - Arguments to find a Recipe
     * @example
     * // Get one Recipe
     * const recipe = await prisma.recipe.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RecipeFindFirstOrThrowArgs>(args?: SelectSubset<T, RecipeFindFirstOrThrowArgs<ExtArgs>>): Prisma__RecipeClient<$Result.GetResult<Prisma.$RecipePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Recipes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecipeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Recipes
     * const recipes = await prisma.recipe.findMany()
     * 
     * // Get first 10 Recipes
     * const recipes = await prisma.recipe.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const recipeWithIdOnly = await prisma.recipe.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RecipeFindManyArgs>(args?: SelectSubset<T, RecipeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RecipePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Recipe.
     * @param {RecipeCreateArgs} args - Arguments to create a Recipe.
     * @example
     * // Create one Recipe
     * const Recipe = await prisma.recipe.create({
     *   data: {
     *     // ... data to create a Recipe
     *   }
     * })
     * 
     */
    create<T extends RecipeCreateArgs>(args: SelectSubset<T, RecipeCreateArgs<ExtArgs>>): Prisma__RecipeClient<$Result.GetResult<Prisma.$RecipePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Recipes.
     * @param {RecipeCreateManyArgs} args - Arguments to create many Recipes.
     * @example
     * // Create many Recipes
     * const recipe = await prisma.recipe.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RecipeCreateManyArgs>(args?: SelectSubset<T, RecipeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Recipe.
     * @param {RecipeDeleteArgs} args - Arguments to delete one Recipe.
     * @example
     * // Delete one Recipe
     * const Recipe = await prisma.recipe.delete({
     *   where: {
     *     // ... filter to delete one Recipe
     *   }
     * })
     * 
     */
    delete<T extends RecipeDeleteArgs>(args: SelectSubset<T, RecipeDeleteArgs<ExtArgs>>): Prisma__RecipeClient<$Result.GetResult<Prisma.$RecipePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Recipe.
     * @param {RecipeUpdateArgs} args - Arguments to update one Recipe.
     * @example
     * // Update one Recipe
     * const recipe = await prisma.recipe.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RecipeUpdateArgs>(args: SelectSubset<T, RecipeUpdateArgs<ExtArgs>>): Prisma__RecipeClient<$Result.GetResult<Prisma.$RecipePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Recipes.
     * @param {RecipeDeleteManyArgs} args - Arguments to filter Recipes to delete.
     * @example
     * // Delete a few Recipes
     * const { count } = await prisma.recipe.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RecipeDeleteManyArgs>(args?: SelectSubset<T, RecipeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Recipes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecipeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Recipes
     * const recipe = await prisma.recipe.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RecipeUpdateManyArgs>(args: SelectSubset<T, RecipeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Recipe.
     * @param {RecipeUpsertArgs} args - Arguments to update or create a Recipe.
     * @example
     * // Update or create a Recipe
     * const recipe = await prisma.recipe.upsert({
     *   create: {
     *     // ... data to create a Recipe
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Recipe we want to update
     *   }
     * })
     */
    upsert<T extends RecipeUpsertArgs>(args: SelectSubset<T, RecipeUpsertArgs<ExtArgs>>): Prisma__RecipeClient<$Result.GetResult<Prisma.$RecipePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Recipes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecipeCountArgs} args - Arguments to filter Recipes to count.
     * @example
     * // Count the number of Recipes
     * const count = await prisma.recipe.count({
     *   where: {
     *     // ... the filter for the Recipes we want to count
     *   }
     * })
    **/
    count<T extends RecipeCountArgs>(
      args?: Subset<T, RecipeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RecipeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Recipe.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecipeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RecipeAggregateArgs>(args: Subset<T, RecipeAggregateArgs>): Prisma.PrismaPromise<GetRecipeAggregateType<T>>

    /**
     * Group by Recipe.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RecipeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RecipeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RecipeGroupByArgs['orderBy'] }
        : { orderBy?: RecipeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RecipeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRecipeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Recipe model
   */
  readonly fields: RecipeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Recipe.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RecipeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    menuItemModifier<T extends Recipe$menuItemModifierArgs<ExtArgs> = {}>(args?: Subset<T, Recipe$menuItemModifierArgs<ExtArgs>>): Prisma__MenuItemModifierClient<$Result.GetResult<Prisma.$MenuItemModifierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    menuItem<T extends MenuItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MenuItemDefaultArgs<ExtArgs>>): Prisma__MenuItemClient<$Result.GetResult<Prisma.$MenuItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    item<T extends ItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ItemDefaultArgs<ExtArgs>>): Prisma__ItemClient<$Result.GetResult<Prisma.$ItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Recipe model
   */
  interface RecipeFieldRefs {
    readonly id: FieldRef<"Recipe", 'Int'>
    readonly menuItemId: FieldRef<"Recipe", 'Int'>
    readonly itemId: FieldRef<"Recipe", 'Int'>
    readonly quantity: FieldRef<"Recipe", 'Float'>
    readonly unit: FieldRef<"Recipe", 'String'>
    readonly deleted: FieldRef<"Recipe", 'Boolean'>
    readonly deletedAt: FieldRef<"Recipe", 'DateTime'>
    readonly createdAt: FieldRef<"Recipe", 'DateTime'>
    readonly updatedAt: FieldRef<"Recipe", 'DateTime'>
    readonly version: FieldRef<"Recipe", 'Int'>
    readonly batchYield: FieldRef<"Recipe", 'Float'>
    readonly menuItemModifierId: FieldRef<"Recipe", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Recipe findUnique
   */
  export type RecipeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recipe
     */
    select?: RecipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recipe
     */
    omit?: RecipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecipeInclude<ExtArgs> | null
    /**
     * Filter, which Recipe to fetch.
     */
    where: RecipeWhereUniqueInput
  }

  /**
   * Recipe findUniqueOrThrow
   */
  export type RecipeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recipe
     */
    select?: RecipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recipe
     */
    omit?: RecipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecipeInclude<ExtArgs> | null
    /**
     * Filter, which Recipe to fetch.
     */
    where: RecipeWhereUniqueInput
  }

  /**
   * Recipe findFirst
   */
  export type RecipeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recipe
     */
    select?: RecipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recipe
     */
    omit?: RecipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecipeInclude<ExtArgs> | null
    /**
     * Filter, which Recipe to fetch.
     */
    where?: RecipeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Recipes to fetch.
     */
    orderBy?: RecipeOrderByWithRelationInput | RecipeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Recipes.
     */
    cursor?: RecipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Recipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Recipes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Recipes.
     */
    distinct?: RecipeScalarFieldEnum | RecipeScalarFieldEnum[]
  }

  /**
   * Recipe findFirstOrThrow
   */
  export type RecipeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recipe
     */
    select?: RecipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recipe
     */
    omit?: RecipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecipeInclude<ExtArgs> | null
    /**
     * Filter, which Recipe to fetch.
     */
    where?: RecipeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Recipes to fetch.
     */
    orderBy?: RecipeOrderByWithRelationInput | RecipeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Recipes.
     */
    cursor?: RecipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Recipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Recipes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Recipes.
     */
    distinct?: RecipeScalarFieldEnum | RecipeScalarFieldEnum[]
  }

  /**
   * Recipe findMany
   */
  export type RecipeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recipe
     */
    select?: RecipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recipe
     */
    omit?: RecipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecipeInclude<ExtArgs> | null
    /**
     * Filter, which Recipes to fetch.
     */
    where?: RecipeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Recipes to fetch.
     */
    orderBy?: RecipeOrderByWithRelationInput | RecipeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Recipes.
     */
    cursor?: RecipeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Recipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Recipes.
     */
    skip?: number
    distinct?: RecipeScalarFieldEnum | RecipeScalarFieldEnum[]
  }

  /**
   * Recipe create
   */
  export type RecipeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recipe
     */
    select?: RecipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recipe
     */
    omit?: RecipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecipeInclude<ExtArgs> | null
    /**
     * The data needed to create a Recipe.
     */
    data: XOR<RecipeCreateInput, RecipeUncheckedCreateInput>
  }

  /**
   * Recipe createMany
   */
  export type RecipeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Recipes.
     */
    data: RecipeCreateManyInput | RecipeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Recipe update
   */
  export type RecipeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recipe
     */
    select?: RecipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recipe
     */
    omit?: RecipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecipeInclude<ExtArgs> | null
    /**
     * The data needed to update a Recipe.
     */
    data: XOR<RecipeUpdateInput, RecipeUncheckedUpdateInput>
    /**
     * Choose, which Recipe to update.
     */
    where: RecipeWhereUniqueInput
  }

  /**
   * Recipe updateMany
   */
  export type RecipeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Recipes.
     */
    data: XOR<RecipeUpdateManyMutationInput, RecipeUncheckedUpdateManyInput>
    /**
     * Filter which Recipes to update
     */
    where?: RecipeWhereInput
    /**
     * Limit how many Recipes to update.
     */
    limit?: number
  }

  /**
   * Recipe upsert
   */
  export type RecipeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recipe
     */
    select?: RecipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recipe
     */
    omit?: RecipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecipeInclude<ExtArgs> | null
    /**
     * The filter to search for the Recipe to update in case it exists.
     */
    where: RecipeWhereUniqueInput
    /**
     * In case the Recipe found by the `where` argument doesn't exist, create a new Recipe with this data.
     */
    create: XOR<RecipeCreateInput, RecipeUncheckedCreateInput>
    /**
     * In case the Recipe was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RecipeUpdateInput, RecipeUncheckedUpdateInput>
  }

  /**
   * Recipe delete
   */
  export type RecipeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recipe
     */
    select?: RecipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recipe
     */
    omit?: RecipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecipeInclude<ExtArgs> | null
    /**
     * Filter which Recipe to delete.
     */
    where: RecipeWhereUniqueInput
  }

  /**
   * Recipe deleteMany
   */
  export type RecipeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Recipes to delete
     */
    where?: RecipeWhereInput
    /**
     * Limit how many Recipes to delete.
     */
    limit?: number
  }

  /**
   * Recipe.menuItemModifier
   */
  export type Recipe$menuItemModifierArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuItemModifier
     */
    select?: MenuItemModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MenuItemModifier
     */
    omit?: MenuItemModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuItemModifierInclude<ExtArgs> | null
    where?: MenuItemModifierWhereInput
  }

  /**
   * Recipe without action
   */
  export type RecipeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Recipe
     */
    select?: RecipeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Recipe
     */
    omit?: RecipeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RecipeInclude<ExtArgs> | null
  }


  /**
   * Model Station
   */

  export type AggregateStation = {
    _count: StationCountAggregateOutputType | null
    _avg: StationAvgAggregateOutputType | null
    _sum: StationSumAggregateOutputType | null
    _min: StationMinAggregateOutputType | null
    _max: StationMaxAggregateOutputType | null
  }

  export type StationAvgAggregateOutputType = {
    id: number | null
    outletId: number | null
    version: number | null
  }

  export type StationSumAggregateOutputType = {
    id: number | null
    outletId: number | null
    version: number | null
  }

  export type StationMinAggregateOutputType = {
    id: number | null
    outletId: number | null
    name: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type StationMaxAggregateOutputType = {
    id: number | null
    outletId: number | null
    name: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type StationCountAggregateOutputType = {
    id: number
    outletId: number
    name: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type StationAvgAggregateInputType = {
    id?: true
    outletId?: true
    version?: true
  }

  export type StationSumAggregateInputType = {
    id?: true
    outletId?: true
    version?: true
  }

  export type StationMinAggregateInputType = {
    id?: true
    outletId?: true
    name?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type StationMaxAggregateInputType = {
    id?: true
    outletId?: true
    name?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type StationCountAggregateInputType = {
    id?: true
    outletId?: true
    name?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type StationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Station to aggregate.
     */
    where?: StationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stations to fetch.
     */
    orderBy?: StationOrderByWithRelationInput | StationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Stations
    **/
    _count?: true | StationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StationMaxAggregateInputType
  }

  export type GetStationAggregateType<T extends StationAggregateArgs> = {
        [P in keyof T & keyof AggregateStation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStation[P]>
      : GetScalarType<T[P], AggregateStation[P]>
  }




  export type StationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StationWhereInput
    orderBy?: StationOrderByWithAggregationInput | StationOrderByWithAggregationInput[]
    by: StationScalarFieldEnum[] | StationScalarFieldEnum
    having?: StationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StationCountAggregateInputType | true
    _avg?: StationAvgAggregateInputType
    _sum?: StationSumAggregateInputType
    _min?: StationMinAggregateInputType
    _max?: StationMaxAggregateInputType
  }

  export type StationGroupByOutputType = {
    id: number
    outletId: number
    name: string
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: StationCountAggregateOutputType | null
    _avg: StationAvgAggregateOutputType | null
    _sum: StationSumAggregateOutputType | null
    _min: StationMinAggregateOutputType | null
    _max: StationMaxAggregateOutputType | null
  }

  type GetStationGroupByPayload<T extends StationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StationGroupByOutputType[P]>
            : GetScalarType<T[P], StationGroupByOutputType[P]>
        }
      >
    >


  export type StationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    outletId?: boolean
    name?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    outlet?: boolean | OutletDefaultArgs<ExtArgs>
    orderRouting?: boolean | Station$orderRoutingArgs<ExtArgs>
    _count?: boolean | StationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["station"]>



  export type StationSelectScalar = {
    id?: boolean
    outletId?: boolean
    name?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type StationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "outletId" | "name" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["station"]>
  export type StationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    outlet?: boolean | OutletDefaultArgs<ExtArgs>
    orderRouting?: boolean | Station$orderRoutingArgs<ExtArgs>
    _count?: boolean | StationCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $StationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Station"
    objects: {
      outlet: Prisma.$OutletPayload<ExtArgs>
      orderRouting: Prisma.$OrderRoutingPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      outletId: number
      name: string
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["station"]>
    composites: {}
  }

  type StationGetPayload<S extends boolean | null | undefined | StationDefaultArgs> = $Result.GetResult<Prisma.$StationPayload, S>

  type StationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StationCountAggregateInputType | true
    }

  export interface StationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Station'], meta: { name: 'Station' } }
    /**
     * Find zero or one Station that matches the filter.
     * @param {StationFindUniqueArgs} args - Arguments to find a Station
     * @example
     * // Get one Station
     * const station = await prisma.station.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StationFindUniqueArgs>(args: SelectSubset<T, StationFindUniqueArgs<ExtArgs>>): Prisma__StationClient<$Result.GetResult<Prisma.$StationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Station that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StationFindUniqueOrThrowArgs} args - Arguments to find a Station
     * @example
     * // Get one Station
     * const station = await prisma.station.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StationFindUniqueOrThrowArgs>(args: SelectSubset<T, StationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StationClient<$Result.GetResult<Prisma.$StationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Station that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StationFindFirstArgs} args - Arguments to find a Station
     * @example
     * // Get one Station
     * const station = await prisma.station.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StationFindFirstArgs>(args?: SelectSubset<T, StationFindFirstArgs<ExtArgs>>): Prisma__StationClient<$Result.GetResult<Prisma.$StationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Station that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StationFindFirstOrThrowArgs} args - Arguments to find a Station
     * @example
     * // Get one Station
     * const station = await prisma.station.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StationFindFirstOrThrowArgs>(args?: SelectSubset<T, StationFindFirstOrThrowArgs<ExtArgs>>): Prisma__StationClient<$Result.GetResult<Prisma.$StationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Stations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Stations
     * const stations = await prisma.station.findMany()
     * 
     * // Get first 10 Stations
     * const stations = await prisma.station.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stationWithIdOnly = await prisma.station.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StationFindManyArgs>(args?: SelectSubset<T, StationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Station.
     * @param {StationCreateArgs} args - Arguments to create a Station.
     * @example
     * // Create one Station
     * const Station = await prisma.station.create({
     *   data: {
     *     // ... data to create a Station
     *   }
     * })
     * 
     */
    create<T extends StationCreateArgs>(args: SelectSubset<T, StationCreateArgs<ExtArgs>>): Prisma__StationClient<$Result.GetResult<Prisma.$StationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Stations.
     * @param {StationCreateManyArgs} args - Arguments to create many Stations.
     * @example
     * // Create many Stations
     * const station = await prisma.station.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StationCreateManyArgs>(args?: SelectSubset<T, StationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Station.
     * @param {StationDeleteArgs} args - Arguments to delete one Station.
     * @example
     * // Delete one Station
     * const Station = await prisma.station.delete({
     *   where: {
     *     // ... filter to delete one Station
     *   }
     * })
     * 
     */
    delete<T extends StationDeleteArgs>(args: SelectSubset<T, StationDeleteArgs<ExtArgs>>): Prisma__StationClient<$Result.GetResult<Prisma.$StationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Station.
     * @param {StationUpdateArgs} args - Arguments to update one Station.
     * @example
     * // Update one Station
     * const station = await prisma.station.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StationUpdateArgs>(args: SelectSubset<T, StationUpdateArgs<ExtArgs>>): Prisma__StationClient<$Result.GetResult<Prisma.$StationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Stations.
     * @param {StationDeleteManyArgs} args - Arguments to filter Stations to delete.
     * @example
     * // Delete a few Stations
     * const { count } = await prisma.station.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StationDeleteManyArgs>(args?: SelectSubset<T, StationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Stations
     * const station = await prisma.station.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StationUpdateManyArgs>(args: SelectSubset<T, StationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Station.
     * @param {StationUpsertArgs} args - Arguments to update or create a Station.
     * @example
     * // Update or create a Station
     * const station = await prisma.station.upsert({
     *   create: {
     *     // ... data to create a Station
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Station we want to update
     *   }
     * })
     */
    upsert<T extends StationUpsertArgs>(args: SelectSubset<T, StationUpsertArgs<ExtArgs>>): Prisma__StationClient<$Result.GetResult<Prisma.$StationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Stations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StationCountArgs} args - Arguments to filter Stations to count.
     * @example
     * // Count the number of Stations
     * const count = await prisma.station.count({
     *   where: {
     *     // ... the filter for the Stations we want to count
     *   }
     * })
    **/
    count<T extends StationCountArgs>(
      args?: Subset<T, StationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Station.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StationAggregateArgs>(args: Subset<T, StationAggregateArgs>): Prisma.PrismaPromise<GetStationAggregateType<T>>

    /**
     * Group by Station.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StationGroupByArgs['orderBy'] }
        : { orderBy?: StationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Station model
   */
  readonly fields: StationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Station.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    outlet<T extends OutletDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OutletDefaultArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    orderRouting<T extends Station$orderRoutingArgs<ExtArgs> = {}>(args?: Subset<T, Station$orderRoutingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderRoutingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Station model
   */
  interface StationFieldRefs {
    readonly id: FieldRef<"Station", 'Int'>
    readonly outletId: FieldRef<"Station", 'Int'>
    readonly name: FieldRef<"Station", 'String'>
    readonly deleted: FieldRef<"Station", 'Boolean'>
    readonly deletedAt: FieldRef<"Station", 'DateTime'>
    readonly createdAt: FieldRef<"Station", 'DateTime'>
    readonly updatedAt: FieldRef<"Station", 'DateTime'>
    readonly version: FieldRef<"Station", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Station findUnique
   */
  export type StationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Station
     */
    select?: StationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Station
     */
    omit?: StationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StationInclude<ExtArgs> | null
    /**
     * Filter, which Station to fetch.
     */
    where: StationWhereUniqueInput
  }

  /**
   * Station findUniqueOrThrow
   */
  export type StationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Station
     */
    select?: StationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Station
     */
    omit?: StationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StationInclude<ExtArgs> | null
    /**
     * Filter, which Station to fetch.
     */
    where: StationWhereUniqueInput
  }

  /**
   * Station findFirst
   */
  export type StationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Station
     */
    select?: StationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Station
     */
    omit?: StationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StationInclude<ExtArgs> | null
    /**
     * Filter, which Station to fetch.
     */
    where?: StationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stations to fetch.
     */
    orderBy?: StationOrderByWithRelationInput | StationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Stations.
     */
    cursor?: StationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Stations.
     */
    distinct?: StationScalarFieldEnum | StationScalarFieldEnum[]
  }

  /**
   * Station findFirstOrThrow
   */
  export type StationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Station
     */
    select?: StationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Station
     */
    omit?: StationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StationInclude<ExtArgs> | null
    /**
     * Filter, which Station to fetch.
     */
    where?: StationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stations to fetch.
     */
    orderBy?: StationOrderByWithRelationInput | StationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Stations.
     */
    cursor?: StationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Stations.
     */
    distinct?: StationScalarFieldEnum | StationScalarFieldEnum[]
  }

  /**
   * Station findMany
   */
  export type StationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Station
     */
    select?: StationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Station
     */
    omit?: StationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StationInclude<ExtArgs> | null
    /**
     * Filter, which Stations to fetch.
     */
    where?: StationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stations to fetch.
     */
    orderBy?: StationOrderByWithRelationInput | StationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Stations.
     */
    cursor?: StationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stations.
     */
    skip?: number
    distinct?: StationScalarFieldEnum | StationScalarFieldEnum[]
  }

  /**
   * Station create
   */
  export type StationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Station
     */
    select?: StationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Station
     */
    omit?: StationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StationInclude<ExtArgs> | null
    /**
     * The data needed to create a Station.
     */
    data: XOR<StationCreateInput, StationUncheckedCreateInput>
  }

  /**
   * Station createMany
   */
  export type StationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Stations.
     */
    data: StationCreateManyInput | StationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Station update
   */
  export type StationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Station
     */
    select?: StationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Station
     */
    omit?: StationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StationInclude<ExtArgs> | null
    /**
     * The data needed to update a Station.
     */
    data: XOR<StationUpdateInput, StationUncheckedUpdateInput>
    /**
     * Choose, which Station to update.
     */
    where: StationWhereUniqueInput
  }

  /**
   * Station updateMany
   */
  export type StationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Stations.
     */
    data: XOR<StationUpdateManyMutationInput, StationUncheckedUpdateManyInput>
    /**
     * Filter which Stations to update
     */
    where?: StationWhereInput
    /**
     * Limit how many Stations to update.
     */
    limit?: number
  }

  /**
   * Station upsert
   */
  export type StationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Station
     */
    select?: StationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Station
     */
    omit?: StationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StationInclude<ExtArgs> | null
    /**
     * The filter to search for the Station to update in case it exists.
     */
    where: StationWhereUniqueInput
    /**
     * In case the Station found by the `where` argument doesn't exist, create a new Station with this data.
     */
    create: XOR<StationCreateInput, StationUncheckedCreateInput>
    /**
     * In case the Station was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StationUpdateInput, StationUncheckedUpdateInput>
  }

  /**
   * Station delete
   */
  export type StationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Station
     */
    select?: StationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Station
     */
    omit?: StationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StationInclude<ExtArgs> | null
    /**
     * Filter which Station to delete.
     */
    where: StationWhereUniqueInput
  }

  /**
   * Station deleteMany
   */
  export type StationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Stations to delete
     */
    where?: StationWhereInput
    /**
     * Limit how many Stations to delete.
     */
    limit?: number
  }

  /**
   * Station.orderRouting
   */
  export type Station$orderRoutingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderRouting
     */
    select?: OrderRoutingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderRouting
     */
    omit?: OrderRoutingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderRoutingInclude<ExtArgs> | null
    where?: OrderRoutingWhereInput
    orderBy?: OrderRoutingOrderByWithRelationInput | OrderRoutingOrderByWithRelationInput[]
    cursor?: OrderRoutingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderRoutingScalarFieldEnum | OrderRoutingScalarFieldEnum[]
  }

  /**
   * Station without action
   */
  export type StationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Station
     */
    select?: StationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Station
     */
    omit?: StationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StationInclude<ExtArgs> | null
  }


  /**
   * Model Reservation
   */

  export type AggregateReservation = {
    _count: ReservationCountAggregateOutputType | null
    _avg: ReservationAvgAggregateOutputType | null
    _sum: ReservationSumAggregateOutputType | null
    _min: ReservationMinAggregateOutputType | null
    _max: ReservationMaxAggregateOutputType | null
  }

  export type ReservationAvgAggregateOutputType = {
    id: number | null
    outletId: number | null
    customerId: number | null
    tableId: number | null
    partySize: number | null
    version: number | null
  }

  export type ReservationSumAggregateOutputType = {
    id: number | null
    outletId: number | null
    customerId: number | null
    tableId: number | null
    partySize: number | null
    version: number | null
  }

  export type ReservationMinAggregateOutputType = {
    id: number | null
    outletId: number | null
    customerId: number | null
    tableId: number | null
    dateTime: Date | null
    partySize: number | null
    status: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type ReservationMaxAggregateOutputType = {
    id: number | null
    outletId: number | null
    customerId: number | null
    tableId: number | null
    dateTime: Date | null
    partySize: number | null
    status: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type ReservationCountAggregateOutputType = {
    id: number
    outletId: number
    customerId: number
    tableId: number
    dateTime: number
    partySize: number
    status: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type ReservationAvgAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    tableId?: true
    partySize?: true
    version?: true
  }

  export type ReservationSumAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    tableId?: true
    partySize?: true
    version?: true
  }

  export type ReservationMinAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    tableId?: true
    dateTime?: true
    partySize?: true
    status?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type ReservationMaxAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    tableId?: true
    dateTime?: true
    partySize?: true
    status?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type ReservationCountAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    tableId?: true
    dateTime?: true
    partySize?: true
    status?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type ReservationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservation to aggregate.
     */
    where?: ReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservations to fetch.
     */
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reservations
    **/
    _count?: true | ReservationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservationMaxAggregateInputType
  }

  export type GetReservationAggregateType<T extends ReservationAggregateArgs> = {
        [P in keyof T & keyof AggregateReservation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservation[P]>
      : GetScalarType<T[P], AggregateReservation[P]>
  }




  export type ReservationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservationWhereInput
    orderBy?: ReservationOrderByWithAggregationInput | ReservationOrderByWithAggregationInput[]
    by: ReservationScalarFieldEnum[] | ReservationScalarFieldEnum
    having?: ReservationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservationCountAggregateInputType | true
    _avg?: ReservationAvgAggregateInputType
    _sum?: ReservationSumAggregateInputType
    _min?: ReservationMinAggregateInputType
    _max?: ReservationMaxAggregateInputType
  }

  export type ReservationGroupByOutputType = {
    id: number
    outletId: number
    customerId: number | null
    tableId: number | null
    dateTime: Date
    partySize: number
    status: string
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: ReservationCountAggregateOutputType | null
    _avg: ReservationAvgAggregateOutputType | null
    _sum: ReservationSumAggregateOutputType | null
    _min: ReservationMinAggregateOutputType | null
    _max: ReservationMaxAggregateOutputType | null
  }

  type GetReservationGroupByPayload<T extends ReservationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservationGroupByOutputType[P]>
            : GetScalarType<T[P], ReservationGroupByOutputType[P]>
        }
      >
    >


  export type ReservationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    outletId?: boolean
    customerId?: boolean
    tableId?: boolean
    dateTime?: boolean
    partySize?: boolean
    status?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    outlet?: boolean | OutletDefaultArgs<ExtArgs>
    customer?: boolean | Reservation$customerArgs<ExtArgs>
    table?: boolean | Reservation$tableArgs<ExtArgs>
  }, ExtArgs["result"]["reservation"]>



  export type ReservationSelectScalar = {
    id?: boolean
    outletId?: boolean
    customerId?: boolean
    tableId?: boolean
    dateTime?: boolean
    partySize?: boolean
    status?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type ReservationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "outletId" | "customerId" | "tableId" | "dateTime" | "partySize" | "status" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["reservation"]>
  export type ReservationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    outlet?: boolean | OutletDefaultArgs<ExtArgs>
    customer?: boolean | Reservation$customerArgs<ExtArgs>
    table?: boolean | Reservation$tableArgs<ExtArgs>
  }

  export type $ReservationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Reservation"
    objects: {
      outlet: Prisma.$OutletPayload<ExtArgs>
      customer: Prisma.$CustomerPayload<ExtArgs> | null
      table: Prisma.$TablePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      outletId: number
      customerId: number | null
      tableId: number | null
      dateTime: Date
      partySize: number
      status: string
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["reservation"]>
    composites: {}
  }

  type ReservationGetPayload<S extends boolean | null | undefined | ReservationDefaultArgs> = $Result.GetResult<Prisma.$ReservationPayload, S>

  type ReservationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReservationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReservationCountAggregateInputType | true
    }

  export interface ReservationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reservation'], meta: { name: 'Reservation' } }
    /**
     * Find zero or one Reservation that matches the filter.
     * @param {ReservationFindUniqueArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservationFindUniqueArgs>(args: SelectSubset<T, ReservationFindUniqueArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reservation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReservationFindUniqueOrThrowArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservationFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reservation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationFindFirstArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservationFindFirstArgs>(args?: SelectSubset<T, ReservationFindFirstArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reservation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationFindFirstOrThrowArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservationFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reservations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reservations
     * const reservations = await prisma.reservation.findMany()
     * 
     * // Get first 10 Reservations
     * const reservations = await prisma.reservation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reservationWithIdOnly = await prisma.reservation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReservationFindManyArgs>(args?: SelectSubset<T, ReservationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reservation.
     * @param {ReservationCreateArgs} args - Arguments to create a Reservation.
     * @example
     * // Create one Reservation
     * const Reservation = await prisma.reservation.create({
     *   data: {
     *     // ... data to create a Reservation
     *   }
     * })
     * 
     */
    create<T extends ReservationCreateArgs>(args: SelectSubset<T, ReservationCreateArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reservations.
     * @param {ReservationCreateManyArgs} args - Arguments to create many Reservations.
     * @example
     * // Create many Reservations
     * const reservation = await prisma.reservation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservationCreateManyArgs>(args?: SelectSubset<T, ReservationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Reservation.
     * @param {ReservationDeleteArgs} args - Arguments to delete one Reservation.
     * @example
     * // Delete one Reservation
     * const Reservation = await prisma.reservation.delete({
     *   where: {
     *     // ... filter to delete one Reservation
     *   }
     * })
     * 
     */
    delete<T extends ReservationDeleteArgs>(args: SelectSubset<T, ReservationDeleteArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reservation.
     * @param {ReservationUpdateArgs} args - Arguments to update one Reservation.
     * @example
     * // Update one Reservation
     * const reservation = await prisma.reservation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservationUpdateArgs>(args: SelectSubset<T, ReservationUpdateArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reservations.
     * @param {ReservationDeleteManyArgs} args - Arguments to filter Reservations to delete.
     * @example
     * // Delete a few Reservations
     * const { count } = await prisma.reservation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservationDeleteManyArgs>(args?: SelectSubset<T, ReservationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reservations
     * const reservation = await prisma.reservation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservationUpdateManyArgs>(args: SelectSubset<T, ReservationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Reservation.
     * @param {ReservationUpsertArgs} args - Arguments to update or create a Reservation.
     * @example
     * // Update or create a Reservation
     * const reservation = await prisma.reservation.upsert({
     *   create: {
     *     // ... data to create a Reservation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reservation we want to update
     *   }
     * })
     */
    upsert<T extends ReservationUpsertArgs>(args: SelectSubset<T, ReservationUpsertArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reservations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationCountArgs} args - Arguments to filter Reservations to count.
     * @example
     * // Count the number of Reservations
     * const count = await prisma.reservation.count({
     *   where: {
     *     // ... the filter for the Reservations we want to count
     *   }
     * })
    **/
    count<T extends ReservationCountArgs>(
      args?: Subset<T, ReservationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reservation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservationAggregateArgs>(args: Subset<T, ReservationAggregateArgs>): Prisma.PrismaPromise<GetReservationAggregateType<T>>

    /**
     * Group by Reservation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservationGroupByArgs['orderBy'] }
        : { orderBy?: ReservationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Reservation model
   */
  readonly fields: ReservationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Reservation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    outlet<T extends OutletDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OutletDefaultArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    customer<T extends Reservation$customerArgs<ExtArgs> = {}>(args?: Subset<T, Reservation$customerArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    table<T extends Reservation$tableArgs<ExtArgs> = {}>(args?: Subset<T, Reservation$tableArgs<ExtArgs>>): Prisma__TableClient<$Result.GetResult<Prisma.$TablePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Reservation model
   */
  interface ReservationFieldRefs {
    readonly id: FieldRef<"Reservation", 'Int'>
    readonly outletId: FieldRef<"Reservation", 'Int'>
    readonly customerId: FieldRef<"Reservation", 'Int'>
    readonly tableId: FieldRef<"Reservation", 'Int'>
    readonly dateTime: FieldRef<"Reservation", 'DateTime'>
    readonly partySize: FieldRef<"Reservation", 'Int'>
    readonly status: FieldRef<"Reservation", 'String'>
    readonly deleted: FieldRef<"Reservation", 'Boolean'>
    readonly deletedAt: FieldRef<"Reservation", 'DateTime'>
    readonly createdAt: FieldRef<"Reservation", 'DateTime'>
    readonly updatedAt: FieldRef<"Reservation", 'DateTime'>
    readonly version: FieldRef<"Reservation", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Reservation findUnique
   */
  export type ReservationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservation to fetch.
     */
    where: ReservationWhereUniqueInput
  }

  /**
   * Reservation findUniqueOrThrow
   */
  export type ReservationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservation to fetch.
     */
    where: ReservationWhereUniqueInput
  }

  /**
   * Reservation findFirst
   */
  export type ReservationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservation to fetch.
     */
    where?: ReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservations to fetch.
     */
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservations.
     */
    cursor?: ReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservations.
     */
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Reservation findFirstOrThrow
   */
  export type ReservationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservation to fetch.
     */
    where?: ReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservations to fetch.
     */
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservations.
     */
    cursor?: ReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservations.
     */
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Reservation findMany
   */
  export type ReservationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservations to fetch.
     */
    where?: ReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservations to fetch.
     */
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reservations.
     */
    cursor?: ReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservations.
     */
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Reservation create
   */
  export type ReservationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * The data needed to create a Reservation.
     */
    data: XOR<ReservationCreateInput, ReservationUncheckedCreateInput>
  }

  /**
   * Reservation createMany
   */
  export type ReservationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reservations.
     */
    data: ReservationCreateManyInput | ReservationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Reservation update
   */
  export type ReservationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * The data needed to update a Reservation.
     */
    data: XOR<ReservationUpdateInput, ReservationUncheckedUpdateInput>
    /**
     * Choose, which Reservation to update.
     */
    where: ReservationWhereUniqueInput
  }

  /**
   * Reservation updateMany
   */
  export type ReservationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reservations.
     */
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyInput>
    /**
     * Filter which Reservations to update
     */
    where?: ReservationWhereInput
    /**
     * Limit how many Reservations to update.
     */
    limit?: number
  }

  /**
   * Reservation upsert
   */
  export type ReservationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * The filter to search for the Reservation to update in case it exists.
     */
    where: ReservationWhereUniqueInput
    /**
     * In case the Reservation found by the `where` argument doesn't exist, create a new Reservation with this data.
     */
    create: XOR<ReservationCreateInput, ReservationUncheckedCreateInput>
    /**
     * In case the Reservation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservationUpdateInput, ReservationUncheckedUpdateInput>
  }

  /**
   * Reservation delete
   */
  export type ReservationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter which Reservation to delete.
     */
    where: ReservationWhereUniqueInput
  }

  /**
   * Reservation deleteMany
   */
  export type ReservationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservations to delete
     */
    where?: ReservationWhereInput
    /**
     * Limit how many Reservations to delete.
     */
    limit?: number
  }

  /**
   * Reservation.customer
   */
  export type Reservation$customerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
  }

  /**
   * Reservation.table
   */
  export type Reservation$tableArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Table
     */
    select?: TableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Table
     */
    omit?: TableOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TableInclude<ExtArgs> | null
    where?: TableWhereInput
  }

  /**
   * Reservation without action
   */
  export type ReservationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
  }


  /**
   * Model OrderRouting
   */

  export type AggregateOrderRouting = {
    _count: OrderRoutingCountAggregateOutputType | null
    _avg: OrderRoutingAvgAggregateOutputType | null
    _sum: OrderRoutingSumAggregateOutputType | null
    _min: OrderRoutingMinAggregateOutputType | null
    _max: OrderRoutingMaxAggregateOutputType | null
  }

  export type OrderRoutingAvgAggregateOutputType = {
    id: number | null
    salesItemId: number | null
    stationId: number | null
    version: number | null
  }

  export type OrderRoutingSumAggregateOutputType = {
    id: number | null
    salesItemId: number | null
    stationId: number | null
    version: number | null
  }

  export type OrderRoutingMinAggregateOutputType = {
    id: number | null
    salesItemId: number | null
    stationId: number | null
    status: string | null
    sentAt: Date | null
    completedAt: Date | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type OrderRoutingMaxAggregateOutputType = {
    id: number | null
    salesItemId: number | null
    stationId: number | null
    status: string | null
    sentAt: Date | null
    completedAt: Date | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type OrderRoutingCountAggregateOutputType = {
    id: number
    salesItemId: number
    stationId: number
    status: number
    sentAt: number
    completedAt: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type OrderRoutingAvgAggregateInputType = {
    id?: true
    salesItemId?: true
    stationId?: true
    version?: true
  }

  export type OrderRoutingSumAggregateInputType = {
    id?: true
    salesItemId?: true
    stationId?: true
    version?: true
  }

  export type OrderRoutingMinAggregateInputType = {
    id?: true
    salesItemId?: true
    stationId?: true
    status?: true
    sentAt?: true
    completedAt?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type OrderRoutingMaxAggregateInputType = {
    id?: true
    salesItemId?: true
    stationId?: true
    status?: true
    sentAt?: true
    completedAt?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type OrderRoutingCountAggregateInputType = {
    id?: true
    salesItemId?: true
    stationId?: true
    status?: true
    sentAt?: true
    completedAt?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type OrderRoutingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderRouting to aggregate.
     */
    where?: OrderRoutingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderRoutings to fetch.
     */
    orderBy?: OrderRoutingOrderByWithRelationInput | OrderRoutingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderRoutingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderRoutings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderRoutings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderRoutings
    **/
    _count?: true | OrderRoutingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderRoutingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderRoutingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderRoutingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderRoutingMaxAggregateInputType
  }

  export type GetOrderRoutingAggregateType<T extends OrderRoutingAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderRouting]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderRouting[P]>
      : GetScalarType<T[P], AggregateOrderRouting[P]>
  }




  export type OrderRoutingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderRoutingWhereInput
    orderBy?: OrderRoutingOrderByWithAggregationInput | OrderRoutingOrderByWithAggregationInput[]
    by: OrderRoutingScalarFieldEnum[] | OrderRoutingScalarFieldEnum
    having?: OrderRoutingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderRoutingCountAggregateInputType | true
    _avg?: OrderRoutingAvgAggregateInputType
    _sum?: OrderRoutingSumAggregateInputType
    _min?: OrderRoutingMinAggregateInputType
    _max?: OrderRoutingMaxAggregateInputType
  }

  export type OrderRoutingGroupByOutputType = {
    id: number
    salesItemId: number
    stationId: number
    status: string
    sentAt: Date | null
    completedAt: Date | null
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: OrderRoutingCountAggregateOutputType | null
    _avg: OrderRoutingAvgAggregateOutputType | null
    _sum: OrderRoutingSumAggregateOutputType | null
    _min: OrderRoutingMinAggregateOutputType | null
    _max: OrderRoutingMaxAggregateOutputType | null
  }

  type GetOrderRoutingGroupByPayload<T extends OrderRoutingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderRoutingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderRoutingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderRoutingGroupByOutputType[P]>
            : GetScalarType<T[P], OrderRoutingGroupByOutputType[P]>
        }
      >
    >


  export type OrderRoutingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    salesItemId?: boolean
    stationId?: boolean
    status?: boolean
    sentAt?: boolean
    completedAt?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    salesItem?: boolean | SalesItemDefaultArgs<ExtArgs>
    station?: boolean | StationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderRouting"]>



  export type OrderRoutingSelectScalar = {
    id?: boolean
    salesItemId?: boolean
    stationId?: boolean
    status?: boolean
    sentAt?: boolean
    completedAt?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type OrderRoutingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "salesItemId" | "stationId" | "status" | "sentAt" | "completedAt" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["orderRouting"]>
  export type OrderRoutingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    salesItem?: boolean | SalesItemDefaultArgs<ExtArgs>
    station?: boolean | StationDefaultArgs<ExtArgs>
  }

  export type $OrderRoutingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderRouting"
    objects: {
      salesItem: Prisma.$SalesItemPayload<ExtArgs>
      station: Prisma.$StationPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      salesItemId: number
      stationId: number
      status: string
      sentAt: Date | null
      completedAt: Date | null
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["orderRouting"]>
    composites: {}
  }

  type OrderRoutingGetPayload<S extends boolean | null | undefined | OrderRoutingDefaultArgs> = $Result.GetResult<Prisma.$OrderRoutingPayload, S>

  type OrderRoutingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderRoutingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderRoutingCountAggregateInputType | true
    }

  export interface OrderRoutingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderRouting'], meta: { name: 'OrderRouting' } }
    /**
     * Find zero or one OrderRouting that matches the filter.
     * @param {OrderRoutingFindUniqueArgs} args - Arguments to find a OrderRouting
     * @example
     * // Get one OrderRouting
     * const orderRouting = await prisma.orderRouting.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderRoutingFindUniqueArgs>(args: SelectSubset<T, OrderRoutingFindUniqueArgs<ExtArgs>>): Prisma__OrderRoutingClient<$Result.GetResult<Prisma.$OrderRoutingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderRouting that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderRoutingFindUniqueOrThrowArgs} args - Arguments to find a OrderRouting
     * @example
     * // Get one OrderRouting
     * const orderRouting = await prisma.orderRouting.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderRoutingFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderRoutingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderRoutingClient<$Result.GetResult<Prisma.$OrderRoutingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderRouting that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderRoutingFindFirstArgs} args - Arguments to find a OrderRouting
     * @example
     * // Get one OrderRouting
     * const orderRouting = await prisma.orderRouting.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderRoutingFindFirstArgs>(args?: SelectSubset<T, OrderRoutingFindFirstArgs<ExtArgs>>): Prisma__OrderRoutingClient<$Result.GetResult<Prisma.$OrderRoutingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderRouting that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderRoutingFindFirstOrThrowArgs} args - Arguments to find a OrderRouting
     * @example
     * // Get one OrderRouting
     * const orderRouting = await prisma.orderRouting.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderRoutingFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderRoutingFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderRoutingClient<$Result.GetResult<Prisma.$OrderRoutingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderRoutings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderRoutingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderRoutings
     * const orderRoutings = await prisma.orderRouting.findMany()
     * 
     * // Get first 10 OrderRoutings
     * const orderRoutings = await prisma.orderRouting.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderRoutingWithIdOnly = await prisma.orderRouting.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderRoutingFindManyArgs>(args?: SelectSubset<T, OrderRoutingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderRoutingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderRouting.
     * @param {OrderRoutingCreateArgs} args - Arguments to create a OrderRouting.
     * @example
     * // Create one OrderRouting
     * const OrderRouting = await prisma.orderRouting.create({
     *   data: {
     *     // ... data to create a OrderRouting
     *   }
     * })
     * 
     */
    create<T extends OrderRoutingCreateArgs>(args: SelectSubset<T, OrderRoutingCreateArgs<ExtArgs>>): Prisma__OrderRoutingClient<$Result.GetResult<Prisma.$OrderRoutingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderRoutings.
     * @param {OrderRoutingCreateManyArgs} args - Arguments to create many OrderRoutings.
     * @example
     * // Create many OrderRoutings
     * const orderRouting = await prisma.orderRouting.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderRoutingCreateManyArgs>(args?: SelectSubset<T, OrderRoutingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a OrderRouting.
     * @param {OrderRoutingDeleteArgs} args - Arguments to delete one OrderRouting.
     * @example
     * // Delete one OrderRouting
     * const OrderRouting = await prisma.orderRouting.delete({
     *   where: {
     *     // ... filter to delete one OrderRouting
     *   }
     * })
     * 
     */
    delete<T extends OrderRoutingDeleteArgs>(args: SelectSubset<T, OrderRoutingDeleteArgs<ExtArgs>>): Prisma__OrderRoutingClient<$Result.GetResult<Prisma.$OrderRoutingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderRouting.
     * @param {OrderRoutingUpdateArgs} args - Arguments to update one OrderRouting.
     * @example
     * // Update one OrderRouting
     * const orderRouting = await prisma.orderRouting.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderRoutingUpdateArgs>(args: SelectSubset<T, OrderRoutingUpdateArgs<ExtArgs>>): Prisma__OrderRoutingClient<$Result.GetResult<Prisma.$OrderRoutingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderRoutings.
     * @param {OrderRoutingDeleteManyArgs} args - Arguments to filter OrderRoutings to delete.
     * @example
     * // Delete a few OrderRoutings
     * const { count } = await prisma.orderRouting.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderRoutingDeleteManyArgs>(args?: SelectSubset<T, OrderRoutingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderRoutings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderRoutingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderRoutings
     * const orderRouting = await prisma.orderRouting.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderRoutingUpdateManyArgs>(args: SelectSubset<T, OrderRoutingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one OrderRouting.
     * @param {OrderRoutingUpsertArgs} args - Arguments to update or create a OrderRouting.
     * @example
     * // Update or create a OrderRouting
     * const orderRouting = await prisma.orderRouting.upsert({
     *   create: {
     *     // ... data to create a OrderRouting
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderRouting we want to update
     *   }
     * })
     */
    upsert<T extends OrderRoutingUpsertArgs>(args: SelectSubset<T, OrderRoutingUpsertArgs<ExtArgs>>): Prisma__OrderRoutingClient<$Result.GetResult<Prisma.$OrderRoutingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderRoutings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderRoutingCountArgs} args - Arguments to filter OrderRoutings to count.
     * @example
     * // Count the number of OrderRoutings
     * const count = await prisma.orderRouting.count({
     *   where: {
     *     // ... the filter for the OrderRoutings we want to count
     *   }
     * })
    **/
    count<T extends OrderRoutingCountArgs>(
      args?: Subset<T, OrderRoutingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderRoutingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderRouting.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderRoutingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderRoutingAggregateArgs>(args: Subset<T, OrderRoutingAggregateArgs>): Prisma.PrismaPromise<GetOrderRoutingAggregateType<T>>

    /**
     * Group by OrderRouting.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderRoutingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderRoutingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderRoutingGroupByArgs['orderBy'] }
        : { orderBy?: OrderRoutingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderRoutingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderRoutingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderRouting model
   */
  readonly fields: OrderRoutingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderRouting.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderRoutingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    salesItem<T extends SalesItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SalesItemDefaultArgs<ExtArgs>>): Prisma__SalesItemClient<$Result.GetResult<Prisma.$SalesItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    station<T extends StationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StationDefaultArgs<ExtArgs>>): Prisma__StationClient<$Result.GetResult<Prisma.$StationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderRouting model
   */
  interface OrderRoutingFieldRefs {
    readonly id: FieldRef<"OrderRouting", 'Int'>
    readonly salesItemId: FieldRef<"OrderRouting", 'Int'>
    readonly stationId: FieldRef<"OrderRouting", 'Int'>
    readonly status: FieldRef<"OrderRouting", 'String'>
    readonly sentAt: FieldRef<"OrderRouting", 'DateTime'>
    readonly completedAt: FieldRef<"OrderRouting", 'DateTime'>
    readonly deleted: FieldRef<"OrderRouting", 'Boolean'>
    readonly deletedAt: FieldRef<"OrderRouting", 'DateTime'>
    readonly createdAt: FieldRef<"OrderRouting", 'DateTime'>
    readonly updatedAt: FieldRef<"OrderRouting", 'DateTime'>
    readonly version: FieldRef<"OrderRouting", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * OrderRouting findUnique
   */
  export type OrderRoutingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderRouting
     */
    select?: OrderRoutingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderRouting
     */
    omit?: OrderRoutingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderRoutingInclude<ExtArgs> | null
    /**
     * Filter, which OrderRouting to fetch.
     */
    where: OrderRoutingWhereUniqueInput
  }

  /**
   * OrderRouting findUniqueOrThrow
   */
  export type OrderRoutingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderRouting
     */
    select?: OrderRoutingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderRouting
     */
    omit?: OrderRoutingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderRoutingInclude<ExtArgs> | null
    /**
     * Filter, which OrderRouting to fetch.
     */
    where: OrderRoutingWhereUniqueInput
  }

  /**
   * OrderRouting findFirst
   */
  export type OrderRoutingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderRouting
     */
    select?: OrderRoutingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderRouting
     */
    omit?: OrderRoutingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderRoutingInclude<ExtArgs> | null
    /**
     * Filter, which OrderRouting to fetch.
     */
    where?: OrderRoutingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderRoutings to fetch.
     */
    orderBy?: OrderRoutingOrderByWithRelationInput | OrderRoutingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderRoutings.
     */
    cursor?: OrderRoutingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderRoutings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderRoutings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderRoutings.
     */
    distinct?: OrderRoutingScalarFieldEnum | OrderRoutingScalarFieldEnum[]
  }

  /**
   * OrderRouting findFirstOrThrow
   */
  export type OrderRoutingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderRouting
     */
    select?: OrderRoutingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderRouting
     */
    omit?: OrderRoutingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderRoutingInclude<ExtArgs> | null
    /**
     * Filter, which OrderRouting to fetch.
     */
    where?: OrderRoutingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderRoutings to fetch.
     */
    orderBy?: OrderRoutingOrderByWithRelationInput | OrderRoutingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderRoutings.
     */
    cursor?: OrderRoutingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderRoutings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderRoutings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderRoutings.
     */
    distinct?: OrderRoutingScalarFieldEnum | OrderRoutingScalarFieldEnum[]
  }

  /**
   * OrderRouting findMany
   */
  export type OrderRoutingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderRouting
     */
    select?: OrderRoutingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderRouting
     */
    omit?: OrderRoutingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderRoutingInclude<ExtArgs> | null
    /**
     * Filter, which OrderRoutings to fetch.
     */
    where?: OrderRoutingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderRoutings to fetch.
     */
    orderBy?: OrderRoutingOrderByWithRelationInput | OrderRoutingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderRoutings.
     */
    cursor?: OrderRoutingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderRoutings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderRoutings.
     */
    skip?: number
    distinct?: OrderRoutingScalarFieldEnum | OrderRoutingScalarFieldEnum[]
  }

  /**
   * OrderRouting create
   */
  export type OrderRoutingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderRouting
     */
    select?: OrderRoutingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderRouting
     */
    omit?: OrderRoutingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderRoutingInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderRouting.
     */
    data: XOR<OrderRoutingCreateInput, OrderRoutingUncheckedCreateInput>
  }

  /**
   * OrderRouting createMany
   */
  export type OrderRoutingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderRoutings.
     */
    data: OrderRoutingCreateManyInput | OrderRoutingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderRouting update
   */
  export type OrderRoutingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderRouting
     */
    select?: OrderRoutingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderRouting
     */
    omit?: OrderRoutingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderRoutingInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderRouting.
     */
    data: XOR<OrderRoutingUpdateInput, OrderRoutingUncheckedUpdateInput>
    /**
     * Choose, which OrderRouting to update.
     */
    where: OrderRoutingWhereUniqueInput
  }

  /**
   * OrderRouting updateMany
   */
  export type OrderRoutingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderRoutings.
     */
    data: XOR<OrderRoutingUpdateManyMutationInput, OrderRoutingUncheckedUpdateManyInput>
    /**
     * Filter which OrderRoutings to update
     */
    where?: OrderRoutingWhereInput
    /**
     * Limit how many OrderRoutings to update.
     */
    limit?: number
  }

  /**
   * OrderRouting upsert
   */
  export type OrderRoutingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderRouting
     */
    select?: OrderRoutingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderRouting
     */
    omit?: OrderRoutingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderRoutingInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderRouting to update in case it exists.
     */
    where: OrderRoutingWhereUniqueInput
    /**
     * In case the OrderRouting found by the `where` argument doesn't exist, create a new OrderRouting with this data.
     */
    create: XOR<OrderRoutingCreateInput, OrderRoutingUncheckedCreateInput>
    /**
     * In case the OrderRouting was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderRoutingUpdateInput, OrderRoutingUncheckedUpdateInput>
  }

  /**
   * OrderRouting delete
   */
  export type OrderRoutingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderRouting
     */
    select?: OrderRoutingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderRouting
     */
    omit?: OrderRoutingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderRoutingInclude<ExtArgs> | null
    /**
     * Filter which OrderRouting to delete.
     */
    where: OrderRoutingWhereUniqueInput
  }

  /**
   * OrderRouting deleteMany
   */
  export type OrderRoutingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderRoutings to delete
     */
    where?: OrderRoutingWhereInput
    /**
     * Limit how many OrderRoutings to delete.
     */
    limit?: number
  }

  /**
   * OrderRouting without action
   */
  export type OrderRoutingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderRouting
     */
    select?: OrderRoutingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderRouting
     */
    omit?: OrderRoutingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderRoutingInclude<ExtArgs> | null
  }


  /**
   * Model Waitlist
   */

  export type AggregateWaitlist = {
    _count: WaitlistCountAggregateOutputType | null
    _avg: WaitlistAvgAggregateOutputType | null
    _sum: WaitlistSumAggregateOutputType | null
    _min: WaitlistMinAggregateOutputType | null
    _max: WaitlistMaxAggregateOutputType | null
  }

  export type WaitlistAvgAggregateOutputType = {
    id: number | null
    outletId: number | null
    customerId: number | null
    partySize: number | null
    waitTime: number | null
    version: number | null
  }

  export type WaitlistSumAggregateOutputType = {
    id: number | null
    outletId: number | null
    customerId: number | null
    partySize: number | null
    waitTime: number | null
    version: number | null
  }

  export type WaitlistMinAggregateOutputType = {
    id: number | null
    outletId: number | null
    customerId: number | null
    partySize: number | null
    status: string | null
    waitTime: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type WaitlistMaxAggregateOutputType = {
    id: number | null
    outletId: number | null
    customerId: number | null
    partySize: number | null
    status: string | null
    waitTime: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type WaitlistCountAggregateOutputType = {
    id: number
    outletId: number
    customerId: number
    partySize: number
    status: number
    waitTime: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type WaitlistAvgAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    partySize?: true
    waitTime?: true
    version?: true
  }

  export type WaitlistSumAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    partySize?: true
    waitTime?: true
    version?: true
  }

  export type WaitlistMinAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    partySize?: true
    status?: true
    waitTime?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type WaitlistMaxAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    partySize?: true
    status?: true
    waitTime?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type WaitlistCountAggregateInputType = {
    id?: true
    outletId?: true
    customerId?: true
    partySize?: true
    status?: true
    waitTime?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type WaitlistAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Waitlist to aggregate.
     */
    where?: WaitlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Waitlists to fetch.
     */
    orderBy?: WaitlistOrderByWithRelationInput | WaitlistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WaitlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Waitlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Waitlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Waitlists
    **/
    _count?: true | WaitlistCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WaitlistAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WaitlistSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WaitlistMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WaitlistMaxAggregateInputType
  }

  export type GetWaitlistAggregateType<T extends WaitlistAggregateArgs> = {
        [P in keyof T & keyof AggregateWaitlist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWaitlist[P]>
      : GetScalarType<T[P], AggregateWaitlist[P]>
  }




  export type WaitlistGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WaitlistWhereInput
    orderBy?: WaitlistOrderByWithAggregationInput | WaitlistOrderByWithAggregationInput[]
    by: WaitlistScalarFieldEnum[] | WaitlistScalarFieldEnum
    having?: WaitlistScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WaitlistCountAggregateInputType | true
    _avg?: WaitlistAvgAggregateInputType
    _sum?: WaitlistSumAggregateInputType
    _min?: WaitlistMinAggregateInputType
    _max?: WaitlistMaxAggregateInputType
  }

  export type WaitlistGroupByOutputType = {
    id: number
    outletId: number
    customerId: number | null
    partySize: number
    status: string
    waitTime: number | null
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: WaitlistCountAggregateOutputType | null
    _avg: WaitlistAvgAggregateOutputType | null
    _sum: WaitlistSumAggregateOutputType | null
    _min: WaitlistMinAggregateOutputType | null
    _max: WaitlistMaxAggregateOutputType | null
  }

  type GetWaitlistGroupByPayload<T extends WaitlistGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WaitlistGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WaitlistGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WaitlistGroupByOutputType[P]>
            : GetScalarType<T[P], WaitlistGroupByOutputType[P]>
        }
      >
    >


  export type WaitlistSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    outletId?: boolean
    customerId?: boolean
    partySize?: boolean
    status?: boolean
    waitTime?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    outlet?: boolean | OutletDefaultArgs<ExtArgs>
    customer?: boolean | Waitlist$customerArgs<ExtArgs>
  }, ExtArgs["result"]["waitlist"]>



  export type WaitlistSelectScalar = {
    id?: boolean
    outletId?: boolean
    customerId?: boolean
    partySize?: boolean
    status?: boolean
    waitTime?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type WaitlistOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "outletId" | "customerId" | "partySize" | "status" | "waitTime" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["waitlist"]>
  export type WaitlistInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    outlet?: boolean | OutletDefaultArgs<ExtArgs>
    customer?: boolean | Waitlist$customerArgs<ExtArgs>
  }

  export type $WaitlistPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Waitlist"
    objects: {
      outlet: Prisma.$OutletPayload<ExtArgs>
      customer: Prisma.$CustomerPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      outletId: number
      customerId: number | null
      partySize: number
      status: string
      waitTime: number | null
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["waitlist"]>
    composites: {}
  }

  type WaitlistGetPayload<S extends boolean | null | undefined | WaitlistDefaultArgs> = $Result.GetResult<Prisma.$WaitlistPayload, S>

  type WaitlistCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<WaitlistFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: WaitlistCountAggregateInputType | true
    }

  export interface WaitlistDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Waitlist'], meta: { name: 'Waitlist' } }
    /**
     * Find zero or one Waitlist that matches the filter.
     * @param {WaitlistFindUniqueArgs} args - Arguments to find a Waitlist
     * @example
     * // Get one Waitlist
     * const waitlist = await prisma.waitlist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WaitlistFindUniqueArgs>(args: SelectSubset<T, WaitlistFindUniqueArgs<ExtArgs>>): Prisma__WaitlistClient<$Result.GetResult<Prisma.$WaitlistPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Waitlist that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {WaitlistFindUniqueOrThrowArgs} args - Arguments to find a Waitlist
     * @example
     * // Get one Waitlist
     * const waitlist = await prisma.waitlist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WaitlistFindUniqueOrThrowArgs>(args: SelectSubset<T, WaitlistFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WaitlistClient<$Result.GetResult<Prisma.$WaitlistPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Waitlist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WaitlistFindFirstArgs} args - Arguments to find a Waitlist
     * @example
     * // Get one Waitlist
     * const waitlist = await prisma.waitlist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WaitlistFindFirstArgs>(args?: SelectSubset<T, WaitlistFindFirstArgs<ExtArgs>>): Prisma__WaitlistClient<$Result.GetResult<Prisma.$WaitlistPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Waitlist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WaitlistFindFirstOrThrowArgs} args - Arguments to find a Waitlist
     * @example
     * // Get one Waitlist
     * const waitlist = await prisma.waitlist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WaitlistFindFirstOrThrowArgs>(args?: SelectSubset<T, WaitlistFindFirstOrThrowArgs<ExtArgs>>): Prisma__WaitlistClient<$Result.GetResult<Prisma.$WaitlistPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Waitlists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WaitlistFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Waitlists
     * const waitlists = await prisma.waitlist.findMany()
     * 
     * // Get first 10 Waitlists
     * const waitlists = await prisma.waitlist.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const waitlistWithIdOnly = await prisma.waitlist.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends WaitlistFindManyArgs>(args?: SelectSubset<T, WaitlistFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WaitlistPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Waitlist.
     * @param {WaitlistCreateArgs} args - Arguments to create a Waitlist.
     * @example
     * // Create one Waitlist
     * const Waitlist = await prisma.waitlist.create({
     *   data: {
     *     // ... data to create a Waitlist
     *   }
     * })
     * 
     */
    create<T extends WaitlistCreateArgs>(args: SelectSubset<T, WaitlistCreateArgs<ExtArgs>>): Prisma__WaitlistClient<$Result.GetResult<Prisma.$WaitlistPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Waitlists.
     * @param {WaitlistCreateManyArgs} args - Arguments to create many Waitlists.
     * @example
     * // Create many Waitlists
     * const waitlist = await prisma.waitlist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WaitlistCreateManyArgs>(args?: SelectSubset<T, WaitlistCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Waitlist.
     * @param {WaitlistDeleteArgs} args - Arguments to delete one Waitlist.
     * @example
     * // Delete one Waitlist
     * const Waitlist = await prisma.waitlist.delete({
     *   where: {
     *     // ... filter to delete one Waitlist
     *   }
     * })
     * 
     */
    delete<T extends WaitlistDeleteArgs>(args: SelectSubset<T, WaitlistDeleteArgs<ExtArgs>>): Prisma__WaitlistClient<$Result.GetResult<Prisma.$WaitlistPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Waitlist.
     * @param {WaitlistUpdateArgs} args - Arguments to update one Waitlist.
     * @example
     * // Update one Waitlist
     * const waitlist = await prisma.waitlist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WaitlistUpdateArgs>(args: SelectSubset<T, WaitlistUpdateArgs<ExtArgs>>): Prisma__WaitlistClient<$Result.GetResult<Prisma.$WaitlistPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Waitlists.
     * @param {WaitlistDeleteManyArgs} args - Arguments to filter Waitlists to delete.
     * @example
     * // Delete a few Waitlists
     * const { count } = await prisma.waitlist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WaitlistDeleteManyArgs>(args?: SelectSubset<T, WaitlistDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Waitlists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WaitlistUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Waitlists
     * const waitlist = await prisma.waitlist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WaitlistUpdateManyArgs>(args: SelectSubset<T, WaitlistUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Waitlist.
     * @param {WaitlistUpsertArgs} args - Arguments to update or create a Waitlist.
     * @example
     * // Update or create a Waitlist
     * const waitlist = await prisma.waitlist.upsert({
     *   create: {
     *     // ... data to create a Waitlist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Waitlist we want to update
     *   }
     * })
     */
    upsert<T extends WaitlistUpsertArgs>(args: SelectSubset<T, WaitlistUpsertArgs<ExtArgs>>): Prisma__WaitlistClient<$Result.GetResult<Prisma.$WaitlistPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Waitlists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WaitlistCountArgs} args - Arguments to filter Waitlists to count.
     * @example
     * // Count the number of Waitlists
     * const count = await prisma.waitlist.count({
     *   where: {
     *     // ... the filter for the Waitlists we want to count
     *   }
     * })
    **/
    count<T extends WaitlistCountArgs>(
      args?: Subset<T, WaitlistCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WaitlistCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Waitlist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WaitlistAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WaitlistAggregateArgs>(args: Subset<T, WaitlistAggregateArgs>): Prisma.PrismaPromise<GetWaitlistAggregateType<T>>

    /**
     * Group by Waitlist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WaitlistGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WaitlistGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WaitlistGroupByArgs['orderBy'] }
        : { orderBy?: WaitlistGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WaitlistGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWaitlistGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Waitlist model
   */
  readonly fields: WaitlistFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Waitlist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WaitlistClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    outlet<T extends OutletDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OutletDefaultArgs<ExtArgs>>): Prisma__OutletClient<$Result.GetResult<Prisma.$OutletPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    customer<T extends Waitlist$customerArgs<ExtArgs> = {}>(args?: Subset<T, Waitlist$customerArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Waitlist model
   */
  interface WaitlistFieldRefs {
    readonly id: FieldRef<"Waitlist", 'Int'>
    readonly outletId: FieldRef<"Waitlist", 'Int'>
    readonly customerId: FieldRef<"Waitlist", 'Int'>
    readonly partySize: FieldRef<"Waitlist", 'Int'>
    readonly status: FieldRef<"Waitlist", 'String'>
    readonly waitTime: FieldRef<"Waitlist", 'Int'>
    readonly deleted: FieldRef<"Waitlist", 'Boolean'>
    readonly deletedAt: FieldRef<"Waitlist", 'DateTime'>
    readonly createdAt: FieldRef<"Waitlist", 'DateTime'>
    readonly updatedAt: FieldRef<"Waitlist", 'DateTime'>
    readonly version: FieldRef<"Waitlist", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Waitlist findUnique
   */
  export type WaitlistFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Waitlist
     */
    select?: WaitlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Waitlist
     */
    omit?: WaitlistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WaitlistInclude<ExtArgs> | null
    /**
     * Filter, which Waitlist to fetch.
     */
    where: WaitlistWhereUniqueInput
  }

  /**
   * Waitlist findUniqueOrThrow
   */
  export type WaitlistFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Waitlist
     */
    select?: WaitlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Waitlist
     */
    omit?: WaitlistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WaitlistInclude<ExtArgs> | null
    /**
     * Filter, which Waitlist to fetch.
     */
    where: WaitlistWhereUniqueInput
  }

  /**
   * Waitlist findFirst
   */
  export type WaitlistFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Waitlist
     */
    select?: WaitlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Waitlist
     */
    omit?: WaitlistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WaitlistInclude<ExtArgs> | null
    /**
     * Filter, which Waitlist to fetch.
     */
    where?: WaitlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Waitlists to fetch.
     */
    orderBy?: WaitlistOrderByWithRelationInput | WaitlistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Waitlists.
     */
    cursor?: WaitlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Waitlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Waitlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Waitlists.
     */
    distinct?: WaitlistScalarFieldEnum | WaitlistScalarFieldEnum[]
  }

  /**
   * Waitlist findFirstOrThrow
   */
  export type WaitlistFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Waitlist
     */
    select?: WaitlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Waitlist
     */
    omit?: WaitlistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WaitlistInclude<ExtArgs> | null
    /**
     * Filter, which Waitlist to fetch.
     */
    where?: WaitlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Waitlists to fetch.
     */
    orderBy?: WaitlistOrderByWithRelationInput | WaitlistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Waitlists.
     */
    cursor?: WaitlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Waitlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Waitlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Waitlists.
     */
    distinct?: WaitlistScalarFieldEnum | WaitlistScalarFieldEnum[]
  }

  /**
   * Waitlist findMany
   */
  export type WaitlistFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Waitlist
     */
    select?: WaitlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Waitlist
     */
    omit?: WaitlistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WaitlistInclude<ExtArgs> | null
    /**
     * Filter, which Waitlists to fetch.
     */
    where?: WaitlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Waitlists to fetch.
     */
    orderBy?: WaitlistOrderByWithRelationInput | WaitlistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Waitlists.
     */
    cursor?: WaitlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Waitlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Waitlists.
     */
    skip?: number
    distinct?: WaitlistScalarFieldEnum | WaitlistScalarFieldEnum[]
  }

  /**
   * Waitlist create
   */
  export type WaitlistCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Waitlist
     */
    select?: WaitlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Waitlist
     */
    omit?: WaitlistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WaitlistInclude<ExtArgs> | null
    /**
     * The data needed to create a Waitlist.
     */
    data: XOR<WaitlistCreateInput, WaitlistUncheckedCreateInput>
  }

  /**
   * Waitlist createMany
   */
  export type WaitlistCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Waitlists.
     */
    data: WaitlistCreateManyInput | WaitlistCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Waitlist update
   */
  export type WaitlistUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Waitlist
     */
    select?: WaitlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Waitlist
     */
    omit?: WaitlistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WaitlistInclude<ExtArgs> | null
    /**
     * The data needed to update a Waitlist.
     */
    data: XOR<WaitlistUpdateInput, WaitlistUncheckedUpdateInput>
    /**
     * Choose, which Waitlist to update.
     */
    where: WaitlistWhereUniqueInput
  }

  /**
   * Waitlist updateMany
   */
  export type WaitlistUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Waitlists.
     */
    data: XOR<WaitlistUpdateManyMutationInput, WaitlistUncheckedUpdateManyInput>
    /**
     * Filter which Waitlists to update
     */
    where?: WaitlistWhereInput
    /**
     * Limit how many Waitlists to update.
     */
    limit?: number
  }

  /**
   * Waitlist upsert
   */
  export type WaitlistUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Waitlist
     */
    select?: WaitlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Waitlist
     */
    omit?: WaitlistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WaitlistInclude<ExtArgs> | null
    /**
     * The filter to search for the Waitlist to update in case it exists.
     */
    where: WaitlistWhereUniqueInput
    /**
     * In case the Waitlist found by the `where` argument doesn't exist, create a new Waitlist with this data.
     */
    create: XOR<WaitlistCreateInput, WaitlistUncheckedCreateInput>
    /**
     * In case the Waitlist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WaitlistUpdateInput, WaitlistUncheckedUpdateInput>
  }

  /**
   * Waitlist delete
   */
  export type WaitlistDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Waitlist
     */
    select?: WaitlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Waitlist
     */
    omit?: WaitlistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WaitlistInclude<ExtArgs> | null
    /**
     * Filter which Waitlist to delete.
     */
    where: WaitlistWhereUniqueInput
  }

  /**
   * Waitlist deleteMany
   */
  export type WaitlistDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Waitlists to delete
     */
    where?: WaitlistWhereInput
    /**
     * Limit how many Waitlists to delete.
     */
    limit?: number
  }

  /**
   * Waitlist.customer
   */
  export type Waitlist$customerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
  }

  /**
   * Waitlist without action
   */
  export type WaitlistDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Waitlist
     */
    select?: WaitlistSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Waitlist
     */
    omit?: WaitlistOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WaitlistInclude<ExtArgs> | null
  }


  /**
   * Model SplitBill
   */

  export type AggregateSplitBill = {
    _count: SplitBillCountAggregateOutputType | null
    _avg: SplitBillAvgAggregateOutputType | null
    _sum: SplitBillSumAggregateOutputType | null
    _min: SplitBillMinAggregateOutputType | null
    _max: SplitBillMaxAggregateOutputType | null
  }

  export type SplitBillAvgAggregateOutputType = {
    id: number | null
    salesId: number | null
    amount: Decimal | null
    paymentId: number | null
    customerId: number | null
    version: number | null
  }

  export type SplitBillSumAggregateOutputType = {
    id: number | null
    salesId: number | null
    amount: Decimal | null
    paymentId: number | null
    customerId: number | null
    version: number | null
  }

  export type SplitBillMinAggregateOutputType = {
    id: number | null
    salesId: number | null
    amount: Decimal | null
    paymentId: number | null
    customerId: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type SplitBillMaxAggregateOutputType = {
    id: number | null
    salesId: number | null
    amount: Decimal | null
    paymentId: number | null
    customerId: number | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type SplitBillCountAggregateOutputType = {
    id: number
    salesId: number
    amount: number
    paymentId: number
    customerId: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type SplitBillAvgAggregateInputType = {
    id?: true
    salesId?: true
    amount?: true
    paymentId?: true
    customerId?: true
    version?: true
  }

  export type SplitBillSumAggregateInputType = {
    id?: true
    salesId?: true
    amount?: true
    paymentId?: true
    customerId?: true
    version?: true
  }

  export type SplitBillMinAggregateInputType = {
    id?: true
    salesId?: true
    amount?: true
    paymentId?: true
    customerId?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type SplitBillMaxAggregateInputType = {
    id?: true
    salesId?: true
    amount?: true
    paymentId?: true
    customerId?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type SplitBillCountAggregateInputType = {
    id?: true
    salesId?: true
    amount?: true
    paymentId?: true
    customerId?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type SplitBillAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SplitBill to aggregate.
     */
    where?: SplitBillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SplitBills to fetch.
     */
    orderBy?: SplitBillOrderByWithRelationInput | SplitBillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SplitBillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SplitBills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SplitBills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SplitBills
    **/
    _count?: true | SplitBillCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SplitBillAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SplitBillSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SplitBillMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SplitBillMaxAggregateInputType
  }

  export type GetSplitBillAggregateType<T extends SplitBillAggregateArgs> = {
        [P in keyof T & keyof AggregateSplitBill]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSplitBill[P]>
      : GetScalarType<T[P], AggregateSplitBill[P]>
  }




  export type SplitBillGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SplitBillWhereInput
    orderBy?: SplitBillOrderByWithAggregationInput | SplitBillOrderByWithAggregationInput[]
    by: SplitBillScalarFieldEnum[] | SplitBillScalarFieldEnum
    having?: SplitBillScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SplitBillCountAggregateInputType | true
    _avg?: SplitBillAvgAggregateInputType
    _sum?: SplitBillSumAggregateInputType
    _min?: SplitBillMinAggregateInputType
    _max?: SplitBillMaxAggregateInputType
  }

  export type SplitBillGroupByOutputType = {
    id: number
    salesId: number
    amount: Decimal
    paymentId: number | null
    customerId: number | null
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
    _count: SplitBillCountAggregateOutputType | null
    _avg: SplitBillAvgAggregateOutputType | null
    _sum: SplitBillSumAggregateOutputType | null
    _min: SplitBillMinAggregateOutputType | null
    _max: SplitBillMaxAggregateOutputType | null
  }

  type GetSplitBillGroupByPayload<T extends SplitBillGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SplitBillGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SplitBillGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SplitBillGroupByOutputType[P]>
            : GetScalarType<T[P], SplitBillGroupByOutputType[P]>
        }
      >
    >


  export type SplitBillSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    salesId?: boolean
    amount?: boolean
    paymentId?: boolean
    customerId?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    payment?: boolean | SplitBill$paymentArgs<ExtArgs>
    customer?: boolean | SplitBill$customerArgs<ExtArgs>
  }, ExtArgs["result"]["splitBill"]>



  export type SplitBillSelectScalar = {
    id?: boolean
    salesId?: boolean
    amount?: boolean
    paymentId?: boolean
    customerId?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type SplitBillOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "salesId" | "amount" | "paymentId" | "customerId" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["splitBill"]>
  export type SplitBillInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    payment?: boolean | SplitBill$paymentArgs<ExtArgs>
    customer?: boolean | SplitBill$customerArgs<ExtArgs>
  }

  export type $SplitBillPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SplitBill"
    objects: {
      payment: Prisma.$PaymentPayload<ExtArgs> | null
      customer: Prisma.$CustomerPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      salesId: number
      amount: Prisma.Decimal
      paymentId: number | null
      customerId: number | null
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date | null
      updatedAt: Date | null
      version: number | null
    }, ExtArgs["result"]["splitBill"]>
    composites: {}
  }

  type SplitBillGetPayload<S extends boolean | null | undefined | SplitBillDefaultArgs> = $Result.GetResult<Prisma.$SplitBillPayload, S>

  type SplitBillCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SplitBillFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SplitBillCountAggregateInputType | true
    }

  export interface SplitBillDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SplitBill'], meta: { name: 'SplitBill' } }
    /**
     * Find zero or one SplitBill that matches the filter.
     * @param {SplitBillFindUniqueArgs} args - Arguments to find a SplitBill
     * @example
     * // Get one SplitBill
     * const splitBill = await prisma.splitBill.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SplitBillFindUniqueArgs>(args: SelectSubset<T, SplitBillFindUniqueArgs<ExtArgs>>): Prisma__SplitBillClient<$Result.GetResult<Prisma.$SplitBillPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SplitBill that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SplitBillFindUniqueOrThrowArgs} args - Arguments to find a SplitBill
     * @example
     * // Get one SplitBill
     * const splitBill = await prisma.splitBill.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SplitBillFindUniqueOrThrowArgs>(args: SelectSubset<T, SplitBillFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SplitBillClient<$Result.GetResult<Prisma.$SplitBillPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SplitBill that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SplitBillFindFirstArgs} args - Arguments to find a SplitBill
     * @example
     * // Get one SplitBill
     * const splitBill = await prisma.splitBill.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SplitBillFindFirstArgs>(args?: SelectSubset<T, SplitBillFindFirstArgs<ExtArgs>>): Prisma__SplitBillClient<$Result.GetResult<Prisma.$SplitBillPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SplitBill that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SplitBillFindFirstOrThrowArgs} args - Arguments to find a SplitBill
     * @example
     * // Get one SplitBill
     * const splitBill = await prisma.splitBill.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SplitBillFindFirstOrThrowArgs>(args?: SelectSubset<T, SplitBillFindFirstOrThrowArgs<ExtArgs>>): Prisma__SplitBillClient<$Result.GetResult<Prisma.$SplitBillPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SplitBills that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SplitBillFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SplitBills
     * const splitBills = await prisma.splitBill.findMany()
     * 
     * // Get first 10 SplitBills
     * const splitBills = await prisma.splitBill.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const splitBillWithIdOnly = await prisma.splitBill.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SplitBillFindManyArgs>(args?: SelectSubset<T, SplitBillFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SplitBillPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SplitBill.
     * @param {SplitBillCreateArgs} args - Arguments to create a SplitBill.
     * @example
     * // Create one SplitBill
     * const SplitBill = await prisma.splitBill.create({
     *   data: {
     *     // ... data to create a SplitBill
     *   }
     * })
     * 
     */
    create<T extends SplitBillCreateArgs>(args: SelectSubset<T, SplitBillCreateArgs<ExtArgs>>): Prisma__SplitBillClient<$Result.GetResult<Prisma.$SplitBillPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SplitBills.
     * @param {SplitBillCreateManyArgs} args - Arguments to create many SplitBills.
     * @example
     * // Create many SplitBills
     * const splitBill = await prisma.splitBill.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SplitBillCreateManyArgs>(args?: SelectSubset<T, SplitBillCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SplitBill.
     * @param {SplitBillDeleteArgs} args - Arguments to delete one SplitBill.
     * @example
     * // Delete one SplitBill
     * const SplitBill = await prisma.splitBill.delete({
     *   where: {
     *     // ... filter to delete one SplitBill
     *   }
     * })
     * 
     */
    delete<T extends SplitBillDeleteArgs>(args: SelectSubset<T, SplitBillDeleteArgs<ExtArgs>>): Prisma__SplitBillClient<$Result.GetResult<Prisma.$SplitBillPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SplitBill.
     * @param {SplitBillUpdateArgs} args - Arguments to update one SplitBill.
     * @example
     * // Update one SplitBill
     * const splitBill = await prisma.splitBill.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SplitBillUpdateArgs>(args: SelectSubset<T, SplitBillUpdateArgs<ExtArgs>>): Prisma__SplitBillClient<$Result.GetResult<Prisma.$SplitBillPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SplitBills.
     * @param {SplitBillDeleteManyArgs} args - Arguments to filter SplitBills to delete.
     * @example
     * // Delete a few SplitBills
     * const { count } = await prisma.splitBill.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SplitBillDeleteManyArgs>(args?: SelectSubset<T, SplitBillDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SplitBills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SplitBillUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SplitBills
     * const splitBill = await prisma.splitBill.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SplitBillUpdateManyArgs>(args: SelectSubset<T, SplitBillUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SplitBill.
     * @param {SplitBillUpsertArgs} args - Arguments to update or create a SplitBill.
     * @example
     * // Update or create a SplitBill
     * const splitBill = await prisma.splitBill.upsert({
     *   create: {
     *     // ... data to create a SplitBill
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SplitBill we want to update
     *   }
     * })
     */
    upsert<T extends SplitBillUpsertArgs>(args: SelectSubset<T, SplitBillUpsertArgs<ExtArgs>>): Prisma__SplitBillClient<$Result.GetResult<Prisma.$SplitBillPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SplitBills.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SplitBillCountArgs} args - Arguments to filter SplitBills to count.
     * @example
     * // Count the number of SplitBills
     * const count = await prisma.splitBill.count({
     *   where: {
     *     // ... the filter for the SplitBills we want to count
     *   }
     * })
    **/
    count<T extends SplitBillCountArgs>(
      args?: Subset<T, SplitBillCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SplitBillCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SplitBill.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SplitBillAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SplitBillAggregateArgs>(args: Subset<T, SplitBillAggregateArgs>): Prisma.PrismaPromise<GetSplitBillAggregateType<T>>

    /**
     * Group by SplitBill.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SplitBillGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SplitBillGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SplitBillGroupByArgs['orderBy'] }
        : { orderBy?: SplitBillGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SplitBillGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSplitBillGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SplitBill model
   */
  readonly fields: SplitBillFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SplitBill.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SplitBillClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    payment<T extends SplitBill$paymentArgs<ExtArgs> = {}>(args?: Subset<T, SplitBill$paymentArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    customer<T extends SplitBill$customerArgs<ExtArgs> = {}>(args?: Subset<T, SplitBill$customerArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SplitBill model
   */
  interface SplitBillFieldRefs {
    readonly id: FieldRef<"SplitBill", 'Int'>
    readonly salesId: FieldRef<"SplitBill", 'Int'>
    readonly amount: FieldRef<"SplitBill", 'Decimal'>
    readonly paymentId: FieldRef<"SplitBill", 'Int'>
    readonly customerId: FieldRef<"SplitBill", 'Int'>
    readonly deleted: FieldRef<"SplitBill", 'Boolean'>
    readonly deletedAt: FieldRef<"SplitBill", 'DateTime'>
    readonly createdAt: FieldRef<"SplitBill", 'DateTime'>
    readonly updatedAt: FieldRef<"SplitBill", 'DateTime'>
    readonly version: FieldRef<"SplitBill", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * SplitBill findUnique
   */
  export type SplitBillFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SplitBill
     */
    select?: SplitBillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SplitBill
     */
    omit?: SplitBillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SplitBillInclude<ExtArgs> | null
    /**
     * Filter, which SplitBill to fetch.
     */
    where: SplitBillWhereUniqueInput
  }

  /**
   * SplitBill findUniqueOrThrow
   */
  export type SplitBillFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SplitBill
     */
    select?: SplitBillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SplitBill
     */
    omit?: SplitBillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SplitBillInclude<ExtArgs> | null
    /**
     * Filter, which SplitBill to fetch.
     */
    where: SplitBillWhereUniqueInput
  }

  /**
   * SplitBill findFirst
   */
  export type SplitBillFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SplitBill
     */
    select?: SplitBillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SplitBill
     */
    omit?: SplitBillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SplitBillInclude<ExtArgs> | null
    /**
     * Filter, which SplitBill to fetch.
     */
    where?: SplitBillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SplitBills to fetch.
     */
    orderBy?: SplitBillOrderByWithRelationInput | SplitBillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SplitBills.
     */
    cursor?: SplitBillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SplitBills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SplitBills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SplitBills.
     */
    distinct?: SplitBillScalarFieldEnum | SplitBillScalarFieldEnum[]
  }

  /**
   * SplitBill findFirstOrThrow
   */
  export type SplitBillFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SplitBill
     */
    select?: SplitBillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SplitBill
     */
    omit?: SplitBillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SplitBillInclude<ExtArgs> | null
    /**
     * Filter, which SplitBill to fetch.
     */
    where?: SplitBillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SplitBills to fetch.
     */
    orderBy?: SplitBillOrderByWithRelationInput | SplitBillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SplitBills.
     */
    cursor?: SplitBillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SplitBills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SplitBills.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SplitBills.
     */
    distinct?: SplitBillScalarFieldEnum | SplitBillScalarFieldEnum[]
  }

  /**
   * SplitBill findMany
   */
  export type SplitBillFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SplitBill
     */
    select?: SplitBillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SplitBill
     */
    omit?: SplitBillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SplitBillInclude<ExtArgs> | null
    /**
     * Filter, which SplitBills to fetch.
     */
    where?: SplitBillWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SplitBills to fetch.
     */
    orderBy?: SplitBillOrderByWithRelationInput | SplitBillOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SplitBills.
     */
    cursor?: SplitBillWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SplitBills from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SplitBills.
     */
    skip?: number
    distinct?: SplitBillScalarFieldEnum | SplitBillScalarFieldEnum[]
  }

  /**
   * SplitBill create
   */
  export type SplitBillCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SplitBill
     */
    select?: SplitBillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SplitBill
     */
    omit?: SplitBillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SplitBillInclude<ExtArgs> | null
    /**
     * The data needed to create a SplitBill.
     */
    data: XOR<SplitBillCreateInput, SplitBillUncheckedCreateInput>
  }

  /**
   * SplitBill createMany
   */
  export type SplitBillCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SplitBills.
     */
    data: SplitBillCreateManyInput | SplitBillCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SplitBill update
   */
  export type SplitBillUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SplitBill
     */
    select?: SplitBillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SplitBill
     */
    omit?: SplitBillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SplitBillInclude<ExtArgs> | null
    /**
     * The data needed to update a SplitBill.
     */
    data: XOR<SplitBillUpdateInput, SplitBillUncheckedUpdateInput>
    /**
     * Choose, which SplitBill to update.
     */
    where: SplitBillWhereUniqueInput
  }

  /**
   * SplitBill updateMany
   */
  export type SplitBillUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SplitBills.
     */
    data: XOR<SplitBillUpdateManyMutationInput, SplitBillUncheckedUpdateManyInput>
    /**
     * Filter which SplitBills to update
     */
    where?: SplitBillWhereInput
    /**
     * Limit how many SplitBills to update.
     */
    limit?: number
  }

  /**
   * SplitBill upsert
   */
  export type SplitBillUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SplitBill
     */
    select?: SplitBillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SplitBill
     */
    omit?: SplitBillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SplitBillInclude<ExtArgs> | null
    /**
     * The filter to search for the SplitBill to update in case it exists.
     */
    where: SplitBillWhereUniqueInput
    /**
     * In case the SplitBill found by the `where` argument doesn't exist, create a new SplitBill with this data.
     */
    create: XOR<SplitBillCreateInput, SplitBillUncheckedCreateInput>
    /**
     * In case the SplitBill was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SplitBillUpdateInput, SplitBillUncheckedUpdateInput>
  }

  /**
   * SplitBill delete
   */
  export type SplitBillDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SplitBill
     */
    select?: SplitBillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SplitBill
     */
    omit?: SplitBillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SplitBillInclude<ExtArgs> | null
    /**
     * Filter which SplitBill to delete.
     */
    where: SplitBillWhereUniqueInput
  }

  /**
   * SplitBill deleteMany
   */
  export type SplitBillDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SplitBills to delete
     */
    where?: SplitBillWhereInput
    /**
     * Limit how many SplitBills to delete.
     */
    limit?: number
  }

  /**
   * SplitBill.payment
   */
  export type SplitBill$paymentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
  }

  /**
   * SplitBill.customer
   */
  export type SplitBill$customerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
  }

  /**
   * SplitBill without action
   */
  export type SplitBillDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SplitBill
     */
    select?: SplitBillSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SplitBill
     */
    omit?: SplitBillOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SplitBillInclude<ExtArgs> | null
  }


  /**
   * Model Promotion
   */

  export type AggregatePromotion = {
    _count: PromotionCountAggregateOutputType | null
    _avg: PromotionAvgAggregateOutputType | null
    _sum: PromotionSumAggregateOutputType | null
    _min: PromotionMinAggregateOutputType | null
    _max: PromotionMaxAggregateOutputType | null
  }

  export type PromotionAvgAggregateOutputType = {
    id: number | null
    priority: number | null
    discountValue: Decimal | null
    buyQuantity: number | null
    getQuantity: number | null
    getDiscountValue: Decimal | null
    minPurchaseAmount: Decimal | null
    minPurchaseQty: number | null
    maxUsageTotal: number | null
    maxUsagePerCustomer: number | null
    currentUsage: number | null
    version: number | null
  }

  export type PromotionSumAggregateOutputType = {
    id: number | null
    priority: number | null
    discountValue: Decimal | null
    buyQuantity: number | null
    getQuantity: number | null
    getDiscountValue: Decimal | null
    minPurchaseAmount: Decimal | null
    minPurchaseQty: number | null
    maxUsageTotal: number | null
    maxUsagePerCustomer: number | null
    currentUsage: number | null
    version: number | null
  }

  export type PromotionMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    type: $Enums.PromotionType | null
    status: $Enums.PromotionStatus | null
    priority: number | null
    combinationRule: $Enums.CombinationRule | null
    discountType: $Enums.DiscountType | null
    discountValue: Decimal | null
    buyQuantity: number | null
    getQuantity: number | null
    getDiscountValue: Decimal | null
    startDate: Date | null
    endDate: Date | null
    startTime: string | null
    endTime: string | null
    validDays: string | null
    minPurchaseAmount: Decimal | null
    minPurchaseQty: number | null
    maxUsageTotal: number | null
    maxUsagePerCustomer: number | null
    currentUsage: number | null
    isCustomerSpecific: boolean | null
    createdBy: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type PromotionMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    type: $Enums.PromotionType | null
    status: $Enums.PromotionStatus | null
    priority: number | null
    combinationRule: $Enums.CombinationRule | null
    discountType: $Enums.DiscountType | null
    discountValue: Decimal | null
    buyQuantity: number | null
    getQuantity: number | null
    getDiscountValue: Decimal | null
    startDate: Date | null
    endDate: Date | null
    startTime: string | null
    endTime: string | null
    validDays: string | null
    minPurchaseAmount: Decimal | null
    minPurchaseQty: number | null
    maxUsageTotal: number | null
    maxUsagePerCustomer: number | null
    currentUsage: number | null
    isCustomerSpecific: boolean | null
    createdBy: string | null
    deleted: boolean | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type PromotionCountAggregateOutputType = {
    id: number
    name: number
    description: number
    type: number
    status: number
    priority: number
    combinationRule: number
    discountType: number
    discountValue: number
    buyQuantity: number
    getQuantity: number
    getDiscountValue: number
    startDate: number
    endDate: number
    startTime: number
    endTime: number
    validDays: number
    minPurchaseAmount: number
    minPurchaseQty: number
    maxUsageTotal: number
    maxUsagePerCustomer: number
    currentUsage: number
    isCustomerSpecific: number
    createdBy: number
    deleted: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type PromotionAvgAggregateInputType = {
    id?: true
    priority?: true
    discountValue?: true
    buyQuantity?: true
    getQuantity?: true
    getDiscountValue?: true
    minPurchaseAmount?: true
    minPurchaseQty?: true
    maxUsageTotal?: true
    maxUsagePerCustomer?: true
    currentUsage?: true
    version?: true
  }

  export type PromotionSumAggregateInputType = {
    id?: true
    priority?: true
    discountValue?: true
    buyQuantity?: true
    getQuantity?: true
    getDiscountValue?: true
    minPurchaseAmount?: true
    minPurchaseQty?: true
    maxUsageTotal?: true
    maxUsagePerCustomer?: true
    currentUsage?: true
    version?: true
  }

  export type PromotionMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    status?: true
    priority?: true
    combinationRule?: true
    discountType?: true
    discountValue?: true
    buyQuantity?: true
    getQuantity?: true
    getDiscountValue?: true
    startDate?: true
    endDate?: true
    startTime?: true
    endTime?: true
    validDays?: true
    minPurchaseAmount?: true
    minPurchaseQty?: true
    maxUsageTotal?: true
    maxUsagePerCustomer?: true
    currentUsage?: true
    isCustomerSpecific?: true
    createdBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type PromotionMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    status?: true
    priority?: true
    combinationRule?: true
    discountType?: true
    discountValue?: true
    buyQuantity?: true
    getQuantity?: true
    getDiscountValue?: true
    startDate?: true
    endDate?: true
    startTime?: true
    endTime?: true
    validDays?: true
    minPurchaseAmount?: true
    minPurchaseQty?: true
    maxUsageTotal?: true
    maxUsagePerCustomer?: true
    currentUsage?: true
    isCustomerSpecific?: true
    createdBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type PromotionCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    type?: true
    status?: true
    priority?: true
    combinationRule?: true
    discountType?: true
    discountValue?: true
    buyQuantity?: true
    getQuantity?: true
    getDiscountValue?: true
    startDate?: true
    endDate?: true
    startTime?: true
    endTime?: true
    validDays?: true
    minPurchaseAmount?: true
    minPurchaseQty?: true
    maxUsageTotal?: true
    maxUsagePerCustomer?: true
    currentUsage?: true
    isCustomerSpecific?: true
    createdBy?: true
    deleted?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type PromotionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Promotion to aggregate.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Promotions
    **/
    _count?: true | PromotionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PromotionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PromotionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromotionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromotionMaxAggregateInputType
  }

  export type GetPromotionAggregateType<T extends PromotionAggregateArgs> = {
        [P in keyof T & keyof AggregatePromotion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromotion[P]>
      : GetScalarType<T[P], AggregatePromotion[P]>
  }




  export type PromotionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithAggregationInput | PromotionOrderByWithAggregationInput[]
    by: PromotionScalarFieldEnum[] | PromotionScalarFieldEnum
    having?: PromotionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromotionCountAggregateInputType | true
    _avg?: PromotionAvgAggregateInputType
    _sum?: PromotionSumAggregateInputType
    _min?: PromotionMinAggregateInputType
    _max?: PromotionMaxAggregateInputType
  }

  export type PromotionGroupByOutputType = {
    id: number
    name: string
    description: string | null
    type: $Enums.PromotionType
    status: $Enums.PromotionStatus
    priority: number
    combinationRule: $Enums.CombinationRule
    discountType: $Enums.DiscountType
    discountValue: Decimal | null
    buyQuantity: number | null
    getQuantity: number | null
    getDiscountValue: Decimal | null
    startDate: Date | null
    endDate: Date | null
    startTime: string | null
    endTime: string | null
    validDays: string | null
    minPurchaseAmount: Decimal | null
    minPurchaseQty: number | null
    maxUsageTotal: number | null
    maxUsagePerCustomer: number | null
    currentUsage: number
    isCustomerSpecific: boolean
    createdBy: string | null
    deleted: boolean
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    version: number | null
    _count: PromotionCountAggregateOutputType | null
    _avg: PromotionAvgAggregateOutputType | null
    _sum: PromotionSumAggregateOutputType | null
    _min: PromotionMinAggregateOutputType | null
    _max: PromotionMaxAggregateOutputType | null
  }

  type GetPromotionGroupByPayload<T extends PromotionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromotionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromotionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromotionGroupByOutputType[P]>
            : GetScalarType<T[P], PromotionGroupByOutputType[P]>
        }
      >
    >


  export type PromotionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    status?: boolean
    priority?: boolean
    combinationRule?: boolean
    discountType?: boolean
    discountValue?: boolean
    buyQuantity?: boolean
    getQuantity?: boolean
    getDiscountValue?: boolean
    startDate?: boolean
    endDate?: boolean
    startTime?: boolean
    endTime?: boolean
    validDays?: boolean
    minPurchaseAmount?: boolean
    minPurchaseQty?: boolean
    maxUsageTotal?: boolean
    maxUsagePerCustomer?: boolean
    currentUsage?: boolean
    isCustomerSpecific?: boolean
    createdBy?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    items?: boolean | Promotion$itemsArgs<ExtArgs>
    customers?: boolean | Promotion$customersArgs<ExtArgs>
    usageHistory?: boolean | Promotion$usageHistoryArgs<ExtArgs>
    _count?: boolean | PromotionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotion"]>



  export type PromotionSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    type?: boolean
    status?: boolean
    priority?: boolean
    combinationRule?: boolean
    discountType?: boolean
    discountValue?: boolean
    buyQuantity?: boolean
    getQuantity?: boolean
    getDiscountValue?: boolean
    startDate?: boolean
    endDate?: boolean
    startTime?: boolean
    endTime?: boolean
    validDays?: boolean
    minPurchaseAmount?: boolean
    minPurchaseQty?: boolean
    maxUsageTotal?: boolean
    maxUsagePerCustomer?: boolean
    currentUsage?: boolean
    isCustomerSpecific?: boolean
    createdBy?: boolean
    deleted?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type PromotionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "type" | "status" | "priority" | "combinationRule" | "discountType" | "discountValue" | "buyQuantity" | "getQuantity" | "getDiscountValue" | "startDate" | "endDate" | "startTime" | "endTime" | "validDays" | "minPurchaseAmount" | "minPurchaseQty" | "maxUsageTotal" | "maxUsagePerCustomer" | "currentUsage" | "isCustomerSpecific" | "createdBy" | "deleted" | "deletedAt" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["promotion"]>
  export type PromotionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | Promotion$itemsArgs<ExtArgs>
    customers?: boolean | Promotion$customersArgs<ExtArgs>
    usageHistory?: boolean | Promotion$usageHistoryArgs<ExtArgs>
    _count?: boolean | PromotionCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $PromotionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Promotion"
    objects: {
      items: Prisma.$PromotionItemPayload<ExtArgs>[]
      customers: Prisma.$PromotionCustomerPayload<ExtArgs>[]
      usageHistory: Prisma.$PromotionUsagePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      type: $Enums.PromotionType
      status: $Enums.PromotionStatus
      priority: number
      combinationRule: $Enums.CombinationRule
      discountType: $Enums.DiscountType
      discountValue: Prisma.Decimal | null
      buyQuantity: number | null
      getQuantity: number | null
      getDiscountValue: Prisma.Decimal | null
      startDate: Date | null
      endDate: Date | null
      startTime: string | null
      endTime: string | null
      validDays: string | null
      minPurchaseAmount: Prisma.Decimal | null
      minPurchaseQty: number | null
      maxUsageTotal: number | null
      maxUsagePerCustomer: number | null
      currentUsage: number
      isCustomerSpecific: boolean
      createdBy: string | null
      deleted: boolean
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
      version: number | null
    }, ExtArgs["result"]["promotion"]>
    composites: {}
  }

  type PromotionGetPayload<S extends boolean | null | undefined | PromotionDefaultArgs> = $Result.GetResult<Prisma.$PromotionPayload, S>

  type PromotionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PromotionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PromotionCountAggregateInputType | true
    }

  export interface PromotionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Promotion'], meta: { name: 'Promotion' } }
    /**
     * Find zero or one Promotion that matches the filter.
     * @param {PromotionFindUniqueArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PromotionFindUniqueArgs>(args: SelectSubset<T, PromotionFindUniqueArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Promotion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PromotionFindUniqueOrThrowArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PromotionFindUniqueOrThrowArgs>(args: SelectSubset<T, PromotionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Promotion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionFindFirstArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PromotionFindFirstArgs>(args?: SelectSubset<T, PromotionFindFirstArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Promotion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionFindFirstOrThrowArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PromotionFindFirstOrThrowArgs>(args?: SelectSubset<T, PromotionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Promotions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Promotions
     * const promotions = await prisma.promotion.findMany()
     * 
     * // Get first 10 Promotions
     * const promotions = await prisma.promotion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const promotionWithIdOnly = await prisma.promotion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PromotionFindManyArgs>(args?: SelectSubset<T, PromotionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Promotion.
     * @param {PromotionCreateArgs} args - Arguments to create a Promotion.
     * @example
     * // Create one Promotion
     * const Promotion = await prisma.promotion.create({
     *   data: {
     *     // ... data to create a Promotion
     *   }
     * })
     * 
     */
    create<T extends PromotionCreateArgs>(args: SelectSubset<T, PromotionCreateArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Promotions.
     * @param {PromotionCreateManyArgs} args - Arguments to create many Promotions.
     * @example
     * // Create many Promotions
     * const promotion = await prisma.promotion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PromotionCreateManyArgs>(args?: SelectSubset<T, PromotionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Promotion.
     * @param {PromotionDeleteArgs} args - Arguments to delete one Promotion.
     * @example
     * // Delete one Promotion
     * const Promotion = await prisma.promotion.delete({
     *   where: {
     *     // ... filter to delete one Promotion
     *   }
     * })
     * 
     */
    delete<T extends PromotionDeleteArgs>(args: SelectSubset<T, PromotionDeleteArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Promotion.
     * @param {PromotionUpdateArgs} args - Arguments to update one Promotion.
     * @example
     * // Update one Promotion
     * const promotion = await prisma.promotion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PromotionUpdateArgs>(args: SelectSubset<T, PromotionUpdateArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Promotions.
     * @param {PromotionDeleteManyArgs} args - Arguments to filter Promotions to delete.
     * @example
     * // Delete a few Promotions
     * const { count } = await prisma.promotion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PromotionDeleteManyArgs>(args?: SelectSubset<T, PromotionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Promotions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Promotions
     * const promotion = await prisma.promotion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PromotionUpdateManyArgs>(args: SelectSubset<T, PromotionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Promotion.
     * @param {PromotionUpsertArgs} args - Arguments to update or create a Promotion.
     * @example
     * // Update or create a Promotion
     * const promotion = await prisma.promotion.upsert({
     *   create: {
     *     // ... data to create a Promotion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Promotion we want to update
     *   }
     * })
     */
    upsert<T extends PromotionUpsertArgs>(args: SelectSubset<T, PromotionUpsertArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Promotions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionCountArgs} args - Arguments to filter Promotions to count.
     * @example
     * // Count the number of Promotions
     * const count = await prisma.promotion.count({
     *   where: {
     *     // ... the filter for the Promotions we want to count
     *   }
     * })
    **/
    count<T extends PromotionCountArgs>(
      args?: Subset<T, PromotionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromotionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Promotion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromotionAggregateArgs>(args: Subset<T, PromotionAggregateArgs>): Prisma.PrismaPromise<GetPromotionAggregateType<T>>

    /**
     * Group by Promotion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PromotionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PromotionGroupByArgs['orderBy'] }
        : { orderBy?: PromotionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PromotionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromotionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Promotion model
   */
  readonly fields: PromotionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Promotion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PromotionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    items<T extends Promotion$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    customers<T extends Promotion$customersArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$customersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionCustomerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usageHistory<T extends Promotion$usageHistoryArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$usageHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionUsagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Promotion model
   */
  interface PromotionFieldRefs {
    readonly id: FieldRef<"Promotion", 'Int'>
    readonly name: FieldRef<"Promotion", 'String'>
    readonly description: FieldRef<"Promotion", 'String'>
    readonly type: FieldRef<"Promotion", 'PromotionType'>
    readonly status: FieldRef<"Promotion", 'PromotionStatus'>
    readonly priority: FieldRef<"Promotion", 'Int'>
    readonly combinationRule: FieldRef<"Promotion", 'CombinationRule'>
    readonly discountType: FieldRef<"Promotion", 'DiscountType'>
    readonly discountValue: FieldRef<"Promotion", 'Decimal'>
    readonly buyQuantity: FieldRef<"Promotion", 'Int'>
    readonly getQuantity: FieldRef<"Promotion", 'Int'>
    readonly getDiscountValue: FieldRef<"Promotion", 'Decimal'>
    readonly startDate: FieldRef<"Promotion", 'DateTime'>
    readonly endDate: FieldRef<"Promotion", 'DateTime'>
    readonly startTime: FieldRef<"Promotion", 'String'>
    readonly endTime: FieldRef<"Promotion", 'String'>
    readonly validDays: FieldRef<"Promotion", 'String'>
    readonly minPurchaseAmount: FieldRef<"Promotion", 'Decimal'>
    readonly minPurchaseQty: FieldRef<"Promotion", 'Int'>
    readonly maxUsageTotal: FieldRef<"Promotion", 'Int'>
    readonly maxUsagePerCustomer: FieldRef<"Promotion", 'Int'>
    readonly currentUsage: FieldRef<"Promotion", 'Int'>
    readonly isCustomerSpecific: FieldRef<"Promotion", 'Boolean'>
    readonly createdBy: FieldRef<"Promotion", 'String'>
    readonly deleted: FieldRef<"Promotion", 'Boolean'>
    readonly deletedAt: FieldRef<"Promotion", 'DateTime'>
    readonly createdAt: FieldRef<"Promotion", 'DateTime'>
    readonly updatedAt: FieldRef<"Promotion", 'DateTime'>
    readonly version: FieldRef<"Promotion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Promotion findUnique
   */
  export type PromotionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion findUniqueOrThrow
   */
  export type PromotionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion findFirst
   */
  export type PromotionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Promotions.
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Promotions.
     */
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Promotion findFirstOrThrow
   */
  export type PromotionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Promotions.
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Promotions.
     */
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Promotion findMany
   */
  export type PromotionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotions to fetch.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Promotions.
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Promotion create
   */
  export type PromotionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * The data needed to create a Promotion.
     */
    data: XOR<PromotionCreateInput, PromotionUncheckedCreateInput>
  }

  /**
   * Promotion createMany
   */
  export type PromotionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Promotions.
     */
    data: PromotionCreateManyInput | PromotionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Promotion update
   */
  export type PromotionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * The data needed to update a Promotion.
     */
    data: XOR<PromotionUpdateInput, PromotionUncheckedUpdateInput>
    /**
     * Choose, which Promotion to update.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion updateMany
   */
  export type PromotionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Promotions.
     */
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyInput>
    /**
     * Filter which Promotions to update
     */
    where?: PromotionWhereInput
    /**
     * Limit how many Promotions to update.
     */
    limit?: number
  }

  /**
   * Promotion upsert
   */
  export type PromotionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * The filter to search for the Promotion to update in case it exists.
     */
    where: PromotionWhereUniqueInput
    /**
     * In case the Promotion found by the `where` argument doesn't exist, create a new Promotion with this data.
     */
    create: XOR<PromotionCreateInput, PromotionUncheckedCreateInput>
    /**
     * In case the Promotion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PromotionUpdateInput, PromotionUncheckedUpdateInput>
  }

  /**
   * Promotion delete
   */
  export type PromotionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter which Promotion to delete.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion deleteMany
   */
  export type PromotionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Promotions to delete
     */
    where?: PromotionWhereInput
    /**
     * Limit how many Promotions to delete.
     */
    limit?: number
  }

  /**
   * Promotion.items
   */
  export type Promotion$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionItem
     */
    select?: PromotionItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionItem
     */
    omit?: PromotionItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionItemInclude<ExtArgs> | null
    where?: PromotionItemWhereInput
    orderBy?: PromotionItemOrderByWithRelationInput | PromotionItemOrderByWithRelationInput[]
    cursor?: PromotionItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionItemScalarFieldEnum | PromotionItemScalarFieldEnum[]
  }

  /**
   * Promotion.customers
   */
  export type Promotion$customersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionCustomer
     */
    select?: PromotionCustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionCustomer
     */
    omit?: PromotionCustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionCustomerInclude<ExtArgs> | null
    where?: PromotionCustomerWhereInput
    orderBy?: PromotionCustomerOrderByWithRelationInput | PromotionCustomerOrderByWithRelationInput[]
    cursor?: PromotionCustomerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionCustomerScalarFieldEnum | PromotionCustomerScalarFieldEnum[]
  }

  /**
   * Promotion.usageHistory
   */
  export type Promotion$usageHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionUsage
     */
    select?: PromotionUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionUsage
     */
    omit?: PromotionUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionUsageInclude<ExtArgs> | null
    where?: PromotionUsageWhereInput
    orderBy?: PromotionUsageOrderByWithRelationInput | PromotionUsageOrderByWithRelationInput[]
    cursor?: PromotionUsageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionUsageScalarFieldEnum | PromotionUsageScalarFieldEnum[]
  }

  /**
   * Promotion without action
   */
  export type PromotionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Promotion
     */
    omit?: PromotionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
  }


  /**
   * Model PromotionItem
   */

  export type AggregatePromotionItem = {
    _count: PromotionItemCountAggregateOutputType | null
    _avg: PromotionItemAvgAggregateOutputType | null
    _sum: PromotionItemSumAggregateOutputType | null
    _min: PromotionItemMinAggregateOutputType | null
    _max: PromotionItemMaxAggregateOutputType | null
  }

  export type PromotionItemAvgAggregateOutputType = {
    id: number | null
    promotionId: number | null
    itemId: number | null
    categoryId: number | null
    version: number | null
  }

  export type PromotionItemSumAggregateOutputType = {
    id: number | null
    promotionId: number | null
    itemId: number | null
    categoryId: number | null
    version: number | null
  }

  export type PromotionItemMinAggregateOutputType = {
    id: number | null
    promotionId: number | null
    itemId: number | null
    categoryId: number | null
    itemCode: string | null
    itemName: string | null
    itemRole: string | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type PromotionItemMaxAggregateOutputType = {
    id: number | null
    promotionId: number | null
    itemId: number | null
    categoryId: number | null
    itemCode: string | null
    itemName: string | null
    itemRole: string | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type PromotionItemCountAggregateOutputType = {
    id: number
    promotionId: number
    itemId: number
    categoryId: number
    itemCode: number
    itemName: number
    itemRole: number
    deleted: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type PromotionItemAvgAggregateInputType = {
    id?: true
    promotionId?: true
    itemId?: true
    categoryId?: true
    version?: true
  }

  export type PromotionItemSumAggregateInputType = {
    id?: true
    promotionId?: true
    itemId?: true
    categoryId?: true
    version?: true
  }

  export type PromotionItemMinAggregateInputType = {
    id?: true
    promotionId?: true
    itemId?: true
    categoryId?: true
    itemCode?: true
    itemName?: true
    itemRole?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type PromotionItemMaxAggregateInputType = {
    id?: true
    promotionId?: true
    itemId?: true
    categoryId?: true
    itemCode?: true
    itemName?: true
    itemRole?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type PromotionItemCountAggregateInputType = {
    id?: true
    promotionId?: true
    itemId?: true
    categoryId?: true
    itemCode?: true
    itemName?: true
    itemRole?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type PromotionItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PromotionItem to aggregate.
     */
    where?: PromotionItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionItems to fetch.
     */
    orderBy?: PromotionItemOrderByWithRelationInput | PromotionItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PromotionItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PromotionItems
    **/
    _count?: true | PromotionItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PromotionItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PromotionItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromotionItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromotionItemMaxAggregateInputType
  }

  export type GetPromotionItemAggregateType<T extends PromotionItemAggregateArgs> = {
        [P in keyof T & keyof AggregatePromotionItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromotionItem[P]>
      : GetScalarType<T[P], AggregatePromotionItem[P]>
  }




  export type PromotionItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionItemWhereInput
    orderBy?: PromotionItemOrderByWithAggregationInput | PromotionItemOrderByWithAggregationInput[]
    by: PromotionItemScalarFieldEnum[] | PromotionItemScalarFieldEnum
    having?: PromotionItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromotionItemCountAggregateInputType | true
    _avg?: PromotionItemAvgAggregateInputType
    _sum?: PromotionItemSumAggregateInputType
    _min?: PromotionItemMinAggregateInputType
    _max?: PromotionItemMaxAggregateInputType
  }

  export type PromotionItemGroupByOutputType = {
    id: number
    promotionId: number
    itemId: number | null
    categoryId: number | null
    itemCode: string | null
    itemName: string | null
    itemRole: string | null
    deleted: boolean
    createdAt: Date
    updatedAt: Date
    version: number | null
    _count: PromotionItemCountAggregateOutputType | null
    _avg: PromotionItemAvgAggregateOutputType | null
    _sum: PromotionItemSumAggregateOutputType | null
    _min: PromotionItemMinAggregateOutputType | null
    _max: PromotionItemMaxAggregateOutputType | null
  }

  type GetPromotionItemGroupByPayload<T extends PromotionItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromotionItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromotionItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromotionItemGroupByOutputType[P]>
            : GetScalarType<T[P], PromotionItemGroupByOutputType[P]>
        }
      >
    >


  export type PromotionItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    promotionId?: boolean
    itemId?: boolean
    categoryId?: boolean
    itemCode?: boolean
    itemName?: boolean
    itemRole?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotionItem"]>



  export type PromotionItemSelectScalar = {
    id?: boolean
    promotionId?: boolean
    itemId?: boolean
    categoryId?: boolean
    itemCode?: boolean
    itemName?: boolean
    itemRole?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type PromotionItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "promotionId" | "itemId" | "categoryId" | "itemCode" | "itemName" | "itemRole" | "deleted" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["promotionItem"]>
  export type PromotionItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
  }

  export type $PromotionItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PromotionItem"
    objects: {
      promotion: Prisma.$PromotionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      promotionId: number
      itemId: number | null
      categoryId: number | null
      itemCode: string | null
      itemName: string | null
      itemRole: string | null
      deleted: boolean
      createdAt: Date
      updatedAt: Date
      version: number | null
    }, ExtArgs["result"]["promotionItem"]>
    composites: {}
  }

  type PromotionItemGetPayload<S extends boolean | null | undefined | PromotionItemDefaultArgs> = $Result.GetResult<Prisma.$PromotionItemPayload, S>

  type PromotionItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PromotionItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PromotionItemCountAggregateInputType | true
    }

  export interface PromotionItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PromotionItem'], meta: { name: 'PromotionItem' } }
    /**
     * Find zero or one PromotionItem that matches the filter.
     * @param {PromotionItemFindUniqueArgs} args - Arguments to find a PromotionItem
     * @example
     * // Get one PromotionItem
     * const promotionItem = await prisma.promotionItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PromotionItemFindUniqueArgs>(args: SelectSubset<T, PromotionItemFindUniqueArgs<ExtArgs>>): Prisma__PromotionItemClient<$Result.GetResult<Prisma.$PromotionItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PromotionItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PromotionItemFindUniqueOrThrowArgs} args - Arguments to find a PromotionItem
     * @example
     * // Get one PromotionItem
     * const promotionItem = await prisma.promotionItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PromotionItemFindUniqueOrThrowArgs>(args: SelectSubset<T, PromotionItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PromotionItemClient<$Result.GetResult<Prisma.$PromotionItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PromotionItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionItemFindFirstArgs} args - Arguments to find a PromotionItem
     * @example
     * // Get one PromotionItem
     * const promotionItem = await prisma.promotionItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PromotionItemFindFirstArgs>(args?: SelectSubset<T, PromotionItemFindFirstArgs<ExtArgs>>): Prisma__PromotionItemClient<$Result.GetResult<Prisma.$PromotionItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PromotionItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionItemFindFirstOrThrowArgs} args - Arguments to find a PromotionItem
     * @example
     * // Get one PromotionItem
     * const promotionItem = await prisma.promotionItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PromotionItemFindFirstOrThrowArgs>(args?: SelectSubset<T, PromotionItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__PromotionItemClient<$Result.GetResult<Prisma.$PromotionItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PromotionItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PromotionItems
     * const promotionItems = await prisma.promotionItem.findMany()
     * 
     * // Get first 10 PromotionItems
     * const promotionItems = await prisma.promotionItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const promotionItemWithIdOnly = await prisma.promotionItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PromotionItemFindManyArgs>(args?: SelectSubset<T, PromotionItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PromotionItem.
     * @param {PromotionItemCreateArgs} args - Arguments to create a PromotionItem.
     * @example
     * // Create one PromotionItem
     * const PromotionItem = await prisma.promotionItem.create({
     *   data: {
     *     // ... data to create a PromotionItem
     *   }
     * })
     * 
     */
    create<T extends PromotionItemCreateArgs>(args: SelectSubset<T, PromotionItemCreateArgs<ExtArgs>>): Prisma__PromotionItemClient<$Result.GetResult<Prisma.$PromotionItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PromotionItems.
     * @param {PromotionItemCreateManyArgs} args - Arguments to create many PromotionItems.
     * @example
     * // Create many PromotionItems
     * const promotionItem = await prisma.promotionItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PromotionItemCreateManyArgs>(args?: SelectSubset<T, PromotionItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PromotionItem.
     * @param {PromotionItemDeleteArgs} args - Arguments to delete one PromotionItem.
     * @example
     * // Delete one PromotionItem
     * const PromotionItem = await prisma.promotionItem.delete({
     *   where: {
     *     // ... filter to delete one PromotionItem
     *   }
     * })
     * 
     */
    delete<T extends PromotionItemDeleteArgs>(args: SelectSubset<T, PromotionItemDeleteArgs<ExtArgs>>): Prisma__PromotionItemClient<$Result.GetResult<Prisma.$PromotionItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PromotionItem.
     * @param {PromotionItemUpdateArgs} args - Arguments to update one PromotionItem.
     * @example
     * // Update one PromotionItem
     * const promotionItem = await prisma.promotionItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PromotionItemUpdateArgs>(args: SelectSubset<T, PromotionItemUpdateArgs<ExtArgs>>): Prisma__PromotionItemClient<$Result.GetResult<Prisma.$PromotionItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PromotionItems.
     * @param {PromotionItemDeleteManyArgs} args - Arguments to filter PromotionItems to delete.
     * @example
     * // Delete a few PromotionItems
     * const { count } = await prisma.promotionItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PromotionItemDeleteManyArgs>(args?: SelectSubset<T, PromotionItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PromotionItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PromotionItems
     * const promotionItem = await prisma.promotionItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PromotionItemUpdateManyArgs>(args: SelectSubset<T, PromotionItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PromotionItem.
     * @param {PromotionItemUpsertArgs} args - Arguments to update or create a PromotionItem.
     * @example
     * // Update or create a PromotionItem
     * const promotionItem = await prisma.promotionItem.upsert({
     *   create: {
     *     // ... data to create a PromotionItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PromotionItem we want to update
     *   }
     * })
     */
    upsert<T extends PromotionItemUpsertArgs>(args: SelectSubset<T, PromotionItemUpsertArgs<ExtArgs>>): Prisma__PromotionItemClient<$Result.GetResult<Prisma.$PromotionItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PromotionItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionItemCountArgs} args - Arguments to filter PromotionItems to count.
     * @example
     * // Count the number of PromotionItems
     * const count = await prisma.promotionItem.count({
     *   where: {
     *     // ... the filter for the PromotionItems we want to count
     *   }
     * })
    **/
    count<T extends PromotionItemCountArgs>(
      args?: Subset<T, PromotionItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromotionItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PromotionItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromotionItemAggregateArgs>(args: Subset<T, PromotionItemAggregateArgs>): Prisma.PrismaPromise<GetPromotionItemAggregateType<T>>

    /**
     * Group by PromotionItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PromotionItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PromotionItemGroupByArgs['orderBy'] }
        : { orderBy?: PromotionItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PromotionItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromotionItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PromotionItem model
   */
  readonly fields: PromotionItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PromotionItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PromotionItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    promotion<T extends PromotionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PromotionDefaultArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PromotionItem model
   */
  interface PromotionItemFieldRefs {
    readonly id: FieldRef<"PromotionItem", 'Int'>
    readonly promotionId: FieldRef<"PromotionItem", 'Int'>
    readonly itemId: FieldRef<"PromotionItem", 'Int'>
    readonly categoryId: FieldRef<"PromotionItem", 'Int'>
    readonly itemCode: FieldRef<"PromotionItem", 'String'>
    readonly itemName: FieldRef<"PromotionItem", 'String'>
    readonly itemRole: FieldRef<"PromotionItem", 'String'>
    readonly deleted: FieldRef<"PromotionItem", 'Boolean'>
    readonly createdAt: FieldRef<"PromotionItem", 'DateTime'>
    readonly updatedAt: FieldRef<"PromotionItem", 'DateTime'>
    readonly version: FieldRef<"PromotionItem", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * PromotionItem findUnique
   */
  export type PromotionItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionItem
     */
    select?: PromotionItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionItem
     */
    omit?: PromotionItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionItemInclude<ExtArgs> | null
    /**
     * Filter, which PromotionItem to fetch.
     */
    where: PromotionItemWhereUniqueInput
  }

  /**
   * PromotionItem findUniqueOrThrow
   */
  export type PromotionItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionItem
     */
    select?: PromotionItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionItem
     */
    omit?: PromotionItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionItemInclude<ExtArgs> | null
    /**
     * Filter, which PromotionItem to fetch.
     */
    where: PromotionItemWhereUniqueInput
  }

  /**
   * PromotionItem findFirst
   */
  export type PromotionItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionItem
     */
    select?: PromotionItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionItem
     */
    omit?: PromotionItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionItemInclude<ExtArgs> | null
    /**
     * Filter, which PromotionItem to fetch.
     */
    where?: PromotionItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionItems to fetch.
     */
    orderBy?: PromotionItemOrderByWithRelationInput | PromotionItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PromotionItems.
     */
    cursor?: PromotionItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PromotionItems.
     */
    distinct?: PromotionItemScalarFieldEnum | PromotionItemScalarFieldEnum[]
  }

  /**
   * PromotionItem findFirstOrThrow
   */
  export type PromotionItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionItem
     */
    select?: PromotionItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionItem
     */
    omit?: PromotionItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionItemInclude<ExtArgs> | null
    /**
     * Filter, which PromotionItem to fetch.
     */
    where?: PromotionItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionItems to fetch.
     */
    orderBy?: PromotionItemOrderByWithRelationInput | PromotionItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PromotionItems.
     */
    cursor?: PromotionItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PromotionItems.
     */
    distinct?: PromotionItemScalarFieldEnum | PromotionItemScalarFieldEnum[]
  }

  /**
   * PromotionItem findMany
   */
  export type PromotionItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionItem
     */
    select?: PromotionItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionItem
     */
    omit?: PromotionItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionItemInclude<ExtArgs> | null
    /**
     * Filter, which PromotionItems to fetch.
     */
    where?: PromotionItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionItems to fetch.
     */
    orderBy?: PromotionItemOrderByWithRelationInput | PromotionItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PromotionItems.
     */
    cursor?: PromotionItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionItems.
     */
    skip?: number
    distinct?: PromotionItemScalarFieldEnum | PromotionItemScalarFieldEnum[]
  }

  /**
   * PromotionItem create
   */
  export type PromotionItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionItem
     */
    select?: PromotionItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionItem
     */
    omit?: PromotionItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionItemInclude<ExtArgs> | null
    /**
     * The data needed to create a PromotionItem.
     */
    data: XOR<PromotionItemCreateInput, PromotionItemUncheckedCreateInput>
  }

  /**
   * PromotionItem createMany
   */
  export type PromotionItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PromotionItems.
     */
    data: PromotionItemCreateManyInput | PromotionItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PromotionItem update
   */
  export type PromotionItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionItem
     */
    select?: PromotionItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionItem
     */
    omit?: PromotionItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionItemInclude<ExtArgs> | null
    /**
     * The data needed to update a PromotionItem.
     */
    data: XOR<PromotionItemUpdateInput, PromotionItemUncheckedUpdateInput>
    /**
     * Choose, which PromotionItem to update.
     */
    where: PromotionItemWhereUniqueInput
  }

  /**
   * PromotionItem updateMany
   */
  export type PromotionItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PromotionItems.
     */
    data: XOR<PromotionItemUpdateManyMutationInput, PromotionItemUncheckedUpdateManyInput>
    /**
     * Filter which PromotionItems to update
     */
    where?: PromotionItemWhereInput
    /**
     * Limit how many PromotionItems to update.
     */
    limit?: number
  }

  /**
   * PromotionItem upsert
   */
  export type PromotionItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionItem
     */
    select?: PromotionItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionItem
     */
    omit?: PromotionItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionItemInclude<ExtArgs> | null
    /**
     * The filter to search for the PromotionItem to update in case it exists.
     */
    where: PromotionItemWhereUniqueInput
    /**
     * In case the PromotionItem found by the `where` argument doesn't exist, create a new PromotionItem with this data.
     */
    create: XOR<PromotionItemCreateInput, PromotionItemUncheckedCreateInput>
    /**
     * In case the PromotionItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PromotionItemUpdateInput, PromotionItemUncheckedUpdateInput>
  }

  /**
   * PromotionItem delete
   */
  export type PromotionItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionItem
     */
    select?: PromotionItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionItem
     */
    omit?: PromotionItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionItemInclude<ExtArgs> | null
    /**
     * Filter which PromotionItem to delete.
     */
    where: PromotionItemWhereUniqueInput
  }

  /**
   * PromotionItem deleteMany
   */
  export type PromotionItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PromotionItems to delete
     */
    where?: PromotionItemWhereInput
    /**
     * Limit how many PromotionItems to delete.
     */
    limit?: number
  }

  /**
   * PromotionItem without action
   */
  export type PromotionItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionItem
     */
    select?: PromotionItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionItem
     */
    omit?: PromotionItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionItemInclude<ExtArgs> | null
  }


  /**
   * Model PromotionCustomer
   */

  export type AggregatePromotionCustomer = {
    _count: PromotionCustomerCountAggregateOutputType | null
    _avg: PromotionCustomerAvgAggregateOutputType | null
    _sum: PromotionCustomerSumAggregateOutputType | null
    _min: PromotionCustomerMinAggregateOutputType | null
    _max: PromotionCustomerMaxAggregateOutputType | null
  }

  export type PromotionCustomerAvgAggregateOutputType = {
    id: number | null
    promotionId: number | null
    customerId: number | null
    maxUsage: number | null
    currentUsage: number | null
    version: number | null
  }

  export type PromotionCustomerSumAggregateOutputType = {
    id: number | null
    promotionId: number | null
    customerId: number | null
    maxUsage: number | null
    currentUsage: number | null
    version: number | null
  }

  export type PromotionCustomerMinAggregateOutputType = {
    id: number | null
    promotionId: number | null
    customerId: number | null
    maxUsage: number | null
    currentUsage: number | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type PromotionCustomerMaxAggregateOutputType = {
    id: number | null
    promotionId: number | null
    customerId: number | null
    maxUsage: number | null
    currentUsage: number | null
    deleted: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    version: number | null
  }

  export type PromotionCustomerCountAggregateOutputType = {
    id: number
    promotionId: number
    customerId: number
    maxUsage: number
    currentUsage: number
    deleted: number
    createdAt: number
    updatedAt: number
    version: number
    _all: number
  }


  export type PromotionCustomerAvgAggregateInputType = {
    id?: true
    promotionId?: true
    customerId?: true
    maxUsage?: true
    currentUsage?: true
    version?: true
  }

  export type PromotionCustomerSumAggregateInputType = {
    id?: true
    promotionId?: true
    customerId?: true
    maxUsage?: true
    currentUsage?: true
    version?: true
  }

  export type PromotionCustomerMinAggregateInputType = {
    id?: true
    promotionId?: true
    customerId?: true
    maxUsage?: true
    currentUsage?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type PromotionCustomerMaxAggregateInputType = {
    id?: true
    promotionId?: true
    customerId?: true
    maxUsage?: true
    currentUsage?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
  }

  export type PromotionCustomerCountAggregateInputType = {
    id?: true
    promotionId?: true
    customerId?: true
    maxUsage?: true
    currentUsage?: true
    deleted?: true
    createdAt?: true
    updatedAt?: true
    version?: true
    _all?: true
  }

  export type PromotionCustomerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PromotionCustomer to aggregate.
     */
    where?: PromotionCustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionCustomers to fetch.
     */
    orderBy?: PromotionCustomerOrderByWithRelationInput | PromotionCustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PromotionCustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionCustomers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionCustomers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PromotionCustomers
    **/
    _count?: true | PromotionCustomerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PromotionCustomerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PromotionCustomerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromotionCustomerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromotionCustomerMaxAggregateInputType
  }

  export type GetPromotionCustomerAggregateType<T extends PromotionCustomerAggregateArgs> = {
        [P in keyof T & keyof AggregatePromotionCustomer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromotionCustomer[P]>
      : GetScalarType<T[P], AggregatePromotionCustomer[P]>
  }




  export type PromotionCustomerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionCustomerWhereInput
    orderBy?: PromotionCustomerOrderByWithAggregationInput | PromotionCustomerOrderByWithAggregationInput[]
    by: PromotionCustomerScalarFieldEnum[] | PromotionCustomerScalarFieldEnum
    having?: PromotionCustomerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromotionCustomerCountAggregateInputType | true
    _avg?: PromotionCustomerAvgAggregateInputType
    _sum?: PromotionCustomerSumAggregateInputType
    _min?: PromotionCustomerMinAggregateInputType
    _max?: PromotionCustomerMaxAggregateInputType
  }

  export type PromotionCustomerGroupByOutputType = {
    id: number
    promotionId: number
    customerId: number
    maxUsage: number | null
    currentUsage: number
    deleted: boolean
    createdAt: Date
    updatedAt: Date
    version: number | null
    _count: PromotionCustomerCountAggregateOutputType | null
    _avg: PromotionCustomerAvgAggregateOutputType | null
    _sum: PromotionCustomerSumAggregateOutputType | null
    _min: PromotionCustomerMinAggregateOutputType | null
    _max: PromotionCustomerMaxAggregateOutputType | null
  }

  type GetPromotionCustomerGroupByPayload<T extends PromotionCustomerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromotionCustomerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromotionCustomerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromotionCustomerGroupByOutputType[P]>
            : GetScalarType<T[P], PromotionCustomerGroupByOutputType[P]>
        }
      >
    >


  export type PromotionCustomerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    promotionId?: boolean
    customerId?: boolean
    maxUsage?: boolean
    currentUsage?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotionCustomer"]>



  export type PromotionCustomerSelectScalar = {
    id?: boolean
    promotionId?: boolean
    customerId?: boolean
    maxUsage?: boolean
    currentUsage?: boolean
    deleted?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    version?: boolean
  }

  export type PromotionCustomerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "promotionId" | "customerId" | "maxUsage" | "currentUsage" | "deleted" | "createdAt" | "updatedAt" | "version", ExtArgs["result"]["promotionCustomer"]>
  export type PromotionCustomerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }

  export type $PromotionCustomerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PromotionCustomer"
    objects: {
      promotion: Prisma.$PromotionPayload<ExtArgs>
      customer: Prisma.$CustomerPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      promotionId: number
      customerId: number
      maxUsage: number | null
      currentUsage: number
      deleted: boolean
      createdAt: Date
      updatedAt: Date
      version: number | null
    }, ExtArgs["result"]["promotionCustomer"]>
    composites: {}
  }

  type PromotionCustomerGetPayload<S extends boolean | null | undefined | PromotionCustomerDefaultArgs> = $Result.GetResult<Prisma.$PromotionCustomerPayload, S>

  type PromotionCustomerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PromotionCustomerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PromotionCustomerCountAggregateInputType | true
    }

  export interface PromotionCustomerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PromotionCustomer'], meta: { name: 'PromotionCustomer' } }
    /**
     * Find zero or one PromotionCustomer that matches the filter.
     * @param {PromotionCustomerFindUniqueArgs} args - Arguments to find a PromotionCustomer
     * @example
     * // Get one PromotionCustomer
     * const promotionCustomer = await prisma.promotionCustomer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PromotionCustomerFindUniqueArgs>(args: SelectSubset<T, PromotionCustomerFindUniqueArgs<ExtArgs>>): Prisma__PromotionCustomerClient<$Result.GetResult<Prisma.$PromotionCustomerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PromotionCustomer that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PromotionCustomerFindUniqueOrThrowArgs} args - Arguments to find a PromotionCustomer
     * @example
     * // Get one PromotionCustomer
     * const promotionCustomer = await prisma.promotionCustomer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PromotionCustomerFindUniqueOrThrowArgs>(args: SelectSubset<T, PromotionCustomerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PromotionCustomerClient<$Result.GetResult<Prisma.$PromotionCustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PromotionCustomer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionCustomerFindFirstArgs} args - Arguments to find a PromotionCustomer
     * @example
     * // Get one PromotionCustomer
     * const promotionCustomer = await prisma.promotionCustomer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PromotionCustomerFindFirstArgs>(args?: SelectSubset<T, PromotionCustomerFindFirstArgs<ExtArgs>>): Prisma__PromotionCustomerClient<$Result.GetResult<Prisma.$PromotionCustomerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PromotionCustomer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionCustomerFindFirstOrThrowArgs} args - Arguments to find a PromotionCustomer
     * @example
     * // Get one PromotionCustomer
     * const promotionCustomer = await prisma.promotionCustomer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PromotionCustomerFindFirstOrThrowArgs>(args?: SelectSubset<T, PromotionCustomerFindFirstOrThrowArgs<ExtArgs>>): Prisma__PromotionCustomerClient<$Result.GetResult<Prisma.$PromotionCustomerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PromotionCustomers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionCustomerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PromotionCustomers
     * const promotionCustomers = await prisma.promotionCustomer.findMany()
     * 
     * // Get first 10 PromotionCustomers
     * const promotionCustomers = await prisma.promotionCustomer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const promotionCustomerWithIdOnly = await prisma.promotionCustomer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PromotionCustomerFindManyArgs>(args?: SelectSubset<T, PromotionCustomerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionCustomerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PromotionCustomer.
     * @param {PromotionCustomerCreateArgs} args - Arguments to create a PromotionCustomer.
     * @example
     * // Create one PromotionCustomer
     * const PromotionCustomer = await prisma.promotionCustomer.create({
     *   data: {
     *     // ... data to create a PromotionCustomer
     *   }
     * })
     * 
     */
    create<T extends PromotionCustomerCreateArgs>(args: SelectSubset<T, PromotionCustomerCreateArgs<ExtArgs>>): Prisma__PromotionCustomerClient<$Result.GetResult<Prisma.$PromotionCustomerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PromotionCustomers.
     * @param {PromotionCustomerCreateManyArgs} args - Arguments to create many PromotionCustomers.
     * @example
     * // Create many PromotionCustomers
     * const promotionCustomer = await prisma.promotionCustomer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PromotionCustomerCreateManyArgs>(args?: SelectSubset<T, PromotionCustomerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PromotionCustomer.
     * @param {PromotionCustomerDeleteArgs} args - Arguments to delete one PromotionCustomer.
     * @example
     * // Delete one PromotionCustomer
     * const PromotionCustomer = await prisma.promotionCustomer.delete({
     *   where: {
     *     // ... filter to delete one PromotionCustomer
     *   }
     * })
     * 
     */
    delete<T extends PromotionCustomerDeleteArgs>(args: SelectSubset<T, PromotionCustomerDeleteArgs<ExtArgs>>): Prisma__PromotionCustomerClient<$Result.GetResult<Prisma.$PromotionCustomerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PromotionCustomer.
     * @param {PromotionCustomerUpdateArgs} args - Arguments to update one PromotionCustomer.
     * @example
     * // Update one PromotionCustomer
     * const promotionCustomer = await prisma.promotionCustomer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PromotionCustomerUpdateArgs>(args: SelectSubset<T, PromotionCustomerUpdateArgs<ExtArgs>>): Prisma__PromotionCustomerClient<$Result.GetResult<Prisma.$PromotionCustomerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PromotionCustomers.
     * @param {PromotionCustomerDeleteManyArgs} args - Arguments to filter PromotionCustomers to delete.
     * @example
     * // Delete a few PromotionCustomers
     * const { count } = await prisma.promotionCustomer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PromotionCustomerDeleteManyArgs>(args?: SelectSubset<T, PromotionCustomerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PromotionCustomers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionCustomerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PromotionCustomers
     * const promotionCustomer = await prisma.promotionCustomer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PromotionCustomerUpdateManyArgs>(args: SelectSubset<T, PromotionCustomerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PromotionCustomer.
     * @param {PromotionCustomerUpsertArgs} args - Arguments to update or create a PromotionCustomer.
     * @example
     * // Update or create a PromotionCustomer
     * const promotionCustomer = await prisma.promotionCustomer.upsert({
     *   create: {
     *     // ... data to create a PromotionCustomer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PromotionCustomer we want to update
     *   }
     * })
     */
    upsert<T extends PromotionCustomerUpsertArgs>(args: SelectSubset<T, PromotionCustomerUpsertArgs<ExtArgs>>): Prisma__PromotionCustomerClient<$Result.GetResult<Prisma.$PromotionCustomerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PromotionCustomers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionCustomerCountArgs} args - Arguments to filter PromotionCustomers to count.
     * @example
     * // Count the number of PromotionCustomers
     * const count = await prisma.promotionCustomer.count({
     *   where: {
     *     // ... the filter for the PromotionCustomers we want to count
     *   }
     * })
    **/
    count<T extends PromotionCustomerCountArgs>(
      args?: Subset<T, PromotionCustomerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromotionCustomerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PromotionCustomer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionCustomerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromotionCustomerAggregateArgs>(args: Subset<T, PromotionCustomerAggregateArgs>): Prisma.PrismaPromise<GetPromotionCustomerAggregateType<T>>

    /**
     * Group by PromotionCustomer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionCustomerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PromotionCustomerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PromotionCustomerGroupByArgs['orderBy'] }
        : { orderBy?: PromotionCustomerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PromotionCustomerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromotionCustomerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PromotionCustomer model
   */
  readonly fields: PromotionCustomerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PromotionCustomer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PromotionCustomerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    promotion<T extends PromotionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PromotionDefaultArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    customer<T extends CustomerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerDefaultArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PromotionCustomer model
   */
  interface PromotionCustomerFieldRefs {
    readonly id: FieldRef<"PromotionCustomer", 'Int'>
    readonly promotionId: FieldRef<"PromotionCustomer", 'Int'>
    readonly customerId: FieldRef<"PromotionCustomer", 'Int'>
    readonly maxUsage: FieldRef<"PromotionCustomer", 'Int'>
    readonly currentUsage: FieldRef<"PromotionCustomer", 'Int'>
    readonly deleted: FieldRef<"PromotionCustomer", 'Boolean'>
    readonly createdAt: FieldRef<"PromotionCustomer", 'DateTime'>
    readonly updatedAt: FieldRef<"PromotionCustomer", 'DateTime'>
    readonly version: FieldRef<"PromotionCustomer", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * PromotionCustomer findUnique
   */
  export type PromotionCustomerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionCustomer
     */
    select?: PromotionCustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionCustomer
     */
    omit?: PromotionCustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionCustomerInclude<ExtArgs> | null
    /**
     * Filter, which PromotionCustomer to fetch.
     */
    where: PromotionCustomerWhereUniqueInput
  }

  /**
   * PromotionCustomer findUniqueOrThrow
   */
  export type PromotionCustomerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionCustomer
     */
    select?: PromotionCustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionCustomer
     */
    omit?: PromotionCustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionCustomerInclude<ExtArgs> | null
    /**
     * Filter, which PromotionCustomer to fetch.
     */
    where: PromotionCustomerWhereUniqueInput
  }

  /**
   * PromotionCustomer findFirst
   */
  export type PromotionCustomerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionCustomer
     */
    select?: PromotionCustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionCustomer
     */
    omit?: PromotionCustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionCustomerInclude<ExtArgs> | null
    /**
     * Filter, which PromotionCustomer to fetch.
     */
    where?: PromotionCustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionCustomers to fetch.
     */
    orderBy?: PromotionCustomerOrderByWithRelationInput | PromotionCustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PromotionCustomers.
     */
    cursor?: PromotionCustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionCustomers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionCustomers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PromotionCustomers.
     */
    distinct?: PromotionCustomerScalarFieldEnum | PromotionCustomerScalarFieldEnum[]
  }

  /**
   * PromotionCustomer findFirstOrThrow
   */
  export type PromotionCustomerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionCustomer
     */
    select?: PromotionCustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionCustomer
     */
    omit?: PromotionCustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionCustomerInclude<ExtArgs> | null
    /**
     * Filter, which PromotionCustomer to fetch.
     */
    where?: PromotionCustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionCustomers to fetch.
     */
    orderBy?: PromotionCustomerOrderByWithRelationInput | PromotionCustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PromotionCustomers.
     */
    cursor?: PromotionCustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionCustomers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionCustomers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PromotionCustomers.
     */
    distinct?: PromotionCustomerScalarFieldEnum | PromotionCustomerScalarFieldEnum[]
  }

  /**
   * PromotionCustomer findMany
   */
  export type PromotionCustomerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionCustomer
     */
    select?: PromotionCustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionCustomer
     */
    omit?: PromotionCustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionCustomerInclude<ExtArgs> | null
    /**
     * Filter, which PromotionCustomers to fetch.
     */
    where?: PromotionCustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionCustomers to fetch.
     */
    orderBy?: PromotionCustomerOrderByWithRelationInput | PromotionCustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PromotionCustomers.
     */
    cursor?: PromotionCustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionCustomers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionCustomers.
     */
    skip?: number
    distinct?: PromotionCustomerScalarFieldEnum | PromotionCustomerScalarFieldEnum[]
  }

  /**
   * PromotionCustomer create
   */
  export type PromotionCustomerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionCustomer
     */
    select?: PromotionCustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionCustomer
     */
    omit?: PromotionCustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionCustomerInclude<ExtArgs> | null
    /**
     * The data needed to create a PromotionCustomer.
     */
    data: XOR<PromotionCustomerCreateInput, PromotionCustomerUncheckedCreateInput>
  }

  /**
   * PromotionCustomer createMany
   */
  export type PromotionCustomerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PromotionCustomers.
     */
    data: PromotionCustomerCreateManyInput | PromotionCustomerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PromotionCustomer update
   */
  export type PromotionCustomerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionCustomer
     */
    select?: PromotionCustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionCustomer
     */
    omit?: PromotionCustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionCustomerInclude<ExtArgs> | null
    /**
     * The data needed to update a PromotionCustomer.
     */
    data: XOR<PromotionCustomerUpdateInput, PromotionCustomerUncheckedUpdateInput>
    /**
     * Choose, which PromotionCustomer to update.
     */
    where: PromotionCustomerWhereUniqueInput
  }

  /**
   * PromotionCustomer updateMany
   */
  export type PromotionCustomerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PromotionCustomers.
     */
    data: XOR<PromotionCustomerUpdateManyMutationInput, PromotionCustomerUncheckedUpdateManyInput>
    /**
     * Filter which PromotionCustomers to update
     */
    where?: PromotionCustomerWhereInput
    /**
     * Limit how many PromotionCustomers to update.
     */
    limit?: number
  }

  /**
   * PromotionCustomer upsert
   */
  export type PromotionCustomerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionCustomer
     */
    select?: PromotionCustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionCustomer
     */
    omit?: PromotionCustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionCustomerInclude<ExtArgs> | null
    /**
     * The filter to search for the PromotionCustomer to update in case it exists.
     */
    where: PromotionCustomerWhereUniqueInput
    /**
     * In case the PromotionCustomer found by the `where` argument doesn't exist, create a new PromotionCustomer with this data.
     */
    create: XOR<PromotionCustomerCreateInput, PromotionCustomerUncheckedCreateInput>
    /**
     * In case the PromotionCustomer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PromotionCustomerUpdateInput, PromotionCustomerUncheckedUpdateInput>
  }

  /**
   * PromotionCustomer delete
   */
  export type PromotionCustomerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionCustomer
     */
    select?: PromotionCustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionCustomer
     */
    omit?: PromotionCustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionCustomerInclude<ExtArgs> | null
    /**
     * Filter which PromotionCustomer to delete.
     */
    where: PromotionCustomerWhereUniqueInput
  }

  /**
   * PromotionCustomer deleteMany
   */
  export type PromotionCustomerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PromotionCustomers to delete
     */
    where?: PromotionCustomerWhereInput
    /**
     * Limit how many PromotionCustomers to delete.
     */
    limit?: number
  }

  /**
   * PromotionCustomer without action
   */
  export type PromotionCustomerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionCustomer
     */
    select?: PromotionCustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionCustomer
     */
    omit?: PromotionCustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionCustomerInclude<ExtArgs> | null
  }


  /**
   * Model PromotionUsage
   */

  export type AggregatePromotionUsage = {
    _count: PromotionUsageCountAggregateOutputType | null
    _avg: PromotionUsageAvgAggregateOutputType | null
    _sum: PromotionUsageSumAggregateOutputType | null
    _min: PromotionUsageMinAggregateOutputType | null
    _max: PromotionUsageMaxAggregateOutputType | null
  }

  export type PromotionUsageAvgAggregateOutputType = {
    id: number | null
    promotionId: number | null
    customerId: number | null
    salesId: number | null
    discountAmount: Decimal | null
    version: number | null
  }

  export type PromotionUsageSumAggregateOutputType = {
    id: number | null
    promotionId: number | null
    customerId: number | null
    salesId: number | null
    discountAmount: Decimal | null
    version: number | null
  }

  export type PromotionUsageMinAggregateOutputType = {
    id: number | null
    promotionId: number | null
    customerId: number | null
    salesId: number | null
    discountAmount: Decimal | null
    usedAt: Date | null
    version: number | null
  }

  export type PromotionUsageMaxAggregateOutputType = {
    id: number | null
    promotionId: number | null
    customerId: number | null
    salesId: number | null
    discountAmount: Decimal | null
    usedAt: Date | null
    version: number | null
  }

  export type PromotionUsageCountAggregateOutputType = {
    id: number
    promotionId: number
    customerId: number
    salesId: number
    discountAmount: number
    usedAt: number
    version: number
    _all: number
  }


  export type PromotionUsageAvgAggregateInputType = {
    id?: true
    promotionId?: true
    customerId?: true
    salesId?: true
    discountAmount?: true
    version?: true
  }

  export type PromotionUsageSumAggregateInputType = {
    id?: true
    promotionId?: true
    customerId?: true
    salesId?: true
    discountAmount?: true
    version?: true
  }

  export type PromotionUsageMinAggregateInputType = {
    id?: true
    promotionId?: true
    customerId?: true
    salesId?: true
    discountAmount?: true
    usedAt?: true
    version?: true
  }

  export type PromotionUsageMaxAggregateInputType = {
    id?: true
    promotionId?: true
    customerId?: true
    salesId?: true
    discountAmount?: true
    usedAt?: true
    version?: true
  }

  export type PromotionUsageCountAggregateInputType = {
    id?: true
    promotionId?: true
    customerId?: true
    salesId?: true
    discountAmount?: true
    usedAt?: true
    version?: true
    _all?: true
  }

  export type PromotionUsageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PromotionUsage to aggregate.
     */
    where?: PromotionUsageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionUsages to fetch.
     */
    orderBy?: PromotionUsageOrderByWithRelationInput | PromotionUsageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PromotionUsageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionUsages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionUsages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PromotionUsages
    **/
    _count?: true | PromotionUsageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PromotionUsageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PromotionUsageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromotionUsageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromotionUsageMaxAggregateInputType
  }

  export type GetPromotionUsageAggregateType<T extends PromotionUsageAggregateArgs> = {
        [P in keyof T & keyof AggregatePromotionUsage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromotionUsage[P]>
      : GetScalarType<T[P], AggregatePromotionUsage[P]>
  }




  export type PromotionUsageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionUsageWhereInput
    orderBy?: PromotionUsageOrderByWithAggregationInput | PromotionUsageOrderByWithAggregationInput[]
    by: PromotionUsageScalarFieldEnum[] | PromotionUsageScalarFieldEnum
    having?: PromotionUsageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromotionUsageCountAggregateInputType | true
    _avg?: PromotionUsageAvgAggregateInputType
    _sum?: PromotionUsageSumAggregateInputType
    _min?: PromotionUsageMinAggregateInputType
    _max?: PromotionUsageMaxAggregateInputType
  }

  export type PromotionUsageGroupByOutputType = {
    id: number
    promotionId: number
    customerId: number | null
    salesId: number | null
    discountAmount: Decimal
    usedAt: Date
    version: number | null
    _count: PromotionUsageCountAggregateOutputType | null
    _avg: PromotionUsageAvgAggregateOutputType | null
    _sum: PromotionUsageSumAggregateOutputType | null
    _min: PromotionUsageMinAggregateOutputType | null
    _max: PromotionUsageMaxAggregateOutputType | null
  }

  type GetPromotionUsageGroupByPayload<T extends PromotionUsageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromotionUsageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromotionUsageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromotionUsageGroupByOutputType[P]>
            : GetScalarType<T[P], PromotionUsageGroupByOutputType[P]>
        }
      >
    >


  export type PromotionUsageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    promotionId?: boolean
    customerId?: boolean
    salesId?: boolean
    discountAmount?: boolean
    usedAt?: boolean
    version?: boolean
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
    customer?: boolean | PromotionUsage$customerArgs<ExtArgs>
  }, ExtArgs["result"]["promotionUsage"]>



  export type PromotionUsageSelectScalar = {
    id?: boolean
    promotionId?: boolean
    customerId?: boolean
    salesId?: boolean
    discountAmount?: boolean
    usedAt?: boolean
    version?: boolean
  }

  export type PromotionUsageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "promotionId" | "customerId" | "salesId" | "discountAmount" | "usedAt" | "version", ExtArgs["result"]["promotionUsage"]>
  export type PromotionUsageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
    customer?: boolean | PromotionUsage$customerArgs<ExtArgs>
  }

  export type $PromotionUsagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PromotionUsage"
    objects: {
      promotion: Prisma.$PromotionPayload<ExtArgs>
      customer: Prisma.$CustomerPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      promotionId: number
      customerId: number | null
      salesId: number | null
      discountAmount: Prisma.Decimal
      usedAt: Date
      version: number | null
    }, ExtArgs["result"]["promotionUsage"]>
    composites: {}
  }

  type PromotionUsageGetPayload<S extends boolean | null | undefined | PromotionUsageDefaultArgs> = $Result.GetResult<Prisma.$PromotionUsagePayload, S>

  type PromotionUsageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PromotionUsageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PromotionUsageCountAggregateInputType | true
    }

  export interface PromotionUsageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PromotionUsage'], meta: { name: 'PromotionUsage' } }
    /**
     * Find zero or one PromotionUsage that matches the filter.
     * @param {PromotionUsageFindUniqueArgs} args - Arguments to find a PromotionUsage
     * @example
     * // Get one PromotionUsage
     * const promotionUsage = await prisma.promotionUsage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PromotionUsageFindUniqueArgs>(args: SelectSubset<T, PromotionUsageFindUniqueArgs<ExtArgs>>): Prisma__PromotionUsageClient<$Result.GetResult<Prisma.$PromotionUsagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PromotionUsage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PromotionUsageFindUniqueOrThrowArgs} args - Arguments to find a PromotionUsage
     * @example
     * // Get one PromotionUsage
     * const promotionUsage = await prisma.promotionUsage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PromotionUsageFindUniqueOrThrowArgs>(args: SelectSubset<T, PromotionUsageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PromotionUsageClient<$Result.GetResult<Prisma.$PromotionUsagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PromotionUsage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionUsageFindFirstArgs} args - Arguments to find a PromotionUsage
     * @example
     * // Get one PromotionUsage
     * const promotionUsage = await prisma.promotionUsage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PromotionUsageFindFirstArgs>(args?: SelectSubset<T, PromotionUsageFindFirstArgs<ExtArgs>>): Prisma__PromotionUsageClient<$Result.GetResult<Prisma.$PromotionUsagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PromotionUsage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionUsageFindFirstOrThrowArgs} args - Arguments to find a PromotionUsage
     * @example
     * // Get one PromotionUsage
     * const promotionUsage = await prisma.promotionUsage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PromotionUsageFindFirstOrThrowArgs>(args?: SelectSubset<T, PromotionUsageFindFirstOrThrowArgs<ExtArgs>>): Prisma__PromotionUsageClient<$Result.GetResult<Prisma.$PromotionUsagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PromotionUsages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionUsageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PromotionUsages
     * const promotionUsages = await prisma.promotionUsage.findMany()
     * 
     * // Get first 10 PromotionUsages
     * const promotionUsages = await prisma.promotionUsage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const promotionUsageWithIdOnly = await prisma.promotionUsage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PromotionUsageFindManyArgs>(args?: SelectSubset<T, PromotionUsageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionUsagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PromotionUsage.
     * @param {PromotionUsageCreateArgs} args - Arguments to create a PromotionUsage.
     * @example
     * // Create one PromotionUsage
     * const PromotionUsage = await prisma.promotionUsage.create({
     *   data: {
     *     // ... data to create a PromotionUsage
     *   }
     * })
     * 
     */
    create<T extends PromotionUsageCreateArgs>(args: SelectSubset<T, PromotionUsageCreateArgs<ExtArgs>>): Prisma__PromotionUsageClient<$Result.GetResult<Prisma.$PromotionUsagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PromotionUsages.
     * @param {PromotionUsageCreateManyArgs} args - Arguments to create many PromotionUsages.
     * @example
     * // Create many PromotionUsages
     * const promotionUsage = await prisma.promotionUsage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PromotionUsageCreateManyArgs>(args?: SelectSubset<T, PromotionUsageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PromotionUsage.
     * @param {PromotionUsageDeleteArgs} args - Arguments to delete one PromotionUsage.
     * @example
     * // Delete one PromotionUsage
     * const PromotionUsage = await prisma.promotionUsage.delete({
     *   where: {
     *     // ... filter to delete one PromotionUsage
     *   }
     * })
     * 
     */
    delete<T extends PromotionUsageDeleteArgs>(args: SelectSubset<T, PromotionUsageDeleteArgs<ExtArgs>>): Prisma__PromotionUsageClient<$Result.GetResult<Prisma.$PromotionUsagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PromotionUsage.
     * @param {PromotionUsageUpdateArgs} args - Arguments to update one PromotionUsage.
     * @example
     * // Update one PromotionUsage
     * const promotionUsage = await prisma.promotionUsage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PromotionUsageUpdateArgs>(args: SelectSubset<T, PromotionUsageUpdateArgs<ExtArgs>>): Prisma__PromotionUsageClient<$Result.GetResult<Prisma.$PromotionUsagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PromotionUsages.
     * @param {PromotionUsageDeleteManyArgs} args - Arguments to filter PromotionUsages to delete.
     * @example
     * // Delete a few PromotionUsages
     * const { count } = await prisma.promotionUsage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PromotionUsageDeleteManyArgs>(args?: SelectSubset<T, PromotionUsageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PromotionUsages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionUsageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PromotionUsages
     * const promotionUsage = await prisma.promotionUsage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PromotionUsageUpdateManyArgs>(args: SelectSubset<T, PromotionUsageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PromotionUsage.
     * @param {PromotionUsageUpsertArgs} args - Arguments to update or create a PromotionUsage.
     * @example
     * // Update or create a PromotionUsage
     * const promotionUsage = await prisma.promotionUsage.upsert({
     *   create: {
     *     // ... data to create a PromotionUsage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PromotionUsage we want to update
     *   }
     * })
     */
    upsert<T extends PromotionUsageUpsertArgs>(args: SelectSubset<T, PromotionUsageUpsertArgs<ExtArgs>>): Prisma__PromotionUsageClient<$Result.GetResult<Prisma.$PromotionUsagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PromotionUsages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionUsageCountArgs} args - Arguments to filter PromotionUsages to count.
     * @example
     * // Count the number of PromotionUsages
     * const count = await prisma.promotionUsage.count({
     *   where: {
     *     // ... the filter for the PromotionUsages we want to count
     *   }
     * })
    **/
    count<T extends PromotionUsageCountArgs>(
      args?: Subset<T, PromotionUsageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromotionUsageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PromotionUsage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionUsageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromotionUsageAggregateArgs>(args: Subset<T, PromotionUsageAggregateArgs>): Prisma.PrismaPromise<GetPromotionUsageAggregateType<T>>

    /**
     * Group by PromotionUsage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionUsageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PromotionUsageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PromotionUsageGroupByArgs['orderBy'] }
        : { orderBy?: PromotionUsageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PromotionUsageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromotionUsageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PromotionUsage model
   */
  readonly fields: PromotionUsageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PromotionUsage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PromotionUsageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    promotion<T extends PromotionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PromotionDefaultArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    customer<T extends PromotionUsage$customerArgs<ExtArgs> = {}>(args?: Subset<T, PromotionUsage$customerArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PromotionUsage model
   */
  interface PromotionUsageFieldRefs {
    readonly id: FieldRef<"PromotionUsage", 'Int'>
    readonly promotionId: FieldRef<"PromotionUsage", 'Int'>
    readonly customerId: FieldRef<"PromotionUsage", 'Int'>
    readonly salesId: FieldRef<"PromotionUsage", 'Int'>
    readonly discountAmount: FieldRef<"PromotionUsage", 'Decimal'>
    readonly usedAt: FieldRef<"PromotionUsage", 'DateTime'>
    readonly version: FieldRef<"PromotionUsage", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * PromotionUsage findUnique
   */
  export type PromotionUsageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionUsage
     */
    select?: PromotionUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionUsage
     */
    omit?: PromotionUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionUsageInclude<ExtArgs> | null
    /**
     * Filter, which PromotionUsage to fetch.
     */
    where: PromotionUsageWhereUniqueInput
  }

  /**
   * PromotionUsage findUniqueOrThrow
   */
  export type PromotionUsageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionUsage
     */
    select?: PromotionUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionUsage
     */
    omit?: PromotionUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionUsageInclude<ExtArgs> | null
    /**
     * Filter, which PromotionUsage to fetch.
     */
    where: PromotionUsageWhereUniqueInput
  }

  /**
   * PromotionUsage findFirst
   */
  export type PromotionUsageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionUsage
     */
    select?: PromotionUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionUsage
     */
    omit?: PromotionUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionUsageInclude<ExtArgs> | null
    /**
     * Filter, which PromotionUsage to fetch.
     */
    where?: PromotionUsageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionUsages to fetch.
     */
    orderBy?: PromotionUsageOrderByWithRelationInput | PromotionUsageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PromotionUsages.
     */
    cursor?: PromotionUsageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionUsages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionUsages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PromotionUsages.
     */
    distinct?: PromotionUsageScalarFieldEnum | PromotionUsageScalarFieldEnum[]
  }

  /**
   * PromotionUsage findFirstOrThrow
   */
  export type PromotionUsageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionUsage
     */
    select?: PromotionUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionUsage
     */
    omit?: PromotionUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionUsageInclude<ExtArgs> | null
    /**
     * Filter, which PromotionUsage to fetch.
     */
    where?: PromotionUsageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionUsages to fetch.
     */
    orderBy?: PromotionUsageOrderByWithRelationInput | PromotionUsageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PromotionUsages.
     */
    cursor?: PromotionUsageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionUsages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionUsages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PromotionUsages.
     */
    distinct?: PromotionUsageScalarFieldEnum | PromotionUsageScalarFieldEnum[]
  }

  /**
   * PromotionUsage findMany
   */
  export type PromotionUsageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionUsage
     */
    select?: PromotionUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionUsage
     */
    omit?: PromotionUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionUsageInclude<ExtArgs> | null
    /**
     * Filter, which PromotionUsages to fetch.
     */
    where?: PromotionUsageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionUsages to fetch.
     */
    orderBy?: PromotionUsageOrderByWithRelationInput | PromotionUsageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PromotionUsages.
     */
    cursor?: PromotionUsageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionUsages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionUsages.
     */
    skip?: number
    distinct?: PromotionUsageScalarFieldEnum | PromotionUsageScalarFieldEnum[]
  }

  /**
   * PromotionUsage create
   */
  export type PromotionUsageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionUsage
     */
    select?: PromotionUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionUsage
     */
    omit?: PromotionUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionUsageInclude<ExtArgs> | null
    /**
     * The data needed to create a PromotionUsage.
     */
    data: XOR<PromotionUsageCreateInput, PromotionUsageUncheckedCreateInput>
  }

  /**
   * PromotionUsage createMany
   */
  export type PromotionUsageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PromotionUsages.
     */
    data: PromotionUsageCreateManyInput | PromotionUsageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PromotionUsage update
   */
  export type PromotionUsageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionUsage
     */
    select?: PromotionUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionUsage
     */
    omit?: PromotionUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionUsageInclude<ExtArgs> | null
    /**
     * The data needed to update a PromotionUsage.
     */
    data: XOR<PromotionUsageUpdateInput, PromotionUsageUncheckedUpdateInput>
    /**
     * Choose, which PromotionUsage to update.
     */
    where: PromotionUsageWhereUniqueInput
  }

  /**
   * PromotionUsage updateMany
   */
  export type PromotionUsageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PromotionUsages.
     */
    data: XOR<PromotionUsageUpdateManyMutationInput, PromotionUsageUncheckedUpdateManyInput>
    /**
     * Filter which PromotionUsages to update
     */
    where?: PromotionUsageWhereInput
    /**
     * Limit how many PromotionUsages to update.
     */
    limit?: number
  }

  /**
   * PromotionUsage upsert
   */
  export type PromotionUsageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionUsage
     */
    select?: PromotionUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionUsage
     */
    omit?: PromotionUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionUsageInclude<ExtArgs> | null
    /**
     * The filter to search for the PromotionUsage to update in case it exists.
     */
    where: PromotionUsageWhereUniqueInput
    /**
     * In case the PromotionUsage found by the `where` argument doesn't exist, create a new PromotionUsage with this data.
     */
    create: XOR<PromotionUsageCreateInput, PromotionUsageUncheckedCreateInput>
    /**
     * In case the PromotionUsage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PromotionUsageUpdateInput, PromotionUsageUncheckedUpdateInput>
  }

  /**
   * PromotionUsage delete
   */
  export type PromotionUsageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionUsage
     */
    select?: PromotionUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionUsage
     */
    omit?: PromotionUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionUsageInclude<ExtArgs> | null
    /**
     * Filter which PromotionUsage to delete.
     */
    where: PromotionUsageWhereUniqueInput
  }

  /**
   * PromotionUsage deleteMany
   */
  export type PromotionUsageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PromotionUsages to delete
     */
    where?: PromotionUsageWhereInput
    /**
     * Limit how many PromotionUsages to delete.
     */
    limit?: number
  }

  /**
   * PromotionUsage.customer
   */
  export type PromotionUsage$customerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
  }

  /**
   * PromotionUsage without action
   */
  export type PromotionUsageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionUsage
     */
    select?: PromotionUsageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PromotionUsage
     */
    omit?: PromotionUsageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionUsageInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const RoleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    category: 'category',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    version: 'version'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const RolePermissionScalarFieldEnum: {
    id: 'id',
    roleId: 'roleId',
    permissionId: 'permissionId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    version: 'version'
  };

  export type RolePermissionScalarFieldEnum = (typeof RolePermissionScalarFieldEnum)[keyof typeof RolePermissionScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    lastName: 'lastName',
    firstName: 'firstName',
    mobile: 'mobile',
    email: 'email',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const SettingScalarFieldEnum: {
    id: 'id',
    tenantId: 'tenantId',
    userId: 'userId',
    outletId: 'outletId',
    key: 'key',
    value: 'value',
    type: 'type',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type SettingScalarFieldEnum = (typeof SettingScalarFieldEnum)[keyof typeof SettingScalarFieldEnum]


  export const ReferralScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    referralId: 'referralId',
    deleted: 'deleted',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type ReferralScalarFieldEnum = (typeof ReferralScalarFieldEnum)[keyof typeof ReferralScalarFieldEnum]


  export const SupplierScalarFieldEnum: {
    id: 'id',
    companyName: 'companyName',
    companyStreet: 'companyStreet',
    companyCity: 'companyCity',
    companyState: 'companyState',
    companyPostalCode: 'companyPostalCode',
    companyCountry: 'companyCountry',
    companyRegisterNumber: 'companyRegisterNumber',
    personInChargeLastName: 'personInChargeLastName',
    personInChargeFirstName: 'personInChargeFirstName',
    mobile: 'mobile',
    email: 'email',
    remark: 'remark',
    hasTax: 'hasTax',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type SupplierScalarFieldEnum = (typeof SupplierScalarFieldEnum)[keyof typeof SupplierScalarFieldEnum]


  export const CustomerScalarFieldEnum: {
    id: 'id',
    salutation: 'salutation',
    lastName: 'lastName',
    firstName: 'firstName',
    mobile: 'mobile',
    email: 'email',
    gender: 'gender',
    billStreet: 'billStreet',
    billCity: 'billCity',
    billState: 'billState',
    billPostalCode: 'billPostalCode',
    billCountry: 'billCountry',
    billRemark: 'billRemark',
    shipStreet: 'shipStreet',
    shipCity: 'shipCity',
    shipState: 'shipState',
    shipPostalCode: 'shipPostalCode',
    shipCountry: 'shipCountry',
    shipRemark: 'shipRemark',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type CustomerScalarFieldEnum = (typeof CustomerScalarFieldEnum)[keyof typeof CustomerScalarFieldEnum]


  export const CompanyScalarFieldEnum: {
    id: 'id',
    companyName: 'companyName',
    street: 'street',
    city: 'city',
    state: 'state',
    postalCode: 'postalCode',
    country: 'country',
    registrationNumber: 'registrationNumber',
    website: 'website',
    referralId: 'referralId',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type CompanyScalarFieldEnum = (typeof CompanyScalarFieldEnum)[keyof typeof CompanyScalarFieldEnum]


  export const OutletScalarFieldEnum: {
    id: 'id',
    tenantOutletId: 'tenantOutletId',
    outletName: 'outletName',
    street: 'street',
    city: 'city',
    state: 'state',
    postalCode: 'postalCode',
    country: 'country',
    outletTel: 'outletTel',
    outletEmail: 'outletEmail',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type OutletScalarFieldEnum = (typeof OutletScalarFieldEnum)[keyof typeof OutletScalarFieldEnum]


  export const ItemScalarFieldEnum: {
    id: 'id',
    itemName: 'itemName',
    itemCode: 'itemCode',
    itemType: 'itemType',
    itemModel: 'itemModel',
    itemBrand: 'itemBrand',
    itemDescription: 'itemDescription',
    categoryId: 'categoryId',
    cost: 'cost',
    price: 'price',
    currency: 'currency',
    isOpenPrice: 'isOpenPrice',
    unitOfMeasure: 'unitOfMeasure',
    height: 'height',
    width: 'width',
    length: 'length',
    weight: 'weight',
    alternateLookUp: 'alternateLookUp',
    image: 'image',
    hasTax: 'hasTax',
    taxRate: 'taxRate',
    supplierId: 'supplierId',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type ItemScalarFieldEnum = (typeof ItemScalarFieldEnum)[keyof typeof ItemScalarFieldEnum]


  export const CategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    parentId: 'parentId',
    image: 'image',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


  export const SalesScalarFieldEnum: {
    id: 'id',
    outletId: 'outletId',
    businessDate: 'businessDate',
    salesType: 'salesType',
    customerName: 'customerName',
    customerId: 'customerId',
    phoneNumber: 'phoneNumber',
    billStreet: 'billStreet',
    billCity: 'billCity',
    billState: 'billState',
    billPostalCode: 'billPostalCode',
    billCountry: 'billCountry',
    shipStreet: 'shipStreet',
    shipCity: 'shipCity',
    shipState: 'shipState',
    shipPostalCode: 'shipPostalCode',
    shipCountry: 'shipCountry',
    totalItemDiscountAmount: 'totalItemDiscountAmount',
    discountPercentage: 'discountPercentage',
    discountAmount: 'discountAmount',
    profitAmount: 'profitAmount',
    serviceChargeAmount: 'serviceChargeAmount',
    taxAmount: 'taxAmount',
    roundingAmount: 'roundingAmount',
    subtotalAmount: 'subtotalAmount',
    totalAmount: 'totalAmount',
    paidAmount: 'paidAmount',
    changeAmount: 'changeAmount',
    status: 'status',
    remark: 'remark',
    completedSessionId: 'completedSessionId',
    sessionId: 'sessionId',
    eodId: 'eodId',
    salesQuotationId: 'salesQuotationId',
    performedBy: 'performedBy',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version',
    tableId: 'tableId',
    orderStatus: 'orderStatus'
  };

  export type SalesScalarFieldEnum = (typeof SalesScalarFieldEnum)[keyof typeof SalesScalarFieldEnum]


  export const SalesItemScalarFieldEnum: {
    id: 'id',
    salesId: 'salesId',
    itemId: 'itemId',
    itemName: 'itemName',
    itemCode: 'itemCode',
    itemBrand: 'itemBrand',
    itemModel: 'itemModel',
    quantity: 'quantity',
    cost: 'cost',
    price: 'price',
    priceBeforeTax: 'priceBeforeTax',
    profit: 'profit',
    discountPercentage: 'discountPercentage',
    discountAmount: 'discountAmount',
    serviceChargeAmount: 'serviceChargeAmount',
    taxAmount: 'taxAmount',
    subtotalAmount: 'subtotalAmount',
    remark: 'remark',
    deleted: 'deleted',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version',
    specialInstructions: 'specialInstructions',
    itemStatus: 'itemStatus',
    priority: 'priority',
    estimatedPrepTime: 'estimatedPrepTime'
  };

  export type SalesItemScalarFieldEnum = (typeof SalesItemScalarFieldEnum)[keyof typeof SalesItemScalarFieldEnum]


  export const SalesItemModifierScalarFieldEnum: {
    id: 'id',
    salesItemId: 'salesItemId',
    menuItemModifierId: 'menuItemModifierId',
    itemId: 'itemId',
    modifierName: 'modifierName',
    modifierPrice: 'modifierPrice',
    quantity: 'quantity',
    status: 'status',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type SalesItemModifierScalarFieldEnum = (typeof SalesItemModifierScalarFieldEnum)[keyof typeof SalesItemModifierScalarFieldEnum]


  export const SalesQuotationScalarFieldEnum: {
    id: 'id',
    outletId: 'outletId',
    customerId: 'customerId',
    customerStreet: 'customerStreet',
    customerCity: 'customerCity',
    customerState: 'customerState',
    customerPostalCode: 'customerPostalCode',
    customerCountry: 'customerCountry',
    discountPercentage: 'discountPercentage',
    discountAmount: 'discountAmount',
    serviceChargeAmount: 'serviceChargeAmount',
    taxAmount: 'taxAmount',
    roundingAmount: 'roundingAmount',
    subtotalAmount: 'subtotalAmount',
    totalAmount: 'totalAmount',
    status: 'status',
    remark: 'remark',
    performedBy: 'performedBy',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type SalesQuotationScalarFieldEnum = (typeof SalesQuotationScalarFieldEnum)[keyof typeof SalesQuotationScalarFieldEnum]


  export const SalesQuotationItemScalarFieldEnum: {
    id: 'id',
    salesQuotationId: 'salesQuotationId',
    itemId: 'itemId',
    quantity: 'quantity',
    remark: 'remark',
    deleted: 'deleted',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type SalesQuotationItemScalarFieldEnum = (typeof SalesQuotationItemScalarFieldEnum)[keyof typeof SalesQuotationItemScalarFieldEnum]


  export const InvoiceScalarFieldEnum: {
    id: 'id',
    invoiceNumber: 'invoiceNumber',
    taxInvoiceNumber: 'taxInvoiceNumber',
    purchaseOrderId: 'purchaseOrderId',
    supplierId: 'supplierId',
    outletId: 'outletId',
    subtotalAmount: 'subtotalAmount',
    taxAmount: 'taxAmount',
    sessionId: 'sessionId',
    discountType: 'discountType',
    discountAmount: 'discountAmount',
    totalAmount: 'totalAmount',
    currency: 'currency',
    status: 'status',
    invoiceDate: 'invoiceDate',
    paymentDate: 'paymentDate',
    dueDate: 'dueDate',
    remark: 'remark',
    performedBy: 'performedBy',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type InvoiceScalarFieldEnum = (typeof InvoiceScalarFieldEnum)[keyof typeof InvoiceScalarFieldEnum]


  export const InvoiceItemScalarFieldEnum: {
    id: 'id',
    invoiceId: 'invoiceId',
    itemId: 'itemId',
    quantity: 'quantity',
    unitPrice: 'unitPrice',
    discountType: 'discountType',
    discountAmount: 'discountAmount',
    taxAmount: 'taxAmount',
    subtotal: 'subtotal',
    remark: 'remark',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    version: 'version'
  };

  export type InvoiceItemScalarFieldEnum = (typeof InvoiceItemScalarFieldEnum)[keyof typeof InvoiceItemScalarFieldEnum]


  export const DeliveryOrderScalarFieldEnum: {
    id: 'id',
    trackingNumber: 'trackingNumber',
    outletId: 'outletId',
    customerId: 'customerId',
    purchaseOrderId: 'purchaseOrderId',
    supplierId: 'supplierId',
    invoiceId: 'invoiceId',
    sessionId: 'sessionId',
    deliveryDate: 'deliveryDate',
    deliveryStreet: 'deliveryStreet',
    deliveryCity: 'deliveryCity',
    deliveryState: 'deliveryState',
    deliveryPostalCode: 'deliveryPostalCode',
    deliveryCountry: 'deliveryCountry',
    status: 'status',
    remark: 'remark',
    performedBy: 'performedBy',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type DeliveryOrderScalarFieldEnum = (typeof DeliveryOrderScalarFieldEnum)[keyof typeof DeliveryOrderScalarFieldEnum]


  export const DeliveryOrderItemScalarFieldEnum: {
    id: 'id',
    deliveryOrderId: 'deliveryOrderId',
    itemId: 'itemId',
    orderedQuantity: 'orderedQuantity',
    receivedQuantity: 'receivedQuantity',
    unitPrice: 'unitPrice',
    remark: 'remark',
    version: 'version',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deleted: 'deleted',
    deletedAt: 'deletedAt'
  };

  export type DeliveryOrderItemScalarFieldEnum = (typeof DeliveryOrderItemScalarFieldEnum)[keyof typeof DeliveryOrderItemScalarFieldEnum]


  export const PurchaseOrderScalarFieldEnum: {
    id: 'id',
    purchaseOrderNumber: 'purchaseOrderNumber',
    outletId: 'outletId',
    supplierId: 'supplierId',
    purchaseOrderDate: 'purchaseOrderDate',
    sessionId: 'sessionId',
    discountType: 'discountType',
    discountAmount: 'discountAmount',
    serviceChargeAmount: 'serviceChargeAmount',
    taxAmount: 'taxAmount',
    roundingAmount: 'roundingAmount',
    subtotalAmount: 'subtotalAmount',
    totalAmount: 'totalAmount',
    status: 'status',
    remark: 'remark',
    currency: 'currency',
    performedBy: 'performedBy',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type PurchaseOrderScalarFieldEnum = (typeof PurchaseOrderScalarFieldEnum)[keyof typeof PurchaseOrderScalarFieldEnum]


  export const PurchaseOrderItemScalarFieldEnum: {
    id: 'id',
    purchaseOrderId: 'purchaseOrderId',
    itemId: 'itemId',
    quantity: 'quantity',
    taxAmount: 'taxAmount',
    discountType: 'discountType',
    discountAmount: 'discountAmount',
    unitPrice: 'unitPrice',
    subtotal: 'subtotal',
    remark: 'remark',
    version: 'version',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deleted: 'deleted',
    deletedAt: 'deletedAt'
  };

  export type PurchaseOrderItemScalarFieldEnum = (typeof PurchaseOrderItemScalarFieldEnum)[keyof typeof PurchaseOrderItemScalarFieldEnum]


  export const PaymentScalarFieldEnum: {
    id: 'id',
    method: 'method',
    tenderedAmount: 'tenderedAmount',
    paidAmount: 'paidAmount',
    currencySymbol: 'currencySymbol',
    salesId: 'salesId',
    reference: 'reference',
    remark: 'remark',
    businessDate: 'businessDate',
    status: 'status',
    outletId: 'outletId',
    sessionId: 'sessionId',
    eodId: 'eodId',
    performedBy: 'performedBy',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


  export const RegisterLogScalarFieldEnum: {
    id: 'id',
    type: 'type',
    modifiedAmount: 'modifiedAmount',
    currencySymbol: 'currencySymbol',
    salesId: 'salesId',
    remark: 'remark',
    status: 'status',
    outletId: 'outletId',
    sessionId: 'sessionId',
    eodId: 'eodId',
    performedBy: 'performedBy',
    deleted: 'deleted',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type RegisterLogScalarFieldEnum = (typeof RegisterLogScalarFieldEnum)[keyof typeof RegisterLogScalarFieldEnum]


  export const CardInfoScalarFieldEnum: {
    id: 'id',
    paymentId: 'paymentId',
    cardNumber: 'cardNumber',
    cardExpiry: 'cardExpiry',
    traceNumber: 'traceNumber',
    type2: 'type2',
    type3: 'type3',
    cardRate: 'cardRate',
    appCode: 'appCode',
    cardType: 'cardType',
    deleted: 'deleted',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type CardInfoScalarFieldEnum = (typeof CardInfoScalarFieldEnum)[keyof typeof CardInfoScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    id: 'id',
    outletId: 'outletId',
    businessDate: 'businessDate',
    openingDateTime: 'openingDateTime',
    closingDateTime: 'closingDateTime',
    openingAmount: 'openingAmount',
    totalSalesCount: 'totalSalesCount',
    openByUserID: 'openByUserID',
    closeByUserID: 'closeByUserID',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const DeclarationScalarFieldEnum: {
    id: 'id',
    paymentType: 'paymentType',
    totalPaymentAmount: 'totalPaymentAmount',
    declarationAmount: 'declarationAmount',
    differenceAmount: 'differenceAmount',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version',
    sessionID: 'sessionID'
  };

  export type DeclarationScalarFieldEnum = (typeof DeclarationScalarFieldEnum)[keyof typeof DeclarationScalarFieldEnum]


  export const StockBalanceScalarFieldEnum: {
    id: 'id',
    itemId: 'itemId',
    outletId: 'outletId',
    availableQuantity: 'availableQuantity',
    onHandQuantity: 'onHandQuantity',
    reorderThreshold: 'reorderThreshold',
    deleted: 'deleted',
    lastRestockDate: 'lastRestockDate',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type StockBalanceScalarFieldEnum = (typeof StockBalanceScalarFieldEnum)[keyof typeof StockBalanceScalarFieldEnum]


  export const StockReceiptScalarFieldEnum: {
    id: 'id',
    itemId: 'itemId',
    outletId: 'outletId',
    quantity: 'quantity',
    cost: 'cost',
    receiptDate: 'receiptDate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    version: 'version'
  };

  export type StockReceiptScalarFieldEnum = (typeof StockReceiptScalarFieldEnum)[keyof typeof StockReceiptScalarFieldEnum]


  export const StockReceiptArchiveScalarFieldEnum: {
    id: 'id',
    itemId: 'itemId',
    outletId: 'outletId',
    quantity: 'quantity',
    cost: 'cost',
    receiptDate: 'receiptDate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    version: 'version'
  };

  export type StockReceiptArchiveScalarFieldEnum = (typeof StockReceiptArchiveScalarFieldEnum)[keyof typeof StockReceiptArchiveScalarFieldEnum]


  export const StockMovementScalarFieldEnum: {
    id: 'id',
    itemId: 'itemId',
    outletId: 'outletId',
    previousAvailableQuantity: 'previousAvailableQuantity',
    previousOnHandQuantity: 'previousOnHandQuantity',
    availableQuantityDelta: 'availableQuantityDelta',
    onHandQuantityDelta: 'onHandQuantityDelta',
    movementType: 'movementType',
    documentId: 'documentId',
    reason: 'reason',
    remark: 'remark',
    deleted: 'deleted',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version',
    performedBy: 'performedBy'
  };

  export type StockMovementScalarFieldEnum = (typeof StockMovementScalarFieldEnum)[keyof typeof StockMovementScalarFieldEnum]


  export const StockMovementArchiveScalarFieldEnum: {
    id: 'id',
    itemId: 'itemId',
    itemCode: 'itemCode',
    itemName: 'itemName',
    outletId: 'outletId',
    outletName: 'outletName',
    previousAvailableQuantity: 'previousAvailableQuantity',
    previousOnHandQuantity: 'previousOnHandQuantity',
    availableQuantityDelta: 'availableQuantityDelta',
    onHandQuantityDelta: 'onHandQuantityDelta',
    movementType: 'movementType',
    documentId: 'documentId',
    documentType: 'documentType',
    reason: 'reason',
    remark: 'remark',
    deleted: 'deleted',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type StockMovementArchiveScalarFieldEnum = (typeof StockMovementArchiveScalarFieldEnum)[keyof typeof StockMovementArchiveScalarFieldEnum]


  export const StockSnapshotScalarFieldEnum: {
    id: 'id',
    itemId: 'itemId',
    outletId: 'outletId',
    availableQuantity: 'availableQuantity',
    onHandQuantity: 'onHandQuantity',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type StockSnapshotScalarFieldEnum = (typeof StockSnapshotScalarFieldEnum)[keyof typeof StockSnapshotScalarFieldEnum]


  export const MenuProfileOutletScalarFieldEnum: {
    id: 'id',
    outletId: 'outletId',
    menuProfileID: 'menuProfileID',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type MenuProfileOutletScalarFieldEnum = (typeof MenuProfileOutletScalarFieldEnum)[keyof typeof MenuProfileOutletScalarFieldEnum]


  export const MenuProfileScalarFieldEnum: {
    id: 'id',
    name: 'name',
    dateStart: 'dateStart',
    dateEnd: 'dateEnd',
    timeStart: 'timeStart',
    timeEnd: 'timeEnd',
    isMonday: 'isMonday',
    isTuesday: 'isTuesday',
    isWednesday: 'isWednesday',
    isThursday: 'isThursday',
    isFriday: 'isFriday',
    isSaturday: 'isSaturday',
    isSunday: 'isSunday',
    sequence: 'sequence',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type MenuProfileScalarFieldEnum = (typeof MenuProfileScalarFieldEnum)[keyof typeof MenuProfileScalarFieldEnum]


  export const MenuCategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    menuProfileID: 'menuProfileID',
    imageURL: 'imageURL',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type MenuCategoryScalarFieldEnum = (typeof MenuCategoryScalarFieldEnum)[keyof typeof MenuCategoryScalarFieldEnum]


  export const MenuItemScalarFieldEnum: {
    id: 'id',
    name: 'name',
    itemID: 'itemID',
    itemCode: 'itemCode',
    imageURL: 'imageURL',
    price: 'price',
    sequence: 'sequence',
    menuCategoryID: 'menuCategoryID',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type MenuItemScalarFieldEnum = (typeof MenuItemScalarFieldEnum)[keyof typeof MenuItemScalarFieldEnum]


  export const MenuItemModifierGroupScalarFieldEnum: {
    id: 'id',
    name: 'name',
    minSelection: 'minSelection',
    maxSelection: 'maxSelection',
    sequence: 'sequence',
    menuItemID: 'menuItemID',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version',
    freeModifierLimit: 'freeModifierLimit'
  };

  export type MenuItemModifierGroupScalarFieldEnum = (typeof MenuItemModifierGroupScalarFieldEnum)[keyof typeof MenuItemModifierGroupScalarFieldEnum]


  export const MenuItemModifierScalarFieldEnum: {
    id: 'id',
    name: 'name',
    itemID: 'itemID',
    itemCode: 'itemCode',
    imageURL: 'imageURL',
    price: 'price',
    defaultSelectionQty: 'defaultSelectionQty',
    sequence: 'sequence',
    menuItemModifierGroupID: 'menuItemModifierGroupID',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type MenuItemModifierScalarFieldEnum = (typeof MenuItemModifierScalarFieldEnum)[keyof typeof MenuItemModifierScalarFieldEnum]


  export const TableScalarFieldEnum: {
    id: 'id',
    outletId: 'outletId',
    tableNumber: 'tableNumber',
    capacity: 'capacity',
    status: 'status',
    salesId: 'salesId',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type TableScalarFieldEnum = (typeof TableScalarFieldEnum)[keyof typeof TableScalarFieldEnum]


  export const RecipeScalarFieldEnum: {
    id: 'id',
    menuItemId: 'menuItemId',
    itemId: 'itemId',
    quantity: 'quantity',
    unit: 'unit',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version',
    batchYield: 'batchYield',
    menuItemModifierId: 'menuItemModifierId'
  };

  export type RecipeScalarFieldEnum = (typeof RecipeScalarFieldEnum)[keyof typeof RecipeScalarFieldEnum]


  export const StationScalarFieldEnum: {
    id: 'id',
    outletId: 'outletId',
    name: 'name',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type StationScalarFieldEnum = (typeof StationScalarFieldEnum)[keyof typeof StationScalarFieldEnum]


  export const ReservationScalarFieldEnum: {
    id: 'id',
    outletId: 'outletId',
    customerId: 'customerId',
    tableId: 'tableId',
    dateTime: 'dateTime',
    partySize: 'partySize',
    status: 'status',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type ReservationScalarFieldEnum = (typeof ReservationScalarFieldEnum)[keyof typeof ReservationScalarFieldEnum]


  export const OrderRoutingScalarFieldEnum: {
    id: 'id',
    salesItemId: 'salesItemId',
    stationId: 'stationId',
    status: 'status',
    sentAt: 'sentAt',
    completedAt: 'completedAt',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type OrderRoutingScalarFieldEnum = (typeof OrderRoutingScalarFieldEnum)[keyof typeof OrderRoutingScalarFieldEnum]


  export const WaitlistScalarFieldEnum: {
    id: 'id',
    outletId: 'outletId',
    customerId: 'customerId',
    partySize: 'partySize',
    status: 'status',
    waitTime: 'waitTime',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type WaitlistScalarFieldEnum = (typeof WaitlistScalarFieldEnum)[keyof typeof WaitlistScalarFieldEnum]


  export const SplitBillScalarFieldEnum: {
    id: 'id',
    salesId: 'salesId',
    amount: 'amount',
    paymentId: 'paymentId',
    customerId: 'customerId',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type SplitBillScalarFieldEnum = (typeof SplitBillScalarFieldEnum)[keyof typeof SplitBillScalarFieldEnum]


  export const PromotionScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    type: 'type',
    status: 'status',
    priority: 'priority',
    combinationRule: 'combinationRule',
    discountType: 'discountType',
    discountValue: 'discountValue',
    buyQuantity: 'buyQuantity',
    getQuantity: 'getQuantity',
    getDiscountValue: 'getDiscountValue',
    startDate: 'startDate',
    endDate: 'endDate',
    startTime: 'startTime',
    endTime: 'endTime',
    validDays: 'validDays',
    minPurchaseAmount: 'minPurchaseAmount',
    minPurchaseQty: 'minPurchaseQty',
    maxUsageTotal: 'maxUsageTotal',
    maxUsagePerCustomer: 'maxUsagePerCustomer',
    currentUsage: 'currentUsage',
    isCustomerSpecific: 'isCustomerSpecific',
    createdBy: 'createdBy',
    deleted: 'deleted',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type PromotionScalarFieldEnum = (typeof PromotionScalarFieldEnum)[keyof typeof PromotionScalarFieldEnum]


  export const PromotionItemScalarFieldEnum: {
    id: 'id',
    promotionId: 'promotionId',
    itemId: 'itemId',
    categoryId: 'categoryId',
    itemCode: 'itemCode',
    itemName: 'itemName',
    itemRole: 'itemRole',
    deleted: 'deleted',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type PromotionItemScalarFieldEnum = (typeof PromotionItemScalarFieldEnum)[keyof typeof PromotionItemScalarFieldEnum]


  export const PromotionCustomerScalarFieldEnum: {
    id: 'id',
    promotionId: 'promotionId',
    customerId: 'customerId',
    maxUsage: 'maxUsage',
    currentUsage: 'currentUsage',
    deleted: 'deleted',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    version: 'version'
  };

  export type PromotionCustomerScalarFieldEnum = (typeof PromotionCustomerScalarFieldEnum)[keyof typeof PromotionCustomerScalarFieldEnum]


  export const PromotionUsageScalarFieldEnum: {
    id: 'id',
    promotionId: 'promotionId',
    customerId: 'customerId',
    salesId: 'salesId',
    discountAmount: 'discountAmount',
    usedAt: 'usedAt',
    version: 'version'
  };

  export type PromotionUsageScalarFieldEnum = (typeof PromotionUsageScalarFieldEnum)[keyof typeof PromotionUsageScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const RoleOrderByRelevanceFieldEnum: {
    name: 'name',
    category: 'category',
    description: 'description'
  };

  export type RoleOrderByRelevanceFieldEnum = (typeof RoleOrderByRelevanceFieldEnum)[keyof typeof RoleOrderByRelevanceFieldEnum]


  export const UserOrderByRelevanceFieldEnum: {
    username: 'username',
    password: 'password',
    lastName: 'lastName',
    firstName: 'firstName',
    mobile: 'mobile',
    email: 'email'
  };

  export type UserOrderByRelevanceFieldEnum = (typeof UserOrderByRelevanceFieldEnum)[keyof typeof UserOrderByRelevanceFieldEnum]


  export const SettingOrderByRelevanceFieldEnum: {
    key: 'key',
    value: 'value'
  };

  export type SettingOrderByRelevanceFieldEnum = (typeof SettingOrderByRelevanceFieldEnum)[keyof typeof SettingOrderByRelevanceFieldEnum]


  export const SupplierOrderByRelevanceFieldEnum: {
    companyName: 'companyName',
    companyStreet: 'companyStreet',
    companyCity: 'companyCity',
    companyState: 'companyState',
    companyPostalCode: 'companyPostalCode',
    companyCountry: 'companyCountry',
    companyRegisterNumber: 'companyRegisterNumber',
    personInChargeLastName: 'personInChargeLastName',
    personInChargeFirstName: 'personInChargeFirstName',
    mobile: 'mobile',
    email: 'email',
    remark: 'remark'
  };

  export type SupplierOrderByRelevanceFieldEnum = (typeof SupplierOrderByRelevanceFieldEnum)[keyof typeof SupplierOrderByRelevanceFieldEnum]


  export const CustomerOrderByRelevanceFieldEnum: {
    salutation: 'salutation',
    lastName: 'lastName',
    firstName: 'firstName',
    mobile: 'mobile',
    email: 'email',
    gender: 'gender',
    billStreet: 'billStreet',
    billCity: 'billCity',
    billState: 'billState',
    billPostalCode: 'billPostalCode',
    billCountry: 'billCountry',
    billRemark: 'billRemark',
    shipStreet: 'shipStreet',
    shipCity: 'shipCity',
    shipState: 'shipState',
    shipPostalCode: 'shipPostalCode',
    shipCountry: 'shipCountry',
    shipRemark: 'shipRemark'
  };

  export type CustomerOrderByRelevanceFieldEnum = (typeof CustomerOrderByRelevanceFieldEnum)[keyof typeof CustomerOrderByRelevanceFieldEnum]


  export const CompanyOrderByRelevanceFieldEnum: {
    companyName: 'companyName',
    street: 'street',
    city: 'city',
    state: 'state',
    postalCode: 'postalCode',
    country: 'country',
    registrationNumber: 'registrationNumber',
    website: 'website',
    referralId: 'referralId'
  };

  export type CompanyOrderByRelevanceFieldEnum = (typeof CompanyOrderByRelevanceFieldEnum)[keyof typeof CompanyOrderByRelevanceFieldEnum]


  export const OutletOrderByRelevanceFieldEnum: {
    outletName: 'outletName',
    street: 'street',
    city: 'city',
    state: 'state',
    postalCode: 'postalCode',
    country: 'country',
    outletTel: 'outletTel',
    outletEmail: 'outletEmail'
  };

  export type OutletOrderByRelevanceFieldEnum = (typeof OutletOrderByRelevanceFieldEnum)[keyof typeof OutletOrderByRelevanceFieldEnum]


  export const ItemOrderByRelevanceFieldEnum: {
    itemName: 'itemName',
    itemCode: 'itemCode',
    itemType: 'itemType',
    itemModel: 'itemModel',
    itemBrand: 'itemBrand',
    itemDescription: 'itemDescription',
    currency: 'currency',
    unitOfMeasure: 'unitOfMeasure',
    alternateLookUp: 'alternateLookUp',
    image: 'image'
  };

  export type ItemOrderByRelevanceFieldEnum = (typeof ItemOrderByRelevanceFieldEnum)[keyof typeof ItemOrderByRelevanceFieldEnum]


  export const CategoryOrderByRelevanceFieldEnum: {
    name: 'name',
    description: 'description',
    image: 'image'
  };

  export type CategoryOrderByRelevanceFieldEnum = (typeof CategoryOrderByRelevanceFieldEnum)[keyof typeof CategoryOrderByRelevanceFieldEnum]


  export const SalesOrderByRelevanceFieldEnum: {
    salesType: 'salesType',
    customerName: 'customerName',
    phoneNumber: 'phoneNumber',
    billStreet: 'billStreet',
    billCity: 'billCity',
    billState: 'billState',
    billPostalCode: 'billPostalCode',
    billCountry: 'billCountry',
    shipStreet: 'shipStreet',
    shipCity: 'shipCity',
    shipState: 'shipState',
    shipPostalCode: 'shipPostalCode',
    shipCountry: 'shipCountry',
    status: 'status',
    remark: 'remark',
    performedBy: 'performedBy',
    orderStatus: 'orderStatus'
  };

  export type SalesOrderByRelevanceFieldEnum = (typeof SalesOrderByRelevanceFieldEnum)[keyof typeof SalesOrderByRelevanceFieldEnum]


  export const SalesItemOrderByRelevanceFieldEnum: {
    itemName: 'itemName',
    itemCode: 'itemCode',
    itemBrand: 'itemBrand',
    itemModel: 'itemModel',
    remark: 'remark',
    specialInstructions: 'specialInstructions',
    itemStatus: 'itemStatus',
    priority: 'priority'
  };

  export type SalesItemOrderByRelevanceFieldEnum = (typeof SalesItemOrderByRelevanceFieldEnum)[keyof typeof SalesItemOrderByRelevanceFieldEnum]


  export const SalesItemModifierOrderByRelevanceFieldEnum: {
    modifierName: 'modifierName'
  };

  export type SalesItemModifierOrderByRelevanceFieldEnum = (typeof SalesItemModifierOrderByRelevanceFieldEnum)[keyof typeof SalesItemModifierOrderByRelevanceFieldEnum]


  export const SalesQuotationOrderByRelevanceFieldEnum: {
    customerStreet: 'customerStreet',
    customerCity: 'customerCity',
    customerState: 'customerState',
    customerPostalCode: 'customerPostalCode',
    customerCountry: 'customerCountry',
    status: 'status',
    remark: 'remark',
    performedBy: 'performedBy'
  };

  export type SalesQuotationOrderByRelevanceFieldEnum = (typeof SalesQuotationOrderByRelevanceFieldEnum)[keyof typeof SalesQuotationOrderByRelevanceFieldEnum]


  export const SalesQuotationItemOrderByRelevanceFieldEnum: {
    remark: 'remark'
  };

  export type SalesQuotationItemOrderByRelevanceFieldEnum = (typeof SalesQuotationItemOrderByRelevanceFieldEnum)[keyof typeof SalesQuotationItemOrderByRelevanceFieldEnum]


  export const InvoiceOrderByRelevanceFieldEnum: {
    invoiceNumber: 'invoiceNumber',
    taxInvoiceNumber: 'taxInvoiceNumber',
    discountType: 'discountType',
    currency: 'currency',
    status: 'status',
    remark: 'remark',
    performedBy: 'performedBy'
  };

  export type InvoiceOrderByRelevanceFieldEnum = (typeof InvoiceOrderByRelevanceFieldEnum)[keyof typeof InvoiceOrderByRelevanceFieldEnum]


  export const InvoiceItemOrderByRelevanceFieldEnum: {
    discountType: 'discountType',
    remark: 'remark'
  };

  export type InvoiceItemOrderByRelevanceFieldEnum = (typeof InvoiceItemOrderByRelevanceFieldEnum)[keyof typeof InvoiceItemOrderByRelevanceFieldEnum]


  export const DeliveryOrderOrderByRelevanceFieldEnum: {
    trackingNumber: 'trackingNumber',
    deliveryStreet: 'deliveryStreet',
    deliveryCity: 'deliveryCity',
    deliveryState: 'deliveryState',
    deliveryPostalCode: 'deliveryPostalCode',
    deliveryCountry: 'deliveryCountry',
    status: 'status',
    remark: 'remark',
    performedBy: 'performedBy'
  };

  export type DeliveryOrderOrderByRelevanceFieldEnum = (typeof DeliveryOrderOrderByRelevanceFieldEnum)[keyof typeof DeliveryOrderOrderByRelevanceFieldEnum]


  export const DeliveryOrderItemOrderByRelevanceFieldEnum: {
    remark: 'remark'
  };

  export type DeliveryOrderItemOrderByRelevanceFieldEnum = (typeof DeliveryOrderItemOrderByRelevanceFieldEnum)[keyof typeof DeliveryOrderItemOrderByRelevanceFieldEnum]


  export const PurchaseOrderOrderByRelevanceFieldEnum: {
    purchaseOrderNumber: 'purchaseOrderNumber',
    discountType: 'discountType',
    status: 'status',
    remark: 'remark',
    currency: 'currency',
    performedBy: 'performedBy'
  };

  export type PurchaseOrderOrderByRelevanceFieldEnum = (typeof PurchaseOrderOrderByRelevanceFieldEnum)[keyof typeof PurchaseOrderOrderByRelevanceFieldEnum]


  export const PurchaseOrderItemOrderByRelevanceFieldEnum: {
    discountType: 'discountType',
    remark: 'remark'
  };

  export type PurchaseOrderItemOrderByRelevanceFieldEnum = (typeof PurchaseOrderItemOrderByRelevanceFieldEnum)[keyof typeof PurchaseOrderItemOrderByRelevanceFieldEnum]


  export const PaymentOrderByRelevanceFieldEnum: {
    method: 'method',
    currencySymbol: 'currencySymbol',
    reference: 'reference',
    remark: 'remark',
    status: 'status',
    performedBy: 'performedBy'
  };

  export type PaymentOrderByRelevanceFieldEnum = (typeof PaymentOrderByRelevanceFieldEnum)[keyof typeof PaymentOrderByRelevanceFieldEnum]


  export const RegisterLogOrderByRelevanceFieldEnum: {
    type: 'type',
    currencySymbol: 'currencySymbol',
    remark: 'remark',
    status: 'status',
    performedBy: 'performedBy'
  };

  export type RegisterLogOrderByRelevanceFieldEnum = (typeof RegisterLogOrderByRelevanceFieldEnum)[keyof typeof RegisterLogOrderByRelevanceFieldEnum]


  export const CardInfoOrderByRelevanceFieldEnum: {
    cardNumber: 'cardNumber',
    cardExpiry: 'cardExpiry',
    traceNumber: 'traceNumber',
    type2: 'type2',
    type3: 'type3',
    appCode: 'appCode',
    cardType: 'cardType'
  };

  export type CardInfoOrderByRelevanceFieldEnum = (typeof CardInfoOrderByRelevanceFieldEnum)[keyof typeof CardInfoOrderByRelevanceFieldEnum]


  export const DeclarationOrderByRelevanceFieldEnum: {
    paymentType: 'paymentType'
  };

  export type DeclarationOrderByRelevanceFieldEnum = (typeof DeclarationOrderByRelevanceFieldEnum)[keyof typeof DeclarationOrderByRelevanceFieldEnum]


  export const StockMovementOrderByRelevanceFieldEnum: {
    movementType: 'movementType',
    reason: 'reason',
    remark: 'remark',
    performedBy: 'performedBy'
  };

  export type StockMovementOrderByRelevanceFieldEnum = (typeof StockMovementOrderByRelevanceFieldEnum)[keyof typeof StockMovementOrderByRelevanceFieldEnum]


  export const StockMovementArchiveOrderByRelevanceFieldEnum: {
    itemCode: 'itemCode',
    itemName: 'itemName',
    outletName: 'outletName',
    movementType: 'movementType',
    documentType: 'documentType',
    reason: 'reason',
    remark: 'remark'
  };

  export type StockMovementArchiveOrderByRelevanceFieldEnum = (typeof StockMovementArchiveOrderByRelevanceFieldEnum)[keyof typeof StockMovementArchiveOrderByRelevanceFieldEnum]


  export const MenuProfileOrderByRelevanceFieldEnum: {
    name: 'name',
    dateStart: 'dateStart',
    dateEnd: 'dateEnd',
    timeStart: 'timeStart',
    timeEnd: 'timeEnd'
  };

  export type MenuProfileOrderByRelevanceFieldEnum = (typeof MenuProfileOrderByRelevanceFieldEnum)[keyof typeof MenuProfileOrderByRelevanceFieldEnum]


  export const MenuCategoryOrderByRelevanceFieldEnum: {
    name: 'name',
    imageURL: 'imageURL'
  };

  export type MenuCategoryOrderByRelevanceFieldEnum = (typeof MenuCategoryOrderByRelevanceFieldEnum)[keyof typeof MenuCategoryOrderByRelevanceFieldEnum]


  export const MenuItemOrderByRelevanceFieldEnum: {
    name: 'name',
    itemCode: 'itemCode',
    imageURL: 'imageURL'
  };

  export type MenuItemOrderByRelevanceFieldEnum = (typeof MenuItemOrderByRelevanceFieldEnum)[keyof typeof MenuItemOrderByRelevanceFieldEnum]


  export const MenuItemModifierGroupOrderByRelevanceFieldEnum: {
    name: 'name'
  };

  export type MenuItemModifierGroupOrderByRelevanceFieldEnum = (typeof MenuItemModifierGroupOrderByRelevanceFieldEnum)[keyof typeof MenuItemModifierGroupOrderByRelevanceFieldEnum]


  export const MenuItemModifierOrderByRelevanceFieldEnum: {
    name: 'name',
    itemCode: 'itemCode',
    imageURL: 'imageURL'
  };

  export type MenuItemModifierOrderByRelevanceFieldEnum = (typeof MenuItemModifierOrderByRelevanceFieldEnum)[keyof typeof MenuItemModifierOrderByRelevanceFieldEnum]


  export const TableOrderByRelevanceFieldEnum: {
    tableNumber: 'tableNumber',
    status: 'status'
  };

  export type TableOrderByRelevanceFieldEnum = (typeof TableOrderByRelevanceFieldEnum)[keyof typeof TableOrderByRelevanceFieldEnum]


  export const RecipeOrderByRelevanceFieldEnum: {
    unit: 'unit'
  };

  export type RecipeOrderByRelevanceFieldEnum = (typeof RecipeOrderByRelevanceFieldEnum)[keyof typeof RecipeOrderByRelevanceFieldEnum]


  export const StationOrderByRelevanceFieldEnum: {
    name: 'name'
  };

  export type StationOrderByRelevanceFieldEnum = (typeof StationOrderByRelevanceFieldEnum)[keyof typeof StationOrderByRelevanceFieldEnum]


  export const ReservationOrderByRelevanceFieldEnum: {
    status: 'status'
  };

  export type ReservationOrderByRelevanceFieldEnum = (typeof ReservationOrderByRelevanceFieldEnum)[keyof typeof ReservationOrderByRelevanceFieldEnum]


  export const OrderRoutingOrderByRelevanceFieldEnum: {
    status: 'status'
  };

  export type OrderRoutingOrderByRelevanceFieldEnum = (typeof OrderRoutingOrderByRelevanceFieldEnum)[keyof typeof OrderRoutingOrderByRelevanceFieldEnum]


  export const WaitlistOrderByRelevanceFieldEnum: {
    status: 'status'
  };

  export type WaitlistOrderByRelevanceFieldEnum = (typeof WaitlistOrderByRelevanceFieldEnum)[keyof typeof WaitlistOrderByRelevanceFieldEnum]


  export const PromotionOrderByRelevanceFieldEnum: {
    name: 'name',
    description: 'description',
    startTime: 'startTime',
    endTime: 'endTime',
    validDays: 'validDays',
    createdBy: 'createdBy'
  };

  export type PromotionOrderByRelevanceFieldEnum = (typeof PromotionOrderByRelevanceFieldEnum)[keyof typeof PromotionOrderByRelevanceFieldEnum]


  export const PromotionItemOrderByRelevanceFieldEnum: {
    itemCode: 'itemCode',
    itemName: 'itemName',
    itemRole: 'itemRole'
  };

  export type PromotionItemOrderByRelevanceFieldEnum = (typeof PromotionItemOrderByRelevanceFieldEnum)[keyof typeof PromotionItemOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'SettingType'
   */
  export type EnumSettingTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SettingType'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'OrderStatus'
   */
  export type EnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus'>
    


  /**
   * Reference to a field of type 'PromotionType'
   */
  export type EnumPromotionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PromotionType'>
    


  /**
   * Reference to a field of type 'PromotionStatus'
   */
  export type EnumPromotionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PromotionStatus'>
    


  /**
   * Reference to a field of type 'CombinationRule'
   */
  export type EnumCombinationRuleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CombinationRule'>
    


  /**
   * Reference to a field of type 'DiscountType'
   */
  export type EnumDiscountTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DiscountType'>
    
  /**
   * Deep Input Types
   */


  export type RoleWhereInput = {
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    id?: IntFilter<"Role"> | number
    name?: StringFilter<"Role"> | string
    category?: StringNullableFilter<"Role"> | string | null
    description?: StringNullableFilter<"Role"> | string | null
    createdAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    deleted?: BoolFilter<"Role"> | boolean
    deletedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    version?: IntNullableFilter<"Role"> | number | null
    permission?: RolePermissionListRelationFilter
    users?: UserListRelationFilter
  }

  export type RoleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    permission?: RolePermissionOrderByRelationAggregateInput
    users?: UserOrderByRelationAggregateInput
    _relevance?: RoleOrderByRelevanceInput
  }

  export type RoleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    category?: StringNullableFilter<"Role"> | string | null
    description?: StringNullableFilter<"Role"> | string | null
    createdAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    deleted?: BoolFilter<"Role"> | boolean
    deletedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    version?: IntNullableFilter<"Role"> | number | null
    permission?: RolePermissionListRelationFilter
    users?: UserListRelationFilter
  }, "id" | "name">

  export type RoleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: RoleCountOrderByAggregateInput
    _avg?: RoleAvgOrderByAggregateInput
    _max?: RoleMaxOrderByAggregateInput
    _min?: RoleMinOrderByAggregateInput
    _sum?: RoleSumOrderByAggregateInput
  }

  export type RoleScalarWhereWithAggregatesInput = {
    AND?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    OR?: RoleScalarWhereWithAggregatesInput[]
    NOT?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Role"> | number
    name?: StringWithAggregatesFilter<"Role"> | string
    category?: StringNullableWithAggregatesFilter<"Role"> | string | null
    description?: StringNullableWithAggregatesFilter<"Role"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Role"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Role"> | Date | string | null
    deleted?: BoolWithAggregatesFilter<"Role"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Role"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Role"> | number | null
  }

  export type RolePermissionWhereInput = {
    AND?: RolePermissionWhereInput | RolePermissionWhereInput[]
    OR?: RolePermissionWhereInput[]
    NOT?: RolePermissionWhereInput | RolePermissionWhereInput[]
    id?: IntFilter<"RolePermission"> | number
    roleId?: IntFilter<"RolePermission"> | number
    permissionId?: IntFilter<"RolePermission"> | number
    createdAt?: DateTimeNullableFilter<"RolePermission"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"RolePermission"> | Date | string | null
    deleted?: BoolFilter<"RolePermission"> | boolean
    deletedAt?: DateTimeNullableFilter<"RolePermission"> | Date | string | null
    version?: IntNullableFilter<"RolePermission"> | number | null
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
  }

  export type RolePermissionOrderByWithRelationInput = {
    id?: SortOrder
    roleId?: SortOrder
    permissionId?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    role?: RoleOrderByWithRelationInput
  }

  export type RolePermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    roleId_permissionId?: RolePermissionRoleIdPermissionIdCompoundUniqueInput
    AND?: RolePermissionWhereInput | RolePermissionWhereInput[]
    OR?: RolePermissionWhereInput[]
    NOT?: RolePermissionWhereInput | RolePermissionWhereInput[]
    roleId?: IntFilter<"RolePermission"> | number
    permissionId?: IntFilter<"RolePermission"> | number
    createdAt?: DateTimeNullableFilter<"RolePermission"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"RolePermission"> | Date | string | null
    deleted?: BoolFilter<"RolePermission"> | boolean
    deletedAt?: DateTimeNullableFilter<"RolePermission"> | Date | string | null
    version?: IntNullableFilter<"RolePermission"> | number | null
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
  }, "id" | "roleId_permissionId">

  export type RolePermissionOrderByWithAggregationInput = {
    id?: SortOrder
    roleId?: SortOrder
    permissionId?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: RolePermissionCountOrderByAggregateInput
    _avg?: RolePermissionAvgOrderByAggregateInput
    _max?: RolePermissionMaxOrderByAggregateInput
    _min?: RolePermissionMinOrderByAggregateInput
    _sum?: RolePermissionSumOrderByAggregateInput
  }

  export type RolePermissionScalarWhereWithAggregatesInput = {
    AND?: RolePermissionScalarWhereWithAggregatesInput | RolePermissionScalarWhereWithAggregatesInput[]
    OR?: RolePermissionScalarWhereWithAggregatesInput[]
    NOT?: RolePermissionScalarWhereWithAggregatesInput | RolePermissionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RolePermission"> | number
    roleId?: IntWithAggregatesFilter<"RolePermission"> | number
    permissionId?: IntWithAggregatesFilter<"RolePermission"> | number
    createdAt?: DateTimeNullableWithAggregatesFilter<"RolePermission"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"RolePermission"> | Date | string | null
    deleted?: BoolWithAggregatesFilter<"RolePermission"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"RolePermission"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"RolePermission"> | number | null
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    lastName?: StringNullableFilter<"User"> | string | null
    firstName?: StringNullableFilter<"User"> | string | null
    mobile?: StringNullableFilter<"User"> | string | null
    email?: StringNullableFilter<"User"> | string | null
    deleted?: BoolFilter<"User"> | boolean
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"User"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    version?: IntNullableFilter<"User"> | number | null
    settings?: SettingListRelationFilter
    roles?: RoleListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    lastName?: SortOrderInput | SortOrder
    firstName?: SortOrderInput | SortOrder
    mobile?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    settings?: SettingOrderByRelationAggregateInput
    roles?: RoleOrderByRelationAggregateInput
    _relevance?: UserOrderByRelevanceInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    username?: string
    mobile?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    lastName?: StringNullableFilter<"User"> | string | null
    firstName?: StringNullableFilter<"User"> | string | null
    deleted?: BoolFilter<"User"> | boolean
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"User"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    version?: IntNullableFilter<"User"> | number | null
    settings?: SettingListRelationFilter
    roles?: RoleListRelationFilter
  }, "id" | "username" | "mobile" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    lastName?: SortOrderInput | SortOrder
    firstName?: SortOrderInput | SortOrder
    mobile?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    username?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    lastName?: StringNullableWithAggregatesFilter<"User"> | string | null
    firstName?: StringNullableWithAggregatesFilter<"User"> | string | null
    mobile?: StringNullableWithAggregatesFilter<"User"> | string | null
    email?: StringNullableWithAggregatesFilter<"User"> | string | null
    deleted?: BoolWithAggregatesFilter<"User"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"User"> | number | null
  }

  export type SettingWhereInput = {
    AND?: SettingWhereInput | SettingWhereInput[]
    OR?: SettingWhereInput[]
    NOT?: SettingWhereInput | SettingWhereInput[]
    id?: IntFilter<"Setting"> | number
    tenantId?: IntNullableFilter<"Setting"> | number | null
    userId?: IntNullableFilter<"Setting"> | number | null
    outletId?: IntNullableFilter<"Setting"> | number | null
    key?: StringFilter<"Setting"> | string
    value?: StringFilter<"Setting"> | string
    type?: EnumSettingTypeFilter<"Setting"> | $Enums.SettingType
    deleted?: BoolFilter<"Setting"> | boolean
    deletedAt?: DateTimeNullableFilter<"Setting"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Setting"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Setting"> | Date | string | null
    version?: IntNullableFilter<"Setting"> | number | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    outlet?: XOR<OutletNullableScalarRelationFilter, OutletWhereInput> | null
  }

  export type SettingOrderByWithRelationInput = {
    id?: SortOrder
    tenantId?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    outletId?: SortOrderInput | SortOrder
    key?: SortOrder
    value?: SortOrder
    type?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    outlet?: OutletOrderByWithRelationInput
    _relevance?: SettingOrderByRelevanceInput
  }

  export type SettingWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    tenantId_userId_outletId_key?: SettingTenantIdUserIdOutletIdKeyCompoundUniqueInput
    AND?: SettingWhereInput | SettingWhereInput[]
    OR?: SettingWhereInput[]
    NOT?: SettingWhereInput | SettingWhereInput[]
    tenantId?: IntNullableFilter<"Setting"> | number | null
    userId?: IntNullableFilter<"Setting"> | number | null
    outletId?: IntNullableFilter<"Setting"> | number | null
    key?: StringFilter<"Setting"> | string
    value?: StringFilter<"Setting"> | string
    type?: EnumSettingTypeFilter<"Setting"> | $Enums.SettingType
    deleted?: BoolFilter<"Setting"> | boolean
    deletedAt?: DateTimeNullableFilter<"Setting"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Setting"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Setting"> | Date | string | null
    version?: IntNullableFilter<"Setting"> | number | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    outlet?: XOR<OutletNullableScalarRelationFilter, OutletWhereInput> | null
  }, "id" | "tenantId_userId_outletId_key">

  export type SettingOrderByWithAggregationInput = {
    id?: SortOrder
    tenantId?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    outletId?: SortOrderInput | SortOrder
    key?: SortOrder
    value?: SortOrder
    type?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: SettingCountOrderByAggregateInput
    _avg?: SettingAvgOrderByAggregateInput
    _max?: SettingMaxOrderByAggregateInput
    _min?: SettingMinOrderByAggregateInput
    _sum?: SettingSumOrderByAggregateInput
  }

  export type SettingScalarWhereWithAggregatesInput = {
    AND?: SettingScalarWhereWithAggregatesInput | SettingScalarWhereWithAggregatesInput[]
    OR?: SettingScalarWhereWithAggregatesInput[]
    NOT?: SettingScalarWhereWithAggregatesInput | SettingScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Setting"> | number
    tenantId?: IntNullableWithAggregatesFilter<"Setting"> | number | null
    userId?: IntNullableWithAggregatesFilter<"Setting"> | number | null
    outletId?: IntNullableWithAggregatesFilter<"Setting"> | number | null
    key?: StringWithAggregatesFilter<"Setting"> | string
    value?: StringWithAggregatesFilter<"Setting"> | string
    type?: EnumSettingTypeWithAggregatesFilter<"Setting"> | $Enums.SettingType
    deleted?: BoolWithAggregatesFilter<"Setting"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Setting"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Setting"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Setting"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Setting"> | number | null
  }

  export type ReferralWhereInput = {
    AND?: ReferralWhereInput | ReferralWhereInput[]
    OR?: ReferralWhereInput[]
    NOT?: ReferralWhereInput | ReferralWhereInput[]
    id?: IntFilter<"Referral"> | number
    userId?: IntFilter<"Referral"> | number
    referralId?: IntFilter<"Referral"> | number
    deleted?: BoolFilter<"Referral"> | boolean
    createdAt?: DateTimeNullableFilter<"Referral"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Referral"> | Date | string | null
    version?: IntNullableFilter<"Referral"> | number | null
  }

  export type ReferralOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    referralId?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
  }

  export type ReferralWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReferralWhereInput | ReferralWhereInput[]
    OR?: ReferralWhereInput[]
    NOT?: ReferralWhereInput | ReferralWhereInput[]
    userId?: IntFilter<"Referral"> | number
    referralId?: IntFilter<"Referral"> | number
    deleted?: BoolFilter<"Referral"> | boolean
    createdAt?: DateTimeNullableFilter<"Referral"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Referral"> | Date | string | null
    version?: IntNullableFilter<"Referral"> | number | null
  }, "id">

  export type ReferralOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    referralId?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: ReferralCountOrderByAggregateInput
    _avg?: ReferralAvgOrderByAggregateInput
    _max?: ReferralMaxOrderByAggregateInput
    _min?: ReferralMinOrderByAggregateInput
    _sum?: ReferralSumOrderByAggregateInput
  }

  export type ReferralScalarWhereWithAggregatesInput = {
    AND?: ReferralScalarWhereWithAggregatesInput | ReferralScalarWhereWithAggregatesInput[]
    OR?: ReferralScalarWhereWithAggregatesInput[]
    NOT?: ReferralScalarWhereWithAggregatesInput | ReferralScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Referral"> | number
    userId?: IntWithAggregatesFilter<"Referral"> | number
    referralId?: IntWithAggregatesFilter<"Referral"> | number
    deleted?: BoolWithAggregatesFilter<"Referral"> | boolean
    createdAt?: DateTimeNullableWithAggregatesFilter<"Referral"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Referral"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Referral"> | number | null
  }

  export type SupplierWhereInput = {
    AND?: SupplierWhereInput | SupplierWhereInput[]
    OR?: SupplierWhereInput[]
    NOT?: SupplierWhereInput | SupplierWhereInput[]
    id?: IntFilter<"Supplier"> | number
    companyName?: StringFilter<"Supplier"> | string
    companyStreet?: StringNullableFilter<"Supplier"> | string | null
    companyCity?: StringNullableFilter<"Supplier"> | string | null
    companyState?: StringNullableFilter<"Supplier"> | string | null
    companyPostalCode?: StringNullableFilter<"Supplier"> | string | null
    companyCountry?: StringNullableFilter<"Supplier"> | string | null
    companyRegisterNumber?: StringNullableFilter<"Supplier"> | string | null
    personInChargeLastName?: StringNullableFilter<"Supplier"> | string | null
    personInChargeFirstName?: StringNullableFilter<"Supplier"> | string | null
    mobile?: StringNullableFilter<"Supplier"> | string | null
    email?: StringNullableFilter<"Supplier"> | string | null
    remark?: StringNullableFilter<"Supplier"> | string | null
    hasTax?: BoolFilter<"Supplier"> | boolean
    deleted?: BoolFilter<"Supplier"> | boolean
    deletedAt?: DateTimeNullableFilter<"Supplier"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Supplier"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Supplier"> | Date | string | null
    version?: IntNullableFilter<"Supplier"> | number | null
    items?: ItemListRelationFilter
    purchaseOrders?: PurchaseOrderListRelationFilter
    invoices?: InvoiceListRelationFilter
  }

  export type SupplierOrderByWithRelationInput = {
    id?: SortOrder
    companyName?: SortOrder
    companyStreet?: SortOrderInput | SortOrder
    companyCity?: SortOrderInput | SortOrder
    companyState?: SortOrderInput | SortOrder
    companyPostalCode?: SortOrderInput | SortOrder
    companyCountry?: SortOrderInput | SortOrder
    companyRegisterNumber?: SortOrderInput | SortOrder
    personInChargeLastName?: SortOrderInput | SortOrder
    personInChargeFirstName?: SortOrderInput | SortOrder
    mobile?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    remark?: SortOrderInput | SortOrder
    hasTax?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    items?: ItemOrderByRelationAggregateInput
    purchaseOrders?: PurchaseOrderOrderByRelationAggregateInput
    invoices?: InvoiceOrderByRelationAggregateInput
    _relevance?: SupplierOrderByRelevanceInput
  }

  export type SupplierWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    companyName?: string
    AND?: SupplierWhereInput | SupplierWhereInput[]
    OR?: SupplierWhereInput[]
    NOT?: SupplierWhereInput | SupplierWhereInput[]
    companyStreet?: StringNullableFilter<"Supplier"> | string | null
    companyCity?: StringNullableFilter<"Supplier"> | string | null
    companyState?: StringNullableFilter<"Supplier"> | string | null
    companyPostalCode?: StringNullableFilter<"Supplier"> | string | null
    companyCountry?: StringNullableFilter<"Supplier"> | string | null
    companyRegisterNumber?: StringNullableFilter<"Supplier"> | string | null
    personInChargeLastName?: StringNullableFilter<"Supplier"> | string | null
    personInChargeFirstName?: StringNullableFilter<"Supplier"> | string | null
    mobile?: StringNullableFilter<"Supplier"> | string | null
    email?: StringNullableFilter<"Supplier"> | string | null
    remark?: StringNullableFilter<"Supplier"> | string | null
    hasTax?: BoolFilter<"Supplier"> | boolean
    deleted?: BoolFilter<"Supplier"> | boolean
    deletedAt?: DateTimeNullableFilter<"Supplier"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Supplier"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Supplier"> | Date | string | null
    version?: IntNullableFilter<"Supplier"> | number | null
    items?: ItemListRelationFilter
    purchaseOrders?: PurchaseOrderListRelationFilter
    invoices?: InvoiceListRelationFilter
  }, "id" | "companyName">

  export type SupplierOrderByWithAggregationInput = {
    id?: SortOrder
    companyName?: SortOrder
    companyStreet?: SortOrderInput | SortOrder
    companyCity?: SortOrderInput | SortOrder
    companyState?: SortOrderInput | SortOrder
    companyPostalCode?: SortOrderInput | SortOrder
    companyCountry?: SortOrderInput | SortOrder
    companyRegisterNumber?: SortOrderInput | SortOrder
    personInChargeLastName?: SortOrderInput | SortOrder
    personInChargeFirstName?: SortOrderInput | SortOrder
    mobile?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    remark?: SortOrderInput | SortOrder
    hasTax?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: SupplierCountOrderByAggregateInput
    _avg?: SupplierAvgOrderByAggregateInput
    _max?: SupplierMaxOrderByAggregateInput
    _min?: SupplierMinOrderByAggregateInput
    _sum?: SupplierSumOrderByAggregateInput
  }

  export type SupplierScalarWhereWithAggregatesInput = {
    AND?: SupplierScalarWhereWithAggregatesInput | SupplierScalarWhereWithAggregatesInput[]
    OR?: SupplierScalarWhereWithAggregatesInput[]
    NOT?: SupplierScalarWhereWithAggregatesInput | SupplierScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Supplier"> | number
    companyName?: StringWithAggregatesFilter<"Supplier"> | string
    companyStreet?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    companyCity?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    companyState?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    companyPostalCode?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    companyCountry?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    companyRegisterNumber?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    personInChargeLastName?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    personInChargeFirstName?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    mobile?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    email?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    remark?: StringNullableWithAggregatesFilter<"Supplier"> | string | null
    hasTax?: BoolWithAggregatesFilter<"Supplier"> | boolean
    deleted?: BoolWithAggregatesFilter<"Supplier"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Supplier"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Supplier"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Supplier"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Supplier"> | number | null
  }

  export type CustomerWhereInput = {
    AND?: CustomerWhereInput | CustomerWhereInput[]
    OR?: CustomerWhereInput[]
    NOT?: CustomerWhereInput | CustomerWhereInput[]
    id?: IntFilter<"Customer"> | number
    salutation?: StringFilter<"Customer"> | string
    lastName?: StringFilter<"Customer"> | string
    firstName?: StringFilter<"Customer"> | string
    mobile?: StringNullableFilter<"Customer"> | string | null
    email?: StringNullableFilter<"Customer"> | string | null
    gender?: StringNullableFilter<"Customer"> | string | null
    billStreet?: StringNullableFilter<"Customer"> | string | null
    billCity?: StringNullableFilter<"Customer"> | string | null
    billState?: StringNullableFilter<"Customer"> | string | null
    billPostalCode?: StringNullableFilter<"Customer"> | string | null
    billCountry?: StringNullableFilter<"Customer"> | string | null
    billRemark?: StringNullableFilter<"Customer"> | string | null
    shipStreet?: StringNullableFilter<"Customer"> | string | null
    shipCity?: StringNullableFilter<"Customer"> | string | null
    shipState?: StringNullableFilter<"Customer"> | string | null
    shipPostalCode?: StringNullableFilter<"Customer"> | string | null
    shipCountry?: StringNullableFilter<"Customer"> | string | null
    shipRemark?: StringNullableFilter<"Customer"> | string | null
    deleted?: BoolFilter<"Customer"> | boolean
    deletedAt?: DateTimeNullableFilter<"Customer"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Customer"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Customer"> | Date | string | null
    version?: IntNullableFilter<"Customer"> | number | null
    sales?: SalesListRelationFilter
    promotions?: PromotionCustomerListRelationFilter
    promotionUsage?: PromotionUsageListRelationFilter
    reservations?: ReservationListRelationFilter
    waitlists?: WaitlistListRelationFilter
    splitBills?: SplitBillListRelationFilter
  }

  export type CustomerOrderByWithRelationInput = {
    id?: SortOrder
    salutation?: SortOrder
    lastName?: SortOrder
    firstName?: SortOrder
    mobile?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    billStreet?: SortOrderInput | SortOrder
    billCity?: SortOrderInput | SortOrder
    billState?: SortOrderInput | SortOrder
    billPostalCode?: SortOrderInput | SortOrder
    billCountry?: SortOrderInput | SortOrder
    billRemark?: SortOrderInput | SortOrder
    shipStreet?: SortOrderInput | SortOrder
    shipCity?: SortOrderInput | SortOrder
    shipState?: SortOrderInput | SortOrder
    shipPostalCode?: SortOrderInput | SortOrder
    shipCountry?: SortOrderInput | SortOrder
    shipRemark?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    sales?: SalesOrderByRelationAggregateInput
    promotions?: PromotionCustomerOrderByRelationAggregateInput
    promotionUsage?: PromotionUsageOrderByRelationAggregateInput
    reservations?: ReservationOrderByRelationAggregateInput
    waitlists?: WaitlistOrderByRelationAggregateInput
    splitBills?: SplitBillOrderByRelationAggregateInput
    _relevance?: CustomerOrderByRelevanceInput
  }

  export type CustomerWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CustomerWhereInput | CustomerWhereInput[]
    OR?: CustomerWhereInput[]
    NOT?: CustomerWhereInput | CustomerWhereInput[]
    salutation?: StringFilter<"Customer"> | string
    lastName?: StringFilter<"Customer"> | string
    firstName?: StringFilter<"Customer"> | string
    mobile?: StringNullableFilter<"Customer"> | string | null
    email?: StringNullableFilter<"Customer"> | string | null
    gender?: StringNullableFilter<"Customer"> | string | null
    billStreet?: StringNullableFilter<"Customer"> | string | null
    billCity?: StringNullableFilter<"Customer"> | string | null
    billState?: StringNullableFilter<"Customer"> | string | null
    billPostalCode?: StringNullableFilter<"Customer"> | string | null
    billCountry?: StringNullableFilter<"Customer"> | string | null
    billRemark?: StringNullableFilter<"Customer"> | string | null
    shipStreet?: StringNullableFilter<"Customer"> | string | null
    shipCity?: StringNullableFilter<"Customer"> | string | null
    shipState?: StringNullableFilter<"Customer"> | string | null
    shipPostalCode?: StringNullableFilter<"Customer"> | string | null
    shipCountry?: StringNullableFilter<"Customer"> | string | null
    shipRemark?: StringNullableFilter<"Customer"> | string | null
    deleted?: BoolFilter<"Customer"> | boolean
    deletedAt?: DateTimeNullableFilter<"Customer"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Customer"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Customer"> | Date | string | null
    version?: IntNullableFilter<"Customer"> | number | null
    sales?: SalesListRelationFilter
    promotions?: PromotionCustomerListRelationFilter
    promotionUsage?: PromotionUsageListRelationFilter
    reservations?: ReservationListRelationFilter
    waitlists?: WaitlistListRelationFilter
    splitBills?: SplitBillListRelationFilter
  }, "id">

  export type CustomerOrderByWithAggregationInput = {
    id?: SortOrder
    salutation?: SortOrder
    lastName?: SortOrder
    firstName?: SortOrder
    mobile?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    billStreet?: SortOrderInput | SortOrder
    billCity?: SortOrderInput | SortOrder
    billState?: SortOrderInput | SortOrder
    billPostalCode?: SortOrderInput | SortOrder
    billCountry?: SortOrderInput | SortOrder
    billRemark?: SortOrderInput | SortOrder
    shipStreet?: SortOrderInput | SortOrder
    shipCity?: SortOrderInput | SortOrder
    shipState?: SortOrderInput | SortOrder
    shipPostalCode?: SortOrderInput | SortOrder
    shipCountry?: SortOrderInput | SortOrder
    shipRemark?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: CustomerCountOrderByAggregateInput
    _avg?: CustomerAvgOrderByAggregateInput
    _max?: CustomerMaxOrderByAggregateInput
    _min?: CustomerMinOrderByAggregateInput
    _sum?: CustomerSumOrderByAggregateInput
  }

  export type CustomerScalarWhereWithAggregatesInput = {
    AND?: CustomerScalarWhereWithAggregatesInput | CustomerScalarWhereWithAggregatesInput[]
    OR?: CustomerScalarWhereWithAggregatesInput[]
    NOT?: CustomerScalarWhereWithAggregatesInput | CustomerScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Customer"> | number
    salutation?: StringWithAggregatesFilter<"Customer"> | string
    lastName?: StringWithAggregatesFilter<"Customer"> | string
    firstName?: StringWithAggregatesFilter<"Customer"> | string
    mobile?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    email?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    gender?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    billStreet?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    billCity?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    billState?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    billPostalCode?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    billCountry?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    billRemark?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    shipStreet?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    shipCity?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    shipState?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    shipPostalCode?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    shipCountry?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    shipRemark?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    deleted?: BoolWithAggregatesFilter<"Customer"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Customer"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Customer"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Customer"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Customer"> | number | null
  }

  export type CompanyWhereInput = {
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    id?: IntFilter<"Company"> | number
    companyName?: StringFilter<"Company"> | string
    street?: StringFilter<"Company"> | string
    city?: StringFilter<"Company"> | string
    state?: StringFilter<"Company"> | string
    postalCode?: StringFilter<"Company"> | string
    country?: StringFilter<"Company"> | string
    registrationNumber?: StringFilter<"Company"> | string
    website?: StringFilter<"Company"> | string
    referralId?: StringFilter<"Company"> | string
    deleted?: BoolFilter<"Company"> | boolean
    deletedAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    version?: IntNullableFilter<"Company"> | number | null
  }

  export type CompanyOrderByWithRelationInput = {
    id?: SortOrder
    companyName?: SortOrder
    street?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    registrationNumber?: SortOrder
    website?: SortOrder
    referralId?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _relevance?: CompanyOrderByRelevanceInput
  }

  export type CompanyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    registrationNumber?: string
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    companyName?: StringFilter<"Company"> | string
    street?: StringFilter<"Company"> | string
    city?: StringFilter<"Company"> | string
    state?: StringFilter<"Company"> | string
    postalCode?: StringFilter<"Company"> | string
    country?: StringFilter<"Company"> | string
    website?: StringFilter<"Company"> | string
    referralId?: StringFilter<"Company"> | string
    deleted?: BoolFilter<"Company"> | boolean
    deletedAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    version?: IntNullableFilter<"Company"> | number | null
  }, "id" | "registrationNumber">

  export type CompanyOrderByWithAggregationInput = {
    id?: SortOrder
    companyName?: SortOrder
    street?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    registrationNumber?: SortOrder
    website?: SortOrder
    referralId?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: CompanyCountOrderByAggregateInput
    _avg?: CompanyAvgOrderByAggregateInput
    _max?: CompanyMaxOrderByAggregateInput
    _min?: CompanyMinOrderByAggregateInput
    _sum?: CompanySumOrderByAggregateInput
  }

  export type CompanyScalarWhereWithAggregatesInput = {
    AND?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    OR?: CompanyScalarWhereWithAggregatesInput[]
    NOT?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Company"> | number
    companyName?: StringWithAggregatesFilter<"Company"> | string
    street?: StringWithAggregatesFilter<"Company"> | string
    city?: StringWithAggregatesFilter<"Company"> | string
    state?: StringWithAggregatesFilter<"Company"> | string
    postalCode?: StringWithAggregatesFilter<"Company"> | string
    country?: StringWithAggregatesFilter<"Company"> | string
    registrationNumber?: StringWithAggregatesFilter<"Company"> | string
    website?: StringWithAggregatesFilter<"Company"> | string
    referralId?: StringWithAggregatesFilter<"Company"> | string
    deleted?: BoolWithAggregatesFilter<"Company"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Company"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Company"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Company"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Company"> | number | null
  }

  export type OutletWhereInput = {
    AND?: OutletWhereInput | OutletWhereInput[]
    OR?: OutletWhereInput[]
    NOT?: OutletWhereInput | OutletWhereInput[]
    id?: IntFilter<"Outlet"> | number
    tenantOutletId?: IntFilter<"Outlet"> | number
    outletName?: StringFilter<"Outlet"> | string
    street?: StringFilter<"Outlet"> | string
    city?: StringFilter<"Outlet"> | string
    state?: StringFilter<"Outlet"> | string
    postalCode?: StringFilter<"Outlet"> | string
    country?: StringFilter<"Outlet"> | string
    outletTel?: StringFilter<"Outlet"> | string
    outletEmail?: StringFilter<"Outlet"> | string
    deleted?: BoolFilter<"Outlet"> | boolean
    deletedAt?: DateTimeNullableFilter<"Outlet"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Outlet"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Outlet"> | Date | string | null
    version?: IntNullableFilter<"Outlet"> | number | null
    stockBalances?: StockBalanceListRelationFilter
    stockMovements?: StockMovementListRelationFilter
    stockSnapshots?: StockSnapshotListRelationFilter
    stockReceipts?: StockReceiptListRelationFilter
    settings?: SettingListRelationFilter
    tables?: TableListRelationFilter
    stations?: StationListRelationFilter
    reservations?: ReservationListRelationFilter
    waitlists?: WaitlistListRelationFilter
  }

  export type OutletOrderByWithRelationInput = {
    id?: SortOrder
    tenantOutletId?: SortOrder
    outletName?: SortOrder
    street?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    outletTel?: SortOrder
    outletEmail?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    stockBalances?: StockBalanceOrderByRelationAggregateInput
    stockMovements?: StockMovementOrderByRelationAggregateInput
    stockSnapshots?: StockSnapshotOrderByRelationAggregateInput
    stockReceipts?: StockReceiptOrderByRelationAggregateInput
    settings?: SettingOrderByRelationAggregateInput
    tables?: TableOrderByRelationAggregateInput
    stations?: StationOrderByRelationAggregateInput
    reservations?: ReservationOrderByRelationAggregateInput
    waitlists?: WaitlistOrderByRelationAggregateInput
    _relevance?: OutletOrderByRelevanceInput
  }

  export type OutletWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: OutletWhereInput | OutletWhereInput[]
    OR?: OutletWhereInput[]
    NOT?: OutletWhereInput | OutletWhereInput[]
    tenantOutletId?: IntFilter<"Outlet"> | number
    outletName?: StringFilter<"Outlet"> | string
    street?: StringFilter<"Outlet"> | string
    city?: StringFilter<"Outlet"> | string
    state?: StringFilter<"Outlet"> | string
    postalCode?: StringFilter<"Outlet"> | string
    country?: StringFilter<"Outlet"> | string
    outletTel?: StringFilter<"Outlet"> | string
    outletEmail?: StringFilter<"Outlet"> | string
    deleted?: BoolFilter<"Outlet"> | boolean
    deletedAt?: DateTimeNullableFilter<"Outlet"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Outlet"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Outlet"> | Date | string | null
    version?: IntNullableFilter<"Outlet"> | number | null
    stockBalances?: StockBalanceListRelationFilter
    stockMovements?: StockMovementListRelationFilter
    stockSnapshots?: StockSnapshotListRelationFilter
    stockReceipts?: StockReceiptListRelationFilter
    settings?: SettingListRelationFilter
    tables?: TableListRelationFilter
    stations?: StationListRelationFilter
    reservations?: ReservationListRelationFilter
    waitlists?: WaitlistListRelationFilter
  }, "id">

  export type OutletOrderByWithAggregationInput = {
    id?: SortOrder
    tenantOutletId?: SortOrder
    outletName?: SortOrder
    street?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    outletTel?: SortOrder
    outletEmail?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: OutletCountOrderByAggregateInput
    _avg?: OutletAvgOrderByAggregateInput
    _max?: OutletMaxOrderByAggregateInput
    _min?: OutletMinOrderByAggregateInput
    _sum?: OutletSumOrderByAggregateInput
  }

  export type OutletScalarWhereWithAggregatesInput = {
    AND?: OutletScalarWhereWithAggregatesInput | OutletScalarWhereWithAggregatesInput[]
    OR?: OutletScalarWhereWithAggregatesInput[]
    NOT?: OutletScalarWhereWithAggregatesInput | OutletScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Outlet"> | number
    tenantOutletId?: IntWithAggregatesFilter<"Outlet"> | number
    outletName?: StringWithAggregatesFilter<"Outlet"> | string
    street?: StringWithAggregatesFilter<"Outlet"> | string
    city?: StringWithAggregatesFilter<"Outlet"> | string
    state?: StringWithAggregatesFilter<"Outlet"> | string
    postalCode?: StringWithAggregatesFilter<"Outlet"> | string
    country?: StringWithAggregatesFilter<"Outlet"> | string
    outletTel?: StringWithAggregatesFilter<"Outlet"> | string
    outletEmail?: StringWithAggregatesFilter<"Outlet"> | string
    deleted?: BoolWithAggregatesFilter<"Outlet"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Outlet"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Outlet"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Outlet"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Outlet"> | number | null
  }

  export type ItemWhereInput = {
    AND?: ItemWhereInput | ItemWhereInput[]
    OR?: ItemWhereInput[]
    NOT?: ItemWhereInput | ItemWhereInput[]
    id?: IntFilter<"Item"> | number
    itemName?: StringFilter<"Item"> | string
    itemCode?: StringFilter<"Item"> | string
    itemType?: StringFilter<"Item"> | string
    itemModel?: StringFilter<"Item"> | string
    itemBrand?: StringFilter<"Item"> | string
    itemDescription?: StringNullableFilter<"Item"> | string | null
    categoryId?: IntFilter<"Item"> | number
    cost?: DecimalFilter<"Item"> | Decimal | DecimalJsLike | number | string
    price?: DecimalFilter<"Item"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Item"> | string
    isOpenPrice?: BoolNullableFilter<"Item"> | boolean | null
    unitOfMeasure?: StringFilter<"Item"> | string
    height?: FloatNullableFilter<"Item"> | number | null
    width?: FloatNullableFilter<"Item"> | number | null
    length?: FloatNullableFilter<"Item"> | number | null
    weight?: FloatNullableFilter<"Item"> | number | null
    alternateLookUp?: StringNullableFilter<"Item"> | string | null
    image?: StringNullableFilter<"Item"> | string | null
    hasTax?: BoolNullableFilter<"Item"> | boolean | null
    taxRate?: FloatNullableFilter<"Item"> | number | null
    supplierId?: IntFilter<"Item"> | number
    deleted?: BoolFilter<"Item"> | boolean
    deletedAt?: DateTimeNullableFilter<"Item"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Item"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Item"> | Date | string | null
    version?: IntNullableFilter<"Item"> | number | null
    category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
    supplier?: XOR<SupplierScalarRelationFilter, SupplierWhereInput>
    stockBalance?: StockBalanceListRelationFilter
    stockMovements?: StockMovementListRelationFilter
    stockSnapshots?: StockSnapshotListRelationFilter
    stockReceipts?: StockReceiptListRelationFilter
    recipes?: RecipeListRelationFilter
    purchaseOrderItems?: PurchaseOrderItemListRelationFilter
    deliveryOrderItems?: DeliveryOrderItemListRelationFilter
    invoiceItems?: InvoiceItemListRelationFilter
  }

  export type ItemOrderByWithRelationInput = {
    id?: SortOrder
    itemName?: SortOrder
    itemCode?: SortOrder
    itemType?: SortOrder
    itemModel?: SortOrder
    itemBrand?: SortOrder
    itemDescription?: SortOrderInput | SortOrder
    categoryId?: SortOrder
    cost?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    isOpenPrice?: SortOrderInput | SortOrder
    unitOfMeasure?: SortOrder
    height?: SortOrderInput | SortOrder
    width?: SortOrderInput | SortOrder
    length?: SortOrderInput | SortOrder
    weight?: SortOrderInput | SortOrder
    alternateLookUp?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    hasTax?: SortOrderInput | SortOrder
    taxRate?: SortOrderInput | SortOrder
    supplierId?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    category?: CategoryOrderByWithRelationInput
    supplier?: SupplierOrderByWithRelationInput
    stockBalance?: StockBalanceOrderByRelationAggregateInput
    stockMovements?: StockMovementOrderByRelationAggregateInput
    stockSnapshots?: StockSnapshotOrderByRelationAggregateInput
    stockReceipts?: StockReceiptOrderByRelationAggregateInput
    recipes?: RecipeOrderByRelationAggregateInput
    purchaseOrderItems?: PurchaseOrderItemOrderByRelationAggregateInput
    deliveryOrderItems?: DeliveryOrderItemOrderByRelationAggregateInput
    invoiceItems?: InvoiceItemOrderByRelationAggregateInput
    _relevance?: ItemOrderByRelevanceInput
  }

  export type ItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ItemWhereInput | ItemWhereInput[]
    OR?: ItemWhereInput[]
    NOT?: ItemWhereInput | ItemWhereInput[]
    itemName?: StringFilter<"Item"> | string
    itemCode?: StringFilter<"Item"> | string
    itemType?: StringFilter<"Item"> | string
    itemModel?: StringFilter<"Item"> | string
    itemBrand?: StringFilter<"Item"> | string
    itemDescription?: StringNullableFilter<"Item"> | string | null
    categoryId?: IntFilter<"Item"> | number
    cost?: DecimalFilter<"Item"> | Decimal | DecimalJsLike | number | string
    price?: DecimalFilter<"Item"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Item"> | string
    isOpenPrice?: BoolNullableFilter<"Item"> | boolean | null
    unitOfMeasure?: StringFilter<"Item"> | string
    height?: FloatNullableFilter<"Item"> | number | null
    width?: FloatNullableFilter<"Item"> | number | null
    length?: FloatNullableFilter<"Item"> | number | null
    weight?: FloatNullableFilter<"Item"> | number | null
    alternateLookUp?: StringNullableFilter<"Item"> | string | null
    image?: StringNullableFilter<"Item"> | string | null
    hasTax?: BoolNullableFilter<"Item"> | boolean | null
    taxRate?: FloatNullableFilter<"Item"> | number | null
    supplierId?: IntFilter<"Item"> | number
    deleted?: BoolFilter<"Item"> | boolean
    deletedAt?: DateTimeNullableFilter<"Item"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Item"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Item"> | Date | string | null
    version?: IntNullableFilter<"Item"> | number | null
    category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
    supplier?: XOR<SupplierScalarRelationFilter, SupplierWhereInput>
    stockBalance?: StockBalanceListRelationFilter
    stockMovements?: StockMovementListRelationFilter
    stockSnapshots?: StockSnapshotListRelationFilter
    stockReceipts?: StockReceiptListRelationFilter
    recipes?: RecipeListRelationFilter
    purchaseOrderItems?: PurchaseOrderItemListRelationFilter
    deliveryOrderItems?: DeliveryOrderItemListRelationFilter
    invoiceItems?: InvoiceItemListRelationFilter
  }, "id">

  export type ItemOrderByWithAggregationInput = {
    id?: SortOrder
    itemName?: SortOrder
    itemCode?: SortOrder
    itemType?: SortOrder
    itemModel?: SortOrder
    itemBrand?: SortOrder
    itemDescription?: SortOrderInput | SortOrder
    categoryId?: SortOrder
    cost?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    isOpenPrice?: SortOrderInput | SortOrder
    unitOfMeasure?: SortOrder
    height?: SortOrderInput | SortOrder
    width?: SortOrderInput | SortOrder
    length?: SortOrderInput | SortOrder
    weight?: SortOrderInput | SortOrder
    alternateLookUp?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    hasTax?: SortOrderInput | SortOrder
    taxRate?: SortOrderInput | SortOrder
    supplierId?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: ItemCountOrderByAggregateInput
    _avg?: ItemAvgOrderByAggregateInput
    _max?: ItemMaxOrderByAggregateInput
    _min?: ItemMinOrderByAggregateInput
    _sum?: ItemSumOrderByAggregateInput
  }

  export type ItemScalarWhereWithAggregatesInput = {
    AND?: ItemScalarWhereWithAggregatesInput | ItemScalarWhereWithAggregatesInput[]
    OR?: ItemScalarWhereWithAggregatesInput[]
    NOT?: ItemScalarWhereWithAggregatesInput | ItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Item"> | number
    itemName?: StringWithAggregatesFilter<"Item"> | string
    itemCode?: StringWithAggregatesFilter<"Item"> | string
    itemType?: StringWithAggregatesFilter<"Item"> | string
    itemModel?: StringWithAggregatesFilter<"Item"> | string
    itemBrand?: StringWithAggregatesFilter<"Item"> | string
    itemDescription?: StringNullableWithAggregatesFilter<"Item"> | string | null
    categoryId?: IntWithAggregatesFilter<"Item"> | number
    cost?: DecimalWithAggregatesFilter<"Item"> | Decimal | DecimalJsLike | number | string
    price?: DecimalWithAggregatesFilter<"Item"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"Item"> | string
    isOpenPrice?: BoolNullableWithAggregatesFilter<"Item"> | boolean | null
    unitOfMeasure?: StringWithAggregatesFilter<"Item"> | string
    height?: FloatNullableWithAggregatesFilter<"Item"> | number | null
    width?: FloatNullableWithAggregatesFilter<"Item"> | number | null
    length?: FloatNullableWithAggregatesFilter<"Item"> | number | null
    weight?: FloatNullableWithAggregatesFilter<"Item"> | number | null
    alternateLookUp?: StringNullableWithAggregatesFilter<"Item"> | string | null
    image?: StringNullableWithAggregatesFilter<"Item"> | string | null
    hasTax?: BoolNullableWithAggregatesFilter<"Item"> | boolean | null
    taxRate?: FloatNullableWithAggregatesFilter<"Item"> | number | null
    supplierId?: IntWithAggregatesFilter<"Item"> | number
    deleted?: BoolWithAggregatesFilter<"Item"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Item"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Item"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Item"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Item"> | number | null
  }

  export type CategoryWhereInput = {
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    id?: IntFilter<"Category"> | number
    name?: StringFilter<"Category"> | string
    description?: StringNullableFilter<"Category"> | string | null
    parentId?: IntNullableFilter<"Category"> | number | null
    image?: StringNullableFilter<"Category"> | string | null
    deleted?: BoolFilter<"Category"> | boolean
    deletedAt?: DateTimeNullableFilter<"Category"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Category"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Category"> | Date | string | null
    version?: IntNullableFilter<"Category"> | number | null
    items?: ItemListRelationFilter
  }

  export type CategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    parentId?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    items?: ItemOrderByRelationAggregateInput
    _relevance?: CategoryOrderByRelevanceInput
  }

  export type CategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    description?: StringNullableFilter<"Category"> | string | null
    parentId?: IntNullableFilter<"Category"> | number | null
    image?: StringNullableFilter<"Category"> | string | null
    deleted?: BoolFilter<"Category"> | boolean
    deletedAt?: DateTimeNullableFilter<"Category"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Category"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Category"> | Date | string | null
    version?: IntNullableFilter<"Category"> | number | null
    items?: ItemListRelationFilter
  }, "id" | "name">

  export type CategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    parentId?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: CategoryCountOrderByAggregateInput
    _avg?: CategoryAvgOrderByAggregateInput
    _max?: CategoryMaxOrderByAggregateInput
    _min?: CategoryMinOrderByAggregateInput
    _sum?: CategorySumOrderByAggregateInput
  }

  export type CategoryScalarWhereWithAggregatesInput = {
    AND?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    OR?: CategoryScalarWhereWithAggregatesInput[]
    NOT?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Category"> | number
    name?: StringWithAggregatesFilter<"Category"> | string
    description?: StringNullableWithAggregatesFilter<"Category"> | string | null
    parentId?: IntNullableWithAggregatesFilter<"Category"> | number | null
    image?: StringNullableWithAggregatesFilter<"Category"> | string | null
    deleted?: BoolWithAggregatesFilter<"Category"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Category"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Category"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Category"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Category"> | number | null
  }

  export type SalesWhereInput = {
    AND?: SalesWhereInput | SalesWhereInput[]
    OR?: SalesWhereInput[]
    NOT?: SalesWhereInput | SalesWhereInput[]
    id?: IntFilter<"Sales"> | number
    outletId?: IntFilter<"Sales"> | number
    businessDate?: DateTimeFilter<"Sales"> | Date | string
    salesType?: StringFilter<"Sales"> | string
    customerName?: StringNullableFilter<"Sales"> | string | null
    customerId?: IntNullableFilter<"Sales"> | number | null
    phoneNumber?: StringNullableFilter<"Sales"> | string | null
    billStreet?: StringFilter<"Sales"> | string
    billCity?: StringFilter<"Sales"> | string
    billState?: StringFilter<"Sales"> | string
    billPostalCode?: StringFilter<"Sales"> | string
    billCountry?: StringFilter<"Sales"> | string
    shipStreet?: StringFilter<"Sales"> | string
    shipCity?: StringFilter<"Sales"> | string
    shipState?: StringFilter<"Sales"> | string
    shipPostalCode?: StringFilter<"Sales"> | string
    shipCountry?: StringFilter<"Sales"> | string
    totalItemDiscountAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    status?: StringFilter<"Sales"> | string
    remark?: StringFilter<"Sales"> | string
    completedSessionId?: IntNullableFilter<"Sales"> | number | null
    sessionId?: IntFilter<"Sales"> | number
    eodId?: IntFilter<"Sales"> | number
    salesQuotationId?: IntFilter<"Sales"> | number
    performedBy?: StringNullableFilter<"Sales"> | string | null
    deleted?: BoolFilter<"Sales"> | boolean
    deletedAt?: DateTimeNullableFilter<"Sales"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Sales"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Sales"> | Date | string | null
    version?: IntNullableFilter<"Sales"> | number | null
    tableId?: IntNullableFilter<"Sales"> | number | null
    orderStatus?: StringNullableFilter<"Sales"> | string | null
    salesItems?: SalesItemListRelationFilter
    payments?: PaymentListRelationFilter
    registerLogs?: RegisterLogListRelationFilter
    customer?: XOR<CustomerNullableScalarRelationFilter, CustomerWhereInput> | null
    table?: XOR<TableNullableScalarRelationFilter, TableWhereInput> | null
  }

  export type SalesOrderByWithRelationInput = {
    id?: SortOrder
    outletId?: SortOrder
    businessDate?: SortOrder
    salesType?: SortOrder
    customerName?: SortOrderInput | SortOrder
    customerId?: SortOrderInput | SortOrder
    phoneNumber?: SortOrderInput | SortOrder
    billStreet?: SortOrder
    billCity?: SortOrder
    billState?: SortOrder
    billPostalCode?: SortOrder
    billCountry?: SortOrder
    shipStreet?: SortOrder
    shipCity?: SortOrder
    shipState?: SortOrder
    shipPostalCode?: SortOrder
    shipCountry?: SortOrder
    totalItemDiscountAmount?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    profitAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    paidAmount?: SortOrder
    changeAmount?: SortOrder
    status?: SortOrder
    remark?: SortOrder
    completedSessionId?: SortOrderInput | SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    salesQuotationId?: SortOrder
    performedBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    tableId?: SortOrderInput | SortOrder
    orderStatus?: SortOrderInput | SortOrder
    salesItems?: SalesItemOrderByRelationAggregateInput
    payments?: PaymentOrderByRelationAggregateInput
    registerLogs?: RegisterLogOrderByRelationAggregateInput
    customer?: CustomerOrderByWithRelationInput
    table?: TableOrderByWithRelationInput
    _relevance?: SalesOrderByRelevanceInput
  }

  export type SalesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SalesWhereInput | SalesWhereInput[]
    OR?: SalesWhereInput[]
    NOT?: SalesWhereInput | SalesWhereInput[]
    outletId?: IntFilter<"Sales"> | number
    businessDate?: DateTimeFilter<"Sales"> | Date | string
    salesType?: StringFilter<"Sales"> | string
    customerName?: StringNullableFilter<"Sales"> | string | null
    customerId?: IntNullableFilter<"Sales"> | number | null
    phoneNumber?: StringNullableFilter<"Sales"> | string | null
    billStreet?: StringFilter<"Sales"> | string
    billCity?: StringFilter<"Sales"> | string
    billState?: StringFilter<"Sales"> | string
    billPostalCode?: StringFilter<"Sales"> | string
    billCountry?: StringFilter<"Sales"> | string
    shipStreet?: StringFilter<"Sales"> | string
    shipCity?: StringFilter<"Sales"> | string
    shipState?: StringFilter<"Sales"> | string
    shipPostalCode?: StringFilter<"Sales"> | string
    shipCountry?: StringFilter<"Sales"> | string
    totalItemDiscountAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    status?: StringFilter<"Sales"> | string
    remark?: StringFilter<"Sales"> | string
    completedSessionId?: IntNullableFilter<"Sales"> | number | null
    sessionId?: IntFilter<"Sales"> | number
    eodId?: IntFilter<"Sales"> | number
    salesQuotationId?: IntFilter<"Sales"> | number
    performedBy?: StringNullableFilter<"Sales"> | string | null
    deleted?: BoolFilter<"Sales"> | boolean
    deletedAt?: DateTimeNullableFilter<"Sales"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Sales"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Sales"> | Date | string | null
    version?: IntNullableFilter<"Sales"> | number | null
    tableId?: IntNullableFilter<"Sales"> | number | null
    orderStatus?: StringNullableFilter<"Sales"> | string | null
    salesItems?: SalesItemListRelationFilter
    payments?: PaymentListRelationFilter
    registerLogs?: RegisterLogListRelationFilter
    customer?: XOR<CustomerNullableScalarRelationFilter, CustomerWhereInput> | null
    table?: XOR<TableNullableScalarRelationFilter, TableWhereInput> | null
  }, "id">

  export type SalesOrderByWithAggregationInput = {
    id?: SortOrder
    outletId?: SortOrder
    businessDate?: SortOrder
    salesType?: SortOrder
    customerName?: SortOrderInput | SortOrder
    customerId?: SortOrderInput | SortOrder
    phoneNumber?: SortOrderInput | SortOrder
    billStreet?: SortOrder
    billCity?: SortOrder
    billState?: SortOrder
    billPostalCode?: SortOrder
    billCountry?: SortOrder
    shipStreet?: SortOrder
    shipCity?: SortOrder
    shipState?: SortOrder
    shipPostalCode?: SortOrder
    shipCountry?: SortOrder
    totalItemDiscountAmount?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    profitAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    paidAmount?: SortOrder
    changeAmount?: SortOrder
    status?: SortOrder
    remark?: SortOrder
    completedSessionId?: SortOrderInput | SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    salesQuotationId?: SortOrder
    performedBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    tableId?: SortOrderInput | SortOrder
    orderStatus?: SortOrderInput | SortOrder
    _count?: SalesCountOrderByAggregateInput
    _avg?: SalesAvgOrderByAggregateInput
    _max?: SalesMaxOrderByAggregateInput
    _min?: SalesMinOrderByAggregateInput
    _sum?: SalesSumOrderByAggregateInput
  }

  export type SalesScalarWhereWithAggregatesInput = {
    AND?: SalesScalarWhereWithAggregatesInput | SalesScalarWhereWithAggregatesInput[]
    OR?: SalesScalarWhereWithAggregatesInput[]
    NOT?: SalesScalarWhereWithAggregatesInput | SalesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Sales"> | number
    outletId?: IntWithAggregatesFilter<"Sales"> | number
    businessDate?: DateTimeWithAggregatesFilter<"Sales"> | Date | string
    salesType?: StringWithAggregatesFilter<"Sales"> | string
    customerName?: StringNullableWithAggregatesFilter<"Sales"> | string | null
    customerId?: IntNullableWithAggregatesFilter<"Sales"> | number | null
    phoneNumber?: StringNullableWithAggregatesFilter<"Sales"> | string | null
    billStreet?: StringWithAggregatesFilter<"Sales"> | string
    billCity?: StringWithAggregatesFilter<"Sales"> | string
    billState?: StringWithAggregatesFilter<"Sales"> | string
    billPostalCode?: StringWithAggregatesFilter<"Sales"> | string
    billCountry?: StringWithAggregatesFilter<"Sales"> | string
    shipStreet?: StringWithAggregatesFilter<"Sales"> | string
    shipCity?: StringWithAggregatesFilter<"Sales"> | string
    shipState?: StringWithAggregatesFilter<"Sales"> | string
    shipPostalCode?: StringWithAggregatesFilter<"Sales"> | string
    shipCountry?: StringWithAggregatesFilter<"Sales"> | string
    totalItemDiscountAmount?: DecimalWithAggregatesFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalWithAggregatesFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalWithAggregatesFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalWithAggregatesFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalWithAggregatesFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalWithAggregatesFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalWithAggregatesFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalWithAggregatesFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalWithAggregatesFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalWithAggregatesFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalWithAggregatesFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    status?: StringWithAggregatesFilter<"Sales"> | string
    remark?: StringWithAggregatesFilter<"Sales"> | string
    completedSessionId?: IntNullableWithAggregatesFilter<"Sales"> | number | null
    sessionId?: IntWithAggregatesFilter<"Sales"> | number
    eodId?: IntWithAggregatesFilter<"Sales"> | number
    salesQuotationId?: IntWithAggregatesFilter<"Sales"> | number
    performedBy?: StringNullableWithAggregatesFilter<"Sales"> | string | null
    deleted?: BoolWithAggregatesFilter<"Sales"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Sales"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Sales"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Sales"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Sales"> | number | null
    tableId?: IntNullableWithAggregatesFilter<"Sales"> | number | null
    orderStatus?: StringNullableWithAggregatesFilter<"Sales"> | string | null
  }

  export type SalesItemWhereInput = {
    AND?: SalesItemWhereInput | SalesItemWhereInput[]
    OR?: SalesItemWhereInput[]
    NOT?: SalesItemWhereInput | SalesItemWhereInput[]
    id?: IntFilter<"SalesItem"> | number
    salesId?: IntFilter<"SalesItem"> | number
    itemId?: IntFilter<"SalesItem"> | number
    itemName?: StringFilter<"SalesItem"> | string
    itemCode?: StringFilter<"SalesItem"> | string
    itemBrand?: StringFilter<"SalesItem"> | string
    itemModel?: StringFilter<"SalesItem"> | string
    quantity?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    cost?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    price?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    priceBeforeTax?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    profit?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    remark?: StringFilter<"SalesItem"> | string
    deleted?: BoolFilter<"SalesItem"> | boolean
    createdAt?: DateTimeNullableFilter<"SalesItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"SalesItem"> | Date | string | null
    version?: IntNullableFilter<"SalesItem"> | number | null
    specialInstructions?: StringNullableFilter<"SalesItem"> | string | null
    itemStatus?: StringNullableFilter<"SalesItem"> | string | null
    priority?: StringNullableFilter<"SalesItem"> | string | null
    estimatedPrepTime?: IntNullableFilter<"SalesItem"> | number | null
    sales?: XOR<SalesScalarRelationFilter, SalesWhereInput>
    selectedModifiers?: SalesItemModifierListRelationFilter
    orderRouting?: OrderRoutingListRelationFilter
  }

  export type SalesItemOrderByWithRelationInput = {
    id?: SortOrder
    salesId?: SortOrder
    itemId?: SortOrder
    itemName?: SortOrder
    itemCode?: SortOrder
    itemBrand?: SortOrder
    itemModel?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    price?: SortOrder
    priceBeforeTax?: SortOrder
    profit?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    subtotalAmount?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    specialInstructions?: SortOrderInput | SortOrder
    itemStatus?: SortOrderInput | SortOrder
    priority?: SortOrderInput | SortOrder
    estimatedPrepTime?: SortOrderInput | SortOrder
    sales?: SalesOrderByWithRelationInput
    selectedModifiers?: SalesItemModifierOrderByRelationAggregateInput
    orderRouting?: OrderRoutingOrderByRelationAggregateInput
    _relevance?: SalesItemOrderByRelevanceInput
  }

  export type SalesItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SalesItemWhereInput | SalesItemWhereInput[]
    OR?: SalesItemWhereInput[]
    NOT?: SalesItemWhereInput | SalesItemWhereInput[]
    salesId?: IntFilter<"SalesItem"> | number
    itemId?: IntFilter<"SalesItem"> | number
    itemName?: StringFilter<"SalesItem"> | string
    itemCode?: StringFilter<"SalesItem"> | string
    itemBrand?: StringFilter<"SalesItem"> | string
    itemModel?: StringFilter<"SalesItem"> | string
    quantity?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    cost?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    price?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    priceBeforeTax?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    profit?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    remark?: StringFilter<"SalesItem"> | string
    deleted?: BoolFilter<"SalesItem"> | boolean
    createdAt?: DateTimeNullableFilter<"SalesItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"SalesItem"> | Date | string | null
    version?: IntNullableFilter<"SalesItem"> | number | null
    specialInstructions?: StringNullableFilter<"SalesItem"> | string | null
    itemStatus?: StringNullableFilter<"SalesItem"> | string | null
    priority?: StringNullableFilter<"SalesItem"> | string | null
    estimatedPrepTime?: IntNullableFilter<"SalesItem"> | number | null
    sales?: XOR<SalesScalarRelationFilter, SalesWhereInput>
    selectedModifiers?: SalesItemModifierListRelationFilter
    orderRouting?: OrderRoutingListRelationFilter
  }, "id">

  export type SalesItemOrderByWithAggregationInput = {
    id?: SortOrder
    salesId?: SortOrder
    itemId?: SortOrder
    itemName?: SortOrder
    itemCode?: SortOrder
    itemBrand?: SortOrder
    itemModel?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    price?: SortOrder
    priceBeforeTax?: SortOrder
    profit?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    subtotalAmount?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    specialInstructions?: SortOrderInput | SortOrder
    itemStatus?: SortOrderInput | SortOrder
    priority?: SortOrderInput | SortOrder
    estimatedPrepTime?: SortOrderInput | SortOrder
    _count?: SalesItemCountOrderByAggregateInput
    _avg?: SalesItemAvgOrderByAggregateInput
    _max?: SalesItemMaxOrderByAggregateInput
    _min?: SalesItemMinOrderByAggregateInput
    _sum?: SalesItemSumOrderByAggregateInput
  }

  export type SalesItemScalarWhereWithAggregatesInput = {
    AND?: SalesItemScalarWhereWithAggregatesInput | SalesItemScalarWhereWithAggregatesInput[]
    OR?: SalesItemScalarWhereWithAggregatesInput[]
    NOT?: SalesItemScalarWhereWithAggregatesInput | SalesItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SalesItem"> | number
    salesId?: IntWithAggregatesFilter<"SalesItem"> | number
    itemId?: IntWithAggregatesFilter<"SalesItem"> | number
    itemName?: StringWithAggregatesFilter<"SalesItem"> | string
    itemCode?: StringWithAggregatesFilter<"SalesItem"> | string
    itemBrand?: StringWithAggregatesFilter<"SalesItem"> | string
    itemModel?: StringWithAggregatesFilter<"SalesItem"> | string
    quantity?: DecimalWithAggregatesFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    cost?: DecimalWithAggregatesFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    price?: DecimalWithAggregatesFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    priceBeforeTax?: DecimalWithAggregatesFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    profit?: DecimalWithAggregatesFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalWithAggregatesFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalWithAggregatesFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalWithAggregatesFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalWithAggregatesFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalWithAggregatesFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    remark?: StringWithAggregatesFilter<"SalesItem"> | string
    deleted?: BoolWithAggregatesFilter<"SalesItem"> | boolean
    createdAt?: DateTimeNullableWithAggregatesFilter<"SalesItem"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"SalesItem"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"SalesItem"> | number | null
    specialInstructions?: StringNullableWithAggregatesFilter<"SalesItem"> | string | null
    itemStatus?: StringNullableWithAggregatesFilter<"SalesItem"> | string | null
    priority?: StringNullableWithAggregatesFilter<"SalesItem"> | string | null
    estimatedPrepTime?: IntNullableWithAggregatesFilter<"SalesItem"> | number | null
  }

  export type SalesItemModifierWhereInput = {
    AND?: SalesItemModifierWhereInput | SalesItemModifierWhereInput[]
    OR?: SalesItemModifierWhereInput[]
    NOT?: SalesItemModifierWhereInput | SalesItemModifierWhereInput[]
    id?: IntFilter<"SalesItemModifier"> | number
    salesItemId?: IntFilter<"SalesItemModifier"> | number
    menuItemModifierId?: IntFilter<"SalesItemModifier"> | number
    itemId?: IntNullableFilter<"SalesItemModifier"> | number | null
    modifierName?: StringFilter<"SalesItemModifier"> | string
    modifierPrice?: DecimalFilter<"SalesItemModifier"> | Decimal | DecimalJsLike | number | string
    quantity?: IntFilter<"SalesItemModifier"> | number
    status?: EnumOrderStatusNullableFilter<"SalesItemModifier"> | $Enums.OrderStatus | null
    deleted?: BoolFilter<"SalesItemModifier"> | boolean
    deletedAt?: DateTimeNullableFilter<"SalesItemModifier"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"SalesItemModifier"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"SalesItemModifier"> | Date | string | null
    version?: IntNullableFilter<"SalesItemModifier"> | number | null
    menuItemModifier?: XOR<MenuItemModifierScalarRelationFilter, MenuItemModifierWhereInput>
    salesItem?: XOR<SalesItemScalarRelationFilter, SalesItemWhereInput>
  }

  export type SalesItemModifierOrderByWithRelationInput = {
    id?: SortOrder
    salesItemId?: SortOrder
    menuItemModifierId?: SortOrder
    itemId?: SortOrderInput | SortOrder
    modifierName?: SortOrder
    modifierPrice?: SortOrder
    quantity?: SortOrder
    status?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    menuItemModifier?: MenuItemModifierOrderByWithRelationInput
    salesItem?: SalesItemOrderByWithRelationInput
    _relevance?: SalesItemModifierOrderByRelevanceInput
  }

  export type SalesItemModifierWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SalesItemModifierWhereInput | SalesItemModifierWhereInput[]
    OR?: SalesItemModifierWhereInput[]
    NOT?: SalesItemModifierWhereInput | SalesItemModifierWhereInput[]
    salesItemId?: IntFilter<"SalesItemModifier"> | number
    menuItemModifierId?: IntFilter<"SalesItemModifier"> | number
    itemId?: IntNullableFilter<"SalesItemModifier"> | number | null
    modifierName?: StringFilter<"SalesItemModifier"> | string
    modifierPrice?: DecimalFilter<"SalesItemModifier"> | Decimal | DecimalJsLike | number | string
    quantity?: IntFilter<"SalesItemModifier"> | number
    status?: EnumOrderStatusNullableFilter<"SalesItemModifier"> | $Enums.OrderStatus | null
    deleted?: BoolFilter<"SalesItemModifier"> | boolean
    deletedAt?: DateTimeNullableFilter<"SalesItemModifier"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"SalesItemModifier"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"SalesItemModifier"> | Date | string | null
    version?: IntNullableFilter<"SalesItemModifier"> | number | null
    menuItemModifier?: XOR<MenuItemModifierScalarRelationFilter, MenuItemModifierWhereInput>
    salesItem?: XOR<SalesItemScalarRelationFilter, SalesItemWhereInput>
  }, "id">

  export type SalesItemModifierOrderByWithAggregationInput = {
    id?: SortOrder
    salesItemId?: SortOrder
    menuItemModifierId?: SortOrder
    itemId?: SortOrderInput | SortOrder
    modifierName?: SortOrder
    modifierPrice?: SortOrder
    quantity?: SortOrder
    status?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: SalesItemModifierCountOrderByAggregateInput
    _avg?: SalesItemModifierAvgOrderByAggregateInput
    _max?: SalesItemModifierMaxOrderByAggregateInput
    _min?: SalesItemModifierMinOrderByAggregateInput
    _sum?: SalesItemModifierSumOrderByAggregateInput
  }

  export type SalesItemModifierScalarWhereWithAggregatesInput = {
    AND?: SalesItemModifierScalarWhereWithAggregatesInput | SalesItemModifierScalarWhereWithAggregatesInput[]
    OR?: SalesItemModifierScalarWhereWithAggregatesInput[]
    NOT?: SalesItemModifierScalarWhereWithAggregatesInput | SalesItemModifierScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SalesItemModifier"> | number
    salesItemId?: IntWithAggregatesFilter<"SalesItemModifier"> | number
    menuItemModifierId?: IntWithAggregatesFilter<"SalesItemModifier"> | number
    itemId?: IntNullableWithAggregatesFilter<"SalesItemModifier"> | number | null
    modifierName?: StringWithAggregatesFilter<"SalesItemModifier"> | string
    modifierPrice?: DecimalWithAggregatesFilter<"SalesItemModifier"> | Decimal | DecimalJsLike | number | string
    quantity?: IntWithAggregatesFilter<"SalesItemModifier"> | number
    status?: EnumOrderStatusNullableWithAggregatesFilter<"SalesItemModifier"> | $Enums.OrderStatus | null
    deleted?: BoolWithAggregatesFilter<"SalesItemModifier"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"SalesItemModifier"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"SalesItemModifier"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"SalesItemModifier"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"SalesItemModifier"> | number | null
  }

  export type SalesQuotationWhereInput = {
    AND?: SalesQuotationWhereInput | SalesQuotationWhereInput[]
    OR?: SalesQuotationWhereInput[]
    NOT?: SalesQuotationWhereInput | SalesQuotationWhereInput[]
    id?: IntFilter<"SalesQuotation"> | number
    outletId?: IntFilter<"SalesQuotation"> | number
    customerId?: IntNullableFilter<"SalesQuotation"> | number | null
    customerStreet?: StringNullableFilter<"SalesQuotation"> | string | null
    customerCity?: StringNullableFilter<"SalesQuotation"> | string | null
    customerState?: StringNullableFilter<"SalesQuotation"> | string | null
    customerPostalCode?: StringNullableFilter<"SalesQuotation"> | string | null
    customerCountry?: StringNullableFilter<"SalesQuotation"> | string | null
    discountPercentage?: DecimalFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    status?: StringFilter<"SalesQuotation"> | string
    remark?: StringNullableFilter<"SalesQuotation"> | string | null
    performedBy?: StringNullableFilter<"SalesQuotation"> | string | null
    deleted?: BoolFilter<"SalesQuotation"> | boolean
    deletedAt?: DateTimeNullableFilter<"SalesQuotation"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"SalesQuotation"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"SalesQuotation"> | Date | string | null
    version?: IntNullableFilter<"SalesQuotation"> | number | null
    salesQuotationItems?: SalesQuotationItemListRelationFilter
  }

  export type SalesQuotationOrderByWithRelationInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrderInput | SortOrder
    customerStreet?: SortOrderInput | SortOrder
    customerCity?: SortOrderInput | SortOrder
    customerState?: SortOrderInput | SortOrder
    customerPostalCode?: SortOrderInput | SortOrder
    customerCountry?: SortOrderInput | SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    remark?: SortOrderInput | SortOrder
    performedBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    salesQuotationItems?: SalesQuotationItemOrderByRelationAggregateInput
    _relevance?: SalesQuotationOrderByRelevanceInput
  }

  export type SalesQuotationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SalesQuotationWhereInput | SalesQuotationWhereInput[]
    OR?: SalesQuotationWhereInput[]
    NOT?: SalesQuotationWhereInput | SalesQuotationWhereInput[]
    outletId?: IntFilter<"SalesQuotation"> | number
    customerId?: IntNullableFilter<"SalesQuotation"> | number | null
    customerStreet?: StringNullableFilter<"SalesQuotation"> | string | null
    customerCity?: StringNullableFilter<"SalesQuotation"> | string | null
    customerState?: StringNullableFilter<"SalesQuotation"> | string | null
    customerPostalCode?: StringNullableFilter<"SalesQuotation"> | string | null
    customerCountry?: StringNullableFilter<"SalesQuotation"> | string | null
    discountPercentage?: DecimalFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    status?: StringFilter<"SalesQuotation"> | string
    remark?: StringNullableFilter<"SalesQuotation"> | string | null
    performedBy?: StringNullableFilter<"SalesQuotation"> | string | null
    deleted?: BoolFilter<"SalesQuotation"> | boolean
    deletedAt?: DateTimeNullableFilter<"SalesQuotation"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"SalesQuotation"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"SalesQuotation"> | Date | string | null
    version?: IntNullableFilter<"SalesQuotation"> | number | null
    salesQuotationItems?: SalesQuotationItemListRelationFilter
  }, "id">

  export type SalesQuotationOrderByWithAggregationInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrderInput | SortOrder
    customerStreet?: SortOrderInput | SortOrder
    customerCity?: SortOrderInput | SortOrder
    customerState?: SortOrderInput | SortOrder
    customerPostalCode?: SortOrderInput | SortOrder
    customerCountry?: SortOrderInput | SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    remark?: SortOrderInput | SortOrder
    performedBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: SalesQuotationCountOrderByAggregateInput
    _avg?: SalesQuotationAvgOrderByAggregateInput
    _max?: SalesQuotationMaxOrderByAggregateInput
    _min?: SalesQuotationMinOrderByAggregateInput
    _sum?: SalesQuotationSumOrderByAggregateInput
  }

  export type SalesQuotationScalarWhereWithAggregatesInput = {
    AND?: SalesQuotationScalarWhereWithAggregatesInput | SalesQuotationScalarWhereWithAggregatesInput[]
    OR?: SalesQuotationScalarWhereWithAggregatesInput[]
    NOT?: SalesQuotationScalarWhereWithAggregatesInput | SalesQuotationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SalesQuotation"> | number
    outletId?: IntWithAggregatesFilter<"SalesQuotation"> | number
    customerId?: IntNullableWithAggregatesFilter<"SalesQuotation"> | number | null
    customerStreet?: StringNullableWithAggregatesFilter<"SalesQuotation"> | string | null
    customerCity?: StringNullableWithAggregatesFilter<"SalesQuotation"> | string | null
    customerState?: StringNullableWithAggregatesFilter<"SalesQuotation"> | string | null
    customerPostalCode?: StringNullableWithAggregatesFilter<"SalesQuotation"> | string | null
    customerCountry?: StringNullableWithAggregatesFilter<"SalesQuotation"> | string | null
    discountPercentage?: DecimalWithAggregatesFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalWithAggregatesFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalWithAggregatesFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalWithAggregatesFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalWithAggregatesFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalWithAggregatesFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalWithAggregatesFilter<"SalesQuotation"> | Decimal | DecimalJsLike | number | string
    status?: StringWithAggregatesFilter<"SalesQuotation"> | string
    remark?: StringNullableWithAggregatesFilter<"SalesQuotation"> | string | null
    performedBy?: StringNullableWithAggregatesFilter<"SalesQuotation"> | string | null
    deleted?: BoolWithAggregatesFilter<"SalesQuotation"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"SalesQuotation"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"SalesQuotation"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"SalesQuotation"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"SalesQuotation"> | number | null
  }

  export type SalesQuotationItemWhereInput = {
    AND?: SalesQuotationItemWhereInput | SalesQuotationItemWhereInput[]
    OR?: SalesQuotationItemWhereInput[]
    NOT?: SalesQuotationItemWhereInput | SalesQuotationItemWhereInput[]
    id?: IntFilter<"SalesQuotationItem"> | number
    salesQuotationId?: IntFilter<"SalesQuotationItem"> | number
    itemId?: IntFilter<"SalesQuotationItem"> | number
    quantity?: DecimalFilter<"SalesQuotationItem"> | Decimal | DecimalJsLike | number | string
    remark?: StringNullableFilter<"SalesQuotationItem"> | string | null
    deleted?: BoolFilter<"SalesQuotationItem"> | boolean
    createdAt?: DateTimeNullableFilter<"SalesQuotationItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"SalesQuotationItem"> | Date | string | null
    version?: IntNullableFilter<"SalesQuotationItem"> | number | null
    salesQuotation?: XOR<SalesQuotationScalarRelationFilter, SalesQuotationWhereInput>
  }

  export type SalesQuotationItemOrderByWithRelationInput = {
    id?: SortOrder
    salesQuotationId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    remark?: SortOrderInput | SortOrder
    deleted?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    salesQuotation?: SalesQuotationOrderByWithRelationInput
    _relevance?: SalesQuotationItemOrderByRelevanceInput
  }

  export type SalesQuotationItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SalesQuotationItemWhereInput | SalesQuotationItemWhereInput[]
    OR?: SalesQuotationItemWhereInput[]
    NOT?: SalesQuotationItemWhereInput | SalesQuotationItemWhereInput[]
    salesQuotationId?: IntFilter<"SalesQuotationItem"> | number
    itemId?: IntFilter<"SalesQuotationItem"> | number
    quantity?: DecimalFilter<"SalesQuotationItem"> | Decimal | DecimalJsLike | number | string
    remark?: StringNullableFilter<"SalesQuotationItem"> | string | null
    deleted?: BoolFilter<"SalesQuotationItem"> | boolean
    createdAt?: DateTimeNullableFilter<"SalesQuotationItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"SalesQuotationItem"> | Date | string | null
    version?: IntNullableFilter<"SalesQuotationItem"> | number | null
    salesQuotation?: XOR<SalesQuotationScalarRelationFilter, SalesQuotationWhereInput>
  }, "id">

  export type SalesQuotationItemOrderByWithAggregationInput = {
    id?: SortOrder
    salesQuotationId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    remark?: SortOrderInput | SortOrder
    deleted?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: SalesQuotationItemCountOrderByAggregateInput
    _avg?: SalesQuotationItemAvgOrderByAggregateInput
    _max?: SalesQuotationItemMaxOrderByAggregateInput
    _min?: SalesQuotationItemMinOrderByAggregateInput
    _sum?: SalesQuotationItemSumOrderByAggregateInput
  }

  export type SalesQuotationItemScalarWhereWithAggregatesInput = {
    AND?: SalesQuotationItemScalarWhereWithAggregatesInput | SalesQuotationItemScalarWhereWithAggregatesInput[]
    OR?: SalesQuotationItemScalarWhereWithAggregatesInput[]
    NOT?: SalesQuotationItemScalarWhereWithAggregatesInput | SalesQuotationItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SalesQuotationItem"> | number
    salesQuotationId?: IntWithAggregatesFilter<"SalesQuotationItem"> | number
    itemId?: IntWithAggregatesFilter<"SalesQuotationItem"> | number
    quantity?: DecimalWithAggregatesFilter<"SalesQuotationItem"> | Decimal | DecimalJsLike | number | string
    remark?: StringNullableWithAggregatesFilter<"SalesQuotationItem"> | string | null
    deleted?: BoolWithAggregatesFilter<"SalesQuotationItem"> | boolean
    createdAt?: DateTimeNullableWithAggregatesFilter<"SalesQuotationItem"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"SalesQuotationItem"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"SalesQuotationItem"> | number | null
  }

  export type InvoiceWhereInput = {
    AND?: InvoiceWhereInput | InvoiceWhereInput[]
    OR?: InvoiceWhereInput[]
    NOT?: InvoiceWhereInput | InvoiceWhereInput[]
    id?: IntFilter<"Invoice"> | number
    invoiceNumber?: StringFilter<"Invoice"> | string
    taxInvoiceNumber?: StringFilter<"Invoice"> | string
    purchaseOrderId?: IntNullableFilter<"Invoice"> | number | null
    supplierId?: IntNullableFilter<"Invoice"> | number | null
    outletId?: IntFilter<"Invoice"> | number
    subtotalAmount?: DecimalFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    sessionId?: IntNullableFilter<"Invoice"> | number | null
    discountType?: StringNullableFilter<"Invoice"> | string | null
    discountAmount?: DecimalFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Invoice"> | string
    status?: StringFilter<"Invoice"> | string
    invoiceDate?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    paymentDate?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    dueDate?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    remark?: StringNullableFilter<"Invoice"> | string | null
    performedBy?: StringNullableFilter<"Invoice"> | string | null
    deleted?: BoolFilter<"Invoice"> | boolean
    deletedAt?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    version?: IntNullableFilter<"Invoice"> | number | null
    session?: XOR<SessionNullableScalarRelationFilter, SessionWhereInput> | null
    purchaseOrder?: XOR<PurchaseOrderNullableScalarRelationFilter, PurchaseOrderWhereInput> | null
    supplier?: XOR<SupplierNullableScalarRelationFilter, SupplierWhereInput> | null
    invoiceItems?: InvoiceItemListRelationFilter
    deliveryOrders?: DeliveryOrderListRelationFilter
  }

  export type InvoiceOrderByWithRelationInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    taxInvoiceNumber?: SortOrder
    purchaseOrderId?: SortOrderInput | SortOrder
    supplierId?: SortOrderInput | SortOrder
    outletId?: SortOrder
    subtotalAmount?: SortOrder
    taxAmount?: SortOrder
    sessionId?: SortOrderInput | SortOrder
    discountType?: SortOrderInput | SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    invoiceDate?: SortOrderInput | SortOrder
    paymentDate?: SortOrderInput | SortOrder
    dueDate?: SortOrderInput | SortOrder
    remark?: SortOrderInput | SortOrder
    performedBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    session?: SessionOrderByWithRelationInput
    purchaseOrder?: PurchaseOrderOrderByWithRelationInput
    supplier?: SupplierOrderByWithRelationInput
    invoiceItems?: InvoiceItemOrderByRelationAggregateInput
    deliveryOrders?: DeliveryOrderOrderByRelationAggregateInput
    _relevance?: InvoiceOrderByRelevanceInput
  }

  export type InvoiceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    invoiceNumber?: string
    AND?: InvoiceWhereInput | InvoiceWhereInput[]
    OR?: InvoiceWhereInput[]
    NOT?: InvoiceWhereInput | InvoiceWhereInput[]
    taxInvoiceNumber?: StringFilter<"Invoice"> | string
    purchaseOrderId?: IntNullableFilter<"Invoice"> | number | null
    supplierId?: IntNullableFilter<"Invoice"> | number | null
    outletId?: IntFilter<"Invoice"> | number
    subtotalAmount?: DecimalFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    sessionId?: IntNullableFilter<"Invoice"> | number | null
    discountType?: StringNullableFilter<"Invoice"> | string | null
    discountAmount?: DecimalFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Invoice"> | string
    status?: StringFilter<"Invoice"> | string
    invoiceDate?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    paymentDate?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    dueDate?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    remark?: StringNullableFilter<"Invoice"> | string | null
    performedBy?: StringNullableFilter<"Invoice"> | string | null
    deleted?: BoolFilter<"Invoice"> | boolean
    deletedAt?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    version?: IntNullableFilter<"Invoice"> | number | null
    session?: XOR<SessionNullableScalarRelationFilter, SessionWhereInput> | null
    purchaseOrder?: XOR<PurchaseOrderNullableScalarRelationFilter, PurchaseOrderWhereInput> | null
    supplier?: XOR<SupplierNullableScalarRelationFilter, SupplierWhereInput> | null
    invoiceItems?: InvoiceItemListRelationFilter
    deliveryOrders?: DeliveryOrderListRelationFilter
  }, "id" | "invoiceNumber">

  export type InvoiceOrderByWithAggregationInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    taxInvoiceNumber?: SortOrder
    purchaseOrderId?: SortOrderInput | SortOrder
    supplierId?: SortOrderInput | SortOrder
    outletId?: SortOrder
    subtotalAmount?: SortOrder
    taxAmount?: SortOrder
    sessionId?: SortOrderInput | SortOrder
    discountType?: SortOrderInput | SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    invoiceDate?: SortOrderInput | SortOrder
    paymentDate?: SortOrderInput | SortOrder
    dueDate?: SortOrderInput | SortOrder
    remark?: SortOrderInput | SortOrder
    performedBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: InvoiceCountOrderByAggregateInput
    _avg?: InvoiceAvgOrderByAggregateInput
    _max?: InvoiceMaxOrderByAggregateInput
    _min?: InvoiceMinOrderByAggregateInput
    _sum?: InvoiceSumOrderByAggregateInput
  }

  export type InvoiceScalarWhereWithAggregatesInput = {
    AND?: InvoiceScalarWhereWithAggregatesInput | InvoiceScalarWhereWithAggregatesInput[]
    OR?: InvoiceScalarWhereWithAggregatesInput[]
    NOT?: InvoiceScalarWhereWithAggregatesInput | InvoiceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Invoice"> | number
    invoiceNumber?: StringWithAggregatesFilter<"Invoice"> | string
    taxInvoiceNumber?: StringWithAggregatesFilter<"Invoice"> | string
    purchaseOrderId?: IntNullableWithAggregatesFilter<"Invoice"> | number | null
    supplierId?: IntNullableWithAggregatesFilter<"Invoice"> | number | null
    outletId?: IntWithAggregatesFilter<"Invoice"> | number
    subtotalAmount?: DecimalWithAggregatesFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalWithAggregatesFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    sessionId?: IntNullableWithAggregatesFilter<"Invoice"> | number | null
    discountType?: StringNullableWithAggregatesFilter<"Invoice"> | string | null
    discountAmount?: DecimalWithAggregatesFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalWithAggregatesFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"Invoice"> | string
    status?: StringWithAggregatesFilter<"Invoice"> | string
    invoiceDate?: DateTimeNullableWithAggregatesFilter<"Invoice"> | Date | string | null
    paymentDate?: DateTimeNullableWithAggregatesFilter<"Invoice"> | Date | string | null
    dueDate?: DateTimeNullableWithAggregatesFilter<"Invoice"> | Date | string | null
    remark?: StringNullableWithAggregatesFilter<"Invoice"> | string | null
    performedBy?: StringNullableWithAggregatesFilter<"Invoice"> | string | null
    deleted?: BoolWithAggregatesFilter<"Invoice"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Invoice"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Invoice"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Invoice"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Invoice"> | number | null
  }

  export type InvoiceItemWhereInput = {
    AND?: InvoiceItemWhereInput | InvoiceItemWhereInput[]
    OR?: InvoiceItemWhereInput[]
    NOT?: InvoiceItemWhereInput | InvoiceItemWhereInput[]
    id?: IntFilter<"InvoiceItem"> | number
    invoiceId?: IntFilter<"InvoiceItem"> | number
    itemId?: IntFilter<"InvoiceItem"> | number
    quantity?: DecimalFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string
    unitPrice?: DecimalFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string
    discountType?: StringNullableFilter<"InvoiceItem"> | string | null
    discountAmount?: DecimalNullableFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string | null
    taxAmount?: DecimalNullableFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string | null
    subtotal?: DecimalFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string
    remark?: StringNullableFilter<"InvoiceItem"> | string | null
    createdAt?: DateTimeNullableFilter<"InvoiceItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"InvoiceItem"> | Date | string | null
    deleted?: BoolFilter<"InvoiceItem"> | boolean
    deletedAt?: DateTimeNullableFilter<"InvoiceItem"> | Date | string | null
    version?: IntNullableFilter<"InvoiceItem"> | number | null
    invoice?: XOR<InvoiceScalarRelationFilter, InvoiceWhereInput>
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
  }

  export type InvoiceItemOrderByWithRelationInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    discountType?: SortOrderInput | SortOrder
    discountAmount?: SortOrderInput | SortOrder
    taxAmount?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    remark?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    invoice?: InvoiceOrderByWithRelationInput
    item?: ItemOrderByWithRelationInput
    _relevance?: InvoiceItemOrderByRelevanceInput
  }

  export type InvoiceItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: InvoiceItemWhereInput | InvoiceItemWhereInput[]
    OR?: InvoiceItemWhereInput[]
    NOT?: InvoiceItemWhereInput | InvoiceItemWhereInput[]
    invoiceId?: IntFilter<"InvoiceItem"> | number
    itemId?: IntFilter<"InvoiceItem"> | number
    quantity?: DecimalFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string
    unitPrice?: DecimalFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string
    discountType?: StringNullableFilter<"InvoiceItem"> | string | null
    discountAmount?: DecimalNullableFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string | null
    taxAmount?: DecimalNullableFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string | null
    subtotal?: DecimalFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string
    remark?: StringNullableFilter<"InvoiceItem"> | string | null
    createdAt?: DateTimeNullableFilter<"InvoiceItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"InvoiceItem"> | Date | string | null
    deleted?: BoolFilter<"InvoiceItem"> | boolean
    deletedAt?: DateTimeNullableFilter<"InvoiceItem"> | Date | string | null
    version?: IntNullableFilter<"InvoiceItem"> | number | null
    invoice?: XOR<InvoiceScalarRelationFilter, InvoiceWhereInput>
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
  }, "id">

  export type InvoiceItemOrderByWithAggregationInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    discountType?: SortOrderInput | SortOrder
    discountAmount?: SortOrderInput | SortOrder
    taxAmount?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    remark?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: InvoiceItemCountOrderByAggregateInput
    _avg?: InvoiceItemAvgOrderByAggregateInput
    _max?: InvoiceItemMaxOrderByAggregateInput
    _min?: InvoiceItemMinOrderByAggregateInput
    _sum?: InvoiceItemSumOrderByAggregateInput
  }

  export type InvoiceItemScalarWhereWithAggregatesInput = {
    AND?: InvoiceItemScalarWhereWithAggregatesInput | InvoiceItemScalarWhereWithAggregatesInput[]
    OR?: InvoiceItemScalarWhereWithAggregatesInput[]
    NOT?: InvoiceItemScalarWhereWithAggregatesInput | InvoiceItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"InvoiceItem"> | number
    invoiceId?: IntWithAggregatesFilter<"InvoiceItem"> | number
    itemId?: IntWithAggregatesFilter<"InvoiceItem"> | number
    quantity?: DecimalWithAggregatesFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string
    unitPrice?: DecimalWithAggregatesFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string
    discountType?: StringNullableWithAggregatesFilter<"InvoiceItem"> | string | null
    discountAmount?: DecimalNullableWithAggregatesFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string | null
    taxAmount?: DecimalNullableWithAggregatesFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string | null
    subtotal?: DecimalWithAggregatesFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string
    remark?: StringNullableWithAggregatesFilter<"InvoiceItem"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"InvoiceItem"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"InvoiceItem"> | Date | string | null
    deleted?: BoolWithAggregatesFilter<"InvoiceItem"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"InvoiceItem"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"InvoiceItem"> | number | null
  }

  export type DeliveryOrderWhereInput = {
    AND?: DeliveryOrderWhereInput | DeliveryOrderWhereInput[]
    OR?: DeliveryOrderWhereInput[]
    NOT?: DeliveryOrderWhereInput | DeliveryOrderWhereInput[]
    id?: IntFilter<"DeliveryOrder"> | number
    trackingNumber?: StringNullableFilter<"DeliveryOrder"> | string | null
    outletId?: IntFilter<"DeliveryOrder"> | number
    customerId?: IntNullableFilter<"DeliveryOrder"> | number | null
    purchaseOrderId?: IntNullableFilter<"DeliveryOrder"> | number | null
    supplierId?: IntNullableFilter<"DeliveryOrder"> | number | null
    invoiceId?: IntNullableFilter<"DeliveryOrder"> | number | null
    sessionId?: IntNullableFilter<"DeliveryOrder"> | number | null
    deliveryDate?: DateTimeNullableFilter<"DeliveryOrder"> | Date | string | null
    deliveryStreet?: StringNullableFilter<"DeliveryOrder"> | string | null
    deliveryCity?: StringNullableFilter<"DeliveryOrder"> | string | null
    deliveryState?: StringNullableFilter<"DeliveryOrder"> | string | null
    deliveryPostalCode?: StringNullableFilter<"DeliveryOrder"> | string | null
    deliveryCountry?: StringNullableFilter<"DeliveryOrder"> | string | null
    status?: StringFilter<"DeliveryOrder"> | string
    remark?: StringNullableFilter<"DeliveryOrder"> | string | null
    performedBy?: StringNullableFilter<"DeliveryOrder"> | string | null
    deleted?: BoolFilter<"DeliveryOrder"> | boolean
    deletedAt?: DateTimeNullableFilter<"DeliveryOrder"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"DeliveryOrder"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"DeliveryOrder"> | Date | string | null
    version?: IntNullableFilter<"DeliveryOrder"> | number | null
    session?: XOR<SessionNullableScalarRelationFilter, SessionWhereInput> | null
    purchaseOrder?: XOR<PurchaseOrderNullableScalarRelationFilter, PurchaseOrderWhereInput> | null
    invoice?: XOR<InvoiceNullableScalarRelationFilter, InvoiceWhereInput> | null
    deliveryOrderItems?: DeliveryOrderItemListRelationFilter
  }

  export type DeliveryOrderOrderByWithRelationInput = {
    id?: SortOrder
    trackingNumber?: SortOrderInput | SortOrder
    outletId?: SortOrder
    customerId?: SortOrderInput | SortOrder
    purchaseOrderId?: SortOrderInput | SortOrder
    supplierId?: SortOrderInput | SortOrder
    invoiceId?: SortOrderInput | SortOrder
    sessionId?: SortOrderInput | SortOrder
    deliveryDate?: SortOrderInput | SortOrder
    deliveryStreet?: SortOrderInput | SortOrder
    deliveryCity?: SortOrderInput | SortOrder
    deliveryState?: SortOrderInput | SortOrder
    deliveryPostalCode?: SortOrderInput | SortOrder
    deliveryCountry?: SortOrderInput | SortOrder
    status?: SortOrder
    remark?: SortOrderInput | SortOrder
    performedBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    session?: SessionOrderByWithRelationInput
    purchaseOrder?: PurchaseOrderOrderByWithRelationInput
    invoice?: InvoiceOrderByWithRelationInput
    deliveryOrderItems?: DeliveryOrderItemOrderByRelationAggregateInput
    _relevance?: DeliveryOrderOrderByRelevanceInput
  }

  export type DeliveryOrderWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DeliveryOrderWhereInput | DeliveryOrderWhereInput[]
    OR?: DeliveryOrderWhereInput[]
    NOT?: DeliveryOrderWhereInput | DeliveryOrderWhereInput[]
    trackingNumber?: StringNullableFilter<"DeliveryOrder"> | string | null
    outletId?: IntFilter<"DeliveryOrder"> | number
    customerId?: IntNullableFilter<"DeliveryOrder"> | number | null
    purchaseOrderId?: IntNullableFilter<"DeliveryOrder"> | number | null
    supplierId?: IntNullableFilter<"DeliveryOrder"> | number | null
    invoiceId?: IntNullableFilter<"DeliveryOrder"> | number | null
    sessionId?: IntNullableFilter<"DeliveryOrder"> | number | null
    deliveryDate?: DateTimeNullableFilter<"DeliveryOrder"> | Date | string | null
    deliveryStreet?: StringNullableFilter<"DeliveryOrder"> | string | null
    deliveryCity?: StringNullableFilter<"DeliveryOrder"> | string | null
    deliveryState?: StringNullableFilter<"DeliveryOrder"> | string | null
    deliveryPostalCode?: StringNullableFilter<"DeliveryOrder"> | string | null
    deliveryCountry?: StringNullableFilter<"DeliveryOrder"> | string | null
    status?: StringFilter<"DeliveryOrder"> | string
    remark?: StringNullableFilter<"DeliveryOrder"> | string | null
    performedBy?: StringNullableFilter<"DeliveryOrder"> | string | null
    deleted?: BoolFilter<"DeliveryOrder"> | boolean
    deletedAt?: DateTimeNullableFilter<"DeliveryOrder"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"DeliveryOrder"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"DeliveryOrder"> | Date | string | null
    version?: IntNullableFilter<"DeliveryOrder"> | number | null
    session?: XOR<SessionNullableScalarRelationFilter, SessionWhereInput> | null
    purchaseOrder?: XOR<PurchaseOrderNullableScalarRelationFilter, PurchaseOrderWhereInput> | null
    invoice?: XOR<InvoiceNullableScalarRelationFilter, InvoiceWhereInput> | null
    deliveryOrderItems?: DeliveryOrderItemListRelationFilter
  }, "id">

  export type DeliveryOrderOrderByWithAggregationInput = {
    id?: SortOrder
    trackingNumber?: SortOrderInput | SortOrder
    outletId?: SortOrder
    customerId?: SortOrderInput | SortOrder
    purchaseOrderId?: SortOrderInput | SortOrder
    supplierId?: SortOrderInput | SortOrder
    invoiceId?: SortOrderInput | SortOrder
    sessionId?: SortOrderInput | SortOrder
    deliveryDate?: SortOrderInput | SortOrder
    deliveryStreet?: SortOrderInput | SortOrder
    deliveryCity?: SortOrderInput | SortOrder
    deliveryState?: SortOrderInput | SortOrder
    deliveryPostalCode?: SortOrderInput | SortOrder
    deliveryCountry?: SortOrderInput | SortOrder
    status?: SortOrder
    remark?: SortOrderInput | SortOrder
    performedBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: DeliveryOrderCountOrderByAggregateInput
    _avg?: DeliveryOrderAvgOrderByAggregateInput
    _max?: DeliveryOrderMaxOrderByAggregateInput
    _min?: DeliveryOrderMinOrderByAggregateInput
    _sum?: DeliveryOrderSumOrderByAggregateInput
  }

  export type DeliveryOrderScalarWhereWithAggregatesInput = {
    AND?: DeliveryOrderScalarWhereWithAggregatesInput | DeliveryOrderScalarWhereWithAggregatesInput[]
    OR?: DeliveryOrderScalarWhereWithAggregatesInput[]
    NOT?: DeliveryOrderScalarWhereWithAggregatesInput | DeliveryOrderScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DeliveryOrder"> | number
    trackingNumber?: StringNullableWithAggregatesFilter<"DeliveryOrder"> | string | null
    outletId?: IntWithAggregatesFilter<"DeliveryOrder"> | number
    customerId?: IntNullableWithAggregatesFilter<"DeliveryOrder"> | number | null
    purchaseOrderId?: IntNullableWithAggregatesFilter<"DeliveryOrder"> | number | null
    supplierId?: IntNullableWithAggregatesFilter<"DeliveryOrder"> | number | null
    invoiceId?: IntNullableWithAggregatesFilter<"DeliveryOrder"> | number | null
    sessionId?: IntNullableWithAggregatesFilter<"DeliveryOrder"> | number | null
    deliveryDate?: DateTimeNullableWithAggregatesFilter<"DeliveryOrder"> | Date | string | null
    deliveryStreet?: StringNullableWithAggregatesFilter<"DeliveryOrder"> | string | null
    deliveryCity?: StringNullableWithAggregatesFilter<"DeliveryOrder"> | string | null
    deliveryState?: StringNullableWithAggregatesFilter<"DeliveryOrder"> | string | null
    deliveryPostalCode?: StringNullableWithAggregatesFilter<"DeliveryOrder"> | string | null
    deliveryCountry?: StringNullableWithAggregatesFilter<"DeliveryOrder"> | string | null
    status?: StringWithAggregatesFilter<"DeliveryOrder"> | string
    remark?: StringNullableWithAggregatesFilter<"DeliveryOrder"> | string | null
    performedBy?: StringNullableWithAggregatesFilter<"DeliveryOrder"> | string | null
    deleted?: BoolWithAggregatesFilter<"DeliveryOrder"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"DeliveryOrder"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"DeliveryOrder"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"DeliveryOrder"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"DeliveryOrder"> | number | null
  }

  export type DeliveryOrderItemWhereInput = {
    AND?: DeliveryOrderItemWhereInput | DeliveryOrderItemWhereInput[]
    OR?: DeliveryOrderItemWhereInput[]
    NOT?: DeliveryOrderItemWhereInput | DeliveryOrderItemWhereInput[]
    id?: IntFilter<"DeliveryOrderItem"> | number
    deliveryOrderId?: IntFilter<"DeliveryOrderItem"> | number
    itemId?: IntFilter<"DeliveryOrderItem"> | number
    orderedQuantity?: FloatFilter<"DeliveryOrderItem"> | number
    receivedQuantity?: FloatFilter<"DeliveryOrderItem"> | number
    unitPrice?: DecimalNullableFilter<"DeliveryOrderItem"> | Decimal | DecimalJsLike | number | string | null
    remark?: StringNullableFilter<"DeliveryOrderItem"> | string | null
    version?: IntNullableFilter<"DeliveryOrderItem"> | number | null
    createdAt?: DateTimeNullableFilter<"DeliveryOrderItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"DeliveryOrderItem"> | Date | string | null
    deleted?: BoolFilter<"DeliveryOrderItem"> | boolean
    deletedAt?: DateTimeNullableFilter<"DeliveryOrderItem"> | Date | string | null
    deliveryOrder?: XOR<DeliveryOrderScalarRelationFilter, DeliveryOrderWhereInput>
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
  }

  export type DeliveryOrderItemOrderByWithRelationInput = {
    id?: SortOrder
    deliveryOrderId?: SortOrder
    itemId?: SortOrder
    orderedQuantity?: SortOrder
    receivedQuantity?: SortOrder
    unitPrice?: SortOrderInput | SortOrder
    remark?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deliveryOrder?: DeliveryOrderOrderByWithRelationInput
    item?: ItemOrderByWithRelationInput
    _relevance?: DeliveryOrderItemOrderByRelevanceInput
  }

  export type DeliveryOrderItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DeliveryOrderItemWhereInput | DeliveryOrderItemWhereInput[]
    OR?: DeliveryOrderItemWhereInput[]
    NOT?: DeliveryOrderItemWhereInput | DeliveryOrderItemWhereInput[]
    deliveryOrderId?: IntFilter<"DeliveryOrderItem"> | number
    itemId?: IntFilter<"DeliveryOrderItem"> | number
    orderedQuantity?: FloatFilter<"DeliveryOrderItem"> | number
    receivedQuantity?: FloatFilter<"DeliveryOrderItem"> | number
    unitPrice?: DecimalNullableFilter<"DeliveryOrderItem"> | Decimal | DecimalJsLike | number | string | null
    remark?: StringNullableFilter<"DeliveryOrderItem"> | string | null
    version?: IntNullableFilter<"DeliveryOrderItem"> | number | null
    createdAt?: DateTimeNullableFilter<"DeliveryOrderItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"DeliveryOrderItem"> | Date | string | null
    deleted?: BoolFilter<"DeliveryOrderItem"> | boolean
    deletedAt?: DateTimeNullableFilter<"DeliveryOrderItem"> | Date | string | null
    deliveryOrder?: XOR<DeliveryOrderScalarRelationFilter, DeliveryOrderWhereInput>
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
  }, "id">

  export type DeliveryOrderItemOrderByWithAggregationInput = {
    id?: SortOrder
    deliveryOrderId?: SortOrder
    itemId?: SortOrder
    orderedQuantity?: SortOrder
    receivedQuantity?: SortOrder
    unitPrice?: SortOrderInput | SortOrder
    remark?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: DeliveryOrderItemCountOrderByAggregateInput
    _avg?: DeliveryOrderItemAvgOrderByAggregateInput
    _max?: DeliveryOrderItemMaxOrderByAggregateInput
    _min?: DeliveryOrderItemMinOrderByAggregateInput
    _sum?: DeliveryOrderItemSumOrderByAggregateInput
  }

  export type DeliveryOrderItemScalarWhereWithAggregatesInput = {
    AND?: DeliveryOrderItemScalarWhereWithAggregatesInput | DeliveryOrderItemScalarWhereWithAggregatesInput[]
    OR?: DeliveryOrderItemScalarWhereWithAggregatesInput[]
    NOT?: DeliveryOrderItemScalarWhereWithAggregatesInput | DeliveryOrderItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DeliveryOrderItem"> | number
    deliveryOrderId?: IntWithAggregatesFilter<"DeliveryOrderItem"> | number
    itemId?: IntWithAggregatesFilter<"DeliveryOrderItem"> | number
    orderedQuantity?: FloatWithAggregatesFilter<"DeliveryOrderItem"> | number
    receivedQuantity?: FloatWithAggregatesFilter<"DeliveryOrderItem"> | number
    unitPrice?: DecimalNullableWithAggregatesFilter<"DeliveryOrderItem"> | Decimal | DecimalJsLike | number | string | null
    remark?: StringNullableWithAggregatesFilter<"DeliveryOrderItem"> | string | null
    version?: IntNullableWithAggregatesFilter<"DeliveryOrderItem"> | number | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"DeliveryOrderItem"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"DeliveryOrderItem"> | Date | string | null
    deleted?: BoolWithAggregatesFilter<"DeliveryOrderItem"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"DeliveryOrderItem"> | Date | string | null
  }

  export type PurchaseOrderWhereInput = {
    AND?: PurchaseOrderWhereInput | PurchaseOrderWhereInput[]
    OR?: PurchaseOrderWhereInput[]
    NOT?: PurchaseOrderWhereInput | PurchaseOrderWhereInput[]
    id?: IntFilter<"PurchaseOrder"> | number
    purchaseOrderNumber?: StringFilter<"PurchaseOrder"> | string
    outletId?: IntFilter<"PurchaseOrder"> | number
    supplierId?: IntFilter<"PurchaseOrder"> | number
    purchaseOrderDate?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    sessionId?: IntNullableFilter<"PurchaseOrder"> | number | null
    discountType?: StringNullableFilter<"PurchaseOrder"> | string | null
    discountAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    taxAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    totalAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"PurchaseOrder"> | string
    remark?: StringNullableFilter<"PurchaseOrder"> | string | null
    currency?: StringFilter<"PurchaseOrder"> | string
    performedBy?: StringNullableFilter<"PurchaseOrder"> | string | null
    deleted?: BoolFilter<"PurchaseOrder"> | boolean
    deletedAt?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    version?: IntNullableFilter<"PurchaseOrder"> | number | null
    session?: XOR<SessionNullableScalarRelationFilter, SessionWhereInput> | null
    supplier?: XOR<SupplierScalarRelationFilter, SupplierWhereInput>
    purchaseOrderItems?: PurchaseOrderItemListRelationFilter
    deliveryOrders?: DeliveryOrderListRelationFilter
    invoices?: InvoiceListRelationFilter
  }

  export type PurchaseOrderOrderByWithRelationInput = {
    id?: SortOrder
    purchaseOrderNumber?: SortOrder
    outletId?: SortOrder
    supplierId?: SortOrder
    purchaseOrderDate?: SortOrderInput | SortOrder
    sessionId?: SortOrderInput | SortOrder
    discountType?: SortOrderInput | SortOrder
    discountAmount?: SortOrderInput | SortOrder
    serviceChargeAmount?: SortOrderInput | SortOrder
    taxAmount?: SortOrderInput | SortOrder
    roundingAmount?: SortOrderInput | SortOrder
    subtotalAmount?: SortOrderInput | SortOrder
    totalAmount?: SortOrderInput | SortOrder
    status?: SortOrder
    remark?: SortOrderInput | SortOrder
    currency?: SortOrder
    performedBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    session?: SessionOrderByWithRelationInput
    supplier?: SupplierOrderByWithRelationInput
    purchaseOrderItems?: PurchaseOrderItemOrderByRelationAggregateInput
    deliveryOrders?: DeliveryOrderOrderByRelationAggregateInput
    invoices?: InvoiceOrderByRelationAggregateInput
    _relevance?: PurchaseOrderOrderByRelevanceInput
  }

  export type PurchaseOrderWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    purchaseOrderNumber?: string
    AND?: PurchaseOrderWhereInput | PurchaseOrderWhereInput[]
    OR?: PurchaseOrderWhereInput[]
    NOT?: PurchaseOrderWhereInput | PurchaseOrderWhereInput[]
    outletId?: IntFilter<"PurchaseOrder"> | number
    supplierId?: IntFilter<"PurchaseOrder"> | number
    purchaseOrderDate?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    sessionId?: IntNullableFilter<"PurchaseOrder"> | number | null
    discountType?: StringNullableFilter<"PurchaseOrder"> | string | null
    discountAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    taxAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    totalAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"PurchaseOrder"> | string
    remark?: StringNullableFilter<"PurchaseOrder"> | string | null
    currency?: StringFilter<"PurchaseOrder"> | string
    performedBy?: StringNullableFilter<"PurchaseOrder"> | string | null
    deleted?: BoolFilter<"PurchaseOrder"> | boolean
    deletedAt?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    version?: IntNullableFilter<"PurchaseOrder"> | number | null
    session?: XOR<SessionNullableScalarRelationFilter, SessionWhereInput> | null
    supplier?: XOR<SupplierScalarRelationFilter, SupplierWhereInput>
    purchaseOrderItems?: PurchaseOrderItemListRelationFilter
    deliveryOrders?: DeliveryOrderListRelationFilter
    invoices?: InvoiceListRelationFilter
  }, "id" | "purchaseOrderNumber">

  export type PurchaseOrderOrderByWithAggregationInput = {
    id?: SortOrder
    purchaseOrderNumber?: SortOrder
    outletId?: SortOrder
    supplierId?: SortOrder
    purchaseOrderDate?: SortOrderInput | SortOrder
    sessionId?: SortOrderInput | SortOrder
    discountType?: SortOrderInput | SortOrder
    discountAmount?: SortOrderInput | SortOrder
    serviceChargeAmount?: SortOrderInput | SortOrder
    taxAmount?: SortOrderInput | SortOrder
    roundingAmount?: SortOrderInput | SortOrder
    subtotalAmount?: SortOrderInput | SortOrder
    totalAmount?: SortOrderInput | SortOrder
    status?: SortOrder
    remark?: SortOrderInput | SortOrder
    currency?: SortOrder
    performedBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: PurchaseOrderCountOrderByAggregateInput
    _avg?: PurchaseOrderAvgOrderByAggregateInput
    _max?: PurchaseOrderMaxOrderByAggregateInput
    _min?: PurchaseOrderMinOrderByAggregateInput
    _sum?: PurchaseOrderSumOrderByAggregateInput
  }

  export type PurchaseOrderScalarWhereWithAggregatesInput = {
    AND?: PurchaseOrderScalarWhereWithAggregatesInput | PurchaseOrderScalarWhereWithAggregatesInput[]
    OR?: PurchaseOrderScalarWhereWithAggregatesInput[]
    NOT?: PurchaseOrderScalarWhereWithAggregatesInput | PurchaseOrderScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PurchaseOrder"> | number
    purchaseOrderNumber?: StringWithAggregatesFilter<"PurchaseOrder"> | string
    outletId?: IntWithAggregatesFilter<"PurchaseOrder"> | number
    supplierId?: IntWithAggregatesFilter<"PurchaseOrder"> | number
    purchaseOrderDate?: DateTimeNullableWithAggregatesFilter<"PurchaseOrder"> | Date | string | null
    sessionId?: IntNullableWithAggregatesFilter<"PurchaseOrder"> | number | null
    discountType?: StringNullableWithAggregatesFilter<"PurchaseOrder"> | string | null
    discountAmount?: DecimalNullableWithAggregatesFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: DecimalNullableWithAggregatesFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    taxAmount?: DecimalNullableWithAggregatesFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: DecimalNullableWithAggregatesFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: DecimalNullableWithAggregatesFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    totalAmount?: DecimalNullableWithAggregatesFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    status?: StringWithAggregatesFilter<"PurchaseOrder"> | string
    remark?: StringNullableWithAggregatesFilter<"PurchaseOrder"> | string | null
    currency?: StringWithAggregatesFilter<"PurchaseOrder"> | string
    performedBy?: StringNullableWithAggregatesFilter<"PurchaseOrder"> | string | null
    deleted?: BoolWithAggregatesFilter<"PurchaseOrder"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"PurchaseOrder"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"PurchaseOrder"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"PurchaseOrder"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"PurchaseOrder"> | number | null
  }

  export type PurchaseOrderItemWhereInput = {
    AND?: PurchaseOrderItemWhereInput | PurchaseOrderItemWhereInput[]
    OR?: PurchaseOrderItemWhereInput[]
    NOT?: PurchaseOrderItemWhereInput | PurchaseOrderItemWhereInput[]
    id?: IntFilter<"PurchaseOrderItem"> | number
    purchaseOrderId?: IntFilter<"PurchaseOrderItem"> | number
    itemId?: IntFilter<"PurchaseOrderItem"> | number
    quantity?: DecimalFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalNullableFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string | null
    discountType?: StringNullableFilter<"PurchaseOrderItem"> | string | null
    discountAmount?: DecimalNullableFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    remark?: StringNullableFilter<"PurchaseOrderItem"> | string | null
    version?: IntNullableFilter<"PurchaseOrderItem"> | number | null
    createdAt?: DateTimeNullableFilter<"PurchaseOrderItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"PurchaseOrderItem"> | Date | string | null
    deleted?: BoolFilter<"PurchaseOrderItem"> | boolean
    deletedAt?: DateTimeNullableFilter<"PurchaseOrderItem"> | Date | string | null
    purchaseOrder?: XOR<PurchaseOrderScalarRelationFilter, PurchaseOrderWhereInput>
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
  }

  export type PurchaseOrderItemOrderByWithRelationInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    taxAmount?: SortOrderInput | SortOrder
    discountType?: SortOrderInput | SortOrder
    discountAmount?: SortOrderInput | SortOrder
    unitPrice?: SortOrder
    subtotal?: SortOrder
    remark?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    purchaseOrder?: PurchaseOrderOrderByWithRelationInput
    item?: ItemOrderByWithRelationInput
    _relevance?: PurchaseOrderItemOrderByRelevanceInput
  }

  export type PurchaseOrderItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PurchaseOrderItemWhereInput | PurchaseOrderItemWhereInput[]
    OR?: PurchaseOrderItemWhereInput[]
    NOT?: PurchaseOrderItemWhereInput | PurchaseOrderItemWhereInput[]
    purchaseOrderId?: IntFilter<"PurchaseOrderItem"> | number
    itemId?: IntFilter<"PurchaseOrderItem"> | number
    quantity?: DecimalFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalNullableFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string | null
    discountType?: StringNullableFilter<"PurchaseOrderItem"> | string | null
    discountAmount?: DecimalNullableFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    remark?: StringNullableFilter<"PurchaseOrderItem"> | string | null
    version?: IntNullableFilter<"PurchaseOrderItem"> | number | null
    createdAt?: DateTimeNullableFilter<"PurchaseOrderItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"PurchaseOrderItem"> | Date | string | null
    deleted?: BoolFilter<"PurchaseOrderItem"> | boolean
    deletedAt?: DateTimeNullableFilter<"PurchaseOrderItem"> | Date | string | null
    purchaseOrder?: XOR<PurchaseOrderScalarRelationFilter, PurchaseOrderWhereInput>
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
  }, "id">

  export type PurchaseOrderItemOrderByWithAggregationInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    taxAmount?: SortOrderInput | SortOrder
    discountType?: SortOrderInput | SortOrder
    discountAmount?: SortOrderInput | SortOrder
    unitPrice?: SortOrder
    subtotal?: SortOrder
    remark?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: PurchaseOrderItemCountOrderByAggregateInput
    _avg?: PurchaseOrderItemAvgOrderByAggregateInput
    _max?: PurchaseOrderItemMaxOrderByAggregateInput
    _min?: PurchaseOrderItemMinOrderByAggregateInput
    _sum?: PurchaseOrderItemSumOrderByAggregateInput
  }

  export type PurchaseOrderItemScalarWhereWithAggregatesInput = {
    AND?: PurchaseOrderItemScalarWhereWithAggregatesInput | PurchaseOrderItemScalarWhereWithAggregatesInput[]
    OR?: PurchaseOrderItemScalarWhereWithAggregatesInput[]
    NOT?: PurchaseOrderItemScalarWhereWithAggregatesInput | PurchaseOrderItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PurchaseOrderItem"> | number
    purchaseOrderId?: IntWithAggregatesFilter<"PurchaseOrderItem"> | number
    itemId?: IntWithAggregatesFilter<"PurchaseOrderItem"> | number
    quantity?: DecimalWithAggregatesFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalNullableWithAggregatesFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string | null
    discountType?: StringNullableWithAggregatesFilter<"PurchaseOrderItem"> | string | null
    discountAmount?: DecimalNullableWithAggregatesFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalWithAggregatesFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalWithAggregatesFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    remark?: StringNullableWithAggregatesFilter<"PurchaseOrderItem"> | string | null
    version?: IntNullableWithAggregatesFilter<"PurchaseOrderItem"> | number | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"PurchaseOrderItem"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"PurchaseOrderItem"> | Date | string | null
    deleted?: BoolWithAggregatesFilter<"PurchaseOrderItem"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"PurchaseOrderItem"> | Date | string | null
  }

  export type PaymentWhereInput = {
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    id?: IntFilter<"Payment"> | number
    method?: StringFilter<"Payment"> | string
    tenderedAmount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFilter<"Payment"> | string
    salesId?: IntFilter<"Payment"> | number
    reference?: StringFilter<"Payment"> | string
    remark?: StringFilter<"Payment"> | string
    businessDate?: DateTimeFilter<"Payment"> | Date | string
    status?: StringFilter<"Payment"> | string
    outletId?: IntFilter<"Payment"> | number
    sessionId?: IntFilter<"Payment"> | number
    eodId?: IntFilter<"Payment"> | number
    performedBy?: StringNullableFilter<"Payment"> | string | null
    deleted?: BoolFilter<"Payment"> | boolean
    deletedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    version?: IntNullableFilter<"Payment"> | number | null
    cardInfos?: CardInfoListRelationFilter
    sales?: XOR<SalesScalarRelationFilter, SalesWhereInput>
    splitBills?: SplitBillListRelationFilter
  }

  export type PaymentOrderByWithRelationInput = {
    id?: SortOrder
    method?: SortOrder
    tenderedAmount?: SortOrder
    paidAmount?: SortOrder
    currencySymbol?: SortOrder
    salesId?: SortOrder
    reference?: SortOrder
    remark?: SortOrder
    businessDate?: SortOrder
    status?: SortOrder
    outletId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    performedBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    cardInfos?: CardInfoOrderByRelationAggregateInput
    sales?: SalesOrderByWithRelationInput
    splitBills?: SplitBillOrderByRelationAggregateInput
    _relevance?: PaymentOrderByRelevanceInput
  }

  export type PaymentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    method?: StringFilter<"Payment"> | string
    tenderedAmount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFilter<"Payment"> | string
    salesId?: IntFilter<"Payment"> | number
    reference?: StringFilter<"Payment"> | string
    remark?: StringFilter<"Payment"> | string
    businessDate?: DateTimeFilter<"Payment"> | Date | string
    status?: StringFilter<"Payment"> | string
    outletId?: IntFilter<"Payment"> | number
    sessionId?: IntFilter<"Payment"> | number
    eodId?: IntFilter<"Payment"> | number
    performedBy?: StringNullableFilter<"Payment"> | string | null
    deleted?: BoolFilter<"Payment"> | boolean
    deletedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    version?: IntNullableFilter<"Payment"> | number | null
    cardInfos?: CardInfoListRelationFilter
    sales?: XOR<SalesScalarRelationFilter, SalesWhereInput>
    splitBills?: SplitBillListRelationFilter
  }, "id">

  export type PaymentOrderByWithAggregationInput = {
    id?: SortOrder
    method?: SortOrder
    tenderedAmount?: SortOrder
    paidAmount?: SortOrder
    currencySymbol?: SortOrder
    salesId?: SortOrder
    reference?: SortOrder
    remark?: SortOrder
    businessDate?: SortOrder
    status?: SortOrder
    outletId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    performedBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: PaymentCountOrderByAggregateInput
    _avg?: PaymentAvgOrderByAggregateInput
    _max?: PaymentMaxOrderByAggregateInput
    _min?: PaymentMinOrderByAggregateInput
    _sum?: PaymentSumOrderByAggregateInput
  }

  export type PaymentScalarWhereWithAggregatesInput = {
    AND?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    OR?: PaymentScalarWhereWithAggregatesInput[]
    NOT?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Payment"> | number
    method?: StringWithAggregatesFilter<"Payment"> | string
    tenderedAmount?: DecimalWithAggregatesFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalWithAggregatesFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringWithAggregatesFilter<"Payment"> | string
    salesId?: IntWithAggregatesFilter<"Payment"> | number
    reference?: StringWithAggregatesFilter<"Payment"> | string
    remark?: StringWithAggregatesFilter<"Payment"> | string
    businessDate?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    status?: StringWithAggregatesFilter<"Payment"> | string
    outletId?: IntWithAggregatesFilter<"Payment"> | number
    sessionId?: IntWithAggregatesFilter<"Payment"> | number
    eodId?: IntWithAggregatesFilter<"Payment"> | number
    performedBy?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    deleted?: BoolWithAggregatesFilter<"Payment"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Payment"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Payment"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Payment"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Payment"> | number | null
  }

  export type RegisterLogWhereInput = {
    AND?: RegisterLogWhereInput | RegisterLogWhereInput[]
    OR?: RegisterLogWhereInput[]
    NOT?: RegisterLogWhereInput | RegisterLogWhereInput[]
    id?: IntFilter<"RegisterLog"> | number
    type?: StringFilter<"RegisterLog"> | string
    modifiedAmount?: DecimalFilter<"RegisterLog"> | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFilter<"RegisterLog"> | string
    salesId?: IntFilter<"RegisterLog"> | number
    remark?: StringFilter<"RegisterLog"> | string
    status?: StringFilter<"RegisterLog"> | string
    outletId?: IntFilter<"RegisterLog"> | number
    sessionId?: IntFilter<"RegisterLog"> | number
    eodId?: IntFilter<"RegisterLog"> | number
    performedBy?: StringNullableFilter<"RegisterLog"> | string | null
    deleted?: BoolFilter<"RegisterLog"> | boolean
    createdAt?: DateTimeNullableFilter<"RegisterLog"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"RegisterLog"> | Date | string | null
    version?: IntNullableFilter<"RegisterLog"> | number | null
    sales?: XOR<SalesScalarRelationFilter, SalesWhereInput>
  }

  export type RegisterLogOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    modifiedAmount?: SortOrder
    currencySymbol?: SortOrder
    salesId?: SortOrder
    remark?: SortOrder
    status?: SortOrder
    outletId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    performedBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    sales?: SalesOrderByWithRelationInput
    _relevance?: RegisterLogOrderByRelevanceInput
  }

  export type RegisterLogWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RegisterLogWhereInput | RegisterLogWhereInput[]
    OR?: RegisterLogWhereInput[]
    NOT?: RegisterLogWhereInput | RegisterLogWhereInput[]
    type?: StringFilter<"RegisterLog"> | string
    modifiedAmount?: DecimalFilter<"RegisterLog"> | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFilter<"RegisterLog"> | string
    salesId?: IntFilter<"RegisterLog"> | number
    remark?: StringFilter<"RegisterLog"> | string
    status?: StringFilter<"RegisterLog"> | string
    outletId?: IntFilter<"RegisterLog"> | number
    sessionId?: IntFilter<"RegisterLog"> | number
    eodId?: IntFilter<"RegisterLog"> | number
    performedBy?: StringNullableFilter<"RegisterLog"> | string | null
    deleted?: BoolFilter<"RegisterLog"> | boolean
    createdAt?: DateTimeNullableFilter<"RegisterLog"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"RegisterLog"> | Date | string | null
    version?: IntNullableFilter<"RegisterLog"> | number | null
    sales?: XOR<SalesScalarRelationFilter, SalesWhereInput>
  }, "id">

  export type RegisterLogOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    modifiedAmount?: SortOrder
    currencySymbol?: SortOrder
    salesId?: SortOrder
    remark?: SortOrder
    status?: SortOrder
    outletId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    performedBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: RegisterLogCountOrderByAggregateInput
    _avg?: RegisterLogAvgOrderByAggregateInput
    _max?: RegisterLogMaxOrderByAggregateInput
    _min?: RegisterLogMinOrderByAggregateInput
    _sum?: RegisterLogSumOrderByAggregateInput
  }

  export type RegisterLogScalarWhereWithAggregatesInput = {
    AND?: RegisterLogScalarWhereWithAggregatesInput | RegisterLogScalarWhereWithAggregatesInput[]
    OR?: RegisterLogScalarWhereWithAggregatesInput[]
    NOT?: RegisterLogScalarWhereWithAggregatesInput | RegisterLogScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RegisterLog"> | number
    type?: StringWithAggregatesFilter<"RegisterLog"> | string
    modifiedAmount?: DecimalWithAggregatesFilter<"RegisterLog"> | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringWithAggregatesFilter<"RegisterLog"> | string
    salesId?: IntWithAggregatesFilter<"RegisterLog"> | number
    remark?: StringWithAggregatesFilter<"RegisterLog"> | string
    status?: StringWithAggregatesFilter<"RegisterLog"> | string
    outletId?: IntWithAggregatesFilter<"RegisterLog"> | number
    sessionId?: IntWithAggregatesFilter<"RegisterLog"> | number
    eodId?: IntWithAggregatesFilter<"RegisterLog"> | number
    performedBy?: StringNullableWithAggregatesFilter<"RegisterLog"> | string | null
    deleted?: BoolWithAggregatesFilter<"RegisterLog"> | boolean
    createdAt?: DateTimeNullableWithAggregatesFilter<"RegisterLog"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"RegisterLog"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"RegisterLog"> | number | null
  }

  export type CardInfoWhereInput = {
    AND?: CardInfoWhereInput | CardInfoWhereInput[]
    OR?: CardInfoWhereInput[]
    NOT?: CardInfoWhereInput | CardInfoWhereInput[]
    id?: IntFilter<"CardInfo"> | number
    paymentId?: IntFilter<"CardInfo"> | number
    cardNumber?: StringNullableFilter<"CardInfo"> | string | null
    cardExpiry?: StringNullableFilter<"CardInfo"> | string | null
    traceNumber?: StringNullableFilter<"CardInfo"> | string | null
    type2?: StringNullableFilter<"CardInfo"> | string | null
    type3?: StringNullableFilter<"CardInfo"> | string | null
    cardRate?: FloatNullableFilter<"CardInfo"> | number | null
    appCode?: StringNullableFilter<"CardInfo"> | string | null
    cardType?: StringNullableFilter<"CardInfo"> | string | null
    deleted?: BoolFilter<"CardInfo"> | boolean
    createdAt?: DateTimeNullableFilter<"CardInfo"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"CardInfo"> | Date | string | null
    version?: IntNullableFilter<"CardInfo"> | number | null
    payment?: XOR<PaymentScalarRelationFilter, PaymentWhereInput>
  }

  export type CardInfoOrderByWithRelationInput = {
    id?: SortOrder
    paymentId?: SortOrder
    cardNumber?: SortOrderInput | SortOrder
    cardExpiry?: SortOrderInput | SortOrder
    traceNumber?: SortOrderInput | SortOrder
    type2?: SortOrderInput | SortOrder
    type3?: SortOrderInput | SortOrder
    cardRate?: SortOrderInput | SortOrder
    appCode?: SortOrderInput | SortOrder
    cardType?: SortOrderInput | SortOrder
    deleted?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    payment?: PaymentOrderByWithRelationInput
    _relevance?: CardInfoOrderByRelevanceInput
  }

  export type CardInfoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CardInfoWhereInput | CardInfoWhereInput[]
    OR?: CardInfoWhereInput[]
    NOT?: CardInfoWhereInput | CardInfoWhereInput[]
    paymentId?: IntFilter<"CardInfo"> | number
    cardNumber?: StringNullableFilter<"CardInfo"> | string | null
    cardExpiry?: StringNullableFilter<"CardInfo"> | string | null
    traceNumber?: StringNullableFilter<"CardInfo"> | string | null
    type2?: StringNullableFilter<"CardInfo"> | string | null
    type3?: StringNullableFilter<"CardInfo"> | string | null
    cardRate?: FloatNullableFilter<"CardInfo"> | number | null
    appCode?: StringNullableFilter<"CardInfo"> | string | null
    cardType?: StringNullableFilter<"CardInfo"> | string | null
    deleted?: BoolFilter<"CardInfo"> | boolean
    createdAt?: DateTimeNullableFilter<"CardInfo"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"CardInfo"> | Date | string | null
    version?: IntNullableFilter<"CardInfo"> | number | null
    payment?: XOR<PaymentScalarRelationFilter, PaymentWhereInput>
  }, "id">

  export type CardInfoOrderByWithAggregationInput = {
    id?: SortOrder
    paymentId?: SortOrder
    cardNumber?: SortOrderInput | SortOrder
    cardExpiry?: SortOrderInput | SortOrder
    traceNumber?: SortOrderInput | SortOrder
    type2?: SortOrderInput | SortOrder
    type3?: SortOrderInput | SortOrder
    cardRate?: SortOrderInput | SortOrder
    appCode?: SortOrderInput | SortOrder
    cardType?: SortOrderInput | SortOrder
    deleted?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: CardInfoCountOrderByAggregateInput
    _avg?: CardInfoAvgOrderByAggregateInput
    _max?: CardInfoMaxOrderByAggregateInput
    _min?: CardInfoMinOrderByAggregateInput
    _sum?: CardInfoSumOrderByAggregateInput
  }

  export type CardInfoScalarWhereWithAggregatesInput = {
    AND?: CardInfoScalarWhereWithAggregatesInput | CardInfoScalarWhereWithAggregatesInput[]
    OR?: CardInfoScalarWhereWithAggregatesInput[]
    NOT?: CardInfoScalarWhereWithAggregatesInput | CardInfoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CardInfo"> | number
    paymentId?: IntWithAggregatesFilter<"CardInfo"> | number
    cardNumber?: StringNullableWithAggregatesFilter<"CardInfo"> | string | null
    cardExpiry?: StringNullableWithAggregatesFilter<"CardInfo"> | string | null
    traceNumber?: StringNullableWithAggregatesFilter<"CardInfo"> | string | null
    type2?: StringNullableWithAggregatesFilter<"CardInfo"> | string | null
    type3?: StringNullableWithAggregatesFilter<"CardInfo"> | string | null
    cardRate?: FloatNullableWithAggregatesFilter<"CardInfo"> | number | null
    appCode?: StringNullableWithAggregatesFilter<"CardInfo"> | string | null
    cardType?: StringNullableWithAggregatesFilter<"CardInfo"> | string | null
    deleted?: BoolWithAggregatesFilter<"CardInfo"> | boolean
    createdAt?: DateTimeNullableWithAggregatesFilter<"CardInfo"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"CardInfo"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"CardInfo"> | number | null
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    id?: IntFilter<"Session"> | number
    outletId?: IntFilter<"Session"> | number
    businessDate?: DateTimeFilter<"Session"> | Date | string
    openingDateTime?: DateTimeNullableFilter<"Session"> | Date | string | null
    closingDateTime?: DateTimeNullableFilter<"Session"> | Date | string | null
    openingAmount?: DecimalFilter<"Session"> | Decimal | DecimalJsLike | number | string
    totalSalesCount?: IntFilter<"Session"> | number
    openByUserID?: IntFilter<"Session"> | number
    closeByUserID?: IntFilter<"Session"> | number
    deleted?: BoolFilter<"Session"> | boolean
    deletedAt?: DateTimeNullableFilter<"Session"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Session"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Session"> | Date | string | null
    version?: IntNullableFilter<"Session"> | number | null
    declarations?: DeclarationListRelationFilter
    purchaseOrders?: PurchaseOrderListRelationFilter
    deliveryOrders?: DeliveryOrderListRelationFilter
    invoices?: InvoiceListRelationFilter
  }

  export type SessionOrderByWithRelationInput = {
    id?: SortOrder
    outletId?: SortOrder
    businessDate?: SortOrder
    openingDateTime?: SortOrderInput | SortOrder
    closingDateTime?: SortOrderInput | SortOrder
    openingAmount?: SortOrder
    totalSalesCount?: SortOrder
    openByUserID?: SortOrder
    closeByUserID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    declarations?: DeclarationOrderByRelationAggregateInput
    purchaseOrders?: PurchaseOrderOrderByRelationAggregateInput
    deliveryOrders?: DeliveryOrderOrderByRelationAggregateInput
    invoices?: InvoiceOrderByRelationAggregateInput
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    outletId?: IntFilter<"Session"> | number
    businessDate?: DateTimeFilter<"Session"> | Date | string
    openingDateTime?: DateTimeNullableFilter<"Session"> | Date | string | null
    closingDateTime?: DateTimeNullableFilter<"Session"> | Date | string | null
    openingAmount?: DecimalFilter<"Session"> | Decimal | DecimalJsLike | number | string
    totalSalesCount?: IntFilter<"Session"> | number
    openByUserID?: IntFilter<"Session"> | number
    closeByUserID?: IntFilter<"Session"> | number
    deleted?: BoolFilter<"Session"> | boolean
    deletedAt?: DateTimeNullableFilter<"Session"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Session"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Session"> | Date | string | null
    version?: IntNullableFilter<"Session"> | number | null
    declarations?: DeclarationListRelationFilter
    purchaseOrders?: PurchaseOrderListRelationFilter
    deliveryOrders?: DeliveryOrderListRelationFilter
    invoices?: InvoiceListRelationFilter
  }, "id">

  export type SessionOrderByWithAggregationInput = {
    id?: SortOrder
    outletId?: SortOrder
    businessDate?: SortOrder
    openingDateTime?: SortOrderInput | SortOrder
    closingDateTime?: SortOrderInput | SortOrder
    openingAmount?: SortOrder
    totalSalesCount?: SortOrder
    openByUserID?: SortOrder
    closeByUserID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: SessionCountOrderByAggregateInput
    _avg?: SessionAvgOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
    _sum?: SessionSumOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Session"> | number
    outletId?: IntWithAggregatesFilter<"Session"> | number
    businessDate?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    openingDateTime?: DateTimeNullableWithAggregatesFilter<"Session"> | Date | string | null
    closingDateTime?: DateTimeNullableWithAggregatesFilter<"Session"> | Date | string | null
    openingAmount?: DecimalWithAggregatesFilter<"Session"> | Decimal | DecimalJsLike | number | string
    totalSalesCount?: IntWithAggregatesFilter<"Session"> | number
    openByUserID?: IntWithAggregatesFilter<"Session"> | number
    closeByUserID?: IntWithAggregatesFilter<"Session"> | number
    deleted?: BoolWithAggregatesFilter<"Session"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Session"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Session"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Session"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Session"> | number | null
  }

  export type DeclarationWhereInput = {
    AND?: DeclarationWhereInput | DeclarationWhereInput[]
    OR?: DeclarationWhereInput[]
    NOT?: DeclarationWhereInput | DeclarationWhereInput[]
    id?: IntFilter<"Declaration"> | number
    paymentType?: StringFilter<"Declaration"> | string
    totalPaymentAmount?: DecimalFilter<"Declaration"> | Decimal | DecimalJsLike | number | string
    declarationAmount?: DecimalFilter<"Declaration"> | Decimal | DecimalJsLike | number | string
    differenceAmount?: DecimalFilter<"Declaration"> | Decimal | DecimalJsLike | number | string
    deleted?: BoolFilter<"Declaration"> | boolean
    deletedAt?: DateTimeNullableFilter<"Declaration"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Declaration"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Declaration"> | Date | string | null
    version?: IntNullableFilter<"Declaration"> | number | null
    sessionID?: IntFilter<"Declaration"> | number
    session?: XOR<SessionScalarRelationFilter, SessionWhereInput>
  }

  export type DeclarationOrderByWithRelationInput = {
    id?: SortOrder
    paymentType?: SortOrder
    totalPaymentAmount?: SortOrder
    declarationAmount?: SortOrder
    differenceAmount?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    sessionID?: SortOrder
    session?: SessionOrderByWithRelationInput
    _relevance?: DeclarationOrderByRelevanceInput
  }

  export type DeclarationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DeclarationWhereInput | DeclarationWhereInput[]
    OR?: DeclarationWhereInput[]
    NOT?: DeclarationWhereInput | DeclarationWhereInput[]
    paymentType?: StringFilter<"Declaration"> | string
    totalPaymentAmount?: DecimalFilter<"Declaration"> | Decimal | DecimalJsLike | number | string
    declarationAmount?: DecimalFilter<"Declaration"> | Decimal | DecimalJsLike | number | string
    differenceAmount?: DecimalFilter<"Declaration"> | Decimal | DecimalJsLike | number | string
    deleted?: BoolFilter<"Declaration"> | boolean
    deletedAt?: DateTimeNullableFilter<"Declaration"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Declaration"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Declaration"> | Date | string | null
    version?: IntNullableFilter<"Declaration"> | number | null
    sessionID?: IntFilter<"Declaration"> | number
    session?: XOR<SessionScalarRelationFilter, SessionWhereInput>
  }, "id">

  export type DeclarationOrderByWithAggregationInput = {
    id?: SortOrder
    paymentType?: SortOrder
    totalPaymentAmount?: SortOrder
    declarationAmount?: SortOrder
    differenceAmount?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    sessionID?: SortOrder
    _count?: DeclarationCountOrderByAggregateInput
    _avg?: DeclarationAvgOrderByAggregateInput
    _max?: DeclarationMaxOrderByAggregateInput
    _min?: DeclarationMinOrderByAggregateInput
    _sum?: DeclarationSumOrderByAggregateInput
  }

  export type DeclarationScalarWhereWithAggregatesInput = {
    AND?: DeclarationScalarWhereWithAggregatesInput | DeclarationScalarWhereWithAggregatesInput[]
    OR?: DeclarationScalarWhereWithAggregatesInput[]
    NOT?: DeclarationScalarWhereWithAggregatesInput | DeclarationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Declaration"> | number
    paymentType?: StringWithAggregatesFilter<"Declaration"> | string
    totalPaymentAmount?: DecimalWithAggregatesFilter<"Declaration"> | Decimal | DecimalJsLike | number | string
    declarationAmount?: DecimalWithAggregatesFilter<"Declaration"> | Decimal | DecimalJsLike | number | string
    differenceAmount?: DecimalWithAggregatesFilter<"Declaration"> | Decimal | DecimalJsLike | number | string
    deleted?: BoolWithAggregatesFilter<"Declaration"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Declaration"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Declaration"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Declaration"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Declaration"> | number | null
    sessionID?: IntWithAggregatesFilter<"Declaration"> | number
  }

  export type StockBalanceWhereInput = {
    AND?: StockBalanceWhereInput | StockBalanceWhereInput[]
    OR?: StockBalanceWhereInput[]
    NOT?: StockBalanceWhereInput | StockBalanceWhereInput[]
    id?: IntFilter<"StockBalance"> | number
    itemId?: IntFilter<"StockBalance"> | number
    outletId?: IntFilter<"StockBalance"> | number
    availableQuantity?: DecimalFilter<"StockBalance"> | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFilter<"StockBalance"> | Decimal | DecimalJsLike | number | string
    reorderThreshold?: DecimalNullableFilter<"StockBalance"> | Decimal | DecimalJsLike | number | string | null
    deleted?: BoolFilter<"StockBalance"> | boolean
    lastRestockDate?: DateTimeNullableFilter<"StockBalance"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"StockBalance"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"StockBalance"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"StockBalance"> | Date | string | null
    version?: IntNullableFilter<"StockBalance"> | number | null
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
    outlet?: XOR<OutletScalarRelationFilter, OutletWhereInput>
  }

  export type StockBalanceOrderByWithRelationInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    availableQuantity?: SortOrder
    onHandQuantity?: SortOrder
    reorderThreshold?: SortOrderInput | SortOrder
    deleted?: SortOrder
    lastRestockDate?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    item?: ItemOrderByWithRelationInput
    outlet?: OutletOrderByWithRelationInput
  }

  export type StockBalanceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    itemId_outletId_reorderThreshold_deleted_availableQuantity?: StockBalanceItemIdOutletIdReorderThresholdDeletedAvailableQuantityCompoundUniqueInput
    AND?: StockBalanceWhereInput | StockBalanceWhereInput[]
    OR?: StockBalanceWhereInput[]
    NOT?: StockBalanceWhereInput | StockBalanceWhereInput[]
    itemId?: IntFilter<"StockBalance"> | number
    outletId?: IntFilter<"StockBalance"> | number
    availableQuantity?: DecimalFilter<"StockBalance"> | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFilter<"StockBalance"> | Decimal | DecimalJsLike | number | string
    reorderThreshold?: DecimalNullableFilter<"StockBalance"> | Decimal | DecimalJsLike | number | string | null
    deleted?: BoolFilter<"StockBalance"> | boolean
    lastRestockDate?: DateTimeNullableFilter<"StockBalance"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"StockBalance"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"StockBalance"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"StockBalance"> | Date | string | null
    version?: IntNullableFilter<"StockBalance"> | number | null
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
    outlet?: XOR<OutletScalarRelationFilter, OutletWhereInput>
  }, "id" | "itemId_outletId_reorderThreshold_deleted_availableQuantity">

  export type StockBalanceOrderByWithAggregationInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    availableQuantity?: SortOrder
    onHandQuantity?: SortOrder
    reorderThreshold?: SortOrderInput | SortOrder
    deleted?: SortOrder
    lastRestockDate?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: StockBalanceCountOrderByAggregateInput
    _avg?: StockBalanceAvgOrderByAggregateInput
    _max?: StockBalanceMaxOrderByAggregateInput
    _min?: StockBalanceMinOrderByAggregateInput
    _sum?: StockBalanceSumOrderByAggregateInput
  }

  export type StockBalanceScalarWhereWithAggregatesInput = {
    AND?: StockBalanceScalarWhereWithAggregatesInput | StockBalanceScalarWhereWithAggregatesInput[]
    OR?: StockBalanceScalarWhereWithAggregatesInput[]
    NOT?: StockBalanceScalarWhereWithAggregatesInput | StockBalanceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"StockBalance"> | number
    itemId?: IntWithAggregatesFilter<"StockBalance"> | number
    outletId?: IntWithAggregatesFilter<"StockBalance"> | number
    availableQuantity?: DecimalWithAggregatesFilter<"StockBalance"> | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalWithAggregatesFilter<"StockBalance"> | Decimal | DecimalJsLike | number | string
    reorderThreshold?: DecimalNullableWithAggregatesFilter<"StockBalance"> | Decimal | DecimalJsLike | number | string | null
    deleted?: BoolWithAggregatesFilter<"StockBalance"> | boolean
    lastRestockDate?: DateTimeNullableWithAggregatesFilter<"StockBalance"> | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"StockBalance"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"StockBalance"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"StockBalance"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"StockBalance"> | number | null
  }

  export type StockReceiptWhereInput = {
    AND?: StockReceiptWhereInput | StockReceiptWhereInput[]
    OR?: StockReceiptWhereInput[]
    NOT?: StockReceiptWhereInput | StockReceiptWhereInput[]
    id?: IntFilter<"StockReceipt"> | number
    itemId?: IntFilter<"StockReceipt"> | number
    outletId?: IntFilter<"StockReceipt"> | number
    quantity?: DecimalFilter<"StockReceipt"> | Decimal | DecimalJsLike | number | string
    cost?: DecimalFilter<"StockReceipt"> | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFilter<"StockReceipt"> | Date | string
    createdAt?: DateTimeNullableFilter<"StockReceipt"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"StockReceipt"> | Date | string | null
    deleted?: BoolFilter<"StockReceipt"> | boolean
    deletedAt?: DateTimeNullableFilter<"StockReceipt"> | Date | string | null
    version?: IntNullableFilter<"StockReceipt"> | number | null
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
    outlet?: XOR<OutletScalarRelationFilter, OutletWhereInput>
  }

  export type StockReceiptOrderByWithRelationInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    receiptDate?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    item?: ItemOrderByWithRelationInput
    outlet?: OutletOrderByWithRelationInput
  }

  export type StockReceiptWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: StockReceiptWhereInput | StockReceiptWhereInput[]
    OR?: StockReceiptWhereInput[]
    NOT?: StockReceiptWhereInput | StockReceiptWhereInput[]
    itemId?: IntFilter<"StockReceipt"> | number
    outletId?: IntFilter<"StockReceipt"> | number
    quantity?: DecimalFilter<"StockReceipt"> | Decimal | DecimalJsLike | number | string
    cost?: DecimalFilter<"StockReceipt"> | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFilter<"StockReceipt"> | Date | string
    createdAt?: DateTimeNullableFilter<"StockReceipt"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"StockReceipt"> | Date | string | null
    deleted?: BoolFilter<"StockReceipt"> | boolean
    deletedAt?: DateTimeNullableFilter<"StockReceipt"> | Date | string | null
    version?: IntNullableFilter<"StockReceipt"> | number | null
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
    outlet?: XOR<OutletScalarRelationFilter, OutletWhereInput>
  }, "id">

  export type StockReceiptOrderByWithAggregationInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    receiptDate?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: StockReceiptCountOrderByAggregateInput
    _avg?: StockReceiptAvgOrderByAggregateInput
    _max?: StockReceiptMaxOrderByAggregateInput
    _min?: StockReceiptMinOrderByAggregateInput
    _sum?: StockReceiptSumOrderByAggregateInput
  }

  export type StockReceiptScalarWhereWithAggregatesInput = {
    AND?: StockReceiptScalarWhereWithAggregatesInput | StockReceiptScalarWhereWithAggregatesInput[]
    OR?: StockReceiptScalarWhereWithAggregatesInput[]
    NOT?: StockReceiptScalarWhereWithAggregatesInput | StockReceiptScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"StockReceipt"> | number
    itemId?: IntWithAggregatesFilter<"StockReceipt"> | number
    outletId?: IntWithAggregatesFilter<"StockReceipt"> | number
    quantity?: DecimalWithAggregatesFilter<"StockReceipt"> | Decimal | DecimalJsLike | number | string
    cost?: DecimalWithAggregatesFilter<"StockReceipt"> | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeWithAggregatesFilter<"StockReceipt"> | Date | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"StockReceipt"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"StockReceipt"> | Date | string | null
    deleted?: BoolWithAggregatesFilter<"StockReceipt"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"StockReceipt"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"StockReceipt"> | number | null
  }

  export type StockReceiptArchiveWhereInput = {
    AND?: StockReceiptArchiveWhereInput | StockReceiptArchiveWhereInput[]
    OR?: StockReceiptArchiveWhereInput[]
    NOT?: StockReceiptArchiveWhereInput | StockReceiptArchiveWhereInput[]
    id?: IntFilter<"StockReceiptArchive"> | number
    itemId?: IntFilter<"StockReceiptArchive"> | number
    outletId?: IntFilter<"StockReceiptArchive"> | number
    quantity?: DecimalFilter<"StockReceiptArchive"> | Decimal | DecimalJsLike | number | string
    cost?: DecimalFilter<"StockReceiptArchive"> | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFilter<"StockReceiptArchive"> | Date | string
    createdAt?: DateTimeNullableFilter<"StockReceiptArchive"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"StockReceiptArchive"> | Date | string | null
    deleted?: BoolFilter<"StockReceiptArchive"> | boolean
    deletedAt?: DateTimeNullableFilter<"StockReceiptArchive"> | Date | string | null
    version?: IntNullableFilter<"StockReceiptArchive"> | number | null
  }

  export type StockReceiptArchiveOrderByWithRelationInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    receiptDate?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
  }

  export type StockReceiptArchiveWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: StockReceiptArchiveWhereInput | StockReceiptArchiveWhereInput[]
    OR?: StockReceiptArchiveWhereInput[]
    NOT?: StockReceiptArchiveWhereInput | StockReceiptArchiveWhereInput[]
    itemId?: IntFilter<"StockReceiptArchive"> | number
    outletId?: IntFilter<"StockReceiptArchive"> | number
    quantity?: DecimalFilter<"StockReceiptArchive"> | Decimal | DecimalJsLike | number | string
    cost?: DecimalFilter<"StockReceiptArchive"> | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFilter<"StockReceiptArchive"> | Date | string
    createdAt?: DateTimeNullableFilter<"StockReceiptArchive"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"StockReceiptArchive"> | Date | string | null
    deleted?: BoolFilter<"StockReceiptArchive"> | boolean
    deletedAt?: DateTimeNullableFilter<"StockReceiptArchive"> | Date | string | null
    version?: IntNullableFilter<"StockReceiptArchive"> | number | null
  }, "id">

  export type StockReceiptArchiveOrderByWithAggregationInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    receiptDate?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: StockReceiptArchiveCountOrderByAggregateInput
    _avg?: StockReceiptArchiveAvgOrderByAggregateInput
    _max?: StockReceiptArchiveMaxOrderByAggregateInput
    _min?: StockReceiptArchiveMinOrderByAggregateInput
    _sum?: StockReceiptArchiveSumOrderByAggregateInput
  }

  export type StockReceiptArchiveScalarWhereWithAggregatesInput = {
    AND?: StockReceiptArchiveScalarWhereWithAggregatesInput | StockReceiptArchiveScalarWhereWithAggregatesInput[]
    OR?: StockReceiptArchiveScalarWhereWithAggregatesInput[]
    NOT?: StockReceiptArchiveScalarWhereWithAggregatesInput | StockReceiptArchiveScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"StockReceiptArchive"> | number
    itemId?: IntWithAggregatesFilter<"StockReceiptArchive"> | number
    outletId?: IntWithAggregatesFilter<"StockReceiptArchive"> | number
    quantity?: DecimalWithAggregatesFilter<"StockReceiptArchive"> | Decimal | DecimalJsLike | number | string
    cost?: DecimalWithAggregatesFilter<"StockReceiptArchive"> | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeWithAggregatesFilter<"StockReceiptArchive"> | Date | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"StockReceiptArchive"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"StockReceiptArchive"> | Date | string | null
    deleted?: BoolWithAggregatesFilter<"StockReceiptArchive"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"StockReceiptArchive"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"StockReceiptArchive"> | number | null
  }

  export type StockMovementWhereInput = {
    AND?: StockMovementWhereInput | StockMovementWhereInput[]
    OR?: StockMovementWhereInput[]
    NOT?: StockMovementWhereInput | StockMovementWhereInput[]
    id?: IntFilter<"StockMovement"> | number
    itemId?: IntFilter<"StockMovement"> | number
    outletId?: IntFilter<"StockMovement"> | number
    previousAvailableQuantity?: DecimalFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    movementType?: StringFilter<"StockMovement"> | string
    documentId?: IntFilter<"StockMovement"> | number
    reason?: StringFilter<"StockMovement"> | string
    remark?: StringFilter<"StockMovement"> | string
    deleted?: BoolFilter<"StockMovement"> | boolean
    createdAt?: DateTimeNullableFilter<"StockMovement"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"StockMovement"> | Date | string | null
    version?: IntNullableFilter<"StockMovement"> | number | null
    performedBy?: StringNullableFilter<"StockMovement"> | string | null
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
    outlet?: XOR<OutletScalarRelationFilter, OutletWhereInput>
  }

  export type StockMovementOrderByWithRelationInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    previousAvailableQuantity?: SortOrder
    previousOnHandQuantity?: SortOrder
    availableQuantityDelta?: SortOrder
    onHandQuantityDelta?: SortOrder
    movementType?: SortOrder
    documentId?: SortOrder
    reason?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    performedBy?: SortOrderInput | SortOrder
    item?: ItemOrderByWithRelationInput
    outlet?: OutletOrderByWithRelationInput
    _relevance?: StockMovementOrderByRelevanceInput
  }

  export type StockMovementWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: StockMovementWhereInput | StockMovementWhereInput[]
    OR?: StockMovementWhereInput[]
    NOT?: StockMovementWhereInput | StockMovementWhereInput[]
    itemId?: IntFilter<"StockMovement"> | number
    outletId?: IntFilter<"StockMovement"> | number
    previousAvailableQuantity?: DecimalFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    movementType?: StringFilter<"StockMovement"> | string
    documentId?: IntFilter<"StockMovement"> | number
    reason?: StringFilter<"StockMovement"> | string
    remark?: StringFilter<"StockMovement"> | string
    deleted?: BoolFilter<"StockMovement"> | boolean
    createdAt?: DateTimeNullableFilter<"StockMovement"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"StockMovement"> | Date | string | null
    version?: IntNullableFilter<"StockMovement"> | number | null
    performedBy?: StringNullableFilter<"StockMovement"> | string | null
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
    outlet?: XOR<OutletScalarRelationFilter, OutletWhereInput>
  }, "id">

  export type StockMovementOrderByWithAggregationInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    previousAvailableQuantity?: SortOrder
    previousOnHandQuantity?: SortOrder
    availableQuantityDelta?: SortOrder
    onHandQuantityDelta?: SortOrder
    movementType?: SortOrder
    documentId?: SortOrder
    reason?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    performedBy?: SortOrderInput | SortOrder
    _count?: StockMovementCountOrderByAggregateInput
    _avg?: StockMovementAvgOrderByAggregateInput
    _max?: StockMovementMaxOrderByAggregateInput
    _min?: StockMovementMinOrderByAggregateInput
    _sum?: StockMovementSumOrderByAggregateInput
  }

  export type StockMovementScalarWhereWithAggregatesInput = {
    AND?: StockMovementScalarWhereWithAggregatesInput | StockMovementScalarWhereWithAggregatesInput[]
    OR?: StockMovementScalarWhereWithAggregatesInput[]
    NOT?: StockMovementScalarWhereWithAggregatesInput | StockMovementScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"StockMovement"> | number
    itemId?: IntWithAggregatesFilter<"StockMovement"> | number
    outletId?: IntWithAggregatesFilter<"StockMovement"> | number
    previousAvailableQuantity?: DecimalWithAggregatesFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalWithAggregatesFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalWithAggregatesFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalWithAggregatesFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    movementType?: StringWithAggregatesFilter<"StockMovement"> | string
    documentId?: IntWithAggregatesFilter<"StockMovement"> | number
    reason?: StringWithAggregatesFilter<"StockMovement"> | string
    remark?: StringWithAggregatesFilter<"StockMovement"> | string
    deleted?: BoolWithAggregatesFilter<"StockMovement"> | boolean
    createdAt?: DateTimeNullableWithAggregatesFilter<"StockMovement"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"StockMovement"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"StockMovement"> | number | null
    performedBy?: StringNullableWithAggregatesFilter<"StockMovement"> | string | null
  }

  export type StockMovementArchiveWhereInput = {
    AND?: StockMovementArchiveWhereInput | StockMovementArchiveWhereInput[]
    OR?: StockMovementArchiveWhereInput[]
    NOT?: StockMovementArchiveWhereInput | StockMovementArchiveWhereInput[]
    id?: IntFilter<"StockMovementArchive"> | number
    itemId?: IntFilter<"StockMovementArchive"> | number
    itemCode?: StringFilter<"StockMovementArchive"> | string
    itemName?: StringFilter<"StockMovementArchive"> | string
    outletId?: IntFilter<"StockMovementArchive"> | number
    outletName?: StringFilter<"StockMovementArchive"> | string
    previousAvailableQuantity?: DecimalFilter<"StockMovementArchive"> | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFilter<"StockMovementArchive"> | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFilter<"StockMovementArchive"> | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFilter<"StockMovementArchive"> | Decimal | DecimalJsLike | number | string
    movementType?: StringFilter<"StockMovementArchive"> | string
    documentId?: IntFilter<"StockMovementArchive"> | number
    documentType?: StringFilter<"StockMovementArchive"> | string
    reason?: StringFilter<"StockMovementArchive"> | string
    remark?: StringFilter<"StockMovementArchive"> | string
    deleted?: BoolFilter<"StockMovementArchive"> | boolean
    createdAt?: DateTimeNullableFilter<"StockMovementArchive"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"StockMovementArchive"> | Date | string | null
    version?: IntNullableFilter<"StockMovementArchive"> | number | null
  }

  export type StockMovementArchiveOrderByWithRelationInput = {
    id?: SortOrder
    itemId?: SortOrder
    itemCode?: SortOrder
    itemName?: SortOrder
    outletId?: SortOrder
    outletName?: SortOrder
    previousAvailableQuantity?: SortOrder
    previousOnHandQuantity?: SortOrder
    availableQuantityDelta?: SortOrder
    onHandQuantityDelta?: SortOrder
    movementType?: SortOrder
    documentId?: SortOrder
    documentType?: SortOrder
    reason?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _relevance?: StockMovementArchiveOrderByRelevanceInput
  }

  export type StockMovementArchiveWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: StockMovementArchiveWhereInput | StockMovementArchiveWhereInput[]
    OR?: StockMovementArchiveWhereInput[]
    NOT?: StockMovementArchiveWhereInput | StockMovementArchiveWhereInput[]
    itemId?: IntFilter<"StockMovementArchive"> | number
    itemCode?: StringFilter<"StockMovementArchive"> | string
    itemName?: StringFilter<"StockMovementArchive"> | string
    outletId?: IntFilter<"StockMovementArchive"> | number
    outletName?: StringFilter<"StockMovementArchive"> | string
    previousAvailableQuantity?: DecimalFilter<"StockMovementArchive"> | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFilter<"StockMovementArchive"> | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFilter<"StockMovementArchive"> | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFilter<"StockMovementArchive"> | Decimal | DecimalJsLike | number | string
    movementType?: StringFilter<"StockMovementArchive"> | string
    documentId?: IntFilter<"StockMovementArchive"> | number
    documentType?: StringFilter<"StockMovementArchive"> | string
    reason?: StringFilter<"StockMovementArchive"> | string
    remark?: StringFilter<"StockMovementArchive"> | string
    deleted?: BoolFilter<"StockMovementArchive"> | boolean
    createdAt?: DateTimeNullableFilter<"StockMovementArchive"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"StockMovementArchive"> | Date | string | null
    version?: IntNullableFilter<"StockMovementArchive"> | number | null
  }, "id">

  export type StockMovementArchiveOrderByWithAggregationInput = {
    id?: SortOrder
    itemId?: SortOrder
    itemCode?: SortOrder
    itemName?: SortOrder
    outletId?: SortOrder
    outletName?: SortOrder
    previousAvailableQuantity?: SortOrder
    previousOnHandQuantity?: SortOrder
    availableQuantityDelta?: SortOrder
    onHandQuantityDelta?: SortOrder
    movementType?: SortOrder
    documentId?: SortOrder
    documentType?: SortOrder
    reason?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: StockMovementArchiveCountOrderByAggregateInput
    _avg?: StockMovementArchiveAvgOrderByAggregateInput
    _max?: StockMovementArchiveMaxOrderByAggregateInput
    _min?: StockMovementArchiveMinOrderByAggregateInput
    _sum?: StockMovementArchiveSumOrderByAggregateInput
  }

  export type StockMovementArchiveScalarWhereWithAggregatesInput = {
    AND?: StockMovementArchiveScalarWhereWithAggregatesInput | StockMovementArchiveScalarWhereWithAggregatesInput[]
    OR?: StockMovementArchiveScalarWhereWithAggregatesInput[]
    NOT?: StockMovementArchiveScalarWhereWithAggregatesInput | StockMovementArchiveScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"StockMovementArchive"> | number
    itemId?: IntWithAggregatesFilter<"StockMovementArchive"> | number
    itemCode?: StringWithAggregatesFilter<"StockMovementArchive"> | string
    itemName?: StringWithAggregatesFilter<"StockMovementArchive"> | string
    outletId?: IntWithAggregatesFilter<"StockMovementArchive"> | number
    outletName?: StringWithAggregatesFilter<"StockMovementArchive"> | string
    previousAvailableQuantity?: DecimalWithAggregatesFilter<"StockMovementArchive"> | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalWithAggregatesFilter<"StockMovementArchive"> | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalWithAggregatesFilter<"StockMovementArchive"> | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalWithAggregatesFilter<"StockMovementArchive"> | Decimal | DecimalJsLike | number | string
    movementType?: StringWithAggregatesFilter<"StockMovementArchive"> | string
    documentId?: IntWithAggregatesFilter<"StockMovementArchive"> | number
    documentType?: StringWithAggregatesFilter<"StockMovementArchive"> | string
    reason?: StringWithAggregatesFilter<"StockMovementArchive"> | string
    remark?: StringWithAggregatesFilter<"StockMovementArchive"> | string
    deleted?: BoolWithAggregatesFilter<"StockMovementArchive"> | boolean
    createdAt?: DateTimeNullableWithAggregatesFilter<"StockMovementArchive"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"StockMovementArchive"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"StockMovementArchive"> | number | null
  }

  export type StockSnapshotWhereInput = {
    AND?: StockSnapshotWhereInput | StockSnapshotWhereInput[]
    OR?: StockSnapshotWhereInput[]
    NOT?: StockSnapshotWhereInput | StockSnapshotWhereInput[]
    id?: IntFilter<"StockSnapshot"> | number
    itemId?: IntFilter<"StockSnapshot"> | number
    outletId?: IntFilter<"StockSnapshot"> | number
    availableQuantity?: DecimalFilter<"StockSnapshot"> | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFilter<"StockSnapshot"> | Decimal | DecimalJsLike | number | string
    deleted?: BoolFilter<"StockSnapshot"> | boolean
    deletedAt?: DateTimeNullableFilter<"StockSnapshot"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"StockSnapshot"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"StockSnapshot"> | Date | string | null
    version?: IntNullableFilter<"StockSnapshot"> | number | null
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
    outlet?: XOR<OutletScalarRelationFilter, OutletWhereInput>
  }

  export type StockSnapshotOrderByWithRelationInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    availableQuantity?: SortOrder
    onHandQuantity?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    item?: ItemOrderByWithRelationInput
    outlet?: OutletOrderByWithRelationInput
  }

  export type StockSnapshotWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: StockSnapshotWhereInput | StockSnapshotWhereInput[]
    OR?: StockSnapshotWhereInput[]
    NOT?: StockSnapshotWhereInput | StockSnapshotWhereInput[]
    itemId?: IntFilter<"StockSnapshot"> | number
    outletId?: IntFilter<"StockSnapshot"> | number
    availableQuantity?: DecimalFilter<"StockSnapshot"> | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFilter<"StockSnapshot"> | Decimal | DecimalJsLike | number | string
    deleted?: BoolFilter<"StockSnapshot"> | boolean
    deletedAt?: DateTimeNullableFilter<"StockSnapshot"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"StockSnapshot"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"StockSnapshot"> | Date | string | null
    version?: IntNullableFilter<"StockSnapshot"> | number | null
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
    outlet?: XOR<OutletScalarRelationFilter, OutletWhereInput>
  }, "id">

  export type StockSnapshotOrderByWithAggregationInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    availableQuantity?: SortOrder
    onHandQuantity?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: StockSnapshotCountOrderByAggregateInput
    _avg?: StockSnapshotAvgOrderByAggregateInput
    _max?: StockSnapshotMaxOrderByAggregateInput
    _min?: StockSnapshotMinOrderByAggregateInput
    _sum?: StockSnapshotSumOrderByAggregateInput
  }

  export type StockSnapshotScalarWhereWithAggregatesInput = {
    AND?: StockSnapshotScalarWhereWithAggregatesInput | StockSnapshotScalarWhereWithAggregatesInput[]
    OR?: StockSnapshotScalarWhereWithAggregatesInput[]
    NOT?: StockSnapshotScalarWhereWithAggregatesInput | StockSnapshotScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"StockSnapshot"> | number
    itemId?: IntWithAggregatesFilter<"StockSnapshot"> | number
    outletId?: IntWithAggregatesFilter<"StockSnapshot"> | number
    availableQuantity?: DecimalWithAggregatesFilter<"StockSnapshot"> | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalWithAggregatesFilter<"StockSnapshot"> | Decimal | DecimalJsLike | number | string
    deleted?: BoolWithAggregatesFilter<"StockSnapshot"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"StockSnapshot"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"StockSnapshot"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"StockSnapshot"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"StockSnapshot"> | number | null
  }

  export type MenuProfileOutletWhereInput = {
    AND?: MenuProfileOutletWhereInput | MenuProfileOutletWhereInput[]
    OR?: MenuProfileOutletWhereInput[]
    NOT?: MenuProfileOutletWhereInput | MenuProfileOutletWhereInput[]
    id?: IntFilter<"MenuProfileOutlet"> | number
    outletId?: IntFilter<"MenuProfileOutlet"> | number
    menuProfileID?: IntFilter<"MenuProfileOutlet"> | number
    deleted?: BoolFilter<"MenuProfileOutlet"> | boolean
    deletedAt?: DateTimeNullableFilter<"MenuProfileOutlet"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"MenuProfileOutlet"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"MenuProfileOutlet"> | Date | string | null
    version?: IntNullableFilter<"MenuProfileOutlet"> | number | null
  }

  export type MenuProfileOutletOrderByWithRelationInput = {
    id?: SortOrder
    outletId?: SortOrder
    menuProfileID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
  }

  export type MenuProfileOutletWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MenuProfileOutletWhereInput | MenuProfileOutletWhereInput[]
    OR?: MenuProfileOutletWhereInput[]
    NOT?: MenuProfileOutletWhereInput | MenuProfileOutletWhereInput[]
    outletId?: IntFilter<"MenuProfileOutlet"> | number
    menuProfileID?: IntFilter<"MenuProfileOutlet"> | number
    deleted?: BoolFilter<"MenuProfileOutlet"> | boolean
    deletedAt?: DateTimeNullableFilter<"MenuProfileOutlet"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"MenuProfileOutlet"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"MenuProfileOutlet"> | Date | string | null
    version?: IntNullableFilter<"MenuProfileOutlet"> | number | null
  }, "id">

  export type MenuProfileOutletOrderByWithAggregationInput = {
    id?: SortOrder
    outletId?: SortOrder
    menuProfileID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: MenuProfileOutletCountOrderByAggregateInput
    _avg?: MenuProfileOutletAvgOrderByAggregateInput
    _max?: MenuProfileOutletMaxOrderByAggregateInput
    _min?: MenuProfileOutletMinOrderByAggregateInput
    _sum?: MenuProfileOutletSumOrderByAggregateInput
  }

  export type MenuProfileOutletScalarWhereWithAggregatesInput = {
    AND?: MenuProfileOutletScalarWhereWithAggregatesInput | MenuProfileOutletScalarWhereWithAggregatesInput[]
    OR?: MenuProfileOutletScalarWhereWithAggregatesInput[]
    NOT?: MenuProfileOutletScalarWhereWithAggregatesInput | MenuProfileOutletScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MenuProfileOutlet"> | number
    outletId?: IntWithAggregatesFilter<"MenuProfileOutlet"> | number
    menuProfileID?: IntWithAggregatesFilter<"MenuProfileOutlet"> | number
    deleted?: BoolWithAggregatesFilter<"MenuProfileOutlet"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"MenuProfileOutlet"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"MenuProfileOutlet"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"MenuProfileOutlet"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"MenuProfileOutlet"> | number | null
  }

  export type MenuProfileWhereInput = {
    AND?: MenuProfileWhereInput | MenuProfileWhereInput[]
    OR?: MenuProfileWhereInput[]
    NOT?: MenuProfileWhereInput | MenuProfileWhereInput[]
    id?: IntFilter<"MenuProfile"> | number
    name?: StringFilter<"MenuProfile"> | string
    dateStart?: StringFilter<"MenuProfile"> | string
    dateEnd?: StringFilter<"MenuProfile"> | string
    timeStart?: StringFilter<"MenuProfile"> | string
    timeEnd?: StringFilter<"MenuProfile"> | string
    isMonday?: BoolFilter<"MenuProfile"> | boolean
    isTuesday?: BoolFilter<"MenuProfile"> | boolean
    isWednesday?: BoolFilter<"MenuProfile"> | boolean
    isThursday?: BoolFilter<"MenuProfile"> | boolean
    isFriday?: BoolFilter<"MenuProfile"> | boolean
    isSaturday?: BoolFilter<"MenuProfile"> | boolean
    isSunday?: BoolFilter<"MenuProfile"> | boolean
    sequence?: IntFilter<"MenuProfile"> | number
    deleted?: BoolFilter<"MenuProfile"> | boolean
    deletedAt?: DateTimeNullableFilter<"MenuProfile"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"MenuProfile"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"MenuProfile"> | Date | string | null
    version?: IntNullableFilter<"MenuProfile"> | number | null
    menuCategories?: MenuCategoryListRelationFilter
  }

  export type MenuProfileOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    dateStart?: SortOrder
    dateEnd?: SortOrder
    timeStart?: SortOrder
    timeEnd?: SortOrder
    isMonday?: SortOrder
    isTuesday?: SortOrder
    isWednesday?: SortOrder
    isThursday?: SortOrder
    isFriday?: SortOrder
    isSaturday?: SortOrder
    isSunday?: SortOrder
    sequence?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    menuCategories?: MenuCategoryOrderByRelationAggregateInput
    _relevance?: MenuProfileOrderByRelevanceInput
  }

  export type MenuProfileWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MenuProfileWhereInput | MenuProfileWhereInput[]
    OR?: MenuProfileWhereInput[]
    NOT?: MenuProfileWhereInput | MenuProfileWhereInput[]
    name?: StringFilter<"MenuProfile"> | string
    dateStart?: StringFilter<"MenuProfile"> | string
    dateEnd?: StringFilter<"MenuProfile"> | string
    timeStart?: StringFilter<"MenuProfile"> | string
    timeEnd?: StringFilter<"MenuProfile"> | string
    isMonday?: BoolFilter<"MenuProfile"> | boolean
    isTuesday?: BoolFilter<"MenuProfile"> | boolean
    isWednesday?: BoolFilter<"MenuProfile"> | boolean
    isThursday?: BoolFilter<"MenuProfile"> | boolean
    isFriday?: BoolFilter<"MenuProfile"> | boolean
    isSaturday?: BoolFilter<"MenuProfile"> | boolean
    isSunday?: BoolFilter<"MenuProfile"> | boolean
    sequence?: IntFilter<"MenuProfile"> | number
    deleted?: BoolFilter<"MenuProfile"> | boolean
    deletedAt?: DateTimeNullableFilter<"MenuProfile"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"MenuProfile"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"MenuProfile"> | Date | string | null
    version?: IntNullableFilter<"MenuProfile"> | number | null
    menuCategories?: MenuCategoryListRelationFilter
  }, "id">

  export type MenuProfileOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    dateStart?: SortOrder
    dateEnd?: SortOrder
    timeStart?: SortOrder
    timeEnd?: SortOrder
    isMonday?: SortOrder
    isTuesday?: SortOrder
    isWednesday?: SortOrder
    isThursday?: SortOrder
    isFriday?: SortOrder
    isSaturday?: SortOrder
    isSunday?: SortOrder
    sequence?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: MenuProfileCountOrderByAggregateInput
    _avg?: MenuProfileAvgOrderByAggregateInput
    _max?: MenuProfileMaxOrderByAggregateInput
    _min?: MenuProfileMinOrderByAggregateInput
    _sum?: MenuProfileSumOrderByAggregateInput
  }

  export type MenuProfileScalarWhereWithAggregatesInput = {
    AND?: MenuProfileScalarWhereWithAggregatesInput | MenuProfileScalarWhereWithAggregatesInput[]
    OR?: MenuProfileScalarWhereWithAggregatesInput[]
    NOT?: MenuProfileScalarWhereWithAggregatesInput | MenuProfileScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MenuProfile"> | number
    name?: StringWithAggregatesFilter<"MenuProfile"> | string
    dateStart?: StringWithAggregatesFilter<"MenuProfile"> | string
    dateEnd?: StringWithAggregatesFilter<"MenuProfile"> | string
    timeStart?: StringWithAggregatesFilter<"MenuProfile"> | string
    timeEnd?: StringWithAggregatesFilter<"MenuProfile"> | string
    isMonday?: BoolWithAggregatesFilter<"MenuProfile"> | boolean
    isTuesday?: BoolWithAggregatesFilter<"MenuProfile"> | boolean
    isWednesday?: BoolWithAggregatesFilter<"MenuProfile"> | boolean
    isThursday?: BoolWithAggregatesFilter<"MenuProfile"> | boolean
    isFriday?: BoolWithAggregatesFilter<"MenuProfile"> | boolean
    isSaturday?: BoolWithAggregatesFilter<"MenuProfile"> | boolean
    isSunday?: BoolWithAggregatesFilter<"MenuProfile"> | boolean
    sequence?: IntWithAggregatesFilter<"MenuProfile"> | number
    deleted?: BoolWithAggregatesFilter<"MenuProfile"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"MenuProfile"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"MenuProfile"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"MenuProfile"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"MenuProfile"> | number | null
  }

  export type MenuCategoryWhereInput = {
    AND?: MenuCategoryWhereInput | MenuCategoryWhereInput[]
    OR?: MenuCategoryWhereInput[]
    NOT?: MenuCategoryWhereInput | MenuCategoryWhereInput[]
    id?: IntFilter<"MenuCategory"> | number
    name?: StringFilter<"MenuCategory"> | string
    menuProfileID?: IntFilter<"MenuCategory"> | number
    imageURL?: StringNullableFilter<"MenuCategory"> | string | null
    deleted?: BoolFilter<"MenuCategory"> | boolean
    deletedAt?: DateTimeNullableFilter<"MenuCategory"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"MenuCategory"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"MenuCategory"> | Date | string | null
    version?: IntNullableFilter<"MenuCategory"> | number | null
    menuProfile?: XOR<MenuProfileScalarRelationFilter, MenuProfileWhereInput>
    menuItems?: MenuItemListRelationFilter
  }

  export type MenuCategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    menuProfileID?: SortOrder
    imageURL?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    menuProfile?: MenuProfileOrderByWithRelationInput
    menuItems?: MenuItemOrderByRelationAggregateInput
    _relevance?: MenuCategoryOrderByRelevanceInput
  }

  export type MenuCategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MenuCategoryWhereInput | MenuCategoryWhereInput[]
    OR?: MenuCategoryWhereInput[]
    NOT?: MenuCategoryWhereInput | MenuCategoryWhereInput[]
    name?: StringFilter<"MenuCategory"> | string
    menuProfileID?: IntFilter<"MenuCategory"> | number
    imageURL?: StringNullableFilter<"MenuCategory"> | string | null
    deleted?: BoolFilter<"MenuCategory"> | boolean
    deletedAt?: DateTimeNullableFilter<"MenuCategory"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"MenuCategory"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"MenuCategory"> | Date | string | null
    version?: IntNullableFilter<"MenuCategory"> | number | null
    menuProfile?: XOR<MenuProfileScalarRelationFilter, MenuProfileWhereInput>
    menuItems?: MenuItemListRelationFilter
  }, "id">

  export type MenuCategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    menuProfileID?: SortOrder
    imageURL?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: MenuCategoryCountOrderByAggregateInput
    _avg?: MenuCategoryAvgOrderByAggregateInput
    _max?: MenuCategoryMaxOrderByAggregateInput
    _min?: MenuCategoryMinOrderByAggregateInput
    _sum?: MenuCategorySumOrderByAggregateInput
  }

  export type MenuCategoryScalarWhereWithAggregatesInput = {
    AND?: MenuCategoryScalarWhereWithAggregatesInput | MenuCategoryScalarWhereWithAggregatesInput[]
    OR?: MenuCategoryScalarWhereWithAggregatesInput[]
    NOT?: MenuCategoryScalarWhereWithAggregatesInput | MenuCategoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MenuCategory"> | number
    name?: StringWithAggregatesFilter<"MenuCategory"> | string
    menuProfileID?: IntWithAggregatesFilter<"MenuCategory"> | number
    imageURL?: StringNullableWithAggregatesFilter<"MenuCategory"> | string | null
    deleted?: BoolWithAggregatesFilter<"MenuCategory"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"MenuCategory"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"MenuCategory"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"MenuCategory"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"MenuCategory"> | number | null
  }

  export type MenuItemWhereInput = {
    AND?: MenuItemWhereInput | MenuItemWhereInput[]
    OR?: MenuItemWhereInput[]
    NOT?: MenuItemWhereInput | MenuItemWhereInput[]
    id?: IntFilter<"MenuItem"> | number
    name?: StringFilter<"MenuItem"> | string
    itemID?: IntFilter<"MenuItem"> | number
    itemCode?: StringFilter<"MenuItem"> | string
    imageURL?: StringNullableFilter<"MenuItem"> | string | null
    price?: DecimalFilter<"MenuItem"> | Decimal | DecimalJsLike | number | string
    sequence?: IntFilter<"MenuItem"> | number
    menuCategoryID?: IntFilter<"MenuItem"> | number
    deleted?: BoolFilter<"MenuItem"> | boolean
    deletedAt?: DateTimeNullableFilter<"MenuItem"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"MenuItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"MenuItem"> | Date | string | null
    version?: IntNullableFilter<"MenuItem"> | number | null
    menuCategory?: XOR<MenuCategoryScalarRelationFilter, MenuCategoryWhereInput>
    menuItemModifierGroups?: MenuItemModifierGroupListRelationFilter
    recipes?: RecipeListRelationFilter
  }

  export type MenuItemOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    itemID?: SortOrder
    itemCode?: SortOrder
    imageURL?: SortOrderInput | SortOrder
    price?: SortOrder
    sequence?: SortOrder
    menuCategoryID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    menuCategory?: MenuCategoryOrderByWithRelationInput
    menuItemModifierGroups?: MenuItemModifierGroupOrderByRelationAggregateInput
    recipes?: RecipeOrderByRelationAggregateInput
    _relevance?: MenuItemOrderByRelevanceInput
  }

  export type MenuItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MenuItemWhereInput | MenuItemWhereInput[]
    OR?: MenuItemWhereInput[]
    NOT?: MenuItemWhereInput | MenuItemWhereInput[]
    name?: StringFilter<"MenuItem"> | string
    itemID?: IntFilter<"MenuItem"> | number
    itemCode?: StringFilter<"MenuItem"> | string
    imageURL?: StringNullableFilter<"MenuItem"> | string | null
    price?: DecimalFilter<"MenuItem"> | Decimal | DecimalJsLike | number | string
    sequence?: IntFilter<"MenuItem"> | number
    menuCategoryID?: IntFilter<"MenuItem"> | number
    deleted?: BoolFilter<"MenuItem"> | boolean
    deletedAt?: DateTimeNullableFilter<"MenuItem"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"MenuItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"MenuItem"> | Date | string | null
    version?: IntNullableFilter<"MenuItem"> | number | null
    menuCategory?: XOR<MenuCategoryScalarRelationFilter, MenuCategoryWhereInput>
    menuItemModifierGroups?: MenuItemModifierGroupListRelationFilter
    recipes?: RecipeListRelationFilter
  }, "id">

  export type MenuItemOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    itemID?: SortOrder
    itemCode?: SortOrder
    imageURL?: SortOrderInput | SortOrder
    price?: SortOrder
    sequence?: SortOrder
    menuCategoryID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: MenuItemCountOrderByAggregateInput
    _avg?: MenuItemAvgOrderByAggregateInput
    _max?: MenuItemMaxOrderByAggregateInput
    _min?: MenuItemMinOrderByAggregateInput
    _sum?: MenuItemSumOrderByAggregateInput
  }

  export type MenuItemScalarWhereWithAggregatesInput = {
    AND?: MenuItemScalarWhereWithAggregatesInput | MenuItemScalarWhereWithAggregatesInput[]
    OR?: MenuItemScalarWhereWithAggregatesInput[]
    NOT?: MenuItemScalarWhereWithAggregatesInput | MenuItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MenuItem"> | number
    name?: StringWithAggregatesFilter<"MenuItem"> | string
    itemID?: IntWithAggregatesFilter<"MenuItem"> | number
    itemCode?: StringWithAggregatesFilter<"MenuItem"> | string
    imageURL?: StringNullableWithAggregatesFilter<"MenuItem"> | string | null
    price?: DecimalWithAggregatesFilter<"MenuItem"> | Decimal | DecimalJsLike | number | string
    sequence?: IntWithAggregatesFilter<"MenuItem"> | number
    menuCategoryID?: IntWithAggregatesFilter<"MenuItem"> | number
    deleted?: BoolWithAggregatesFilter<"MenuItem"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"MenuItem"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"MenuItem"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"MenuItem"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"MenuItem"> | number | null
  }

  export type MenuItemModifierGroupWhereInput = {
    AND?: MenuItemModifierGroupWhereInput | MenuItemModifierGroupWhereInput[]
    OR?: MenuItemModifierGroupWhereInput[]
    NOT?: MenuItemModifierGroupWhereInput | MenuItemModifierGroupWhereInput[]
    id?: IntFilter<"MenuItemModifierGroup"> | number
    name?: StringFilter<"MenuItemModifierGroup"> | string
    minSelection?: IntFilter<"MenuItemModifierGroup"> | number
    maxSelection?: IntFilter<"MenuItemModifierGroup"> | number
    sequence?: IntFilter<"MenuItemModifierGroup"> | number
    menuItemID?: IntFilter<"MenuItemModifierGroup"> | number
    deleted?: BoolFilter<"MenuItemModifierGroup"> | boolean
    deletedAt?: DateTimeNullableFilter<"MenuItemModifierGroup"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"MenuItemModifierGroup"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"MenuItemModifierGroup"> | Date | string | null
    version?: IntNullableFilter<"MenuItemModifierGroup"> | number | null
    freeModifierLimit?: IntNullableFilter<"MenuItemModifierGroup"> | number | null
    menuItem?: XOR<MenuItemScalarRelationFilter, MenuItemWhereInput>
    menuItemModifiers?: MenuItemModifierListRelationFilter
  }

  export type MenuItemModifierGroupOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    minSelection?: SortOrder
    maxSelection?: SortOrder
    sequence?: SortOrder
    menuItemID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    freeModifierLimit?: SortOrderInput | SortOrder
    menuItem?: MenuItemOrderByWithRelationInput
    menuItemModifiers?: MenuItemModifierOrderByRelationAggregateInput
    _relevance?: MenuItemModifierGroupOrderByRelevanceInput
  }

  export type MenuItemModifierGroupWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MenuItemModifierGroupWhereInput | MenuItemModifierGroupWhereInput[]
    OR?: MenuItemModifierGroupWhereInput[]
    NOT?: MenuItemModifierGroupWhereInput | MenuItemModifierGroupWhereInput[]
    name?: StringFilter<"MenuItemModifierGroup"> | string
    minSelection?: IntFilter<"MenuItemModifierGroup"> | number
    maxSelection?: IntFilter<"MenuItemModifierGroup"> | number
    sequence?: IntFilter<"MenuItemModifierGroup"> | number
    menuItemID?: IntFilter<"MenuItemModifierGroup"> | number
    deleted?: BoolFilter<"MenuItemModifierGroup"> | boolean
    deletedAt?: DateTimeNullableFilter<"MenuItemModifierGroup"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"MenuItemModifierGroup"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"MenuItemModifierGroup"> | Date | string | null
    version?: IntNullableFilter<"MenuItemModifierGroup"> | number | null
    freeModifierLimit?: IntNullableFilter<"MenuItemModifierGroup"> | number | null
    menuItem?: XOR<MenuItemScalarRelationFilter, MenuItemWhereInput>
    menuItemModifiers?: MenuItemModifierListRelationFilter
  }, "id">

  export type MenuItemModifierGroupOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    minSelection?: SortOrder
    maxSelection?: SortOrder
    sequence?: SortOrder
    menuItemID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    freeModifierLimit?: SortOrderInput | SortOrder
    _count?: MenuItemModifierGroupCountOrderByAggregateInput
    _avg?: MenuItemModifierGroupAvgOrderByAggregateInput
    _max?: MenuItemModifierGroupMaxOrderByAggregateInput
    _min?: MenuItemModifierGroupMinOrderByAggregateInput
    _sum?: MenuItemModifierGroupSumOrderByAggregateInput
  }

  export type MenuItemModifierGroupScalarWhereWithAggregatesInput = {
    AND?: MenuItemModifierGroupScalarWhereWithAggregatesInput | MenuItemModifierGroupScalarWhereWithAggregatesInput[]
    OR?: MenuItemModifierGroupScalarWhereWithAggregatesInput[]
    NOT?: MenuItemModifierGroupScalarWhereWithAggregatesInput | MenuItemModifierGroupScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MenuItemModifierGroup"> | number
    name?: StringWithAggregatesFilter<"MenuItemModifierGroup"> | string
    minSelection?: IntWithAggregatesFilter<"MenuItemModifierGroup"> | number
    maxSelection?: IntWithAggregatesFilter<"MenuItemModifierGroup"> | number
    sequence?: IntWithAggregatesFilter<"MenuItemModifierGroup"> | number
    menuItemID?: IntWithAggregatesFilter<"MenuItemModifierGroup"> | number
    deleted?: BoolWithAggregatesFilter<"MenuItemModifierGroup"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"MenuItemModifierGroup"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"MenuItemModifierGroup"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"MenuItemModifierGroup"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"MenuItemModifierGroup"> | number | null
    freeModifierLimit?: IntNullableWithAggregatesFilter<"MenuItemModifierGroup"> | number | null
  }

  export type MenuItemModifierWhereInput = {
    AND?: MenuItemModifierWhereInput | MenuItemModifierWhereInput[]
    OR?: MenuItemModifierWhereInput[]
    NOT?: MenuItemModifierWhereInput | MenuItemModifierWhereInput[]
    id?: IntFilter<"MenuItemModifier"> | number
    name?: StringFilter<"MenuItemModifier"> | string
    itemID?: IntFilter<"MenuItemModifier"> | number
    itemCode?: StringFilter<"MenuItemModifier"> | string
    imageURL?: StringNullableFilter<"MenuItemModifier"> | string | null
    price?: DecimalFilter<"MenuItemModifier"> | Decimal | DecimalJsLike | number | string
    defaultSelectionQty?: IntFilter<"MenuItemModifier"> | number
    sequence?: IntFilter<"MenuItemModifier"> | number
    menuItemModifierGroupID?: IntFilter<"MenuItemModifier"> | number
    deleted?: BoolFilter<"MenuItemModifier"> | boolean
    deletedAt?: DateTimeNullableFilter<"MenuItemModifier"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"MenuItemModifier"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"MenuItemModifier"> | Date | string | null
    version?: IntNullableFilter<"MenuItemModifier"> | number | null
    menuItemModifierGroup?: XOR<MenuItemModifierGroupScalarRelationFilter, MenuItemModifierGroupWhereInput>
    salesItemModifiers?: SalesItemModifierListRelationFilter
    recipes?: RecipeListRelationFilter
  }

  export type MenuItemModifierOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    itemID?: SortOrder
    itemCode?: SortOrder
    imageURL?: SortOrderInput | SortOrder
    price?: SortOrder
    defaultSelectionQty?: SortOrder
    sequence?: SortOrder
    menuItemModifierGroupID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    menuItemModifierGroup?: MenuItemModifierGroupOrderByWithRelationInput
    salesItemModifiers?: SalesItemModifierOrderByRelationAggregateInput
    recipes?: RecipeOrderByRelationAggregateInput
    _relevance?: MenuItemModifierOrderByRelevanceInput
  }

  export type MenuItemModifierWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MenuItemModifierWhereInput | MenuItemModifierWhereInput[]
    OR?: MenuItemModifierWhereInput[]
    NOT?: MenuItemModifierWhereInput | MenuItemModifierWhereInput[]
    name?: StringFilter<"MenuItemModifier"> | string
    itemID?: IntFilter<"MenuItemModifier"> | number
    itemCode?: StringFilter<"MenuItemModifier"> | string
    imageURL?: StringNullableFilter<"MenuItemModifier"> | string | null
    price?: DecimalFilter<"MenuItemModifier"> | Decimal | DecimalJsLike | number | string
    defaultSelectionQty?: IntFilter<"MenuItemModifier"> | number
    sequence?: IntFilter<"MenuItemModifier"> | number
    menuItemModifierGroupID?: IntFilter<"MenuItemModifier"> | number
    deleted?: BoolFilter<"MenuItemModifier"> | boolean
    deletedAt?: DateTimeNullableFilter<"MenuItemModifier"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"MenuItemModifier"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"MenuItemModifier"> | Date | string | null
    version?: IntNullableFilter<"MenuItemModifier"> | number | null
    menuItemModifierGroup?: XOR<MenuItemModifierGroupScalarRelationFilter, MenuItemModifierGroupWhereInput>
    salesItemModifiers?: SalesItemModifierListRelationFilter
    recipes?: RecipeListRelationFilter
  }, "id">

  export type MenuItemModifierOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    itemID?: SortOrder
    itemCode?: SortOrder
    imageURL?: SortOrderInput | SortOrder
    price?: SortOrder
    defaultSelectionQty?: SortOrder
    sequence?: SortOrder
    menuItemModifierGroupID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: MenuItemModifierCountOrderByAggregateInput
    _avg?: MenuItemModifierAvgOrderByAggregateInput
    _max?: MenuItemModifierMaxOrderByAggregateInput
    _min?: MenuItemModifierMinOrderByAggregateInput
    _sum?: MenuItemModifierSumOrderByAggregateInput
  }

  export type MenuItemModifierScalarWhereWithAggregatesInput = {
    AND?: MenuItemModifierScalarWhereWithAggregatesInput | MenuItemModifierScalarWhereWithAggregatesInput[]
    OR?: MenuItemModifierScalarWhereWithAggregatesInput[]
    NOT?: MenuItemModifierScalarWhereWithAggregatesInput | MenuItemModifierScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MenuItemModifier"> | number
    name?: StringWithAggregatesFilter<"MenuItemModifier"> | string
    itemID?: IntWithAggregatesFilter<"MenuItemModifier"> | number
    itemCode?: StringWithAggregatesFilter<"MenuItemModifier"> | string
    imageURL?: StringNullableWithAggregatesFilter<"MenuItemModifier"> | string | null
    price?: DecimalWithAggregatesFilter<"MenuItemModifier"> | Decimal | DecimalJsLike | number | string
    defaultSelectionQty?: IntWithAggregatesFilter<"MenuItemModifier"> | number
    sequence?: IntWithAggregatesFilter<"MenuItemModifier"> | number
    menuItemModifierGroupID?: IntWithAggregatesFilter<"MenuItemModifier"> | number
    deleted?: BoolWithAggregatesFilter<"MenuItemModifier"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"MenuItemModifier"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"MenuItemModifier"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"MenuItemModifier"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"MenuItemModifier"> | number | null
  }

  export type TableWhereInput = {
    AND?: TableWhereInput | TableWhereInput[]
    OR?: TableWhereInput[]
    NOT?: TableWhereInput | TableWhereInput[]
    id?: IntFilter<"Table"> | number
    outletId?: IntFilter<"Table"> | number
    tableNumber?: StringFilter<"Table"> | string
    capacity?: IntFilter<"Table"> | number
    status?: StringFilter<"Table"> | string
    salesId?: IntNullableFilter<"Table"> | number | null
    deleted?: BoolFilter<"Table"> | boolean
    deletedAt?: DateTimeNullableFilter<"Table"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Table"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Table"> | Date | string | null
    version?: IntNullableFilter<"Table"> | number | null
    outlet?: XOR<OutletScalarRelationFilter, OutletWhereInput>
    sales?: SalesListRelationFilter
    reservations?: ReservationListRelationFilter
  }

  export type TableOrderByWithRelationInput = {
    id?: SortOrder
    outletId?: SortOrder
    tableNumber?: SortOrder
    capacity?: SortOrder
    status?: SortOrder
    salesId?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    outlet?: OutletOrderByWithRelationInput
    sales?: SalesOrderByRelationAggregateInput
    reservations?: ReservationOrderByRelationAggregateInput
    _relevance?: TableOrderByRelevanceInput
  }

  export type TableWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TableWhereInput | TableWhereInput[]
    OR?: TableWhereInput[]
    NOT?: TableWhereInput | TableWhereInput[]
    outletId?: IntFilter<"Table"> | number
    tableNumber?: StringFilter<"Table"> | string
    capacity?: IntFilter<"Table"> | number
    status?: StringFilter<"Table"> | string
    salesId?: IntNullableFilter<"Table"> | number | null
    deleted?: BoolFilter<"Table"> | boolean
    deletedAt?: DateTimeNullableFilter<"Table"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Table"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Table"> | Date | string | null
    version?: IntNullableFilter<"Table"> | number | null
    outlet?: XOR<OutletScalarRelationFilter, OutletWhereInput>
    sales?: SalesListRelationFilter
    reservations?: ReservationListRelationFilter
  }, "id">

  export type TableOrderByWithAggregationInput = {
    id?: SortOrder
    outletId?: SortOrder
    tableNumber?: SortOrder
    capacity?: SortOrder
    status?: SortOrder
    salesId?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: TableCountOrderByAggregateInput
    _avg?: TableAvgOrderByAggregateInput
    _max?: TableMaxOrderByAggregateInput
    _min?: TableMinOrderByAggregateInput
    _sum?: TableSumOrderByAggregateInput
  }

  export type TableScalarWhereWithAggregatesInput = {
    AND?: TableScalarWhereWithAggregatesInput | TableScalarWhereWithAggregatesInput[]
    OR?: TableScalarWhereWithAggregatesInput[]
    NOT?: TableScalarWhereWithAggregatesInput | TableScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Table"> | number
    outletId?: IntWithAggregatesFilter<"Table"> | number
    tableNumber?: StringWithAggregatesFilter<"Table"> | string
    capacity?: IntWithAggregatesFilter<"Table"> | number
    status?: StringWithAggregatesFilter<"Table"> | string
    salesId?: IntNullableWithAggregatesFilter<"Table"> | number | null
    deleted?: BoolWithAggregatesFilter<"Table"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Table"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Table"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Table"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Table"> | number | null
  }

  export type RecipeWhereInput = {
    AND?: RecipeWhereInput | RecipeWhereInput[]
    OR?: RecipeWhereInput[]
    NOT?: RecipeWhereInput | RecipeWhereInput[]
    id?: IntFilter<"Recipe"> | number
    menuItemId?: IntFilter<"Recipe"> | number
    itemId?: IntFilter<"Recipe"> | number
    quantity?: FloatFilter<"Recipe"> | number
    unit?: StringFilter<"Recipe"> | string
    deleted?: BoolFilter<"Recipe"> | boolean
    deletedAt?: DateTimeNullableFilter<"Recipe"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Recipe"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Recipe"> | Date | string | null
    version?: IntNullableFilter<"Recipe"> | number | null
    batchYield?: FloatNullableFilter<"Recipe"> | number | null
    menuItemModifierId?: IntNullableFilter<"Recipe"> | number | null
    menuItemModifier?: XOR<MenuItemModifierNullableScalarRelationFilter, MenuItemModifierWhereInput> | null
    menuItem?: XOR<MenuItemScalarRelationFilter, MenuItemWhereInput>
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
  }

  export type RecipeOrderByWithRelationInput = {
    id?: SortOrder
    menuItemId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    unit?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    batchYield?: SortOrderInput | SortOrder
    menuItemModifierId?: SortOrderInput | SortOrder
    menuItemModifier?: MenuItemModifierOrderByWithRelationInput
    menuItem?: MenuItemOrderByWithRelationInput
    item?: ItemOrderByWithRelationInput
    _relevance?: RecipeOrderByRelevanceInput
  }

  export type RecipeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RecipeWhereInput | RecipeWhereInput[]
    OR?: RecipeWhereInput[]
    NOT?: RecipeWhereInput | RecipeWhereInput[]
    menuItemId?: IntFilter<"Recipe"> | number
    itemId?: IntFilter<"Recipe"> | number
    quantity?: FloatFilter<"Recipe"> | number
    unit?: StringFilter<"Recipe"> | string
    deleted?: BoolFilter<"Recipe"> | boolean
    deletedAt?: DateTimeNullableFilter<"Recipe"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Recipe"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Recipe"> | Date | string | null
    version?: IntNullableFilter<"Recipe"> | number | null
    batchYield?: FloatNullableFilter<"Recipe"> | number | null
    menuItemModifierId?: IntNullableFilter<"Recipe"> | number | null
    menuItemModifier?: XOR<MenuItemModifierNullableScalarRelationFilter, MenuItemModifierWhereInput> | null
    menuItem?: XOR<MenuItemScalarRelationFilter, MenuItemWhereInput>
    item?: XOR<ItemScalarRelationFilter, ItemWhereInput>
  }, "id">

  export type RecipeOrderByWithAggregationInput = {
    id?: SortOrder
    menuItemId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    unit?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    batchYield?: SortOrderInput | SortOrder
    menuItemModifierId?: SortOrderInput | SortOrder
    _count?: RecipeCountOrderByAggregateInput
    _avg?: RecipeAvgOrderByAggregateInput
    _max?: RecipeMaxOrderByAggregateInput
    _min?: RecipeMinOrderByAggregateInput
    _sum?: RecipeSumOrderByAggregateInput
  }

  export type RecipeScalarWhereWithAggregatesInput = {
    AND?: RecipeScalarWhereWithAggregatesInput | RecipeScalarWhereWithAggregatesInput[]
    OR?: RecipeScalarWhereWithAggregatesInput[]
    NOT?: RecipeScalarWhereWithAggregatesInput | RecipeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Recipe"> | number
    menuItemId?: IntWithAggregatesFilter<"Recipe"> | number
    itemId?: IntWithAggregatesFilter<"Recipe"> | number
    quantity?: FloatWithAggregatesFilter<"Recipe"> | number
    unit?: StringWithAggregatesFilter<"Recipe"> | string
    deleted?: BoolWithAggregatesFilter<"Recipe"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Recipe"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Recipe"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Recipe"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Recipe"> | number | null
    batchYield?: FloatNullableWithAggregatesFilter<"Recipe"> | number | null
    menuItemModifierId?: IntNullableWithAggregatesFilter<"Recipe"> | number | null
  }

  export type StationWhereInput = {
    AND?: StationWhereInput | StationWhereInput[]
    OR?: StationWhereInput[]
    NOT?: StationWhereInput | StationWhereInput[]
    id?: IntFilter<"Station"> | number
    outletId?: IntFilter<"Station"> | number
    name?: StringFilter<"Station"> | string
    deleted?: BoolFilter<"Station"> | boolean
    deletedAt?: DateTimeNullableFilter<"Station"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Station"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Station"> | Date | string | null
    version?: IntNullableFilter<"Station"> | number | null
    outlet?: XOR<OutletScalarRelationFilter, OutletWhereInput>
    orderRouting?: OrderRoutingListRelationFilter
  }

  export type StationOrderByWithRelationInput = {
    id?: SortOrder
    outletId?: SortOrder
    name?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    outlet?: OutletOrderByWithRelationInput
    orderRouting?: OrderRoutingOrderByRelationAggregateInput
    _relevance?: StationOrderByRelevanceInput
  }

  export type StationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: StationWhereInput | StationWhereInput[]
    OR?: StationWhereInput[]
    NOT?: StationWhereInput | StationWhereInput[]
    outletId?: IntFilter<"Station"> | number
    name?: StringFilter<"Station"> | string
    deleted?: BoolFilter<"Station"> | boolean
    deletedAt?: DateTimeNullableFilter<"Station"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Station"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Station"> | Date | string | null
    version?: IntNullableFilter<"Station"> | number | null
    outlet?: XOR<OutletScalarRelationFilter, OutletWhereInput>
    orderRouting?: OrderRoutingListRelationFilter
  }, "id">

  export type StationOrderByWithAggregationInput = {
    id?: SortOrder
    outletId?: SortOrder
    name?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: StationCountOrderByAggregateInput
    _avg?: StationAvgOrderByAggregateInput
    _max?: StationMaxOrderByAggregateInput
    _min?: StationMinOrderByAggregateInput
    _sum?: StationSumOrderByAggregateInput
  }

  export type StationScalarWhereWithAggregatesInput = {
    AND?: StationScalarWhereWithAggregatesInput | StationScalarWhereWithAggregatesInput[]
    OR?: StationScalarWhereWithAggregatesInput[]
    NOT?: StationScalarWhereWithAggregatesInput | StationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Station"> | number
    outletId?: IntWithAggregatesFilter<"Station"> | number
    name?: StringWithAggregatesFilter<"Station"> | string
    deleted?: BoolWithAggregatesFilter<"Station"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Station"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Station"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Station"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Station"> | number | null
  }

  export type ReservationWhereInput = {
    AND?: ReservationWhereInput | ReservationWhereInput[]
    OR?: ReservationWhereInput[]
    NOT?: ReservationWhereInput | ReservationWhereInput[]
    id?: IntFilter<"Reservation"> | number
    outletId?: IntFilter<"Reservation"> | number
    customerId?: IntNullableFilter<"Reservation"> | number | null
    tableId?: IntNullableFilter<"Reservation"> | number | null
    dateTime?: DateTimeFilter<"Reservation"> | Date | string
    partySize?: IntFilter<"Reservation"> | number
    status?: StringFilter<"Reservation"> | string
    deleted?: BoolFilter<"Reservation"> | boolean
    deletedAt?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    version?: IntNullableFilter<"Reservation"> | number | null
    outlet?: XOR<OutletScalarRelationFilter, OutletWhereInput>
    customer?: XOR<CustomerNullableScalarRelationFilter, CustomerWhereInput> | null
    table?: XOR<TableNullableScalarRelationFilter, TableWhereInput> | null
  }

  export type ReservationOrderByWithRelationInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrderInput | SortOrder
    tableId?: SortOrderInput | SortOrder
    dateTime?: SortOrder
    partySize?: SortOrder
    status?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    outlet?: OutletOrderByWithRelationInput
    customer?: CustomerOrderByWithRelationInput
    table?: TableOrderByWithRelationInput
    _relevance?: ReservationOrderByRelevanceInput
  }

  export type ReservationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReservationWhereInput | ReservationWhereInput[]
    OR?: ReservationWhereInput[]
    NOT?: ReservationWhereInput | ReservationWhereInput[]
    outletId?: IntFilter<"Reservation"> | number
    customerId?: IntNullableFilter<"Reservation"> | number | null
    tableId?: IntNullableFilter<"Reservation"> | number | null
    dateTime?: DateTimeFilter<"Reservation"> | Date | string
    partySize?: IntFilter<"Reservation"> | number
    status?: StringFilter<"Reservation"> | string
    deleted?: BoolFilter<"Reservation"> | boolean
    deletedAt?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    version?: IntNullableFilter<"Reservation"> | number | null
    outlet?: XOR<OutletScalarRelationFilter, OutletWhereInput>
    customer?: XOR<CustomerNullableScalarRelationFilter, CustomerWhereInput> | null
    table?: XOR<TableNullableScalarRelationFilter, TableWhereInput> | null
  }, "id">

  export type ReservationOrderByWithAggregationInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrderInput | SortOrder
    tableId?: SortOrderInput | SortOrder
    dateTime?: SortOrder
    partySize?: SortOrder
    status?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: ReservationCountOrderByAggregateInput
    _avg?: ReservationAvgOrderByAggregateInput
    _max?: ReservationMaxOrderByAggregateInput
    _min?: ReservationMinOrderByAggregateInput
    _sum?: ReservationSumOrderByAggregateInput
  }

  export type ReservationScalarWhereWithAggregatesInput = {
    AND?: ReservationScalarWhereWithAggregatesInput | ReservationScalarWhereWithAggregatesInput[]
    OR?: ReservationScalarWhereWithAggregatesInput[]
    NOT?: ReservationScalarWhereWithAggregatesInput | ReservationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Reservation"> | number
    outletId?: IntWithAggregatesFilter<"Reservation"> | number
    customerId?: IntNullableWithAggregatesFilter<"Reservation"> | number | null
    tableId?: IntNullableWithAggregatesFilter<"Reservation"> | number | null
    dateTime?: DateTimeWithAggregatesFilter<"Reservation"> | Date | string
    partySize?: IntWithAggregatesFilter<"Reservation"> | number
    status?: StringWithAggregatesFilter<"Reservation"> | string
    deleted?: BoolWithAggregatesFilter<"Reservation"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Reservation"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Reservation"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Reservation"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Reservation"> | number | null
  }

  export type OrderRoutingWhereInput = {
    AND?: OrderRoutingWhereInput | OrderRoutingWhereInput[]
    OR?: OrderRoutingWhereInput[]
    NOT?: OrderRoutingWhereInput | OrderRoutingWhereInput[]
    id?: IntFilter<"OrderRouting"> | number
    salesItemId?: IntFilter<"OrderRouting"> | number
    stationId?: IntFilter<"OrderRouting"> | number
    status?: StringFilter<"OrderRouting"> | string
    sentAt?: DateTimeNullableFilter<"OrderRouting"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"OrderRouting"> | Date | string | null
    deleted?: BoolFilter<"OrderRouting"> | boolean
    deletedAt?: DateTimeNullableFilter<"OrderRouting"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"OrderRouting"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"OrderRouting"> | Date | string | null
    version?: IntNullableFilter<"OrderRouting"> | number | null
    salesItem?: XOR<SalesItemScalarRelationFilter, SalesItemWhereInput>
    station?: XOR<StationScalarRelationFilter, StationWhereInput>
  }

  export type OrderRoutingOrderByWithRelationInput = {
    id?: SortOrder
    salesItemId?: SortOrder
    stationId?: SortOrder
    status?: SortOrder
    sentAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    salesItem?: SalesItemOrderByWithRelationInput
    station?: StationOrderByWithRelationInput
    _relevance?: OrderRoutingOrderByRelevanceInput
  }

  export type OrderRoutingWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: OrderRoutingWhereInput | OrderRoutingWhereInput[]
    OR?: OrderRoutingWhereInput[]
    NOT?: OrderRoutingWhereInput | OrderRoutingWhereInput[]
    salesItemId?: IntFilter<"OrderRouting"> | number
    stationId?: IntFilter<"OrderRouting"> | number
    status?: StringFilter<"OrderRouting"> | string
    sentAt?: DateTimeNullableFilter<"OrderRouting"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"OrderRouting"> | Date | string | null
    deleted?: BoolFilter<"OrderRouting"> | boolean
    deletedAt?: DateTimeNullableFilter<"OrderRouting"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"OrderRouting"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"OrderRouting"> | Date | string | null
    version?: IntNullableFilter<"OrderRouting"> | number | null
    salesItem?: XOR<SalesItemScalarRelationFilter, SalesItemWhereInput>
    station?: XOR<StationScalarRelationFilter, StationWhereInput>
  }, "id">

  export type OrderRoutingOrderByWithAggregationInput = {
    id?: SortOrder
    salesItemId?: SortOrder
    stationId?: SortOrder
    status?: SortOrder
    sentAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: OrderRoutingCountOrderByAggregateInput
    _avg?: OrderRoutingAvgOrderByAggregateInput
    _max?: OrderRoutingMaxOrderByAggregateInput
    _min?: OrderRoutingMinOrderByAggregateInput
    _sum?: OrderRoutingSumOrderByAggregateInput
  }

  export type OrderRoutingScalarWhereWithAggregatesInput = {
    AND?: OrderRoutingScalarWhereWithAggregatesInput | OrderRoutingScalarWhereWithAggregatesInput[]
    OR?: OrderRoutingScalarWhereWithAggregatesInput[]
    NOT?: OrderRoutingScalarWhereWithAggregatesInput | OrderRoutingScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"OrderRouting"> | number
    salesItemId?: IntWithAggregatesFilter<"OrderRouting"> | number
    stationId?: IntWithAggregatesFilter<"OrderRouting"> | number
    status?: StringWithAggregatesFilter<"OrderRouting"> | string
    sentAt?: DateTimeNullableWithAggregatesFilter<"OrderRouting"> | Date | string | null
    completedAt?: DateTimeNullableWithAggregatesFilter<"OrderRouting"> | Date | string | null
    deleted?: BoolWithAggregatesFilter<"OrderRouting"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"OrderRouting"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"OrderRouting"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"OrderRouting"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"OrderRouting"> | number | null
  }

  export type WaitlistWhereInput = {
    AND?: WaitlistWhereInput | WaitlistWhereInput[]
    OR?: WaitlistWhereInput[]
    NOT?: WaitlistWhereInput | WaitlistWhereInput[]
    id?: IntFilter<"Waitlist"> | number
    outletId?: IntFilter<"Waitlist"> | number
    customerId?: IntNullableFilter<"Waitlist"> | number | null
    partySize?: IntFilter<"Waitlist"> | number
    status?: StringFilter<"Waitlist"> | string
    waitTime?: IntNullableFilter<"Waitlist"> | number | null
    deleted?: BoolFilter<"Waitlist"> | boolean
    deletedAt?: DateTimeNullableFilter<"Waitlist"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Waitlist"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Waitlist"> | Date | string | null
    version?: IntNullableFilter<"Waitlist"> | number | null
    outlet?: XOR<OutletScalarRelationFilter, OutletWhereInput>
    customer?: XOR<CustomerNullableScalarRelationFilter, CustomerWhereInput> | null
  }

  export type WaitlistOrderByWithRelationInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrderInput | SortOrder
    partySize?: SortOrder
    status?: SortOrder
    waitTime?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    outlet?: OutletOrderByWithRelationInput
    customer?: CustomerOrderByWithRelationInput
    _relevance?: WaitlistOrderByRelevanceInput
  }

  export type WaitlistWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: WaitlistWhereInput | WaitlistWhereInput[]
    OR?: WaitlistWhereInput[]
    NOT?: WaitlistWhereInput | WaitlistWhereInput[]
    outletId?: IntFilter<"Waitlist"> | number
    customerId?: IntNullableFilter<"Waitlist"> | number | null
    partySize?: IntFilter<"Waitlist"> | number
    status?: StringFilter<"Waitlist"> | string
    waitTime?: IntNullableFilter<"Waitlist"> | number | null
    deleted?: BoolFilter<"Waitlist"> | boolean
    deletedAt?: DateTimeNullableFilter<"Waitlist"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Waitlist"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Waitlist"> | Date | string | null
    version?: IntNullableFilter<"Waitlist"> | number | null
    outlet?: XOR<OutletScalarRelationFilter, OutletWhereInput>
    customer?: XOR<CustomerNullableScalarRelationFilter, CustomerWhereInput> | null
  }, "id">

  export type WaitlistOrderByWithAggregationInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrderInput | SortOrder
    partySize?: SortOrder
    status?: SortOrder
    waitTime?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: WaitlistCountOrderByAggregateInput
    _avg?: WaitlistAvgOrderByAggregateInput
    _max?: WaitlistMaxOrderByAggregateInput
    _min?: WaitlistMinOrderByAggregateInput
    _sum?: WaitlistSumOrderByAggregateInput
  }

  export type WaitlistScalarWhereWithAggregatesInput = {
    AND?: WaitlistScalarWhereWithAggregatesInput | WaitlistScalarWhereWithAggregatesInput[]
    OR?: WaitlistScalarWhereWithAggregatesInput[]
    NOT?: WaitlistScalarWhereWithAggregatesInput | WaitlistScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Waitlist"> | number
    outletId?: IntWithAggregatesFilter<"Waitlist"> | number
    customerId?: IntNullableWithAggregatesFilter<"Waitlist"> | number | null
    partySize?: IntWithAggregatesFilter<"Waitlist"> | number
    status?: StringWithAggregatesFilter<"Waitlist"> | string
    waitTime?: IntNullableWithAggregatesFilter<"Waitlist"> | number | null
    deleted?: BoolWithAggregatesFilter<"Waitlist"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Waitlist"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"Waitlist"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Waitlist"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"Waitlist"> | number | null
  }

  export type SplitBillWhereInput = {
    AND?: SplitBillWhereInput | SplitBillWhereInput[]
    OR?: SplitBillWhereInput[]
    NOT?: SplitBillWhereInput | SplitBillWhereInput[]
    id?: IntFilter<"SplitBill"> | number
    salesId?: IntFilter<"SplitBill"> | number
    amount?: DecimalFilter<"SplitBill"> | Decimal | DecimalJsLike | number | string
    paymentId?: IntNullableFilter<"SplitBill"> | number | null
    customerId?: IntNullableFilter<"SplitBill"> | number | null
    deleted?: BoolFilter<"SplitBill"> | boolean
    deletedAt?: DateTimeNullableFilter<"SplitBill"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"SplitBill"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"SplitBill"> | Date | string | null
    version?: IntNullableFilter<"SplitBill"> | number | null
    payment?: XOR<PaymentNullableScalarRelationFilter, PaymentWhereInput> | null
    customer?: XOR<CustomerNullableScalarRelationFilter, CustomerWhereInput> | null
  }

  export type SplitBillOrderByWithRelationInput = {
    id?: SortOrder
    salesId?: SortOrder
    amount?: SortOrder
    paymentId?: SortOrderInput | SortOrder
    customerId?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    payment?: PaymentOrderByWithRelationInput
    customer?: CustomerOrderByWithRelationInput
  }

  export type SplitBillWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SplitBillWhereInput | SplitBillWhereInput[]
    OR?: SplitBillWhereInput[]
    NOT?: SplitBillWhereInput | SplitBillWhereInput[]
    salesId?: IntFilter<"SplitBill"> | number
    amount?: DecimalFilter<"SplitBill"> | Decimal | DecimalJsLike | number | string
    paymentId?: IntNullableFilter<"SplitBill"> | number | null
    customerId?: IntNullableFilter<"SplitBill"> | number | null
    deleted?: BoolFilter<"SplitBill"> | boolean
    deletedAt?: DateTimeNullableFilter<"SplitBill"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"SplitBill"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"SplitBill"> | Date | string | null
    version?: IntNullableFilter<"SplitBill"> | number | null
    payment?: XOR<PaymentNullableScalarRelationFilter, PaymentWhereInput> | null
    customer?: XOR<CustomerNullableScalarRelationFilter, CustomerWhereInput> | null
  }, "id">

  export type SplitBillOrderByWithAggregationInput = {
    id?: SortOrder
    salesId?: SortOrder
    amount?: SortOrder
    paymentId?: SortOrderInput | SortOrder
    customerId?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    version?: SortOrderInput | SortOrder
    _count?: SplitBillCountOrderByAggregateInput
    _avg?: SplitBillAvgOrderByAggregateInput
    _max?: SplitBillMaxOrderByAggregateInput
    _min?: SplitBillMinOrderByAggregateInput
    _sum?: SplitBillSumOrderByAggregateInput
  }

  export type SplitBillScalarWhereWithAggregatesInput = {
    AND?: SplitBillScalarWhereWithAggregatesInput | SplitBillScalarWhereWithAggregatesInput[]
    OR?: SplitBillScalarWhereWithAggregatesInput[]
    NOT?: SplitBillScalarWhereWithAggregatesInput | SplitBillScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SplitBill"> | number
    salesId?: IntWithAggregatesFilter<"SplitBill"> | number
    amount?: DecimalWithAggregatesFilter<"SplitBill"> | Decimal | DecimalJsLike | number | string
    paymentId?: IntNullableWithAggregatesFilter<"SplitBill"> | number | null
    customerId?: IntNullableWithAggregatesFilter<"SplitBill"> | number | null
    deleted?: BoolWithAggregatesFilter<"SplitBill"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"SplitBill"> | Date | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"SplitBill"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"SplitBill"> | Date | string | null
    version?: IntNullableWithAggregatesFilter<"SplitBill"> | number | null
  }

  export type PromotionWhereInput = {
    AND?: PromotionWhereInput | PromotionWhereInput[]
    OR?: PromotionWhereInput[]
    NOT?: PromotionWhereInput | PromotionWhereInput[]
    id?: IntFilter<"Promotion"> | number
    name?: StringFilter<"Promotion"> | string
    description?: StringNullableFilter<"Promotion"> | string | null
    type?: EnumPromotionTypeFilter<"Promotion"> | $Enums.PromotionType
    status?: EnumPromotionStatusFilter<"Promotion"> | $Enums.PromotionStatus
    priority?: IntFilter<"Promotion"> | number
    combinationRule?: EnumCombinationRuleFilter<"Promotion"> | $Enums.CombinationRule
    discountType?: EnumDiscountTypeFilter<"Promotion"> | $Enums.DiscountType
    discountValue?: DecimalNullableFilter<"Promotion"> | Decimal | DecimalJsLike | number | string | null
    buyQuantity?: IntNullableFilter<"Promotion"> | number | null
    getQuantity?: IntNullableFilter<"Promotion"> | number | null
    getDiscountValue?: DecimalNullableFilter<"Promotion"> | Decimal | DecimalJsLike | number | string | null
    startDate?: DateTimeNullableFilter<"Promotion"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Promotion"> | Date | string | null
    startTime?: StringNullableFilter<"Promotion"> | string | null
    endTime?: StringNullableFilter<"Promotion"> | string | null
    validDays?: StringNullableFilter<"Promotion"> | string | null
    minPurchaseAmount?: DecimalNullableFilter<"Promotion"> | Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: IntNullableFilter<"Promotion"> | number | null
    maxUsageTotal?: IntNullableFilter<"Promotion"> | number | null
    maxUsagePerCustomer?: IntNullableFilter<"Promotion"> | number | null
    currentUsage?: IntFilter<"Promotion"> | number
    isCustomerSpecific?: BoolFilter<"Promotion"> | boolean
    createdBy?: StringNullableFilter<"Promotion"> | string | null
    deleted?: BoolFilter<"Promotion"> | boolean
    deletedAt?: DateTimeNullableFilter<"Promotion"> | Date | string | null
    createdAt?: DateTimeFilter<"Promotion"> | Date | string
    updatedAt?: DateTimeFilter<"Promotion"> | Date | string
    version?: IntNullableFilter<"Promotion"> | number | null
    items?: PromotionItemListRelationFilter
    customers?: PromotionCustomerListRelationFilter
    usageHistory?: PromotionUsageListRelationFilter
  }

  export type PromotionOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    type?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    combinationRule?: SortOrder
    discountType?: SortOrder
    discountValue?: SortOrderInput | SortOrder
    buyQuantity?: SortOrderInput | SortOrder
    getQuantity?: SortOrderInput | SortOrder
    getDiscountValue?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    startTime?: SortOrderInput | SortOrder
    endTime?: SortOrderInput | SortOrder
    validDays?: SortOrderInput | SortOrder
    minPurchaseAmount?: SortOrderInput | SortOrder
    minPurchaseQty?: SortOrderInput | SortOrder
    maxUsageTotal?: SortOrderInput | SortOrder
    maxUsagePerCustomer?: SortOrderInput | SortOrder
    currentUsage?: SortOrder
    isCustomerSpecific?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrderInput | SortOrder
    items?: PromotionItemOrderByRelationAggregateInput
    customers?: PromotionCustomerOrderByRelationAggregateInput
    usageHistory?: PromotionUsageOrderByRelationAggregateInput
    _relevance?: PromotionOrderByRelevanceInput
  }

  export type PromotionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PromotionWhereInput | PromotionWhereInput[]
    OR?: PromotionWhereInput[]
    NOT?: PromotionWhereInput | PromotionWhereInput[]
    name?: StringFilter<"Promotion"> | string
    description?: StringNullableFilter<"Promotion"> | string | null
    type?: EnumPromotionTypeFilter<"Promotion"> | $Enums.PromotionType
    status?: EnumPromotionStatusFilter<"Promotion"> | $Enums.PromotionStatus
    priority?: IntFilter<"Promotion"> | number
    combinationRule?: EnumCombinationRuleFilter<"Promotion"> | $Enums.CombinationRule
    discountType?: EnumDiscountTypeFilter<"Promotion"> | $Enums.DiscountType
    discountValue?: DecimalNullableFilter<"Promotion"> | Decimal | DecimalJsLike | number | string | null
    buyQuantity?: IntNullableFilter<"Promotion"> | number | null
    getQuantity?: IntNullableFilter<"Promotion"> | number | null
    getDiscountValue?: DecimalNullableFilter<"Promotion"> | Decimal | DecimalJsLike | number | string | null
    startDate?: DateTimeNullableFilter<"Promotion"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Promotion"> | Date | string | null
    startTime?: StringNullableFilter<"Promotion"> | string | null
    endTime?: StringNullableFilter<"Promotion"> | string | null
    validDays?: StringNullableFilter<"Promotion"> | string | null
    minPurchaseAmount?: DecimalNullableFilter<"Promotion"> | Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: IntNullableFilter<"Promotion"> | number | null
    maxUsageTotal?: IntNullableFilter<"Promotion"> | number | null
    maxUsagePerCustomer?: IntNullableFilter<"Promotion"> | number | null
    currentUsage?: IntFilter<"Promotion"> | number
    isCustomerSpecific?: BoolFilter<"Promotion"> | boolean
    createdBy?: StringNullableFilter<"Promotion"> | string | null
    deleted?: BoolFilter<"Promotion"> | boolean
    deletedAt?: DateTimeNullableFilter<"Promotion"> | Date | string | null
    createdAt?: DateTimeFilter<"Promotion"> | Date | string
    updatedAt?: DateTimeFilter<"Promotion"> | Date | string
    version?: IntNullableFilter<"Promotion"> | number | null
    items?: PromotionItemListRelationFilter
    customers?: PromotionCustomerListRelationFilter
    usageHistory?: PromotionUsageListRelationFilter
  }, "id">

  export type PromotionOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    type?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    combinationRule?: SortOrder
    discountType?: SortOrder
    discountValue?: SortOrderInput | SortOrder
    buyQuantity?: SortOrderInput | SortOrder
    getQuantity?: SortOrderInput | SortOrder
    getDiscountValue?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    startTime?: SortOrderInput | SortOrder
    endTime?: SortOrderInput | SortOrder
    validDays?: SortOrderInput | SortOrder
    minPurchaseAmount?: SortOrderInput | SortOrder
    minPurchaseQty?: SortOrderInput | SortOrder
    maxUsageTotal?: SortOrderInput | SortOrder
    maxUsagePerCustomer?: SortOrderInput | SortOrder
    currentUsage?: SortOrder
    isCustomerSpecific?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrderInput | SortOrder
    _count?: PromotionCountOrderByAggregateInput
    _avg?: PromotionAvgOrderByAggregateInput
    _max?: PromotionMaxOrderByAggregateInput
    _min?: PromotionMinOrderByAggregateInput
    _sum?: PromotionSumOrderByAggregateInput
  }

  export type PromotionScalarWhereWithAggregatesInput = {
    AND?: PromotionScalarWhereWithAggregatesInput | PromotionScalarWhereWithAggregatesInput[]
    OR?: PromotionScalarWhereWithAggregatesInput[]
    NOT?: PromotionScalarWhereWithAggregatesInput | PromotionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Promotion"> | number
    name?: StringWithAggregatesFilter<"Promotion"> | string
    description?: StringNullableWithAggregatesFilter<"Promotion"> | string | null
    type?: EnumPromotionTypeWithAggregatesFilter<"Promotion"> | $Enums.PromotionType
    status?: EnumPromotionStatusWithAggregatesFilter<"Promotion"> | $Enums.PromotionStatus
    priority?: IntWithAggregatesFilter<"Promotion"> | number
    combinationRule?: EnumCombinationRuleWithAggregatesFilter<"Promotion"> | $Enums.CombinationRule
    discountType?: EnumDiscountTypeWithAggregatesFilter<"Promotion"> | $Enums.DiscountType
    discountValue?: DecimalNullableWithAggregatesFilter<"Promotion"> | Decimal | DecimalJsLike | number | string | null
    buyQuantity?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
    getQuantity?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
    getDiscountValue?: DecimalNullableWithAggregatesFilter<"Promotion"> | Decimal | DecimalJsLike | number | string | null
    startDate?: DateTimeNullableWithAggregatesFilter<"Promotion"> | Date | string | null
    endDate?: DateTimeNullableWithAggregatesFilter<"Promotion"> | Date | string | null
    startTime?: StringNullableWithAggregatesFilter<"Promotion"> | string | null
    endTime?: StringNullableWithAggregatesFilter<"Promotion"> | string | null
    validDays?: StringNullableWithAggregatesFilter<"Promotion"> | string | null
    minPurchaseAmount?: DecimalNullableWithAggregatesFilter<"Promotion"> | Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
    maxUsageTotal?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
    maxUsagePerCustomer?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
    currentUsage?: IntWithAggregatesFilter<"Promotion"> | number
    isCustomerSpecific?: BoolWithAggregatesFilter<"Promotion"> | boolean
    createdBy?: StringNullableWithAggregatesFilter<"Promotion"> | string | null
    deleted?: BoolWithAggregatesFilter<"Promotion"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Promotion"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Promotion"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Promotion"> | Date | string
    version?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
  }

  export type PromotionItemWhereInput = {
    AND?: PromotionItemWhereInput | PromotionItemWhereInput[]
    OR?: PromotionItemWhereInput[]
    NOT?: PromotionItemWhereInput | PromotionItemWhereInput[]
    id?: IntFilter<"PromotionItem"> | number
    promotionId?: IntFilter<"PromotionItem"> | number
    itemId?: IntNullableFilter<"PromotionItem"> | number | null
    categoryId?: IntNullableFilter<"PromotionItem"> | number | null
    itemCode?: StringNullableFilter<"PromotionItem"> | string | null
    itemName?: StringNullableFilter<"PromotionItem"> | string | null
    itemRole?: StringNullableFilter<"PromotionItem"> | string | null
    deleted?: BoolFilter<"PromotionItem"> | boolean
    createdAt?: DateTimeFilter<"PromotionItem"> | Date | string
    updatedAt?: DateTimeFilter<"PromotionItem"> | Date | string
    version?: IntNullableFilter<"PromotionItem"> | number | null
    promotion?: XOR<PromotionScalarRelationFilter, PromotionWhereInput>
  }

  export type PromotionItemOrderByWithRelationInput = {
    id?: SortOrder
    promotionId?: SortOrder
    itemId?: SortOrderInput | SortOrder
    categoryId?: SortOrderInput | SortOrder
    itemCode?: SortOrderInput | SortOrder
    itemName?: SortOrderInput | SortOrder
    itemRole?: SortOrderInput | SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrderInput | SortOrder
    promotion?: PromotionOrderByWithRelationInput
    _relevance?: PromotionItemOrderByRelevanceInput
  }

  export type PromotionItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PromotionItemWhereInput | PromotionItemWhereInput[]
    OR?: PromotionItemWhereInput[]
    NOT?: PromotionItemWhereInput | PromotionItemWhereInput[]
    promotionId?: IntFilter<"PromotionItem"> | number
    itemId?: IntNullableFilter<"PromotionItem"> | number | null
    categoryId?: IntNullableFilter<"PromotionItem"> | number | null
    itemCode?: StringNullableFilter<"PromotionItem"> | string | null
    itemName?: StringNullableFilter<"PromotionItem"> | string | null
    itemRole?: StringNullableFilter<"PromotionItem"> | string | null
    deleted?: BoolFilter<"PromotionItem"> | boolean
    createdAt?: DateTimeFilter<"PromotionItem"> | Date | string
    updatedAt?: DateTimeFilter<"PromotionItem"> | Date | string
    version?: IntNullableFilter<"PromotionItem"> | number | null
    promotion?: XOR<PromotionScalarRelationFilter, PromotionWhereInput>
  }, "id">

  export type PromotionItemOrderByWithAggregationInput = {
    id?: SortOrder
    promotionId?: SortOrder
    itemId?: SortOrderInput | SortOrder
    categoryId?: SortOrderInput | SortOrder
    itemCode?: SortOrderInput | SortOrder
    itemName?: SortOrderInput | SortOrder
    itemRole?: SortOrderInput | SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrderInput | SortOrder
    _count?: PromotionItemCountOrderByAggregateInput
    _avg?: PromotionItemAvgOrderByAggregateInput
    _max?: PromotionItemMaxOrderByAggregateInput
    _min?: PromotionItemMinOrderByAggregateInput
    _sum?: PromotionItemSumOrderByAggregateInput
  }

  export type PromotionItemScalarWhereWithAggregatesInput = {
    AND?: PromotionItemScalarWhereWithAggregatesInput | PromotionItemScalarWhereWithAggregatesInput[]
    OR?: PromotionItemScalarWhereWithAggregatesInput[]
    NOT?: PromotionItemScalarWhereWithAggregatesInput | PromotionItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PromotionItem"> | number
    promotionId?: IntWithAggregatesFilter<"PromotionItem"> | number
    itemId?: IntNullableWithAggregatesFilter<"PromotionItem"> | number | null
    categoryId?: IntNullableWithAggregatesFilter<"PromotionItem"> | number | null
    itemCode?: StringNullableWithAggregatesFilter<"PromotionItem"> | string | null
    itemName?: StringNullableWithAggregatesFilter<"PromotionItem"> | string | null
    itemRole?: StringNullableWithAggregatesFilter<"PromotionItem"> | string | null
    deleted?: BoolWithAggregatesFilter<"PromotionItem"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"PromotionItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PromotionItem"> | Date | string
    version?: IntNullableWithAggregatesFilter<"PromotionItem"> | number | null
  }

  export type PromotionCustomerWhereInput = {
    AND?: PromotionCustomerWhereInput | PromotionCustomerWhereInput[]
    OR?: PromotionCustomerWhereInput[]
    NOT?: PromotionCustomerWhereInput | PromotionCustomerWhereInput[]
    id?: IntFilter<"PromotionCustomer"> | number
    promotionId?: IntFilter<"PromotionCustomer"> | number
    customerId?: IntFilter<"PromotionCustomer"> | number
    maxUsage?: IntNullableFilter<"PromotionCustomer"> | number | null
    currentUsage?: IntFilter<"PromotionCustomer"> | number
    deleted?: BoolFilter<"PromotionCustomer"> | boolean
    createdAt?: DateTimeFilter<"PromotionCustomer"> | Date | string
    updatedAt?: DateTimeFilter<"PromotionCustomer"> | Date | string
    version?: IntNullableFilter<"PromotionCustomer"> | number | null
    promotion?: XOR<PromotionScalarRelationFilter, PromotionWhereInput>
    customer?: XOR<CustomerScalarRelationFilter, CustomerWhereInput>
  }

  export type PromotionCustomerOrderByWithRelationInput = {
    id?: SortOrder
    promotionId?: SortOrder
    customerId?: SortOrder
    maxUsage?: SortOrderInput | SortOrder
    currentUsage?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrderInput | SortOrder
    promotion?: PromotionOrderByWithRelationInput
    customer?: CustomerOrderByWithRelationInput
  }

  export type PromotionCustomerWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    promotionId_customerId?: PromotionCustomerPromotionIdCustomerIdCompoundUniqueInput
    AND?: PromotionCustomerWhereInput | PromotionCustomerWhereInput[]
    OR?: PromotionCustomerWhereInput[]
    NOT?: PromotionCustomerWhereInput | PromotionCustomerWhereInput[]
    promotionId?: IntFilter<"PromotionCustomer"> | number
    customerId?: IntFilter<"PromotionCustomer"> | number
    maxUsage?: IntNullableFilter<"PromotionCustomer"> | number | null
    currentUsage?: IntFilter<"PromotionCustomer"> | number
    deleted?: BoolFilter<"PromotionCustomer"> | boolean
    createdAt?: DateTimeFilter<"PromotionCustomer"> | Date | string
    updatedAt?: DateTimeFilter<"PromotionCustomer"> | Date | string
    version?: IntNullableFilter<"PromotionCustomer"> | number | null
    promotion?: XOR<PromotionScalarRelationFilter, PromotionWhereInput>
    customer?: XOR<CustomerScalarRelationFilter, CustomerWhereInput>
  }, "id" | "promotionId_customerId">

  export type PromotionCustomerOrderByWithAggregationInput = {
    id?: SortOrder
    promotionId?: SortOrder
    customerId?: SortOrder
    maxUsage?: SortOrderInput | SortOrder
    currentUsage?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrderInput | SortOrder
    _count?: PromotionCustomerCountOrderByAggregateInput
    _avg?: PromotionCustomerAvgOrderByAggregateInput
    _max?: PromotionCustomerMaxOrderByAggregateInput
    _min?: PromotionCustomerMinOrderByAggregateInput
    _sum?: PromotionCustomerSumOrderByAggregateInput
  }

  export type PromotionCustomerScalarWhereWithAggregatesInput = {
    AND?: PromotionCustomerScalarWhereWithAggregatesInput | PromotionCustomerScalarWhereWithAggregatesInput[]
    OR?: PromotionCustomerScalarWhereWithAggregatesInput[]
    NOT?: PromotionCustomerScalarWhereWithAggregatesInput | PromotionCustomerScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PromotionCustomer"> | number
    promotionId?: IntWithAggregatesFilter<"PromotionCustomer"> | number
    customerId?: IntWithAggregatesFilter<"PromotionCustomer"> | number
    maxUsage?: IntNullableWithAggregatesFilter<"PromotionCustomer"> | number | null
    currentUsage?: IntWithAggregatesFilter<"PromotionCustomer"> | number
    deleted?: BoolWithAggregatesFilter<"PromotionCustomer"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"PromotionCustomer"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PromotionCustomer"> | Date | string
    version?: IntNullableWithAggregatesFilter<"PromotionCustomer"> | number | null
  }

  export type PromotionUsageWhereInput = {
    AND?: PromotionUsageWhereInput | PromotionUsageWhereInput[]
    OR?: PromotionUsageWhereInput[]
    NOT?: PromotionUsageWhereInput | PromotionUsageWhereInput[]
    id?: IntFilter<"PromotionUsage"> | number
    promotionId?: IntFilter<"PromotionUsage"> | number
    customerId?: IntNullableFilter<"PromotionUsage"> | number | null
    salesId?: IntNullableFilter<"PromotionUsage"> | number | null
    discountAmount?: DecimalFilter<"PromotionUsage"> | Decimal | DecimalJsLike | number | string
    usedAt?: DateTimeFilter<"PromotionUsage"> | Date | string
    version?: IntNullableFilter<"PromotionUsage"> | number | null
    promotion?: XOR<PromotionScalarRelationFilter, PromotionWhereInput>
    customer?: XOR<CustomerNullableScalarRelationFilter, CustomerWhereInput> | null
  }

  export type PromotionUsageOrderByWithRelationInput = {
    id?: SortOrder
    promotionId?: SortOrder
    customerId?: SortOrderInput | SortOrder
    salesId?: SortOrderInput | SortOrder
    discountAmount?: SortOrder
    usedAt?: SortOrder
    version?: SortOrderInput | SortOrder
    promotion?: PromotionOrderByWithRelationInput
    customer?: CustomerOrderByWithRelationInput
  }

  export type PromotionUsageWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PromotionUsageWhereInput | PromotionUsageWhereInput[]
    OR?: PromotionUsageWhereInput[]
    NOT?: PromotionUsageWhereInput | PromotionUsageWhereInput[]
    promotionId?: IntFilter<"PromotionUsage"> | number
    customerId?: IntNullableFilter<"PromotionUsage"> | number | null
    salesId?: IntNullableFilter<"PromotionUsage"> | number | null
    discountAmount?: DecimalFilter<"PromotionUsage"> | Decimal | DecimalJsLike | number | string
    usedAt?: DateTimeFilter<"PromotionUsage"> | Date | string
    version?: IntNullableFilter<"PromotionUsage"> | number | null
    promotion?: XOR<PromotionScalarRelationFilter, PromotionWhereInput>
    customer?: XOR<CustomerNullableScalarRelationFilter, CustomerWhereInput> | null
  }, "id">

  export type PromotionUsageOrderByWithAggregationInput = {
    id?: SortOrder
    promotionId?: SortOrder
    customerId?: SortOrderInput | SortOrder
    salesId?: SortOrderInput | SortOrder
    discountAmount?: SortOrder
    usedAt?: SortOrder
    version?: SortOrderInput | SortOrder
    _count?: PromotionUsageCountOrderByAggregateInput
    _avg?: PromotionUsageAvgOrderByAggregateInput
    _max?: PromotionUsageMaxOrderByAggregateInput
    _min?: PromotionUsageMinOrderByAggregateInput
    _sum?: PromotionUsageSumOrderByAggregateInput
  }

  export type PromotionUsageScalarWhereWithAggregatesInput = {
    AND?: PromotionUsageScalarWhereWithAggregatesInput | PromotionUsageScalarWhereWithAggregatesInput[]
    OR?: PromotionUsageScalarWhereWithAggregatesInput[]
    NOT?: PromotionUsageScalarWhereWithAggregatesInput | PromotionUsageScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PromotionUsage"> | number
    promotionId?: IntWithAggregatesFilter<"PromotionUsage"> | number
    customerId?: IntNullableWithAggregatesFilter<"PromotionUsage"> | number | null
    salesId?: IntNullableWithAggregatesFilter<"PromotionUsage"> | number | null
    discountAmount?: DecimalWithAggregatesFilter<"PromotionUsage"> | Decimal | DecimalJsLike | number | string
    usedAt?: DateTimeWithAggregatesFilter<"PromotionUsage"> | Date | string
    version?: IntNullableWithAggregatesFilter<"PromotionUsage"> | number | null
  }

  export type RoleCreateInput = {
    name: string
    category?: string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
    permission?: RolePermissionCreateNestedManyWithoutRoleInput
    users?: UserCreateNestedManyWithoutRolesInput
  }

  export type RoleUncheckedCreateInput = {
    id?: number
    name: string
    category?: string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
    permission?: RolePermissionUncheckedCreateNestedManyWithoutRoleInput
    users?: UserUncheckedCreateNestedManyWithoutRolesInput
  }

  export type RoleUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    permission?: RolePermissionUpdateManyWithoutRoleNestedInput
    users?: UserUpdateManyWithoutRolesNestedInput
  }

  export type RoleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    permission?: RolePermissionUncheckedUpdateManyWithoutRoleNestedInput
    users?: UserUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type RoleCreateManyInput = {
    id?: number
    name: string
    category?: string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type RoleUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RoleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RolePermissionCreateInput = {
    permissionId: number
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
    role: RoleCreateNestedOneWithoutPermissionInput
  }

  export type RolePermissionUncheckedCreateInput = {
    id?: number
    roleId: number
    permissionId: number
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type RolePermissionUpdateInput = {
    permissionId?: IntFieldUpdateOperationsInput | number
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    role?: RoleUpdateOneRequiredWithoutPermissionNestedInput
  }

  export type RolePermissionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleId?: IntFieldUpdateOperationsInput | number
    permissionId?: IntFieldUpdateOperationsInput | number
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RolePermissionCreateManyInput = {
    id?: number
    roleId: number
    permissionId: number
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type RolePermissionUpdateManyMutationInput = {
    permissionId?: IntFieldUpdateOperationsInput | number
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RolePermissionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    roleId?: IntFieldUpdateOperationsInput | number
    permissionId?: IntFieldUpdateOperationsInput | number
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type UserCreateInput = {
    username: string
    password: string
    lastName?: string | null
    firstName?: string | null
    mobile?: string | null
    email?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    settings?: SettingCreateNestedManyWithoutUserInput
    roles?: RoleCreateNestedManyWithoutUsersInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    username: string
    password: string
    lastName?: string | null
    firstName?: string | null
    mobile?: string | null
    email?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    settings?: SettingUncheckedCreateNestedManyWithoutUserInput
    roles?: RoleUncheckedCreateNestedManyWithoutUsersInput
  }

  export type UserUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    settings?: SettingUpdateManyWithoutUserNestedInput
    roles?: RoleUpdateManyWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    settings?: SettingUncheckedUpdateManyWithoutUserNestedInput
    roles?: RoleUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    username: string
    password: string
    lastName?: string | null
    firstName?: string | null
    mobile?: string | null
    email?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type UserUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SettingCreateInput = {
    tenantId?: number | null
    key: string
    value: string
    type: $Enums.SettingType
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    user?: UserCreateNestedOneWithoutSettingsInput
    outlet?: OutletCreateNestedOneWithoutSettingsInput
  }

  export type SettingUncheckedCreateInput = {
    id?: number
    tenantId?: number | null
    userId?: number | null
    outletId?: number | null
    key: string
    value: string
    type: $Enums.SettingType
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SettingUpdateInput = {
    tenantId?: NullableIntFieldUpdateOperationsInput | number | null
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    type?: EnumSettingTypeFieldUpdateOperationsInput | $Enums.SettingType
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    user?: UserUpdateOneWithoutSettingsNestedInput
    outlet?: OutletUpdateOneWithoutSettingsNestedInput
  }

  export type SettingUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantId?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    outletId?: NullableIntFieldUpdateOperationsInput | number | null
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    type?: EnumSettingTypeFieldUpdateOperationsInput | $Enums.SettingType
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SettingCreateManyInput = {
    id?: number
    tenantId?: number | null
    userId?: number | null
    outletId?: number | null
    key: string
    value: string
    type: $Enums.SettingType
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SettingUpdateManyMutationInput = {
    tenantId?: NullableIntFieldUpdateOperationsInput | number | null
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    type?: EnumSettingTypeFieldUpdateOperationsInput | $Enums.SettingType
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SettingUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantId?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    outletId?: NullableIntFieldUpdateOperationsInput | number | null
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    type?: EnumSettingTypeFieldUpdateOperationsInput | $Enums.SettingType
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReferralCreateInput = {
    userId: number
    referralId: number
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type ReferralUncheckedCreateInput = {
    id?: number
    userId: number
    referralId: number
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type ReferralUpdateInput = {
    userId?: IntFieldUpdateOperationsInput | number
    referralId?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReferralUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    referralId?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReferralCreateManyInput = {
    id?: number
    userId: number
    referralId: number
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type ReferralUpdateManyMutationInput = {
    userId?: IntFieldUpdateOperationsInput | number
    referralId?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReferralUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    referralId?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SupplierCreateInput = {
    companyName: string
    companyStreet?: string | null
    companyCity?: string | null
    companyState?: string | null
    companyPostalCode?: string | null
    companyCountry?: string | null
    companyRegisterNumber?: string | null
    personInChargeLastName?: string | null
    personInChargeFirstName?: string | null
    mobile?: string | null
    email?: string | null
    remark?: string | null
    hasTax: boolean
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    items?: ItemCreateNestedManyWithoutSupplierInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutSupplierInput
    invoices?: InvoiceCreateNestedManyWithoutSupplierInput
  }

  export type SupplierUncheckedCreateInput = {
    id?: number
    companyName: string
    companyStreet?: string | null
    companyCity?: string | null
    companyState?: string | null
    companyPostalCode?: string | null
    companyCountry?: string | null
    companyRegisterNumber?: string | null
    personInChargeLastName?: string | null
    personInChargeFirstName?: string | null
    mobile?: string | null
    email?: string | null
    remark?: string | null
    hasTax: boolean
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    items?: ItemUncheckedCreateNestedManyWithoutSupplierInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutSupplierInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutSupplierInput
  }

  export type SupplierUpdateInput = {
    companyName?: StringFieldUpdateOperationsInput | string
    companyStreet?: NullableStringFieldUpdateOperationsInput | string | null
    companyCity?: NullableStringFieldUpdateOperationsInput | string | null
    companyState?: NullableStringFieldUpdateOperationsInput | string | null
    companyPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    companyCountry?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegisterNumber?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeLastName?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeFirstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    items?: ItemUpdateManyWithoutSupplierNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutSupplierNestedInput
    invoices?: InvoiceUpdateManyWithoutSupplierNestedInput
  }

  export type SupplierUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    companyName?: StringFieldUpdateOperationsInput | string
    companyStreet?: NullableStringFieldUpdateOperationsInput | string | null
    companyCity?: NullableStringFieldUpdateOperationsInput | string | null
    companyState?: NullableStringFieldUpdateOperationsInput | string | null
    companyPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    companyCountry?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegisterNumber?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeLastName?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeFirstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    items?: ItemUncheckedUpdateManyWithoutSupplierNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutSupplierNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutSupplierNestedInput
  }

  export type SupplierCreateManyInput = {
    id?: number
    companyName: string
    companyStreet?: string | null
    companyCity?: string | null
    companyState?: string | null
    companyPostalCode?: string | null
    companyCountry?: string | null
    companyRegisterNumber?: string | null
    personInChargeLastName?: string | null
    personInChargeFirstName?: string | null
    mobile?: string | null
    email?: string | null
    remark?: string | null
    hasTax: boolean
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SupplierUpdateManyMutationInput = {
    companyName?: StringFieldUpdateOperationsInput | string
    companyStreet?: NullableStringFieldUpdateOperationsInput | string | null
    companyCity?: NullableStringFieldUpdateOperationsInput | string | null
    companyState?: NullableStringFieldUpdateOperationsInput | string | null
    companyPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    companyCountry?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegisterNumber?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeLastName?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeFirstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SupplierUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    companyName?: StringFieldUpdateOperationsInput | string
    companyStreet?: NullableStringFieldUpdateOperationsInput | string | null
    companyCity?: NullableStringFieldUpdateOperationsInput | string | null
    companyState?: NullableStringFieldUpdateOperationsInput | string | null
    companyPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    companyCountry?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegisterNumber?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeLastName?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeFirstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CustomerCreateInput = {
    salutation?: string
    lastName: string
    firstName: string
    mobile?: string | null
    email?: string | null
    gender?: string | null
    billStreet?: string | null
    billCity?: string | null
    billState?: string | null
    billPostalCode?: string | null
    billCountry?: string | null
    billRemark?: string | null
    shipStreet?: string | null
    shipCity?: string | null
    shipState?: string | null
    shipPostalCode?: string | null
    shipCountry?: string | null
    shipRemark?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales?: SalesCreateNestedManyWithoutCustomerInput
    promotions?: PromotionCustomerCreateNestedManyWithoutCustomerInput
    promotionUsage?: PromotionUsageCreateNestedManyWithoutCustomerInput
    reservations?: ReservationCreateNestedManyWithoutCustomerInput
    waitlists?: WaitlistCreateNestedManyWithoutCustomerInput
    splitBills?: SplitBillCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateInput = {
    id?: number
    salutation?: string
    lastName: string
    firstName: string
    mobile?: string | null
    email?: string | null
    gender?: string | null
    billStreet?: string | null
    billCity?: string | null
    billState?: string | null
    billPostalCode?: string | null
    billCountry?: string | null
    billRemark?: string | null
    shipStreet?: string | null
    shipCity?: string | null
    shipState?: string | null
    shipPostalCode?: string | null
    shipCountry?: string | null
    shipRemark?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales?: SalesUncheckedCreateNestedManyWithoutCustomerInput
    promotions?: PromotionCustomerUncheckedCreateNestedManyWithoutCustomerInput
    promotionUsage?: PromotionUsageUncheckedCreateNestedManyWithoutCustomerInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutCustomerInput
    waitlists?: WaitlistUncheckedCreateNestedManyWithoutCustomerInput
    splitBills?: SplitBillUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUpdateInput = {
    salutation?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: NullableStringFieldUpdateOperationsInput | string | null
    billCity?: NullableStringFieldUpdateOperationsInput | string | null
    billState?: NullableStringFieldUpdateOperationsInput | string | null
    billPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    billCountry?: NullableStringFieldUpdateOperationsInput | string | null
    billRemark?: NullableStringFieldUpdateOperationsInput | string | null
    shipStreet?: NullableStringFieldUpdateOperationsInput | string | null
    shipCity?: NullableStringFieldUpdateOperationsInput | string | null
    shipState?: NullableStringFieldUpdateOperationsInput | string | null
    shipPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    shipCountry?: NullableStringFieldUpdateOperationsInput | string | null
    shipRemark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUpdateManyWithoutCustomerNestedInput
    promotions?: PromotionCustomerUpdateManyWithoutCustomerNestedInput
    promotionUsage?: PromotionUsageUpdateManyWithoutCustomerNestedInput
    reservations?: ReservationUpdateManyWithoutCustomerNestedInput
    waitlists?: WaitlistUpdateManyWithoutCustomerNestedInput
    splitBills?: SplitBillUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    salutation?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: NullableStringFieldUpdateOperationsInput | string | null
    billCity?: NullableStringFieldUpdateOperationsInput | string | null
    billState?: NullableStringFieldUpdateOperationsInput | string | null
    billPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    billCountry?: NullableStringFieldUpdateOperationsInput | string | null
    billRemark?: NullableStringFieldUpdateOperationsInput | string | null
    shipStreet?: NullableStringFieldUpdateOperationsInput | string | null
    shipCity?: NullableStringFieldUpdateOperationsInput | string | null
    shipState?: NullableStringFieldUpdateOperationsInput | string | null
    shipPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    shipCountry?: NullableStringFieldUpdateOperationsInput | string | null
    shipRemark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUncheckedUpdateManyWithoutCustomerNestedInput
    promotions?: PromotionCustomerUncheckedUpdateManyWithoutCustomerNestedInput
    promotionUsage?: PromotionUsageUncheckedUpdateManyWithoutCustomerNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutCustomerNestedInput
    waitlists?: WaitlistUncheckedUpdateManyWithoutCustomerNestedInput
    splitBills?: SplitBillUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerCreateManyInput = {
    id?: number
    salutation?: string
    lastName: string
    firstName: string
    mobile?: string | null
    email?: string | null
    gender?: string | null
    billStreet?: string | null
    billCity?: string | null
    billState?: string | null
    billPostalCode?: string | null
    billCountry?: string | null
    billRemark?: string | null
    shipStreet?: string | null
    shipCity?: string | null
    shipState?: string | null
    shipPostalCode?: string | null
    shipCountry?: string | null
    shipRemark?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type CustomerUpdateManyMutationInput = {
    salutation?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: NullableStringFieldUpdateOperationsInput | string | null
    billCity?: NullableStringFieldUpdateOperationsInput | string | null
    billState?: NullableStringFieldUpdateOperationsInput | string | null
    billPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    billCountry?: NullableStringFieldUpdateOperationsInput | string | null
    billRemark?: NullableStringFieldUpdateOperationsInput | string | null
    shipStreet?: NullableStringFieldUpdateOperationsInput | string | null
    shipCity?: NullableStringFieldUpdateOperationsInput | string | null
    shipState?: NullableStringFieldUpdateOperationsInput | string | null
    shipPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    shipCountry?: NullableStringFieldUpdateOperationsInput | string | null
    shipRemark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CustomerUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    salutation?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: NullableStringFieldUpdateOperationsInput | string | null
    billCity?: NullableStringFieldUpdateOperationsInput | string | null
    billState?: NullableStringFieldUpdateOperationsInput | string | null
    billPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    billCountry?: NullableStringFieldUpdateOperationsInput | string | null
    billRemark?: NullableStringFieldUpdateOperationsInput | string | null
    shipStreet?: NullableStringFieldUpdateOperationsInput | string | null
    shipCity?: NullableStringFieldUpdateOperationsInput | string | null
    shipState?: NullableStringFieldUpdateOperationsInput | string | null
    shipPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    shipCountry?: NullableStringFieldUpdateOperationsInput | string | null
    shipRemark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CompanyCreateInput = {
    companyName?: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    registrationNumber: string
    website?: string
    referralId?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type CompanyUncheckedCreateInput = {
    id?: number
    companyName?: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    registrationNumber: string
    website?: string
    referralId?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type CompanyUpdateInput = {
    companyName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    registrationNumber?: StringFieldUpdateOperationsInput | string
    website?: StringFieldUpdateOperationsInput | string
    referralId?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CompanyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    companyName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    registrationNumber?: StringFieldUpdateOperationsInput | string
    website?: StringFieldUpdateOperationsInput | string
    referralId?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CompanyCreateManyInput = {
    id?: number
    companyName?: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    registrationNumber: string
    website?: string
    referralId?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type CompanyUpdateManyMutationInput = {
    companyName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    registrationNumber?: StringFieldUpdateOperationsInput | string
    website?: StringFieldUpdateOperationsInput | string
    referralId?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CompanyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    companyName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    registrationNumber?: StringFieldUpdateOperationsInput | string
    website?: StringFieldUpdateOperationsInput | string
    referralId?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OutletCreateInput = {
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceCreateNestedManyWithoutOutletInput
    stockMovements?: StockMovementCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutOutletInput
    settings?: SettingCreateNestedManyWithoutOutletInput
    tables?: TableCreateNestedManyWithoutOutletInput
    stations?: StationCreateNestedManyWithoutOutletInput
    reservations?: ReservationCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistCreateNestedManyWithoutOutletInput
  }

  export type OutletUncheckedCreateInput = {
    id?: number
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceUncheckedCreateNestedManyWithoutOutletInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutOutletInput
    settings?: SettingUncheckedCreateNestedManyWithoutOutletInput
    tables?: TableUncheckedCreateNestedManyWithoutOutletInput
    stations?: StationUncheckedCreateNestedManyWithoutOutletInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistUncheckedCreateNestedManyWithoutOutletInput
  }

  export type OutletUpdateInput = {
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUpdateManyWithoutOutletNestedInput
    stockMovements?: StockMovementUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutOutletNestedInput
    settings?: SettingUpdateManyWithoutOutletNestedInput
    tables?: TableUpdateManyWithoutOutletNestedInput
    stations?: StationUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUpdateManyWithoutOutletNestedInput
  }

  export type OutletUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUncheckedUpdateManyWithoutOutletNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutOutletNestedInput
    settings?: SettingUncheckedUpdateManyWithoutOutletNestedInput
    tables?: TableUncheckedUpdateManyWithoutOutletNestedInput
    stations?: StationUncheckedUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUncheckedUpdateManyWithoutOutletNestedInput
  }

  export type OutletCreateManyInput = {
    id?: number
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type OutletUpdateManyMutationInput = {
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OutletUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ItemCreateInput = {
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    category: CategoryCreateNestedOneWithoutItemsInput
    supplier: SupplierCreateNestedOneWithoutItemsInput
    stockBalance?: StockBalanceCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutItemInput
    recipes?: RecipeCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemCreateNestedManyWithoutItemInput
  }

  export type ItemUncheckedCreateInput = {
    id?: number
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    categoryId: number
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    supplierId: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalance?: StockBalanceUncheckedCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutItemInput
    recipes?: RecipeUncheckedCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemUpdateInput = {
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    category?: CategoryUpdateOneRequiredWithoutItemsNestedInput
    supplier?: SupplierUpdateOneRequiredWithoutItemsNestedInput
    stockBalance?: StockBalanceUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutItemNestedInput
    recipes?: RecipeUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUpdateManyWithoutItemNestedInput
  }

  export type ItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: IntFieldUpdateOperationsInput | number
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    supplierId?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalance?: StockBalanceUncheckedUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutItemNestedInput
    recipes?: RecipeUncheckedUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type ItemCreateManyInput = {
    id?: number
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    categoryId: number
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    supplierId: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type ItemUpdateManyMutationInput = {
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: IntFieldUpdateOperationsInput | number
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    supplierId?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CategoryCreateInput = {
    name: string
    description?: string | null
    parentId?: number | null
    image?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    items?: ItemCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    parentId?: number | null
    image?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    items?: ItemUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableIntFieldUpdateOperationsInput | number | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    items?: ItemUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableIntFieldUpdateOperationsInput | number | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    items?: ItemUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    parentId?: number | null
    image?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type CategoryUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableIntFieldUpdateOperationsInput | number | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CategoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableIntFieldUpdateOperationsInput | number | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesCreateInput = {
    outletId: number
    businessDate: Date | string
    salesType: string
    customerName?: string | null
    phoneNumber?: string | null
    billStreet?: string
    billCity?: string
    billState?: string
    billPostalCode?: string
    billCountry?: string
    shipStreet?: string
    shipCity?: string
    shipState?: string
    shipPostalCode?: string
    shipCountry?: string
    totalItemDiscountAmount?: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    profitAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    roundingAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    changeAmount?: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string
    completedSessionId?: number | null
    sessionId: number
    eodId: number
    salesQuotationId?: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    orderStatus?: string | null
    salesItems?: SalesItemCreateNestedManyWithoutSalesInput
    payments?: PaymentCreateNestedManyWithoutSalesInput
    registerLogs?: RegisterLogCreateNestedManyWithoutSalesInput
    customer?: CustomerCreateNestedOneWithoutSalesInput
    table?: TableCreateNestedOneWithoutSalesInput
  }

  export type SalesUncheckedCreateInput = {
    id?: number
    outletId: number
    businessDate: Date | string
    salesType: string
    customerName?: string | null
    customerId?: number | null
    phoneNumber?: string | null
    billStreet?: string
    billCity?: string
    billState?: string
    billPostalCode?: string
    billCountry?: string
    shipStreet?: string
    shipCity?: string
    shipState?: string
    shipPostalCode?: string
    shipCountry?: string
    totalItemDiscountAmount?: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    profitAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    roundingAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    changeAmount?: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string
    completedSessionId?: number | null
    sessionId: number
    eodId: number
    salesQuotationId?: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    tableId?: number | null
    orderStatus?: string | null
    salesItems?: SalesItemUncheckedCreateNestedManyWithoutSalesInput
    payments?: PaymentUncheckedCreateNestedManyWithoutSalesInput
    registerLogs?: RegisterLogUncheckedCreateNestedManyWithoutSalesInput
  }

  export type SalesUpdateInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    salesType?: StringFieldUpdateOperationsInput | string
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: StringFieldUpdateOperationsInput | string
    billCity?: StringFieldUpdateOperationsInput | string
    billState?: StringFieldUpdateOperationsInput | string
    billPostalCode?: StringFieldUpdateOperationsInput | string
    billCountry?: StringFieldUpdateOperationsInput | string
    shipStreet?: StringFieldUpdateOperationsInput | string
    shipCity?: StringFieldUpdateOperationsInput | string
    shipState?: StringFieldUpdateOperationsInput | string
    shipPostalCode?: StringFieldUpdateOperationsInput | string
    shipCountry?: StringFieldUpdateOperationsInput | string
    totalItemDiscountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    completedSessionId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    orderStatus?: NullableStringFieldUpdateOperationsInput | string | null
    salesItems?: SalesItemUpdateManyWithoutSalesNestedInput
    payments?: PaymentUpdateManyWithoutSalesNestedInput
    registerLogs?: RegisterLogUpdateManyWithoutSalesNestedInput
    customer?: CustomerUpdateOneWithoutSalesNestedInput
    table?: TableUpdateOneWithoutSalesNestedInput
  }

  export type SalesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    salesType?: StringFieldUpdateOperationsInput | string
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: StringFieldUpdateOperationsInput | string
    billCity?: StringFieldUpdateOperationsInput | string
    billState?: StringFieldUpdateOperationsInput | string
    billPostalCode?: StringFieldUpdateOperationsInput | string
    billCountry?: StringFieldUpdateOperationsInput | string
    shipStreet?: StringFieldUpdateOperationsInput | string
    shipCity?: StringFieldUpdateOperationsInput | string
    shipState?: StringFieldUpdateOperationsInput | string
    shipPostalCode?: StringFieldUpdateOperationsInput | string
    shipCountry?: StringFieldUpdateOperationsInput | string
    totalItemDiscountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    completedSessionId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    tableId?: NullableIntFieldUpdateOperationsInput | number | null
    orderStatus?: NullableStringFieldUpdateOperationsInput | string | null
    salesItems?: SalesItemUncheckedUpdateManyWithoutSalesNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutSalesNestedInput
    registerLogs?: RegisterLogUncheckedUpdateManyWithoutSalesNestedInput
  }

  export type SalesCreateManyInput = {
    id?: number
    outletId: number
    businessDate: Date | string
    salesType: string
    customerName?: string | null
    customerId?: number | null
    phoneNumber?: string | null
    billStreet?: string
    billCity?: string
    billState?: string
    billPostalCode?: string
    billCountry?: string
    shipStreet?: string
    shipCity?: string
    shipState?: string
    shipPostalCode?: string
    shipCountry?: string
    totalItemDiscountAmount?: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    profitAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    roundingAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    changeAmount?: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string
    completedSessionId?: number | null
    sessionId: number
    eodId: number
    salesQuotationId?: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    tableId?: number | null
    orderStatus?: string | null
  }

  export type SalesUpdateManyMutationInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    salesType?: StringFieldUpdateOperationsInput | string
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: StringFieldUpdateOperationsInput | string
    billCity?: StringFieldUpdateOperationsInput | string
    billState?: StringFieldUpdateOperationsInput | string
    billPostalCode?: StringFieldUpdateOperationsInput | string
    billCountry?: StringFieldUpdateOperationsInput | string
    shipStreet?: StringFieldUpdateOperationsInput | string
    shipCity?: StringFieldUpdateOperationsInput | string
    shipState?: StringFieldUpdateOperationsInput | string
    shipPostalCode?: StringFieldUpdateOperationsInput | string
    shipCountry?: StringFieldUpdateOperationsInput | string
    totalItemDiscountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    completedSessionId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    orderStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SalesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    salesType?: StringFieldUpdateOperationsInput | string
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: StringFieldUpdateOperationsInput | string
    billCity?: StringFieldUpdateOperationsInput | string
    billState?: StringFieldUpdateOperationsInput | string
    billPostalCode?: StringFieldUpdateOperationsInput | string
    billCountry?: StringFieldUpdateOperationsInput | string
    shipStreet?: StringFieldUpdateOperationsInput | string
    shipCity?: StringFieldUpdateOperationsInput | string
    shipState?: StringFieldUpdateOperationsInput | string
    shipPostalCode?: StringFieldUpdateOperationsInput | string
    shipCountry?: StringFieldUpdateOperationsInput | string
    totalItemDiscountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    completedSessionId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    tableId?: NullableIntFieldUpdateOperationsInput | number | null
    orderStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SalesItemCreateInput = {
    itemId: number
    itemName: string
    itemCode: string
    itemBrand: string
    itemModel?: string
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    priceBeforeTax: Decimal | DecimalJsLike | number | string
    profit: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    specialInstructions?: string | null
    itemStatus?: string | null
    priority?: string | null
    estimatedPrepTime?: number | null
    sales: SalesCreateNestedOneWithoutSalesItemsInput
    selectedModifiers?: SalesItemModifierCreateNestedManyWithoutSalesItemInput
    orderRouting?: OrderRoutingCreateNestedManyWithoutSalesItemInput
  }

  export type SalesItemUncheckedCreateInput = {
    id?: number
    salesId: number
    itemId: number
    itemName: string
    itemCode: string
    itemBrand: string
    itemModel?: string
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    priceBeforeTax: Decimal | DecimalJsLike | number | string
    profit: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    specialInstructions?: string | null
    itemStatus?: string | null
    priority?: string | null
    estimatedPrepTime?: number | null
    selectedModifiers?: SalesItemModifierUncheckedCreateNestedManyWithoutSalesItemInput
    orderRouting?: OrderRoutingUncheckedCreateNestedManyWithoutSalesItemInput
  }

  export type SalesItemUpdateInput = {
    itemId?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceBeforeTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    specialInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    itemStatus?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedPrepTime?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUpdateOneRequiredWithoutSalesItemsNestedInput
    selectedModifiers?: SalesItemModifierUpdateManyWithoutSalesItemNestedInput
    orderRouting?: OrderRoutingUpdateManyWithoutSalesItemNestedInput
  }

  export type SalesItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceBeforeTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    specialInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    itemStatus?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedPrepTime?: NullableIntFieldUpdateOperationsInput | number | null
    selectedModifiers?: SalesItemModifierUncheckedUpdateManyWithoutSalesItemNestedInput
    orderRouting?: OrderRoutingUncheckedUpdateManyWithoutSalesItemNestedInput
  }

  export type SalesItemCreateManyInput = {
    id?: number
    salesId: number
    itemId: number
    itemName: string
    itemCode: string
    itemBrand: string
    itemModel?: string
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    priceBeforeTax: Decimal | DecimalJsLike | number | string
    profit: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    specialInstructions?: string | null
    itemStatus?: string | null
    priority?: string | null
    estimatedPrepTime?: number | null
  }

  export type SalesItemUpdateManyMutationInput = {
    itemId?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceBeforeTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    specialInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    itemStatus?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedPrepTime?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceBeforeTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    specialInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    itemStatus?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedPrepTime?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesItemModifierCreateInput = {
    itemId?: number | null
    modifierName: string
    modifierPrice: Decimal | DecimalJsLike | number | string
    quantity?: number
    status?: $Enums.OrderStatus | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuItemModifier: MenuItemModifierCreateNestedOneWithoutSalesItemModifiersInput
    salesItem: SalesItemCreateNestedOneWithoutSelectedModifiersInput
  }

  export type SalesItemModifierUncheckedCreateInput = {
    id?: number
    salesItemId: number
    menuItemModifierId: number
    itemId?: number | null
    modifierName: string
    modifierPrice: Decimal | DecimalJsLike | number | string
    quantity?: number
    status?: $Enums.OrderStatus | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SalesItemModifierUpdateInput = {
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    modifierName?: StringFieldUpdateOperationsInput | string
    modifierPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: NullableEnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuItemModifier?: MenuItemModifierUpdateOneRequiredWithoutSalesItemModifiersNestedInput
    salesItem?: SalesItemUpdateOneRequiredWithoutSelectedModifiersNestedInput
  }

  export type SalesItemModifierUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesItemId?: IntFieldUpdateOperationsInput | number
    menuItemModifierId?: IntFieldUpdateOperationsInput | number
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    modifierName?: StringFieldUpdateOperationsInput | string
    modifierPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: NullableEnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesItemModifierCreateManyInput = {
    id?: number
    salesItemId: number
    menuItemModifierId: number
    itemId?: number | null
    modifierName: string
    modifierPrice: Decimal | DecimalJsLike | number | string
    quantity?: number
    status?: $Enums.OrderStatus | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SalesItemModifierUpdateManyMutationInput = {
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    modifierName?: StringFieldUpdateOperationsInput | string
    modifierPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: NullableEnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesItemModifierUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesItemId?: IntFieldUpdateOperationsInput | number
    menuItemModifierId?: IntFieldUpdateOperationsInput | number
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    modifierName?: StringFieldUpdateOperationsInput | string
    modifierPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: NullableEnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesQuotationCreateInput = {
    outletId: number
    customerId?: number | null
    customerStreet?: string | null
    customerCity?: string | null
    customerState?: string | null
    customerPostalCode?: string | null
    customerCountry?: string | null
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    roundingAmount: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    salesQuotationItems?: SalesQuotationItemCreateNestedManyWithoutSalesQuotationInput
  }

  export type SalesQuotationUncheckedCreateInput = {
    id?: number
    outletId: number
    customerId?: number | null
    customerStreet?: string | null
    customerCity?: string | null
    customerState?: string | null
    customerPostalCode?: string | null
    customerCountry?: string | null
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    roundingAmount: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    salesQuotationItems?: SalesQuotationItemUncheckedCreateNestedManyWithoutSalesQuotationInput
  }

  export type SalesQuotationUpdateInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    customerStreet?: NullableStringFieldUpdateOperationsInput | string | null
    customerCity?: NullableStringFieldUpdateOperationsInput | string | null
    customerState?: NullableStringFieldUpdateOperationsInput | string | null
    customerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    salesQuotationItems?: SalesQuotationItemUpdateManyWithoutSalesQuotationNestedInput
  }

  export type SalesQuotationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    customerStreet?: NullableStringFieldUpdateOperationsInput | string | null
    customerCity?: NullableStringFieldUpdateOperationsInput | string | null
    customerState?: NullableStringFieldUpdateOperationsInput | string | null
    customerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    salesQuotationItems?: SalesQuotationItemUncheckedUpdateManyWithoutSalesQuotationNestedInput
  }

  export type SalesQuotationCreateManyInput = {
    id?: number
    outletId: number
    customerId?: number | null
    customerStreet?: string | null
    customerCity?: string | null
    customerState?: string | null
    customerPostalCode?: string | null
    customerCountry?: string | null
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    roundingAmount: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SalesQuotationUpdateManyMutationInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    customerStreet?: NullableStringFieldUpdateOperationsInput | string | null
    customerCity?: NullableStringFieldUpdateOperationsInput | string | null
    customerState?: NullableStringFieldUpdateOperationsInput | string | null
    customerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesQuotationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    customerStreet?: NullableStringFieldUpdateOperationsInput | string | null
    customerCity?: NullableStringFieldUpdateOperationsInput | string | null
    customerState?: NullableStringFieldUpdateOperationsInput | string | null
    customerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesQuotationItemCreateInput = {
    itemId: number
    quantity: Decimal | DecimalJsLike | number | string
    remark?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    salesQuotation: SalesQuotationCreateNestedOneWithoutSalesQuotationItemsInput
  }

  export type SalesQuotationItemUncheckedCreateInput = {
    id?: number
    salesQuotationId: number
    itemId: number
    quantity: Decimal | DecimalJsLike | number | string
    remark?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SalesQuotationItemUpdateInput = {
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    salesQuotation?: SalesQuotationUpdateOneRequiredWithoutSalesQuotationItemsNestedInput
  }

  export type SalesQuotationItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesQuotationItemCreateManyInput = {
    id?: number
    salesQuotationId: number
    itemId: number
    quantity: Decimal | DecimalJsLike | number | string
    remark?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SalesQuotationItemUpdateManyMutationInput = {
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesQuotationItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type InvoiceCreateInput = {
    invoiceNumber: string
    taxInvoiceNumber: string
    outletId: number
    subtotalAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    invoiceDate?: Date | string | null
    paymentDate?: Date | string | null
    dueDate?: Date | string | null
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    session?: SessionCreateNestedOneWithoutInvoicesInput
    purchaseOrder?: PurchaseOrderCreateNestedOneWithoutInvoicesInput
    supplier?: SupplierCreateNestedOneWithoutInvoicesInput
    invoiceItems?: InvoiceItemCreateNestedManyWithoutInvoiceInput
    deliveryOrders?: DeliveryOrderCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateInput = {
    id?: number
    invoiceNumber: string
    taxInvoiceNumber: string
    purchaseOrderId?: number | null
    supplierId?: number | null
    outletId: number
    subtotalAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    sessionId?: number | null
    discountType?: string | null
    discountAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    invoiceDate?: Date | string | null
    paymentDate?: Date | string | null
    dueDate?: Date | string | null
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    invoiceItems?: InvoiceItemUncheckedCreateNestedManyWithoutInvoiceInput
    deliveryOrders?: DeliveryOrderUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUpdateInput = {
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    session?: SessionUpdateOneWithoutInvoicesNestedInput
    purchaseOrder?: PurchaseOrderUpdateOneWithoutInvoicesNestedInput
    supplier?: SupplierUpdateOneWithoutInvoicesNestedInput
    invoiceItems?: InvoiceItemUpdateManyWithoutInvoiceNestedInput
    deliveryOrders?: DeliveryOrderUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    invoiceItems?: InvoiceItemUncheckedUpdateManyWithoutInvoiceNestedInput
    deliveryOrders?: DeliveryOrderUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceCreateManyInput = {
    id?: number
    invoiceNumber: string
    taxInvoiceNumber: string
    purchaseOrderId?: number | null
    supplierId?: number | null
    outletId: number
    subtotalAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    sessionId?: number | null
    discountType?: string | null
    discountAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    invoiceDate?: Date | string | null
    paymentDate?: Date | string | null
    dueDate?: Date | string | null
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type InvoiceUpdateManyMutationInput = {
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type InvoiceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type InvoiceItemCreateInput = {
    quantity: Decimal | DecimalJsLike | number | string
    unitPrice: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
    invoice: InvoiceCreateNestedOneWithoutInvoiceItemsInput
    item: ItemCreateNestedOneWithoutInvoiceItemsInput
  }

  export type InvoiceItemUncheckedCreateInput = {
    id?: number
    invoiceId: number
    itemId: number
    quantity: Decimal | DecimalJsLike | number | string
    unitPrice: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type InvoiceItemUpdateInput = {
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    invoice?: InvoiceUpdateOneRequiredWithoutInvoiceItemsNestedInput
    item?: ItemUpdateOneRequiredWithoutInvoiceItemsNestedInput
  }

  export type InvoiceItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type InvoiceItemCreateManyInput = {
    id?: number
    invoiceId: number
    itemId: number
    quantity: Decimal | DecimalJsLike | number | string
    unitPrice: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type InvoiceItemUpdateManyMutationInput = {
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type InvoiceItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DeliveryOrderCreateInput = {
    trackingNumber?: string | null
    outletId: number
    customerId?: number | null
    supplierId?: number | null
    deliveryDate?: Date | string | null
    deliveryStreet?: string | null
    deliveryCity?: string | null
    deliveryState?: string | null
    deliveryPostalCode?: string | null
    deliveryCountry?: string | null
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    session?: SessionCreateNestedOneWithoutDeliveryOrdersInput
    purchaseOrder?: PurchaseOrderCreateNestedOneWithoutDeliveryOrdersInput
    invoice?: InvoiceCreateNestedOneWithoutDeliveryOrdersInput
    deliveryOrderItems?: DeliveryOrderItemCreateNestedManyWithoutDeliveryOrderInput
  }

  export type DeliveryOrderUncheckedCreateInput = {
    id?: number
    trackingNumber?: string | null
    outletId: number
    customerId?: number | null
    purchaseOrderId?: number | null
    supplierId?: number | null
    invoiceId?: number | null
    sessionId?: number | null
    deliveryDate?: Date | string | null
    deliveryStreet?: string | null
    deliveryCity?: string | null
    deliveryState?: string | null
    deliveryPostalCode?: string | null
    deliveryCountry?: string | null
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    deliveryOrderItems?: DeliveryOrderItemUncheckedCreateNestedManyWithoutDeliveryOrderInput
  }

  export type DeliveryOrderUpdateInput = {
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryStreet?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCity?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryState?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCountry?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    session?: SessionUpdateOneWithoutDeliveryOrdersNestedInput
    purchaseOrder?: PurchaseOrderUpdateOneWithoutDeliveryOrdersNestedInput
    invoice?: InvoiceUpdateOneWithoutDeliveryOrdersNestedInput
    deliveryOrderItems?: DeliveryOrderItemUpdateManyWithoutDeliveryOrderNestedInput
  }

  export type DeliveryOrderUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrderId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    invoiceId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryStreet?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCity?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryState?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCountry?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryOrderItems?: DeliveryOrderItemUncheckedUpdateManyWithoutDeliveryOrderNestedInput
  }

  export type DeliveryOrderCreateManyInput = {
    id?: number
    trackingNumber?: string | null
    outletId: number
    customerId?: number | null
    purchaseOrderId?: number | null
    supplierId?: number | null
    invoiceId?: number | null
    sessionId?: number | null
    deliveryDate?: Date | string | null
    deliveryStreet?: string | null
    deliveryCity?: string | null
    deliveryState?: string | null
    deliveryPostalCode?: string | null
    deliveryCountry?: string | null
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type DeliveryOrderUpdateManyMutationInput = {
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryStreet?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCity?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryState?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCountry?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DeliveryOrderUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrderId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    invoiceId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryStreet?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCity?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryState?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCountry?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DeliveryOrderItemCreateInput = {
    orderedQuantity: number
    receivedQuantity: number
    unitPrice?: Decimal | DecimalJsLike | number | string | null
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    deliveryOrder: DeliveryOrderCreateNestedOneWithoutDeliveryOrderItemsInput
    item: ItemCreateNestedOneWithoutDeliveryOrderItemsInput
  }

  export type DeliveryOrderItemUncheckedCreateInput = {
    id?: number
    deliveryOrderId: number
    itemId: number
    orderedQuantity: number
    receivedQuantity: number
    unitPrice?: Decimal | DecimalJsLike | number | string | null
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
  }

  export type DeliveryOrderItemUpdateInput = {
    orderedQuantity?: FloatFieldUpdateOperationsInput | number
    receivedQuantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryOrder?: DeliveryOrderUpdateOneRequiredWithoutDeliveryOrderItemsNestedInput
    item?: ItemUpdateOneRequiredWithoutDeliveryOrderItemsNestedInput
  }

  export type DeliveryOrderItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    deliveryOrderId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    orderedQuantity?: FloatFieldUpdateOperationsInput | number
    receivedQuantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DeliveryOrderItemCreateManyInput = {
    id?: number
    deliveryOrderId: number
    itemId: number
    orderedQuantity: number
    receivedQuantity: number
    unitPrice?: Decimal | DecimalJsLike | number | string | null
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
  }

  export type DeliveryOrderItemUpdateManyMutationInput = {
    orderedQuantity?: FloatFieldUpdateOperationsInput | number
    receivedQuantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DeliveryOrderItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    deliveryOrderId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    orderedQuantity?: FloatFieldUpdateOperationsInput | number
    receivedQuantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PurchaseOrderCreateInput = {
    purchaseOrderNumber: string
    outletId: number
    purchaseOrderDate?: Date | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    roundingAmount?: Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: Decimal | DecimalJsLike | number | string | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    status: string
    remark?: string | null
    currency?: string
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    session?: SessionCreateNestedOneWithoutPurchaseOrdersInput
    supplier: SupplierCreateNestedOneWithoutPurchaseOrdersInput
    purchaseOrderItems?: PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput
    deliveryOrders?: DeliveryOrderCreateNestedManyWithoutPurchaseOrderInput
    invoices?: InvoiceCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderUncheckedCreateInput = {
    id?: number
    purchaseOrderNumber: string
    outletId: number
    supplierId: number
    purchaseOrderDate?: Date | string | null
    sessionId?: number | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    roundingAmount?: Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: Decimal | DecimalJsLike | number | string | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    status: string
    remark?: string | null
    currency?: string
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    purchaseOrderItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutPurchaseOrderInput
    deliveryOrders?: DeliveryOrderUncheckedCreateNestedManyWithoutPurchaseOrderInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderUpdateInput = {
    purchaseOrderNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    purchaseOrderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    session?: SessionUpdateOneWithoutPurchaseOrdersNestedInput
    supplier?: SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput
    purchaseOrderItems?: PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput
    deliveryOrders?: DeliveryOrderUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: InvoiceUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    purchaseOrderNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    purchaseOrderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrderItems?: PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    deliveryOrders?: DeliveryOrderUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderCreateManyInput = {
    id?: number
    purchaseOrderNumber: string
    outletId: number
    supplierId: number
    purchaseOrderDate?: Date | string | null
    sessionId?: number | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    roundingAmount?: Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: Decimal | DecimalJsLike | number | string | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    status: string
    remark?: string | null
    currency?: string
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type PurchaseOrderUpdateManyMutationInput = {
    purchaseOrderNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    purchaseOrderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PurchaseOrderUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    purchaseOrderNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    purchaseOrderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PurchaseOrderItemCreateInput = {
    quantity: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    purchaseOrder: PurchaseOrderCreateNestedOneWithoutPurchaseOrderItemsInput
    item: ItemCreateNestedOneWithoutPurchaseOrderItemsInput
  }

  export type PurchaseOrderItemUncheckedCreateInput = {
    id?: number
    purchaseOrderId: number
    itemId: number
    quantity: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
  }

  export type PurchaseOrderItemUpdateInput = {
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchaseOrder?: PurchaseOrderUpdateOneRequiredWithoutPurchaseOrderItemsNestedInput
    item?: ItemUpdateOneRequiredWithoutPurchaseOrderItemsNestedInput
  }

  export type PurchaseOrderItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    purchaseOrderId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PurchaseOrderItemCreateManyInput = {
    id?: number
    purchaseOrderId: number
    itemId: number
    quantity: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
  }

  export type PurchaseOrderItemUpdateManyMutationInput = {
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PurchaseOrderItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    purchaseOrderId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentCreateInput = {
    method: string
    tenderedAmount: Decimal | DecimalJsLike | number | string
    paidAmount: Decimal | DecimalJsLike | number | string
    currencySymbol?: string
    reference?: string
    remark?: string
    businessDate: Date | string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    cardInfos?: CardInfoCreateNestedManyWithoutPaymentInput
    sales: SalesCreateNestedOneWithoutPaymentsInput
    splitBills?: SplitBillCreateNestedManyWithoutPaymentInput
  }

  export type PaymentUncheckedCreateInput = {
    id?: number
    method: string
    tenderedAmount: Decimal | DecimalJsLike | number | string
    paidAmount: Decimal | DecimalJsLike | number | string
    currencySymbol?: string
    salesId: number
    reference?: string
    remark?: string
    businessDate: Date | string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    cardInfos?: CardInfoUncheckedCreateNestedManyWithoutPaymentInput
    splitBills?: SplitBillUncheckedCreateNestedManyWithoutPaymentInput
  }

  export type PaymentUpdateInput = {
    method?: StringFieldUpdateOperationsInput | string
    tenderedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    cardInfos?: CardInfoUpdateManyWithoutPaymentNestedInput
    sales?: SalesUpdateOneRequiredWithoutPaymentsNestedInput
    splitBills?: SplitBillUpdateManyWithoutPaymentNestedInput
  }

  export type PaymentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    method?: StringFieldUpdateOperationsInput | string
    tenderedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    salesId?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    cardInfos?: CardInfoUncheckedUpdateManyWithoutPaymentNestedInput
    splitBills?: SplitBillUncheckedUpdateManyWithoutPaymentNestedInput
  }

  export type PaymentCreateManyInput = {
    id?: number
    method: string
    tenderedAmount: Decimal | DecimalJsLike | number | string
    paidAmount: Decimal | DecimalJsLike | number | string
    currencySymbol?: string
    salesId: number
    reference?: string
    remark?: string
    businessDate: Date | string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type PaymentUpdateManyMutationInput = {
    method?: StringFieldUpdateOperationsInput | string
    tenderedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PaymentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    method?: StringFieldUpdateOperationsInput | string
    tenderedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    salesId?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegisterLogCreateInput = {
    type: string
    modifiedAmount: Decimal | DecimalJsLike | number | string
    currencySymbol?: string
    remark?: string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales: SalesCreateNestedOneWithoutRegisterLogsInput
  }

  export type RegisterLogUncheckedCreateInput = {
    id?: number
    type: string
    modifiedAmount: Decimal | DecimalJsLike | number | string
    currencySymbol?: string
    salesId: number
    remark?: string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type RegisterLogUpdateInput = {
    type?: StringFieldUpdateOperationsInput | string
    modifiedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUpdateOneRequiredWithoutRegisterLogsNestedInput
  }

  export type RegisterLogUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    modifiedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    salesId?: IntFieldUpdateOperationsInput | number
    remark?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegisterLogCreateManyInput = {
    id?: number
    type: string
    modifiedAmount: Decimal | DecimalJsLike | number | string
    currencySymbol?: string
    salesId: number
    remark?: string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type RegisterLogUpdateManyMutationInput = {
    type?: StringFieldUpdateOperationsInput | string
    modifiedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegisterLogUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    modifiedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    salesId?: IntFieldUpdateOperationsInput | number
    remark?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CardInfoCreateInput = {
    cardNumber?: string | null
    cardExpiry?: string | null
    traceNumber?: string | null
    type2?: string | null
    type3?: string | null
    cardRate?: number | null
    appCode?: string | null
    cardType?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    payment: PaymentCreateNestedOneWithoutCardInfosInput
  }

  export type CardInfoUncheckedCreateInput = {
    id?: number
    paymentId: number
    cardNumber?: string | null
    cardExpiry?: string | null
    traceNumber?: string | null
    type2?: string | null
    type3?: string | null
    cardRate?: number | null
    appCode?: string | null
    cardType?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type CardInfoUpdateInput = {
    cardNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cardExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    traceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    type3?: NullableStringFieldUpdateOperationsInput | string | null
    cardRate?: NullableFloatFieldUpdateOperationsInput | number | null
    appCode?: NullableStringFieldUpdateOperationsInput | string | null
    cardType?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    payment?: PaymentUpdateOneRequiredWithoutCardInfosNestedInput
  }

  export type CardInfoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    paymentId?: IntFieldUpdateOperationsInput | number
    cardNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cardExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    traceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    type3?: NullableStringFieldUpdateOperationsInput | string | null
    cardRate?: NullableFloatFieldUpdateOperationsInput | number | null
    appCode?: NullableStringFieldUpdateOperationsInput | string | null
    cardType?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CardInfoCreateManyInput = {
    id?: number
    paymentId: number
    cardNumber?: string | null
    cardExpiry?: string | null
    traceNumber?: string | null
    type2?: string | null
    type3?: string | null
    cardRate?: number | null
    appCode?: string | null
    cardType?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type CardInfoUpdateManyMutationInput = {
    cardNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cardExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    traceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    type3?: NullableStringFieldUpdateOperationsInput | string | null
    cardRate?: NullableFloatFieldUpdateOperationsInput | number | null
    appCode?: NullableStringFieldUpdateOperationsInput | string | null
    cardType?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CardInfoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    paymentId?: IntFieldUpdateOperationsInput | number
    cardNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cardExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    traceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    type3?: NullableStringFieldUpdateOperationsInput | string | null
    cardRate?: NullableFloatFieldUpdateOperationsInput | number | null
    appCode?: NullableStringFieldUpdateOperationsInput | string | null
    cardType?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SessionCreateInput = {
    outletId: number
    businessDate: Date | string
    openingDateTime?: Date | string | null
    closingDateTime?: Date | string | null
    openingAmount: Decimal | DecimalJsLike | number | string
    totalSalesCount: number
    openByUserID: number
    closeByUserID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    declarations?: DeclarationCreateNestedManyWithoutSessionInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutSessionInput
    deliveryOrders?: DeliveryOrderCreateNestedManyWithoutSessionInput
    invoices?: InvoiceCreateNestedManyWithoutSessionInput
  }

  export type SessionUncheckedCreateInput = {
    id?: number
    outletId: number
    businessDate: Date | string
    openingDateTime?: Date | string | null
    closingDateTime?: Date | string | null
    openingAmount: Decimal | DecimalJsLike | number | string
    totalSalesCount: number
    openByUserID: number
    closeByUserID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    declarations?: DeclarationUncheckedCreateNestedManyWithoutSessionInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutSessionInput
    deliveryOrders?: DeliveryOrderUncheckedCreateNestedManyWithoutSessionInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutSessionInput
  }

  export type SessionUpdateInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    openingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSalesCount?: IntFieldUpdateOperationsInput | number
    openByUserID?: IntFieldUpdateOperationsInput | number
    closeByUserID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    declarations?: DeclarationUpdateManyWithoutSessionNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutSessionNestedInput
    deliveryOrders?: DeliveryOrderUpdateManyWithoutSessionNestedInput
    invoices?: InvoiceUpdateManyWithoutSessionNestedInput
  }

  export type SessionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    openingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSalesCount?: IntFieldUpdateOperationsInput | number
    openByUserID?: IntFieldUpdateOperationsInput | number
    closeByUserID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    declarations?: DeclarationUncheckedUpdateManyWithoutSessionNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutSessionNestedInput
    deliveryOrders?: DeliveryOrderUncheckedUpdateManyWithoutSessionNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutSessionNestedInput
  }

  export type SessionCreateManyInput = {
    id?: number
    outletId: number
    businessDate: Date | string
    openingDateTime?: Date | string | null
    closingDateTime?: Date | string | null
    openingAmount: Decimal | DecimalJsLike | number | string
    totalSalesCount: number
    openByUserID: number
    closeByUserID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SessionUpdateManyMutationInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    openingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSalesCount?: IntFieldUpdateOperationsInput | number
    openByUserID?: IntFieldUpdateOperationsInput | number
    closeByUserID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SessionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    openingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSalesCount?: IntFieldUpdateOperationsInput | number
    openByUserID?: IntFieldUpdateOperationsInput | number
    closeByUserID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DeclarationCreateInput = {
    paymentType: string
    totalPaymentAmount: Decimal | DecimalJsLike | number | string
    declarationAmount: Decimal | DecimalJsLike | number | string
    differenceAmount: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    session: SessionCreateNestedOneWithoutDeclarationsInput
  }

  export type DeclarationUncheckedCreateInput = {
    id?: number
    paymentType: string
    totalPaymentAmount: Decimal | DecimalJsLike | number | string
    declarationAmount: Decimal | DecimalJsLike | number | string
    differenceAmount: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sessionID: number
  }

  export type DeclarationUpdateInput = {
    paymentType?: StringFieldUpdateOperationsInput | string
    totalPaymentAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    declarationAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    differenceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    session?: SessionUpdateOneRequiredWithoutDeclarationsNestedInput
  }

  export type DeclarationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    paymentType?: StringFieldUpdateOperationsInput | string
    totalPaymentAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    declarationAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    differenceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sessionID?: IntFieldUpdateOperationsInput | number
  }

  export type DeclarationCreateManyInput = {
    id?: number
    paymentType: string
    totalPaymentAmount: Decimal | DecimalJsLike | number | string
    declarationAmount: Decimal | DecimalJsLike | number | string
    differenceAmount: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sessionID: number
  }

  export type DeclarationUpdateManyMutationInput = {
    paymentType?: StringFieldUpdateOperationsInput | string
    totalPaymentAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    declarationAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    differenceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DeclarationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    paymentType?: StringFieldUpdateOperationsInput | string
    totalPaymentAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    declarationAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    differenceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sessionID?: IntFieldUpdateOperationsInput | number
  }

  export type StockBalanceCreateInput = {
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    reorderThreshold?: Decimal | DecimalJsLike | number | string | null
    deleted?: boolean
    lastRestockDate?: Date | string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    item: ItemCreateNestedOneWithoutStockBalanceInput
    outlet: OutletCreateNestedOneWithoutStockBalancesInput
  }

  export type StockBalanceUncheckedCreateInput = {
    id?: number
    itemId: number
    outletId: number
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    reorderThreshold?: Decimal | DecimalJsLike | number | string | null
    deleted?: boolean
    lastRestockDate?: Date | string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StockBalanceUpdateInput = {
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reorderThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    lastRestockDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    item?: ItemUpdateOneRequiredWithoutStockBalanceNestedInput
    outlet?: OutletUpdateOneRequiredWithoutStockBalancesNestedInput
  }

  export type StockBalanceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reorderThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    lastRestockDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockBalanceCreateManyInput = {
    id?: number
    itemId: number
    outletId: number
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    reorderThreshold?: Decimal | DecimalJsLike | number | string | null
    deleted?: boolean
    lastRestockDate?: Date | string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StockBalanceUpdateManyMutationInput = {
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reorderThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    lastRestockDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockBalanceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reorderThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    lastRestockDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockReceiptCreateInput = {
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    receiptDate?: Date | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
    item: ItemCreateNestedOneWithoutStockReceiptsInput
    outlet: OutletCreateNestedOneWithoutStockReceiptsInput
  }

  export type StockReceiptUncheckedCreateInput = {
    id?: number
    itemId: number
    outletId: number
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    receiptDate?: Date | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type StockReceiptUpdateInput = {
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    item?: ItemUpdateOneRequiredWithoutStockReceiptsNestedInput
    outlet?: OutletUpdateOneRequiredWithoutStockReceiptsNestedInput
  }

  export type StockReceiptUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockReceiptCreateManyInput = {
    id?: number
    itemId: number
    outletId: number
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    receiptDate?: Date | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type StockReceiptUpdateManyMutationInput = {
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockReceiptUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockReceiptArchiveCreateInput = {
    itemId: number
    outletId: number
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    receiptDate: Date | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type StockReceiptArchiveUncheckedCreateInput = {
    id?: number
    itemId: number
    outletId: number
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    receiptDate: Date | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type StockReceiptArchiveUpdateInput = {
    itemId?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockReceiptArchiveUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockReceiptArchiveCreateManyInput = {
    id?: number
    itemId: number
    outletId: number
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    receiptDate: Date | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type StockReceiptArchiveUpdateManyMutationInput = {
    itemId?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockReceiptArchiveUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockMovementCreateInput = {
    previousAvailableQuantity: Decimal | DecimalJsLike | number | string
    previousOnHandQuantity: Decimal | DecimalJsLike | number | string
    availableQuantityDelta: Decimal | DecimalJsLike | number | string
    onHandQuantityDelta: Decimal | DecimalJsLike | number | string
    movementType: string
    documentId: number
    reason: string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    performedBy?: string | null
    item: ItemCreateNestedOneWithoutStockMovementsInput
    outlet: OutletCreateNestedOneWithoutStockMovementsInput
  }

  export type StockMovementUncheckedCreateInput = {
    id?: number
    itemId: number
    outletId: number
    previousAvailableQuantity: Decimal | DecimalJsLike | number | string
    previousOnHandQuantity: Decimal | DecimalJsLike | number | string
    availableQuantityDelta: Decimal | DecimalJsLike | number | string
    onHandQuantityDelta: Decimal | DecimalJsLike | number | string
    movementType: string
    documentId: number
    reason: string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    performedBy?: string | null
  }

  export type StockMovementUpdateInput = {
    previousAvailableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    movementType?: StringFieldUpdateOperationsInput | string
    documentId?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    item?: ItemUpdateOneRequiredWithoutStockMovementsNestedInput
    outlet?: OutletUpdateOneRequiredWithoutStockMovementsNestedInput
  }

  export type StockMovementUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    previousAvailableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    movementType?: StringFieldUpdateOperationsInput | string
    documentId?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StockMovementCreateManyInput = {
    id?: number
    itemId: number
    outletId: number
    previousAvailableQuantity: Decimal | DecimalJsLike | number | string
    previousOnHandQuantity: Decimal | DecimalJsLike | number | string
    availableQuantityDelta: Decimal | DecimalJsLike | number | string
    onHandQuantityDelta: Decimal | DecimalJsLike | number | string
    movementType: string
    documentId: number
    reason: string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    performedBy?: string | null
  }

  export type StockMovementUpdateManyMutationInput = {
    previousAvailableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    movementType?: StringFieldUpdateOperationsInput | string
    documentId?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StockMovementUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    previousAvailableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    movementType?: StringFieldUpdateOperationsInput | string
    documentId?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StockMovementArchiveCreateInput = {
    itemId: number
    itemCode: string
    itemName: string
    outletId: number
    outletName: string
    previousAvailableQuantity: Decimal | DecimalJsLike | number | string
    previousOnHandQuantity: Decimal | DecimalJsLike | number | string
    availableQuantityDelta: Decimal | DecimalJsLike | number | string
    onHandQuantityDelta: Decimal | DecimalJsLike | number | string
    movementType: string
    documentId: number
    documentType: string
    reason: string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StockMovementArchiveUncheckedCreateInput = {
    id?: number
    itemId: number
    itemCode: string
    itemName: string
    outletId: number
    outletName: string
    previousAvailableQuantity: Decimal | DecimalJsLike | number | string
    previousOnHandQuantity: Decimal | DecimalJsLike | number | string
    availableQuantityDelta: Decimal | DecimalJsLike | number | string
    onHandQuantityDelta: Decimal | DecimalJsLike | number | string
    movementType: string
    documentId: number
    documentType: string
    reason: string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StockMovementArchiveUpdateInput = {
    itemId?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    itemName?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    previousAvailableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    movementType?: StringFieldUpdateOperationsInput | string
    documentId?: IntFieldUpdateOperationsInput | number
    documentType?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockMovementArchiveUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    itemName?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    previousAvailableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    movementType?: StringFieldUpdateOperationsInput | string
    documentId?: IntFieldUpdateOperationsInput | number
    documentType?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockMovementArchiveCreateManyInput = {
    id?: number
    itemId: number
    itemCode: string
    itemName: string
    outletId: number
    outletName: string
    previousAvailableQuantity: Decimal | DecimalJsLike | number | string
    previousOnHandQuantity: Decimal | DecimalJsLike | number | string
    availableQuantityDelta: Decimal | DecimalJsLike | number | string
    onHandQuantityDelta: Decimal | DecimalJsLike | number | string
    movementType: string
    documentId: number
    documentType: string
    reason: string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StockMovementArchiveUpdateManyMutationInput = {
    itemId?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    itemName?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    previousAvailableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    movementType?: StringFieldUpdateOperationsInput | string
    documentId?: IntFieldUpdateOperationsInput | number
    documentType?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockMovementArchiveUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    itemName?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    previousAvailableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    movementType?: StringFieldUpdateOperationsInput | string
    documentId?: IntFieldUpdateOperationsInput | number
    documentType?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockSnapshotCreateInput = {
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    item: ItemCreateNestedOneWithoutStockSnapshotsInput
    outlet: OutletCreateNestedOneWithoutStockSnapshotsInput
  }

  export type StockSnapshotUncheckedCreateInput = {
    id?: number
    itemId: number
    outletId: number
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StockSnapshotUpdateInput = {
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    item?: ItemUpdateOneRequiredWithoutStockSnapshotsNestedInput
    outlet?: OutletUpdateOneRequiredWithoutStockSnapshotsNestedInput
  }

  export type StockSnapshotUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockSnapshotCreateManyInput = {
    id?: number
    itemId: number
    outletId: number
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StockSnapshotUpdateManyMutationInput = {
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockSnapshotUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuProfileOutletCreateInput = {
    outletId: number
    menuProfileID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type MenuProfileOutletUncheckedCreateInput = {
    id?: number
    outletId: number
    menuProfileID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type MenuProfileOutletUpdateInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    menuProfileID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuProfileOutletUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    menuProfileID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuProfileOutletCreateManyInput = {
    id?: number
    outletId: number
    menuProfileID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type MenuProfileOutletUpdateManyMutationInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    menuProfileID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuProfileOutletUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    menuProfileID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuProfileCreateInput = {
    name: string
    dateStart: string
    dateEnd: string
    timeStart: string
    timeEnd: string
    isMonday: boolean
    isTuesday: boolean
    isWednesday: boolean
    isThursday: boolean
    isFriday: boolean
    isSaturday: boolean
    isSunday: boolean
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuCategories?: MenuCategoryCreateNestedManyWithoutMenuProfileInput
  }

  export type MenuProfileUncheckedCreateInput = {
    id?: number
    name: string
    dateStart: string
    dateEnd: string
    timeStart: string
    timeEnd: string
    isMonday: boolean
    isTuesday: boolean
    isWednesday: boolean
    isThursday: boolean
    isFriday: boolean
    isSaturday: boolean
    isSunday: boolean
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuCategories?: MenuCategoryUncheckedCreateNestedManyWithoutMenuProfileInput
  }

  export type MenuProfileUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    dateStart?: StringFieldUpdateOperationsInput | string
    dateEnd?: StringFieldUpdateOperationsInput | string
    timeStart?: StringFieldUpdateOperationsInput | string
    timeEnd?: StringFieldUpdateOperationsInput | string
    isMonday?: BoolFieldUpdateOperationsInput | boolean
    isTuesday?: BoolFieldUpdateOperationsInput | boolean
    isWednesday?: BoolFieldUpdateOperationsInput | boolean
    isThursday?: BoolFieldUpdateOperationsInput | boolean
    isFriday?: BoolFieldUpdateOperationsInput | boolean
    isSaturday?: BoolFieldUpdateOperationsInput | boolean
    isSunday?: BoolFieldUpdateOperationsInput | boolean
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuCategories?: MenuCategoryUpdateManyWithoutMenuProfileNestedInput
  }

  export type MenuProfileUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    dateStart?: StringFieldUpdateOperationsInput | string
    dateEnd?: StringFieldUpdateOperationsInput | string
    timeStart?: StringFieldUpdateOperationsInput | string
    timeEnd?: StringFieldUpdateOperationsInput | string
    isMonday?: BoolFieldUpdateOperationsInput | boolean
    isTuesday?: BoolFieldUpdateOperationsInput | boolean
    isWednesday?: BoolFieldUpdateOperationsInput | boolean
    isThursday?: BoolFieldUpdateOperationsInput | boolean
    isFriday?: BoolFieldUpdateOperationsInput | boolean
    isSaturday?: BoolFieldUpdateOperationsInput | boolean
    isSunday?: BoolFieldUpdateOperationsInput | boolean
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuCategories?: MenuCategoryUncheckedUpdateManyWithoutMenuProfileNestedInput
  }

  export type MenuProfileCreateManyInput = {
    id?: number
    name: string
    dateStart: string
    dateEnd: string
    timeStart: string
    timeEnd: string
    isMonday: boolean
    isTuesday: boolean
    isWednesday: boolean
    isThursday: boolean
    isFriday: boolean
    isSaturday: boolean
    isSunday: boolean
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type MenuProfileUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    dateStart?: StringFieldUpdateOperationsInput | string
    dateEnd?: StringFieldUpdateOperationsInput | string
    timeStart?: StringFieldUpdateOperationsInput | string
    timeEnd?: StringFieldUpdateOperationsInput | string
    isMonday?: BoolFieldUpdateOperationsInput | boolean
    isTuesday?: BoolFieldUpdateOperationsInput | boolean
    isWednesday?: BoolFieldUpdateOperationsInput | boolean
    isThursday?: BoolFieldUpdateOperationsInput | boolean
    isFriday?: BoolFieldUpdateOperationsInput | boolean
    isSaturday?: BoolFieldUpdateOperationsInput | boolean
    isSunday?: BoolFieldUpdateOperationsInput | boolean
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuProfileUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    dateStart?: StringFieldUpdateOperationsInput | string
    dateEnd?: StringFieldUpdateOperationsInput | string
    timeStart?: StringFieldUpdateOperationsInput | string
    timeEnd?: StringFieldUpdateOperationsInput | string
    isMonday?: BoolFieldUpdateOperationsInput | boolean
    isTuesday?: BoolFieldUpdateOperationsInput | boolean
    isWednesday?: BoolFieldUpdateOperationsInput | boolean
    isThursday?: BoolFieldUpdateOperationsInput | boolean
    isFriday?: BoolFieldUpdateOperationsInput | boolean
    isSaturday?: BoolFieldUpdateOperationsInput | boolean
    isSunday?: BoolFieldUpdateOperationsInput | boolean
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuCategoryCreateInput = {
    name: string
    imageURL?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuProfile: MenuProfileCreateNestedOneWithoutMenuCategoriesInput
    menuItems?: MenuItemCreateNestedManyWithoutMenuCategoryInput
  }

  export type MenuCategoryUncheckedCreateInput = {
    id?: number
    name: string
    menuProfileID: number
    imageURL?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuItems?: MenuItemUncheckedCreateNestedManyWithoutMenuCategoryInput
  }

  export type MenuCategoryUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuProfile?: MenuProfileUpdateOneRequiredWithoutMenuCategoriesNestedInput
    menuItems?: MenuItemUpdateManyWithoutMenuCategoryNestedInput
  }

  export type MenuCategoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    menuProfileID?: IntFieldUpdateOperationsInput | number
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuItems?: MenuItemUncheckedUpdateManyWithoutMenuCategoryNestedInput
  }

  export type MenuCategoryCreateManyInput = {
    id?: number
    name: string
    menuProfileID: number
    imageURL?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type MenuCategoryUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuCategoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    menuProfileID?: IntFieldUpdateOperationsInput | number
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuItemCreateInput = {
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuCategory: MenuCategoryCreateNestedOneWithoutMenuItemsInput
    menuItemModifierGroups?: MenuItemModifierGroupCreateNestedManyWithoutMenuItemInput
    recipes?: RecipeCreateNestedManyWithoutMenuItemInput
  }

  export type MenuItemUncheckedCreateInput = {
    id?: number
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    sequence: number
    menuCategoryID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuItemModifierGroups?: MenuItemModifierGroupUncheckedCreateNestedManyWithoutMenuItemInput
    recipes?: RecipeUncheckedCreateNestedManyWithoutMenuItemInput
  }

  export type MenuItemUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuCategory?: MenuCategoryUpdateOneRequiredWithoutMenuItemsNestedInput
    menuItemModifierGroups?: MenuItemModifierGroupUpdateManyWithoutMenuItemNestedInput
    recipes?: RecipeUpdateManyWithoutMenuItemNestedInput
  }

  export type MenuItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sequence?: IntFieldUpdateOperationsInput | number
    menuCategoryID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuItemModifierGroups?: MenuItemModifierGroupUncheckedUpdateManyWithoutMenuItemNestedInput
    recipes?: RecipeUncheckedUpdateManyWithoutMenuItemNestedInput
  }

  export type MenuItemCreateManyInput = {
    id?: number
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    sequence: number
    menuCategoryID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type MenuItemUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sequence?: IntFieldUpdateOperationsInput | number
    menuCategoryID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuItemModifierGroupCreateInput = {
    name: string
    minSelection: number
    maxSelection: number
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    freeModifierLimit?: number | null
    menuItem: MenuItemCreateNestedOneWithoutMenuItemModifierGroupsInput
    menuItemModifiers?: MenuItemModifierCreateNestedManyWithoutMenuItemModifierGroupInput
  }

  export type MenuItemModifierGroupUncheckedCreateInput = {
    id?: number
    name: string
    minSelection: number
    maxSelection: number
    sequence: number
    menuItemID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    freeModifierLimit?: number | null
    menuItemModifiers?: MenuItemModifierUncheckedCreateNestedManyWithoutMenuItemModifierGroupInput
  }

  export type MenuItemModifierGroupUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    minSelection?: IntFieldUpdateOperationsInput | number
    maxSelection?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    freeModifierLimit?: NullableIntFieldUpdateOperationsInput | number | null
    menuItem?: MenuItemUpdateOneRequiredWithoutMenuItemModifierGroupsNestedInput
    menuItemModifiers?: MenuItemModifierUpdateManyWithoutMenuItemModifierGroupNestedInput
  }

  export type MenuItemModifierGroupUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    minSelection?: IntFieldUpdateOperationsInput | number
    maxSelection?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    menuItemID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    freeModifierLimit?: NullableIntFieldUpdateOperationsInput | number | null
    menuItemModifiers?: MenuItemModifierUncheckedUpdateManyWithoutMenuItemModifierGroupNestedInput
  }

  export type MenuItemModifierGroupCreateManyInput = {
    id?: number
    name: string
    minSelection: number
    maxSelection: number
    sequence: number
    menuItemID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    freeModifierLimit?: number | null
  }

  export type MenuItemModifierGroupUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    minSelection?: IntFieldUpdateOperationsInput | number
    maxSelection?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    freeModifierLimit?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuItemModifierGroupUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    minSelection?: IntFieldUpdateOperationsInput | number
    maxSelection?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    menuItemID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    freeModifierLimit?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuItemModifierCreateInput = {
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    defaultSelectionQty: number
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuItemModifierGroup: MenuItemModifierGroupCreateNestedOneWithoutMenuItemModifiersInput
    salesItemModifiers?: SalesItemModifierCreateNestedManyWithoutMenuItemModifierInput
    recipes?: RecipeCreateNestedManyWithoutMenuItemModifierInput
  }

  export type MenuItemModifierUncheckedCreateInput = {
    id?: number
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    defaultSelectionQty: number
    sequence: number
    menuItemModifierGroupID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    salesItemModifiers?: SalesItemModifierUncheckedCreateNestedManyWithoutMenuItemModifierInput
    recipes?: RecipeUncheckedCreateNestedManyWithoutMenuItemModifierInput
  }

  export type MenuItemModifierUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    defaultSelectionQty?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuItemModifierGroup?: MenuItemModifierGroupUpdateOneRequiredWithoutMenuItemModifiersNestedInput
    salesItemModifiers?: SalesItemModifierUpdateManyWithoutMenuItemModifierNestedInput
    recipes?: RecipeUpdateManyWithoutMenuItemModifierNestedInput
  }

  export type MenuItemModifierUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    defaultSelectionQty?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    menuItemModifierGroupID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    salesItemModifiers?: SalesItemModifierUncheckedUpdateManyWithoutMenuItemModifierNestedInput
    recipes?: RecipeUncheckedUpdateManyWithoutMenuItemModifierNestedInput
  }

  export type MenuItemModifierCreateManyInput = {
    id?: number
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    defaultSelectionQty: number
    sequence: number
    menuItemModifierGroupID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type MenuItemModifierUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    defaultSelectionQty?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuItemModifierUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    defaultSelectionQty?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    menuItemModifierGroupID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TableCreateInput = {
    tableNumber: string
    capacity: number
    status: string
    salesId?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    outlet: OutletCreateNestedOneWithoutTablesInput
    sales?: SalesCreateNestedManyWithoutTableInput
    reservations?: ReservationCreateNestedManyWithoutTableInput
  }

  export type TableUncheckedCreateInput = {
    id?: number
    outletId: number
    tableNumber: string
    capacity: number
    status: string
    salesId?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales?: SalesUncheckedCreateNestedManyWithoutTableInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutTableInput
  }

  export type TableUpdateInput = {
    tableNumber?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    outlet?: OutletUpdateOneRequiredWithoutTablesNestedInput
    sales?: SalesUpdateManyWithoutTableNestedInput
    reservations?: ReservationUpdateManyWithoutTableNestedInput
  }

  export type TableUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    tableNumber?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUncheckedUpdateManyWithoutTableNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutTableNestedInput
  }

  export type TableCreateManyInput = {
    id?: number
    outletId: number
    tableNumber: string
    capacity: number
    status: string
    salesId?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type TableUpdateManyMutationInput = {
    tableNumber?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TableUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    tableNumber?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RecipeCreateInput = {
    quantity: number
    unit: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    batchYield?: number | null
    menuItemModifier?: MenuItemModifierCreateNestedOneWithoutRecipesInput
    menuItem: MenuItemCreateNestedOneWithoutRecipesInput
    item: ItemCreateNestedOneWithoutRecipesInput
  }

  export type RecipeUncheckedCreateInput = {
    id?: number
    menuItemId: number
    itemId: number
    quantity: number
    unit: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    batchYield?: number | null
    menuItemModifierId?: number | null
  }

  export type RecipeUpdateInput = {
    quantity?: FloatFieldUpdateOperationsInput | number
    unit?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    batchYield?: NullableFloatFieldUpdateOperationsInput | number | null
    menuItemModifier?: MenuItemModifierUpdateOneWithoutRecipesNestedInput
    menuItem?: MenuItemUpdateOneRequiredWithoutRecipesNestedInput
    item?: ItemUpdateOneRequiredWithoutRecipesNestedInput
  }

  export type RecipeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    menuItemId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: FloatFieldUpdateOperationsInput | number
    unit?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    batchYield?: NullableFloatFieldUpdateOperationsInput | number | null
    menuItemModifierId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RecipeCreateManyInput = {
    id?: number
    menuItemId: number
    itemId: number
    quantity: number
    unit: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    batchYield?: number | null
    menuItemModifierId?: number | null
  }

  export type RecipeUpdateManyMutationInput = {
    quantity?: FloatFieldUpdateOperationsInput | number
    unit?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    batchYield?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type RecipeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    menuItemId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: FloatFieldUpdateOperationsInput | number
    unit?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    batchYield?: NullableFloatFieldUpdateOperationsInput | number | null
    menuItemModifierId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StationCreateInput = {
    name: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    outlet: OutletCreateNestedOneWithoutStationsInput
    orderRouting?: OrderRoutingCreateNestedManyWithoutStationInput
  }

  export type StationUncheckedCreateInput = {
    id?: number
    outletId: number
    name: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    orderRouting?: OrderRoutingUncheckedCreateNestedManyWithoutStationInput
  }

  export type StationUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    outlet?: OutletUpdateOneRequiredWithoutStationsNestedInput
    orderRouting?: OrderRoutingUpdateManyWithoutStationNestedInput
  }

  export type StationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    orderRouting?: OrderRoutingUncheckedUpdateManyWithoutStationNestedInput
  }

  export type StationCreateManyInput = {
    id?: number
    outletId: number
    name: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StationUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReservationCreateInput = {
    dateTime: Date | string
    partySize: number
    status: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    outlet: OutletCreateNestedOneWithoutReservationsInput
    customer?: CustomerCreateNestedOneWithoutReservationsInput
    table?: TableCreateNestedOneWithoutReservationsInput
  }

  export type ReservationUncheckedCreateInput = {
    id?: number
    outletId: number
    customerId?: number | null
    tableId?: number | null
    dateTime: Date | string
    partySize: number
    status: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type ReservationUpdateInput = {
    dateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    outlet?: OutletUpdateOneRequiredWithoutReservationsNestedInput
    customer?: CustomerUpdateOneWithoutReservationsNestedInput
    table?: TableUpdateOneWithoutReservationsNestedInput
  }

  export type ReservationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    tableId?: NullableIntFieldUpdateOperationsInput | number | null
    dateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReservationCreateManyInput = {
    id?: number
    outletId: number
    customerId?: number | null
    tableId?: number | null
    dateTime: Date | string
    partySize: number
    status: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type ReservationUpdateManyMutationInput = {
    dateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReservationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    tableId?: NullableIntFieldUpdateOperationsInput | number | null
    dateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OrderRoutingCreateInput = {
    status: string
    sentAt?: Date | string | null
    completedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    salesItem: SalesItemCreateNestedOneWithoutOrderRoutingInput
    station: StationCreateNestedOneWithoutOrderRoutingInput
  }

  export type OrderRoutingUncheckedCreateInput = {
    id?: number
    salesItemId: number
    stationId: number
    status: string
    sentAt?: Date | string | null
    completedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type OrderRoutingUpdateInput = {
    status?: StringFieldUpdateOperationsInput | string
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    salesItem?: SalesItemUpdateOneRequiredWithoutOrderRoutingNestedInput
    station?: StationUpdateOneRequiredWithoutOrderRoutingNestedInput
  }

  export type OrderRoutingUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesItemId?: IntFieldUpdateOperationsInput | number
    stationId?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OrderRoutingCreateManyInput = {
    id?: number
    salesItemId: number
    stationId: number
    status: string
    sentAt?: Date | string | null
    completedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type OrderRoutingUpdateManyMutationInput = {
    status?: StringFieldUpdateOperationsInput | string
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OrderRoutingUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesItemId?: IntFieldUpdateOperationsInput | number
    stationId?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type WaitlistCreateInput = {
    partySize: number
    status: string
    waitTime?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    outlet: OutletCreateNestedOneWithoutWaitlistsInput
    customer?: CustomerCreateNestedOneWithoutWaitlistsInput
  }

  export type WaitlistUncheckedCreateInput = {
    id?: number
    outletId: number
    customerId?: number | null
    partySize: number
    status: string
    waitTime?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type WaitlistUpdateInput = {
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    waitTime?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    outlet?: OutletUpdateOneRequiredWithoutWaitlistsNestedInput
    customer?: CustomerUpdateOneWithoutWaitlistsNestedInput
  }

  export type WaitlistUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    waitTime?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type WaitlistCreateManyInput = {
    id?: number
    outletId: number
    customerId?: number | null
    partySize: number
    status: string
    waitTime?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type WaitlistUpdateManyMutationInput = {
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    waitTime?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type WaitlistUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    waitTime?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SplitBillCreateInput = {
    salesId: number
    amount: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    payment?: PaymentCreateNestedOneWithoutSplitBillsInput
    customer?: CustomerCreateNestedOneWithoutSplitBillsInput
  }

  export type SplitBillUncheckedCreateInput = {
    id?: number
    salesId: number
    amount: Decimal | DecimalJsLike | number | string
    paymentId?: number | null
    customerId?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SplitBillUpdateInput = {
    salesId?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    payment?: PaymentUpdateOneWithoutSplitBillsNestedInput
    customer?: CustomerUpdateOneWithoutSplitBillsNestedInput
  }

  export type SplitBillUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesId?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SplitBillCreateManyInput = {
    id?: number
    salesId: number
    amount: Decimal | DecimalJsLike | number | string
    paymentId?: number | null
    customerId?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SplitBillUpdateManyMutationInput = {
    salesId?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SplitBillUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesId?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCreateInput = {
    name: string
    description?: string | null
    type: $Enums.PromotionType
    status?: $Enums.PromotionStatus
    priority?: number
    combinationRule?: $Enums.CombinationRule
    discountType: $Enums.DiscountType
    discountValue?: Decimal | DecimalJsLike | number | string | null
    buyQuantity?: number | null
    getQuantity?: number | null
    getDiscountValue?: Decimal | DecimalJsLike | number | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    startTime?: string | null
    endTime?: string | null
    validDays?: string | null
    minPurchaseAmount?: Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: number | null
    maxUsageTotal?: number | null
    maxUsagePerCustomer?: number | null
    currentUsage?: number
    isCustomerSpecific?: boolean
    createdBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
    items?: PromotionItemCreateNestedManyWithoutPromotionInput
    customers?: PromotionCustomerCreateNestedManyWithoutPromotionInput
    usageHistory?: PromotionUsageCreateNestedManyWithoutPromotionInput
  }

  export type PromotionUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    type: $Enums.PromotionType
    status?: $Enums.PromotionStatus
    priority?: number
    combinationRule?: $Enums.CombinationRule
    discountType: $Enums.DiscountType
    discountValue?: Decimal | DecimalJsLike | number | string | null
    buyQuantity?: number | null
    getQuantity?: number | null
    getDiscountValue?: Decimal | DecimalJsLike | number | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    startTime?: string | null
    endTime?: string | null
    validDays?: string | null
    minPurchaseAmount?: Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: number | null
    maxUsageTotal?: number | null
    maxUsagePerCustomer?: number | null
    currentUsage?: number
    isCustomerSpecific?: boolean
    createdBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
    items?: PromotionItemUncheckedCreateNestedManyWithoutPromotionInput
    customers?: PromotionCustomerUncheckedCreateNestedManyWithoutPromotionInput
    usageHistory?: PromotionUsageUncheckedCreateNestedManyWithoutPromotionInput
  }

  export type PromotionUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumPromotionTypeFieldUpdateOperationsInput | $Enums.PromotionType
    status?: EnumPromotionStatusFieldUpdateOperationsInput | $Enums.PromotionStatus
    priority?: IntFieldUpdateOperationsInput | number
    combinationRule?: EnumCombinationRuleFieldUpdateOperationsInput | $Enums.CombinationRule
    discountType?: EnumDiscountTypeFieldUpdateOperationsInput | $Enums.DiscountType
    discountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    buyQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getDiscountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableStringFieldUpdateOperationsInput | string | null
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    validDays?: NullableStringFieldUpdateOperationsInput | string | null
    minPurchaseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsageTotal?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsagePerCustomer?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    isCustomerSpecific?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
    items?: PromotionItemUpdateManyWithoutPromotionNestedInput
    customers?: PromotionCustomerUpdateManyWithoutPromotionNestedInput
    usageHistory?: PromotionUsageUpdateManyWithoutPromotionNestedInput
  }

  export type PromotionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumPromotionTypeFieldUpdateOperationsInput | $Enums.PromotionType
    status?: EnumPromotionStatusFieldUpdateOperationsInput | $Enums.PromotionStatus
    priority?: IntFieldUpdateOperationsInput | number
    combinationRule?: EnumCombinationRuleFieldUpdateOperationsInput | $Enums.CombinationRule
    discountType?: EnumDiscountTypeFieldUpdateOperationsInput | $Enums.DiscountType
    discountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    buyQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getDiscountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableStringFieldUpdateOperationsInput | string | null
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    validDays?: NullableStringFieldUpdateOperationsInput | string | null
    minPurchaseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsageTotal?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsagePerCustomer?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    isCustomerSpecific?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
    items?: PromotionItemUncheckedUpdateManyWithoutPromotionNestedInput
    customers?: PromotionCustomerUncheckedUpdateManyWithoutPromotionNestedInput
    usageHistory?: PromotionUsageUncheckedUpdateManyWithoutPromotionNestedInput
  }

  export type PromotionCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    type: $Enums.PromotionType
    status?: $Enums.PromotionStatus
    priority?: number
    combinationRule?: $Enums.CombinationRule
    discountType: $Enums.DiscountType
    discountValue?: Decimal | DecimalJsLike | number | string | null
    buyQuantity?: number | null
    getQuantity?: number | null
    getDiscountValue?: Decimal | DecimalJsLike | number | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    startTime?: string | null
    endTime?: string | null
    validDays?: string | null
    minPurchaseAmount?: Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: number | null
    maxUsageTotal?: number | null
    maxUsagePerCustomer?: number | null
    currentUsage?: number
    isCustomerSpecific?: boolean
    createdBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
  }

  export type PromotionUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumPromotionTypeFieldUpdateOperationsInput | $Enums.PromotionType
    status?: EnumPromotionStatusFieldUpdateOperationsInput | $Enums.PromotionStatus
    priority?: IntFieldUpdateOperationsInput | number
    combinationRule?: EnumCombinationRuleFieldUpdateOperationsInput | $Enums.CombinationRule
    discountType?: EnumDiscountTypeFieldUpdateOperationsInput | $Enums.DiscountType
    discountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    buyQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getDiscountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableStringFieldUpdateOperationsInput | string | null
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    validDays?: NullableStringFieldUpdateOperationsInput | string | null
    minPurchaseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsageTotal?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsagePerCustomer?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    isCustomerSpecific?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumPromotionTypeFieldUpdateOperationsInput | $Enums.PromotionType
    status?: EnumPromotionStatusFieldUpdateOperationsInput | $Enums.PromotionStatus
    priority?: IntFieldUpdateOperationsInput | number
    combinationRule?: EnumCombinationRuleFieldUpdateOperationsInput | $Enums.CombinationRule
    discountType?: EnumDiscountTypeFieldUpdateOperationsInput | $Enums.DiscountType
    discountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    buyQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getDiscountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableStringFieldUpdateOperationsInput | string | null
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    validDays?: NullableStringFieldUpdateOperationsInput | string | null
    minPurchaseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsageTotal?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsagePerCustomer?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    isCustomerSpecific?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionItemCreateInput = {
    itemId?: number | null
    categoryId?: number | null
    itemCode?: string | null
    itemName?: string | null
    itemRole?: string | null
    deleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
    promotion: PromotionCreateNestedOneWithoutItemsInput
  }

  export type PromotionItemUncheckedCreateInput = {
    id?: number
    promotionId: number
    itemId?: number | null
    categoryId?: number | null
    itemCode?: string | null
    itemName?: string | null
    itemRole?: string | null
    deleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
  }

  export type PromotionItemUpdateInput = {
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    itemCode?: NullableStringFieldUpdateOperationsInput | string | null
    itemName?: NullableStringFieldUpdateOperationsInput | string | null
    itemRole?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
    promotion?: PromotionUpdateOneRequiredWithoutItemsNestedInput
  }

  export type PromotionItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: IntFieldUpdateOperationsInput | number
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    itemCode?: NullableStringFieldUpdateOperationsInput | string | null
    itemName?: NullableStringFieldUpdateOperationsInput | string | null
    itemRole?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionItemCreateManyInput = {
    id?: number
    promotionId: number
    itemId?: number | null
    categoryId?: number | null
    itemCode?: string | null
    itemName?: string | null
    itemRole?: string | null
    deleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
  }

  export type PromotionItemUpdateManyMutationInput = {
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    itemCode?: NullableStringFieldUpdateOperationsInput | string | null
    itemName?: NullableStringFieldUpdateOperationsInput | string | null
    itemRole?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: IntFieldUpdateOperationsInput | number
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    itemCode?: NullableStringFieldUpdateOperationsInput | string | null
    itemName?: NullableStringFieldUpdateOperationsInput | string | null
    itemRole?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCustomerCreateInput = {
    maxUsage?: number | null
    currentUsage?: number
    deleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
    promotion: PromotionCreateNestedOneWithoutCustomersInput
    customer: CustomerCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionCustomerUncheckedCreateInput = {
    id?: number
    promotionId: number
    customerId: number
    maxUsage?: number | null
    currentUsage?: number
    deleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
  }

  export type PromotionCustomerUpdateInput = {
    maxUsage?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
    promotion?: PromotionUpdateOneRequiredWithoutCustomersNestedInput
    customer?: CustomerUpdateOneRequiredWithoutPromotionsNestedInput
  }

  export type PromotionCustomerUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    maxUsage?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCustomerCreateManyInput = {
    id?: number
    promotionId: number
    customerId: number
    maxUsage?: number | null
    currentUsage?: number
    deleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
  }

  export type PromotionCustomerUpdateManyMutationInput = {
    maxUsage?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCustomerUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    maxUsage?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUsageCreateInput = {
    salesId?: number | null
    discountAmount: Decimal | DecimalJsLike | number | string
    usedAt?: Date | string
    version?: number | null
    promotion: PromotionCreateNestedOneWithoutUsageHistoryInput
    customer?: CustomerCreateNestedOneWithoutPromotionUsageInput
  }

  export type PromotionUsageUncheckedCreateInput = {
    id?: number
    promotionId: number
    customerId?: number | null
    salesId?: number | null
    discountAmount: Decimal | DecimalJsLike | number | string
    usedAt?: Date | string
    version?: number | null
  }

  export type PromotionUsageUpdateInput = {
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
    promotion?: PromotionUpdateOneRequiredWithoutUsageHistoryNestedInput
    customer?: CustomerUpdateOneWithoutPromotionUsageNestedInput
  }

  export type PromotionUsageUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUsageCreateManyInput = {
    id?: number
    promotionId: number
    customerId?: number | null
    salesId?: number | null
    discountAmount: Decimal | DecimalJsLike | number | string
    usedAt?: Date | string
    version?: number | null
  }

  export type PromotionUsageUpdateManyMutationInput = {
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUsageUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type RolePermissionListRelationFilter = {
    every?: RolePermissionWhereInput
    some?: RolePermissionWhereInput
    none?: RolePermissionWhereInput
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type RolePermissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoleOrderByRelevanceInput = {
    fields: RoleOrderByRelevanceFieldEnum | RoleOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type RoleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    version?: SortOrder
  }

  export type RoleAvgOrderByAggregateInput = {
    id?: SortOrder
    version?: SortOrder
  }

  export type RoleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    version?: SortOrder
  }

  export type RoleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    category?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    version?: SortOrder
  }

  export type RoleSumOrderByAggregateInput = {
    id?: SortOrder
    version?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type RoleScalarRelationFilter = {
    is?: RoleWhereInput
    isNot?: RoleWhereInput
  }

  export type RolePermissionRoleIdPermissionIdCompoundUniqueInput = {
    roleId: number
    permissionId: number
  }

  export type RolePermissionCountOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    permissionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    version?: SortOrder
  }

  export type RolePermissionAvgOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    permissionId?: SortOrder
    version?: SortOrder
  }

  export type RolePermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    permissionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    version?: SortOrder
  }

  export type RolePermissionMinOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    permissionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    version?: SortOrder
  }

  export type RolePermissionSumOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    permissionId?: SortOrder
    version?: SortOrder
  }

  export type SettingListRelationFilter = {
    every?: SettingWhereInput
    some?: SettingWhereInput
    none?: SettingWhereInput
  }

  export type RoleListRelationFilter = {
    every?: RoleWhereInput
    some?: RoleWhereInput
    none?: RoleWhereInput
  }

  export type SettingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelevanceInput = {
    fields: UserOrderByRelevanceFieldEnum | UserOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    lastName?: SortOrder
    firstName?: SortOrder
    mobile?: SortOrder
    email?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
    version?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    lastName?: SortOrder
    firstName?: SortOrder
    mobile?: SortOrder
    email?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    lastName?: SortOrder
    firstName?: SortOrder
    mobile?: SortOrder
    email?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
    version?: SortOrder
  }

  export type EnumSettingTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.SettingType | EnumSettingTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SettingType[]
    notIn?: $Enums.SettingType[]
    not?: NestedEnumSettingTypeFilter<$PrismaModel> | $Enums.SettingType
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type OutletNullableScalarRelationFilter = {
    is?: OutletWhereInput | null
    isNot?: OutletWhereInput | null
  }

  export type SettingOrderByRelevanceInput = {
    fields: SettingOrderByRelevanceFieldEnum | SettingOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SettingTenantIdUserIdOutletIdKeyCompoundUniqueInput = {
    tenantId: number
    userId: number
    outletId: number
    key: string
  }

  export type SettingCountOrderByAggregateInput = {
    id?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
    outletId?: SortOrder
    key?: SortOrder
    value?: SortOrder
    type?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SettingAvgOrderByAggregateInput = {
    id?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
    outletId?: SortOrder
    version?: SortOrder
  }

  export type SettingMaxOrderByAggregateInput = {
    id?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
    outletId?: SortOrder
    key?: SortOrder
    value?: SortOrder
    type?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SettingMinOrderByAggregateInput = {
    id?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
    outletId?: SortOrder
    key?: SortOrder
    value?: SortOrder
    type?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SettingSumOrderByAggregateInput = {
    id?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
    outletId?: SortOrder
    version?: SortOrder
  }

  export type EnumSettingTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SettingType | EnumSettingTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SettingType[]
    notIn?: $Enums.SettingType[]
    not?: NestedEnumSettingTypeWithAggregatesFilter<$PrismaModel> | $Enums.SettingType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSettingTypeFilter<$PrismaModel>
    _max?: NestedEnumSettingTypeFilter<$PrismaModel>
  }

  export type ReferralCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    referralId?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type ReferralAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    referralId?: SortOrder
    version?: SortOrder
  }

  export type ReferralMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    referralId?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type ReferralMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    referralId?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type ReferralSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    referralId?: SortOrder
    version?: SortOrder
  }

  export type ItemListRelationFilter = {
    every?: ItemWhereInput
    some?: ItemWhereInput
    none?: ItemWhereInput
  }

  export type PurchaseOrderListRelationFilter = {
    every?: PurchaseOrderWhereInput
    some?: PurchaseOrderWhereInput
    none?: PurchaseOrderWhereInput
  }

  export type InvoiceListRelationFilter = {
    every?: InvoiceWhereInput
    some?: InvoiceWhereInput
    none?: InvoiceWhereInput
  }

  export type ItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PurchaseOrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InvoiceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupplierOrderByRelevanceInput = {
    fields: SupplierOrderByRelevanceFieldEnum | SupplierOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SupplierCountOrderByAggregateInput = {
    id?: SortOrder
    companyName?: SortOrder
    companyStreet?: SortOrder
    companyCity?: SortOrder
    companyState?: SortOrder
    companyPostalCode?: SortOrder
    companyCountry?: SortOrder
    companyRegisterNumber?: SortOrder
    personInChargeLastName?: SortOrder
    personInChargeFirstName?: SortOrder
    mobile?: SortOrder
    email?: SortOrder
    remark?: SortOrder
    hasTax?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SupplierAvgOrderByAggregateInput = {
    id?: SortOrder
    version?: SortOrder
  }

  export type SupplierMaxOrderByAggregateInput = {
    id?: SortOrder
    companyName?: SortOrder
    companyStreet?: SortOrder
    companyCity?: SortOrder
    companyState?: SortOrder
    companyPostalCode?: SortOrder
    companyCountry?: SortOrder
    companyRegisterNumber?: SortOrder
    personInChargeLastName?: SortOrder
    personInChargeFirstName?: SortOrder
    mobile?: SortOrder
    email?: SortOrder
    remark?: SortOrder
    hasTax?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SupplierMinOrderByAggregateInput = {
    id?: SortOrder
    companyName?: SortOrder
    companyStreet?: SortOrder
    companyCity?: SortOrder
    companyState?: SortOrder
    companyPostalCode?: SortOrder
    companyCountry?: SortOrder
    companyRegisterNumber?: SortOrder
    personInChargeLastName?: SortOrder
    personInChargeFirstName?: SortOrder
    mobile?: SortOrder
    email?: SortOrder
    remark?: SortOrder
    hasTax?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SupplierSumOrderByAggregateInput = {
    id?: SortOrder
    version?: SortOrder
  }

  export type SalesListRelationFilter = {
    every?: SalesWhereInput
    some?: SalesWhereInput
    none?: SalesWhereInput
  }

  export type PromotionCustomerListRelationFilter = {
    every?: PromotionCustomerWhereInput
    some?: PromotionCustomerWhereInput
    none?: PromotionCustomerWhereInput
  }

  export type PromotionUsageListRelationFilter = {
    every?: PromotionUsageWhereInput
    some?: PromotionUsageWhereInput
    none?: PromotionUsageWhereInput
  }

  export type ReservationListRelationFilter = {
    every?: ReservationWhereInput
    some?: ReservationWhereInput
    none?: ReservationWhereInput
  }

  export type WaitlistListRelationFilter = {
    every?: WaitlistWhereInput
    some?: WaitlistWhereInput
    none?: WaitlistWhereInput
  }

  export type SplitBillListRelationFilter = {
    every?: SplitBillWhereInput
    some?: SplitBillWhereInput
    none?: SplitBillWhereInput
  }

  export type SalesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PromotionCustomerOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PromotionUsageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReservationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type WaitlistOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SplitBillOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomerOrderByRelevanceInput = {
    fields: CustomerOrderByRelevanceFieldEnum | CustomerOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CustomerCountOrderByAggregateInput = {
    id?: SortOrder
    salutation?: SortOrder
    lastName?: SortOrder
    firstName?: SortOrder
    mobile?: SortOrder
    email?: SortOrder
    gender?: SortOrder
    billStreet?: SortOrder
    billCity?: SortOrder
    billState?: SortOrder
    billPostalCode?: SortOrder
    billCountry?: SortOrder
    billRemark?: SortOrder
    shipStreet?: SortOrder
    shipCity?: SortOrder
    shipState?: SortOrder
    shipPostalCode?: SortOrder
    shipCountry?: SortOrder
    shipRemark?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type CustomerAvgOrderByAggregateInput = {
    id?: SortOrder
    version?: SortOrder
  }

  export type CustomerMaxOrderByAggregateInput = {
    id?: SortOrder
    salutation?: SortOrder
    lastName?: SortOrder
    firstName?: SortOrder
    mobile?: SortOrder
    email?: SortOrder
    gender?: SortOrder
    billStreet?: SortOrder
    billCity?: SortOrder
    billState?: SortOrder
    billPostalCode?: SortOrder
    billCountry?: SortOrder
    billRemark?: SortOrder
    shipStreet?: SortOrder
    shipCity?: SortOrder
    shipState?: SortOrder
    shipPostalCode?: SortOrder
    shipCountry?: SortOrder
    shipRemark?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type CustomerMinOrderByAggregateInput = {
    id?: SortOrder
    salutation?: SortOrder
    lastName?: SortOrder
    firstName?: SortOrder
    mobile?: SortOrder
    email?: SortOrder
    gender?: SortOrder
    billStreet?: SortOrder
    billCity?: SortOrder
    billState?: SortOrder
    billPostalCode?: SortOrder
    billCountry?: SortOrder
    billRemark?: SortOrder
    shipStreet?: SortOrder
    shipCity?: SortOrder
    shipState?: SortOrder
    shipPostalCode?: SortOrder
    shipCountry?: SortOrder
    shipRemark?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type CustomerSumOrderByAggregateInput = {
    id?: SortOrder
    version?: SortOrder
  }

  export type CompanyOrderByRelevanceInput = {
    fields: CompanyOrderByRelevanceFieldEnum | CompanyOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CompanyCountOrderByAggregateInput = {
    id?: SortOrder
    companyName?: SortOrder
    street?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    registrationNumber?: SortOrder
    website?: SortOrder
    referralId?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type CompanyAvgOrderByAggregateInput = {
    id?: SortOrder
    version?: SortOrder
  }

  export type CompanyMaxOrderByAggregateInput = {
    id?: SortOrder
    companyName?: SortOrder
    street?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    registrationNumber?: SortOrder
    website?: SortOrder
    referralId?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type CompanyMinOrderByAggregateInput = {
    id?: SortOrder
    companyName?: SortOrder
    street?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    registrationNumber?: SortOrder
    website?: SortOrder
    referralId?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type CompanySumOrderByAggregateInput = {
    id?: SortOrder
    version?: SortOrder
  }

  export type StockBalanceListRelationFilter = {
    every?: StockBalanceWhereInput
    some?: StockBalanceWhereInput
    none?: StockBalanceWhereInput
  }

  export type StockMovementListRelationFilter = {
    every?: StockMovementWhereInput
    some?: StockMovementWhereInput
    none?: StockMovementWhereInput
  }

  export type StockSnapshotListRelationFilter = {
    every?: StockSnapshotWhereInput
    some?: StockSnapshotWhereInput
    none?: StockSnapshotWhereInput
  }

  export type StockReceiptListRelationFilter = {
    every?: StockReceiptWhereInput
    some?: StockReceiptWhereInput
    none?: StockReceiptWhereInput
  }

  export type TableListRelationFilter = {
    every?: TableWhereInput
    some?: TableWhereInput
    none?: TableWhereInput
  }

  export type StationListRelationFilter = {
    every?: StationWhereInput
    some?: StationWhereInput
    none?: StationWhereInput
  }

  export type StockBalanceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StockMovementOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StockSnapshotOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StockReceiptOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TableOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OutletOrderByRelevanceInput = {
    fields: OutletOrderByRelevanceFieldEnum | OutletOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type OutletCountOrderByAggregateInput = {
    id?: SortOrder
    tenantOutletId?: SortOrder
    outletName?: SortOrder
    street?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    outletTel?: SortOrder
    outletEmail?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type OutletAvgOrderByAggregateInput = {
    id?: SortOrder
    tenantOutletId?: SortOrder
    version?: SortOrder
  }

  export type OutletMaxOrderByAggregateInput = {
    id?: SortOrder
    tenantOutletId?: SortOrder
    outletName?: SortOrder
    street?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    outletTel?: SortOrder
    outletEmail?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type OutletMinOrderByAggregateInput = {
    id?: SortOrder
    tenantOutletId?: SortOrder
    outletName?: SortOrder
    street?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    outletTel?: SortOrder
    outletEmail?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type OutletSumOrderByAggregateInput = {
    id?: SortOrder
    tenantOutletId?: SortOrder
    version?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type CategoryScalarRelationFilter = {
    is?: CategoryWhereInput
    isNot?: CategoryWhereInput
  }

  export type SupplierScalarRelationFilter = {
    is?: SupplierWhereInput
    isNot?: SupplierWhereInput
  }

  export type RecipeListRelationFilter = {
    every?: RecipeWhereInput
    some?: RecipeWhereInput
    none?: RecipeWhereInput
  }

  export type PurchaseOrderItemListRelationFilter = {
    every?: PurchaseOrderItemWhereInput
    some?: PurchaseOrderItemWhereInput
    none?: PurchaseOrderItemWhereInput
  }

  export type DeliveryOrderItemListRelationFilter = {
    every?: DeliveryOrderItemWhereInput
    some?: DeliveryOrderItemWhereInput
    none?: DeliveryOrderItemWhereInput
  }

  export type InvoiceItemListRelationFilter = {
    every?: InvoiceItemWhereInput
    some?: InvoiceItemWhereInput
    none?: InvoiceItemWhereInput
  }

  export type RecipeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PurchaseOrderItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DeliveryOrderItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InvoiceItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ItemOrderByRelevanceInput = {
    fields: ItemOrderByRelevanceFieldEnum | ItemOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ItemCountOrderByAggregateInput = {
    id?: SortOrder
    itemName?: SortOrder
    itemCode?: SortOrder
    itemType?: SortOrder
    itemModel?: SortOrder
    itemBrand?: SortOrder
    itemDescription?: SortOrder
    categoryId?: SortOrder
    cost?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    isOpenPrice?: SortOrder
    unitOfMeasure?: SortOrder
    height?: SortOrder
    width?: SortOrder
    length?: SortOrder
    weight?: SortOrder
    alternateLookUp?: SortOrder
    image?: SortOrder
    hasTax?: SortOrder
    taxRate?: SortOrder
    supplierId?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type ItemAvgOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    cost?: SortOrder
    price?: SortOrder
    height?: SortOrder
    width?: SortOrder
    length?: SortOrder
    weight?: SortOrder
    taxRate?: SortOrder
    supplierId?: SortOrder
    version?: SortOrder
  }

  export type ItemMaxOrderByAggregateInput = {
    id?: SortOrder
    itemName?: SortOrder
    itemCode?: SortOrder
    itemType?: SortOrder
    itemModel?: SortOrder
    itemBrand?: SortOrder
    itemDescription?: SortOrder
    categoryId?: SortOrder
    cost?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    isOpenPrice?: SortOrder
    unitOfMeasure?: SortOrder
    height?: SortOrder
    width?: SortOrder
    length?: SortOrder
    weight?: SortOrder
    alternateLookUp?: SortOrder
    image?: SortOrder
    hasTax?: SortOrder
    taxRate?: SortOrder
    supplierId?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type ItemMinOrderByAggregateInput = {
    id?: SortOrder
    itemName?: SortOrder
    itemCode?: SortOrder
    itemType?: SortOrder
    itemModel?: SortOrder
    itemBrand?: SortOrder
    itemDescription?: SortOrder
    categoryId?: SortOrder
    cost?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    isOpenPrice?: SortOrder
    unitOfMeasure?: SortOrder
    height?: SortOrder
    width?: SortOrder
    length?: SortOrder
    weight?: SortOrder
    alternateLookUp?: SortOrder
    image?: SortOrder
    hasTax?: SortOrder
    taxRate?: SortOrder
    supplierId?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type ItemSumOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    cost?: SortOrder
    price?: SortOrder
    height?: SortOrder
    width?: SortOrder
    length?: SortOrder
    weight?: SortOrder
    taxRate?: SortOrder
    supplierId?: SortOrder
    version?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type CategoryOrderByRelevanceInput = {
    fields: CategoryOrderByRelevanceFieldEnum | CategoryOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    parentId?: SortOrder
    image?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type CategoryAvgOrderByAggregateInput = {
    id?: SortOrder
    parentId?: SortOrder
    version?: SortOrder
  }

  export type CategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    parentId?: SortOrder
    image?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type CategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    parentId?: SortOrder
    image?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type CategorySumOrderByAggregateInput = {
    id?: SortOrder
    parentId?: SortOrder
    version?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type SalesItemListRelationFilter = {
    every?: SalesItemWhereInput
    some?: SalesItemWhereInput
    none?: SalesItemWhereInput
  }

  export type PaymentListRelationFilter = {
    every?: PaymentWhereInput
    some?: PaymentWhereInput
    none?: PaymentWhereInput
  }

  export type RegisterLogListRelationFilter = {
    every?: RegisterLogWhereInput
    some?: RegisterLogWhereInput
    none?: RegisterLogWhereInput
  }

  export type CustomerNullableScalarRelationFilter = {
    is?: CustomerWhereInput | null
    isNot?: CustomerWhereInput | null
  }

  export type TableNullableScalarRelationFilter = {
    is?: TableWhereInput | null
    isNot?: TableWhereInput | null
  }

  export type SalesItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RegisterLogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SalesOrderByRelevanceInput = {
    fields: SalesOrderByRelevanceFieldEnum | SalesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SalesCountOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    businessDate?: SortOrder
    salesType?: SortOrder
    customerName?: SortOrder
    customerId?: SortOrder
    phoneNumber?: SortOrder
    billStreet?: SortOrder
    billCity?: SortOrder
    billState?: SortOrder
    billPostalCode?: SortOrder
    billCountry?: SortOrder
    shipStreet?: SortOrder
    shipCity?: SortOrder
    shipState?: SortOrder
    shipPostalCode?: SortOrder
    shipCountry?: SortOrder
    totalItemDiscountAmount?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    profitAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    paidAmount?: SortOrder
    changeAmount?: SortOrder
    status?: SortOrder
    remark?: SortOrder
    completedSessionId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    salesQuotationId?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    tableId?: SortOrder
    orderStatus?: SortOrder
  }

  export type SalesAvgOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    totalItemDiscountAmount?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    profitAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    paidAmount?: SortOrder
    changeAmount?: SortOrder
    completedSessionId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    salesQuotationId?: SortOrder
    version?: SortOrder
    tableId?: SortOrder
  }

  export type SalesMaxOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    businessDate?: SortOrder
    salesType?: SortOrder
    customerName?: SortOrder
    customerId?: SortOrder
    phoneNumber?: SortOrder
    billStreet?: SortOrder
    billCity?: SortOrder
    billState?: SortOrder
    billPostalCode?: SortOrder
    billCountry?: SortOrder
    shipStreet?: SortOrder
    shipCity?: SortOrder
    shipState?: SortOrder
    shipPostalCode?: SortOrder
    shipCountry?: SortOrder
    totalItemDiscountAmount?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    profitAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    paidAmount?: SortOrder
    changeAmount?: SortOrder
    status?: SortOrder
    remark?: SortOrder
    completedSessionId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    salesQuotationId?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    tableId?: SortOrder
    orderStatus?: SortOrder
  }

  export type SalesMinOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    businessDate?: SortOrder
    salesType?: SortOrder
    customerName?: SortOrder
    customerId?: SortOrder
    phoneNumber?: SortOrder
    billStreet?: SortOrder
    billCity?: SortOrder
    billState?: SortOrder
    billPostalCode?: SortOrder
    billCountry?: SortOrder
    shipStreet?: SortOrder
    shipCity?: SortOrder
    shipState?: SortOrder
    shipPostalCode?: SortOrder
    shipCountry?: SortOrder
    totalItemDiscountAmount?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    profitAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    paidAmount?: SortOrder
    changeAmount?: SortOrder
    status?: SortOrder
    remark?: SortOrder
    completedSessionId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    salesQuotationId?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    tableId?: SortOrder
    orderStatus?: SortOrder
  }

  export type SalesSumOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    totalItemDiscountAmount?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    profitAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    paidAmount?: SortOrder
    changeAmount?: SortOrder
    completedSessionId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    salesQuotationId?: SortOrder
    version?: SortOrder
    tableId?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type SalesScalarRelationFilter = {
    is?: SalesWhereInput
    isNot?: SalesWhereInput
  }

  export type SalesItemModifierListRelationFilter = {
    every?: SalesItemModifierWhereInput
    some?: SalesItemModifierWhereInput
    none?: SalesItemModifierWhereInput
  }

  export type OrderRoutingListRelationFilter = {
    every?: OrderRoutingWhereInput
    some?: OrderRoutingWhereInput
    none?: OrderRoutingWhereInput
  }

  export type SalesItemModifierOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderRoutingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SalesItemOrderByRelevanceInput = {
    fields: SalesItemOrderByRelevanceFieldEnum | SalesItemOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SalesItemCountOrderByAggregateInput = {
    id?: SortOrder
    salesId?: SortOrder
    itemId?: SortOrder
    itemName?: SortOrder
    itemCode?: SortOrder
    itemBrand?: SortOrder
    itemModel?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    price?: SortOrder
    priceBeforeTax?: SortOrder
    profit?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    subtotalAmount?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    specialInstructions?: SortOrder
    itemStatus?: SortOrder
    priority?: SortOrder
    estimatedPrepTime?: SortOrder
  }

  export type SalesItemAvgOrderByAggregateInput = {
    id?: SortOrder
    salesId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    price?: SortOrder
    priceBeforeTax?: SortOrder
    profit?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    subtotalAmount?: SortOrder
    version?: SortOrder
    estimatedPrepTime?: SortOrder
  }

  export type SalesItemMaxOrderByAggregateInput = {
    id?: SortOrder
    salesId?: SortOrder
    itemId?: SortOrder
    itemName?: SortOrder
    itemCode?: SortOrder
    itemBrand?: SortOrder
    itemModel?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    price?: SortOrder
    priceBeforeTax?: SortOrder
    profit?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    subtotalAmount?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    specialInstructions?: SortOrder
    itemStatus?: SortOrder
    priority?: SortOrder
    estimatedPrepTime?: SortOrder
  }

  export type SalesItemMinOrderByAggregateInput = {
    id?: SortOrder
    salesId?: SortOrder
    itemId?: SortOrder
    itemName?: SortOrder
    itemCode?: SortOrder
    itemBrand?: SortOrder
    itemModel?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    price?: SortOrder
    priceBeforeTax?: SortOrder
    profit?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    subtotalAmount?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    specialInstructions?: SortOrder
    itemStatus?: SortOrder
    priority?: SortOrder
    estimatedPrepTime?: SortOrder
  }

  export type SalesItemSumOrderByAggregateInput = {
    id?: SortOrder
    salesId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    price?: SortOrder
    priceBeforeTax?: SortOrder
    profit?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    subtotalAmount?: SortOrder
    version?: SortOrder
    estimatedPrepTime?: SortOrder
  }

  export type EnumOrderStatusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel> | null
    in?: $Enums.OrderStatus[] | null
    notIn?: $Enums.OrderStatus[] | null
    not?: NestedEnumOrderStatusNullableFilter<$PrismaModel> | $Enums.OrderStatus | null
  }

  export type MenuItemModifierScalarRelationFilter = {
    is?: MenuItemModifierWhereInput
    isNot?: MenuItemModifierWhereInput
  }

  export type SalesItemScalarRelationFilter = {
    is?: SalesItemWhereInput
    isNot?: SalesItemWhereInput
  }

  export type SalesItemModifierOrderByRelevanceInput = {
    fields: SalesItemModifierOrderByRelevanceFieldEnum | SalesItemModifierOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SalesItemModifierCountOrderByAggregateInput = {
    id?: SortOrder
    salesItemId?: SortOrder
    menuItemModifierId?: SortOrder
    itemId?: SortOrder
    modifierName?: SortOrder
    modifierPrice?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SalesItemModifierAvgOrderByAggregateInput = {
    id?: SortOrder
    salesItemId?: SortOrder
    menuItemModifierId?: SortOrder
    itemId?: SortOrder
    modifierPrice?: SortOrder
    quantity?: SortOrder
    version?: SortOrder
  }

  export type SalesItemModifierMaxOrderByAggregateInput = {
    id?: SortOrder
    salesItemId?: SortOrder
    menuItemModifierId?: SortOrder
    itemId?: SortOrder
    modifierName?: SortOrder
    modifierPrice?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SalesItemModifierMinOrderByAggregateInput = {
    id?: SortOrder
    salesItemId?: SortOrder
    menuItemModifierId?: SortOrder
    itemId?: SortOrder
    modifierName?: SortOrder
    modifierPrice?: SortOrder
    quantity?: SortOrder
    status?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SalesItemModifierSumOrderByAggregateInput = {
    id?: SortOrder
    salesItemId?: SortOrder
    menuItemModifierId?: SortOrder
    itemId?: SortOrder
    modifierPrice?: SortOrder
    quantity?: SortOrder
    version?: SortOrder
  }

  export type EnumOrderStatusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel> | null
    in?: $Enums.OrderStatus[] | null
    notIn?: $Enums.OrderStatus[] | null
    not?: NestedEnumOrderStatusNullableWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusNullableFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusNullableFilter<$PrismaModel>
  }

  export type SalesQuotationItemListRelationFilter = {
    every?: SalesQuotationItemWhereInput
    some?: SalesQuotationItemWhereInput
    none?: SalesQuotationItemWhereInput
  }

  export type SalesQuotationItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SalesQuotationOrderByRelevanceInput = {
    fields: SalesQuotationOrderByRelevanceFieldEnum | SalesQuotationOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SalesQuotationCountOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    customerStreet?: SortOrder
    customerCity?: SortOrder
    customerState?: SortOrder
    customerPostalCode?: SortOrder
    customerCountry?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    remark?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SalesQuotationAvgOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    version?: SortOrder
  }

  export type SalesQuotationMaxOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    customerStreet?: SortOrder
    customerCity?: SortOrder
    customerState?: SortOrder
    customerPostalCode?: SortOrder
    customerCountry?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    remark?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SalesQuotationMinOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    customerStreet?: SortOrder
    customerCity?: SortOrder
    customerState?: SortOrder
    customerPostalCode?: SortOrder
    customerCountry?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    remark?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SalesQuotationSumOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    discountPercentage?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    version?: SortOrder
  }

  export type SalesQuotationScalarRelationFilter = {
    is?: SalesQuotationWhereInput
    isNot?: SalesQuotationWhereInput
  }

  export type SalesQuotationItemOrderByRelevanceInput = {
    fields: SalesQuotationItemOrderByRelevanceFieldEnum | SalesQuotationItemOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SalesQuotationItemCountOrderByAggregateInput = {
    id?: SortOrder
    salesQuotationId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SalesQuotationItemAvgOrderByAggregateInput = {
    id?: SortOrder
    salesQuotationId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    version?: SortOrder
  }

  export type SalesQuotationItemMaxOrderByAggregateInput = {
    id?: SortOrder
    salesQuotationId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SalesQuotationItemMinOrderByAggregateInput = {
    id?: SortOrder
    salesQuotationId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SalesQuotationItemSumOrderByAggregateInput = {
    id?: SortOrder
    salesQuotationId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    version?: SortOrder
  }

  export type SessionNullableScalarRelationFilter = {
    is?: SessionWhereInput | null
    isNot?: SessionWhereInput | null
  }

  export type PurchaseOrderNullableScalarRelationFilter = {
    is?: PurchaseOrderWhereInput | null
    isNot?: PurchaseOrderWhereInput | null
  }

  export type SupplierNullableScalarRelationFilter = {
    is?: SupplierWhereInput | null
    isNot?: SupplierWhereInput | null
  }

  export type DeliveryOrderListRelationFilter = {
    every?: DeliveryOrderWhereInput
    some?: DeliveryOrderWhereInput
    none?: DeliveryOrderWhereInput
  }

  export type DeliveryOrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InvoiceOrderByRelevanceInput = {
    fields: InvoiceOrderByRelevanceFieldEnum | InvoiceOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type InvoiceCountOrderByAggregateInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    taxInvoiceNumber?: SortOrder
    purchaseOrderId?: SortOrder
    supplierId?: SortOrder
    outletId?: SortOrder
    subtotalAmount?: SortOrder
    taxAmount?: SortOrder
    sessionId?: SortOrder
    discountType?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    invoiceDate?: SortOrder
    paymentDate?: SortOrder
    dueDate?: SortOrder
    remark?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type InvoiceAvgOrderByAggregateInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    supplierId?: SortOrder
    outletId?: SortOrder
    subtotalAmount?: SortOrder
    taxAmount?: SortOrder
    sessionId?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    version?: SortOrder
  }

  export type InvoiceMaxOrderByAggregateInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    taxInvoiceNumber?: SortOrder
    purchaseOrderId?: SortOrder
    supplierId?: SortOrder
    outletId?: SortOrder
    subtotalAmount?: SortOrder
    taxAmount?: SortOrder
    sessionId?: SortOrder
    discountType?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    invoiceDate?: SortOrder
    paymentDate?: SortOrder
    dueDate?: SortOrder
    remark?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type InvoiceMinOrderByAggregateInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    taxInvoiceNumber?: SortOrder
    purchaseOrderId?: SortOrder
    supplierId?: SortOrder
    outletId?: SortOrder
    subtotalAmount?: SortOrder
    taxAmount?: SortOrder
    sessionId?: SortOrder
    discountType?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    invoiceDate?: SortOrder
    paymentDate?: SortOrder
    dueDate?: SortOrder
    remark?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type InvoiceSumOrderByAggregateInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    supplierId?: SortOrder
    outletId?: SortOrder
    subtotalAmount?: SortOrder
    taxAmount?: SortOrder
    sessionId?: SortOrder
    discountAmount?: SortOrder
    totalAmount?: SortOrder
    version?: SortOrder
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type InvoiceScalarRelationFilter = {
    is?: InvoiceWhereInput
    isNot?: InvoiceWhereInput
  }

  export type ItemScalarRelationFilter = {
    is?: ItemWhereInput
    isNot?: ItemWhereInput
  }

  export type InvoiceItemOrderByRelevanceInput = {
    fields: InvoiceItemOrderByRelevanceFieldEnum | InvoiceItemOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type InvoiceItemCountOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    discountType?: SortOrder
    discountAmount?: SortOrder
    taxAmount?: SortOrder
    subtotal?: SortOrder
    remark?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    version?: SortOrder
  }

  export type InvoiceItemAvgOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    discountAmount?: SortOrder
    taxAmount?: SortOrder
    subtotal?: SortOrder
    version?: SortOrder
  }

  export type InvoiceItemMaxOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    discountType?: SortOrder
    discountAmount?: SortOrder
    taxAmount?: SortOrder
    subtotal?: SortOrder
    remark?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    version?: SortOrder
  }

  export type InvoiceItemMinOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    discountType?: SortOrder
    discountAmount?: SortOrder
    taxAmount?: SortOrder
    subtotal?: SortOrder
    remark?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    version?: SortOrder
  }

  export type InvoiceItemSumOrderByAggregateInput = {
    id?: SortOrder
    invoiceId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    discountAmount?: SortOrder
    taxAmount?: SortOrder
    subtotal?: SortOrder
    version?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type InvoiceNullableScalarRelationFilter = {
    is?: InvoiceWhereInput | null
    isNot?: InvoiceWhereInput | null
  }

  export type DeliveryOrderOrderByRelevanceInput = {
    fields: DeliveryOrderOrderByRelevanceFieldEnum | DeliveryOrderOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type DeliveryOrderCountOrderByAggregateInput = {
    id?: SortOrder
    trackingNumber?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    purchaseOrderId?: SortOrder
    supplierId?: SortOrder
    invoiceId?: SortOrder
    sessionId?: SortOrder
    deliveryDate?: SortOrder
    deliveryStreet?: SortOrder
    deliveryCity?: SortOrder
    deliveryState?: SortOrder
    deliveryPostalCode?: SortOrder
    deliveryCountry?: SortOrder
    status?: SortOrder
    remark?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type DeliveryOrderAvgOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    purchaseOrderId?: SortOrder
    supplierId?: SortOrder
    invoiceId?: SortOrder
    sessionId?: SortOrder
    version?: SortOrder
  }

  export type DeliveryOrderMaxOrderByAggregateInput = {
    id?: SortOrder
    trackingNumber?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    purchaseOrderId?: SortOrder
    supplierId?: SortOrder
    invoiceId?: SortOrder
    sessionId?: SortOrder
    deliveryDate?: SortOrder
    deliveryStreet?: SortOrder
    deliveryCity?: SortOrder
    deliveryState?: SortOrder
    deliveryPostalCode?: SortOrder
    deliveryCountry?: SortOrder
    status?: SortOrder
    remark?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type DeliveryOrderMinOrderByAggregateInput = {
    id?: SortOrder
    trackingNumber?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    purchaseOrderId?: SortOrder
    supplierId?: SortOrder
    invoiceId?: SortOrder
    sessionId?: SortOrder
    deliveryDate?: SortOrder
    deliveryStreet?: SortOrder
    deliveryCity?: SortOrder
    deliveryState?: SortOrder
    deliveryPostalCode?: SortOrder
    deliveryCountry?: SortOrder
    status?: SortOrder
    remark?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type DeliveryOrderSumOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    purchaseOrderId?: SortOrder
    supplierId?: SortOrder
    invoiceId?: SortOrder
    sessionId?: SortOrder
    version?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type DeliveryOrderScalarRelationFilter = {
    is?: DeliveryOrderWhereInput
    isNot?: DeliveryOrderWhereInput
  }

  export type DeliveryOrderItemOrderByRelevanceInput = {
    fields: DeliveryOrderItemOrderByRelevanceFieldEnum | DeliveryOrderItemOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type DeliveryOrderItemCountOrderByAggregateInput = {
    id?: SortOrder
    deliveryOrderId?: SortOrder
    itemId?: SortOrder
    orderedQuantity?: SortOrder
    receivedQuantity?: SortOrder
    unitPrice?: SortOrder
    remark?: SortOrder
    version?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
  }

  export type DeliveryOrderItemAvgOrderByAggregateInput = {
    id?: SortOrder
    deliveryOrderId?: SortOrder
    itemId?: SortOrder
    orderedQuantity?: SortOrder
    receivedQuantity?: SortOrder
    unitPrice?: SortOrder
    version?: SortOrder
  }

  export type DeliveryOrderItemMaxOrderByAggregateInput = {
    id?: SortOrder
    deliveryOrderId?: SortOrder
    itemId?: SortOrder
    orderedQuantity?: SortOrder
    receivedQuantity?: SortOrder
    unitPrice?: SortOrder
    remark?: SortOrder
    version?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
  }

  export type DeliveryOrderItemMinOrderByAggregateInput = {
    id?: SortOrder
    deliveryOrderId?: SortOrder
    itemId?: SortOrder
    orderedQuantity?: SortOrder
    receivedQuantity?: SortOrder
    unitPrice?: SortOrder
    remark?: SortOrder
    version?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
  }

  export type DeliveryOrderItemSumOrderByAggregateInput = {
    id?: SortOrder
    deliveryOrderId?: SortOrder
    itemId?: SortOrder
    orderedQuantity?: SortOrder
    receivedQuantity?: SortOrder
    unitPrice?: SortOrder
    version?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type PurchaseOrderOrderByRelevanceInput = {
    fields: PurchaseOrderOrderByRelevanceFieldEnum | PurchaseOrderOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type PurchaseOrderCountOrderByAggregateInput = {
    id?: SortOrder
    purchaseOrderNumber?: SortOrder
    outletId?: SortOrder
    supplierId?: SortOrder
    purchaseOrderDate?: SortOrder
    sessionId?: SortOrder
    discountType?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    remark?: SortOrder
    currency?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type PurchaseOrderAvgOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    supplierId?: SortOrder
    sessionId?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    version?: SortOrder
  }

  export type PurchaseOrderMaxOrderByAggregateInput = {
    id?: SortOrder
    purchaseOrderNumber?: SortOrder
    outletId?: SortOrder
    supplierId?: SortOrder
    purchaseOrderDate?: SortOrder
    sessionId?: SortOrder
    discountType?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    remark?: SortOrder
    currency?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type PurchaseOrderMinOrderByAggregateInput = {
    id?: SortOrder
    purchaseOrderNumber?: SortOrder
    outletId?: SortOrder
    supplierId?: SortOrder
    purchaseOrderDate?: SortOrder
    sessionId?: SortOrder
    discountType?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    remark?: SortOrder
    currency?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type PurchaseOrderSumOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    supplierId?: SortOrder
    sessionId?: SortOrder
    discountAmount?: SortOrder
    serviceChargeAmount?: SortOrder
    taxAmount?: SortOrder
    roundingAmount?: SortOrder
    subtotalAmount?: SortOrder
    totalAmount?: SortOrder
    version?: SortOrder
  }

  export type PurchaseOrderScalarRelationFilter = {
    is?: PurchaseOrderWhereInput
    isNot?: PurchaseOrderWhereInput
  }

  export type PurchaseOrderItemOrderByRelevanceInput = {
    fields: PurchaseOrderItemOrderByRelevanceFieldEnum | PurchaseOrderItemOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type PurchaseOrderItemCountOrderByAggregateInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    taxAmount?: SortOrder
    discountType?: SortOrder
    discountAmount?: SortOrder
    unitPrice?: SortOrder
    subtotal?: SortOrder
    remark?: SortOrder
    version?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
  }

  export type PurchaseOrderItemAvgOrderByAggregateInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    taxAmount?: SortOrder
    discountAmount?: SortOrder
    unitPrice?: SortOrder
    subtotal?: SortOrder
    version?: SortOrder
  }

  export type PurchaseOrderItemMaxOrderByAggregateInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    taxAmount?: SortOrder
    discountType?: SortOrder
    discountAmount?: SortOrder
    unitPrice?: SortOrder
    subtotal?: SortOrder
    remark?: SortOrder
    version?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
  }

  export type PurchaseOrderItemMinOrderByAggregateInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    taxAmount?: SortOrder
    discountType?: SortOrder
    discountAmount?: SortOrder
    unitPrice?: SortOrder
    subtotal?: SortOrder
    remark?: SortOrder
    version?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
  }

  export type PurchaseOrderItemSumOrderByAggregateInput = {
    id?: SortOrder
    purchaseOrderId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    taxAmount?: SortOrder
    discountAmount?: SortOrder
    unitPrice?: SortOrder
    subtotal?: SortOrder
    version?: SortOrder
  }

  export type CardInfoListRelationFilter = {
    every?: CardInfoWhereInput
    some?: CardInfoWhereInput
    none?: CardInfoWhereInput
  }

  export type CardInfoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentOrderByRelevanceInput = {
    fields: PaymentOrderByRelevanceFieldEnum | PaymentOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type PaymentCountOrderByAggregateInput = {
    id?: SortOrder
    method?: SortOrder
    tenderedAmount?: SortOrder
    paidAmount?: SortOrder
    currencySymbol?: SortOrder
    salesId?: SortOrder
    reference?: SortOrder
    remark?: SortOrder
    businessDate?: SortOrder
    status?: SortOrder
    outletId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type PaymentAvgOrderByAggregateInput = {
    id?: SortOrder
    tenderedAmount?: SortOrder
    paidAmount?: SortOrder
    salesId?: SortOrder
    outletId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    version?: SortOrder
  }

  export type PaymentMaxOrderByAggregateInput = {
    id?: SortOrder
    method?: SortOrder
    tenderedAmount?: SortOrder
    paidAmount?: SortOrder
    currencySymbol?: SortOrder
    salesId?: SortOrder
    reference?: SortOrder
    remark?: SortOrder
    businessDate?: SortOrder
    status?: SortOrder
    outletId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type PaymentMinOrderByAggregateInput = {
    id?: SortOrder
    method?: SortOrder
    tenderedAmount?: SortOrder
    paidAmount?: SortOrder
    currencySymbol?: SortOrder
    salesId?: SortOrder
    reference?: SortOrder
    remark?: SortOrder
    businessDate?: SortOrder
    status?: SortOrder
    outletId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type PaymentSumOrderByAggregateInput = {
    id?: SortOrder
    tenderedAmount?: SortOrder
    paidAmount?: SortOrder
    salesId?: SortOrder
    outletId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    version?: SortOrder
  }

  export type RegisterLogOrderByRelevanceInput = {
    fields: RegisterLogOrderByRelevanceFieldEnum | RegisterLogOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type RegisterLogCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    modifiedAmount?: SortOrder
    currencySymbol?: SortOrder
    salesId?: SortOrder
    remark?: SortOrder
    status?: SortOrder
    outletId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type RegisterLogAvgOrderByAggregateInput = {
    id?: SortOrder
    modifiedAmount?: SortOrder
    salesId?: SortOrder
    outletId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    version?: SortOrder
  }

  export type RegisterLogMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    modifiedAmount?: SortOrder
    currencySymbol?: SortOrder
    salesId?: SortOrder
    remark?: SortOrder
    status?: SortOrder
    outletId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type RegisterLogMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    modifiedAmount?: SortOrder
    currencySymbol?: SortOrder
    salesId?: SortOrder
    remark?: SortOrder
    status?: SortOrder
    outletId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    performedBy?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type RegisterLogSumOrderByAggregateInput = {
    id?: SortOrder
    modifiedAmount?: SortOrder
    salesId?: SortOrder
    outletId?: SortOrder
    sessionId?: SortOrder
    eodId?: SortOrder
    version?: SortOrder
  }

  export type PaymentScalarRelationFilter = {
    is?: PaymentWhereInput
    isNot?: PaymentWhereInput
  }

  export type CardInfoOrderByRelevanceInput = {
    fields: CardInfoOrderByRelevanceFieldEnum | CardInfoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CardInfoCountOrderByAggregateInput = {
    id?: SortOrder
    paymentId?: SortOrder
    cardNumber?: SortOrder
    cardExpiry?: SortOrder
    traceNumber?: SortOrder
    type2?: SortOrder
    type3?: SortOrder
    cardRate?: SortOrder
    appCode?: SortOrder
    cardType?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type CardInfoAvgOrderByAggregateInput = {
    id?: SortOrder
    paymentId?: SortOrder
    cardRate?: SortOrder
    version?: SortOrder
  }

  export type CardInfoMaxOrderByAggregateInput = {
    id?: SortOrder
    paymentId?: SortOrder
    cardNumber?: SortOrder
    cardExpiry?: SortOrder
    traceNumber?: SortOrder
    type2?: SortOrder
    type3?: SortOrder
    cardRate?: SortOrder
    appCode?: SortOrder
    cardType?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type CardInfoMinOrderByAggregateInput = {
    id?: SortOrder
    paymentId?: SortOrder
    cardNumber?: SortOrder
    cardExpiry?: SortOrder
    traceNumber?: SortOrder
    type2?: SortOrder
    type3?: SortOrder
    cardRate?: SortOrder
    appCode?: SortOrder
    cardType?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type CardInfoSumOrderByAggregateInput = {
    id?: SortOrder
    paymentId?: SortOrder
    cardRate?: SortOrder
    version?: SortOrder
  }

  export type DeclarationListRelationFilter = {
    every?: DeclarationWhereInput
    some?: DeclarationWhereInput
    none?: DeclarationWhereInput
  }

  export type DeclarationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SessionCountOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    businessDate?: SortOrder
    openingDateTime?: SortOrder
    closingDateTime?: SortOrder
    openingAmount?: SortOrder
    totalSalesCount?: SortOrder
    openByUserID?: SortOrder
    closeByUserID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SessionAvgOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    openingAmount?: SortOrder
    totalSalesCount?: SortOrder
    openByUserID?: SortOrder
    closeByUserID?: SortOrder
    version?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    businessDate?: SortOrder
    openingDateTime?: SortOrder
    closingDateTime?: SortOrder
    openingAmount?: SortOrder
    totalSalesCount?: SortOrder
    openByUserID?: SortOrder
    closeByUserID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    businessDate?: SortOrder
    openingDateTime?: SortOrder
    closingDateTime?: SortOrder
    openingAmount?: SortOrder
    totalSalesCount?: SortOrder
    openByUserID?: SortOrder
    closeByUserID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SessionSumOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    openingAmount?: SortOrder
    totalSalesCount?: SortOrder
    openByUserID?: SortOrder
    closeByUserID?: SortOrder
    version?: SortOrder
  }

  export type SessionScalarRelationFilter = {
    is?: SessionWhereInput
    isNot?: SessionWhereInput
  }

  export type DeclarationOrderByRelevanceInput = {
    fields: DeclarationOrderByRelevanceFieldEnum | DeclarationOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type DeclarationCountOrderByAggregateInput = {
    id?: SortOrder
    paymentType?: SortOrder
    totalPaymentAmount?: SortOrder
    declarationAmount?: SortOrder
    differenceAmount?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    sessionID?: SortOrder
  }

  export type DeclarationAvgOrderByAggregateInput = {
    id?: SortOrder
    totalPaymentAmount?: SortOrder
    declarationAmount?: SortOrder
    differenceAmount?: SortOrder
    version?: SortOrder
    sessionID?: SortOrder
  }

  export type DeclarationMaxOrderByAggregateInput = {
    id?: SortOrder
    paymentType?: SortOrder
    totalPaymentAmount?: SortOrder
    declarationAmount?: SortOrder
    differenceAmount?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    sessionID?: SortOrder
  }

  export type DeclarationMinOrderByAggregateInput = {
    id?: SortOrder
    paymentType?: SortOrder
    totalPaymentAmount?: SortOrder
    declarationAmount?: SortOrder
    differenceAmount?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    sessionID?: SortOrder
  }

  export type DeclarationSumOrderByAggregateInput = {
    id?: SortOrder
    totalPaymentAmount?: SortOrder
    declarationAmount?: SortOrder
    differenceAmount?: SortOrder
    version?: SortOrder
    sessionID?: SortOrder
  }

  export type OutletScalarRelationFilter = {
    is?: OutletWhereInput
    isNot?: OutletWhereInput
  }

  export type StockBalanceItemIdOutletIdReorderThresholdDeletedAvailableQuantityCompoundUniqueInput = {
    itemId: number
    outletId: number
    reorderThreshold: Decimal | DecimalJsLike | number | string
    deleted: boolean
    availableQuantity: Decimal | DecimalJsLike | number | string
  }

  export type StockBalanceCountOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    availableQuantity?: SortOrder
    onHandQuantity?: SortOrder
    reorderThreshold?: SortOrder
    deleted?: SortOrder
    lastRestockDate?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type StockBalanceAvgOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    availableQuantity?: SortOrder
    onHandQuantity?: SortOrder
    reorderThreshold?: SortOrder
    version?: SortOrder
  }

  export type StockBalanceMaxOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    availableQuantity?: SortOrder
    onHandQuantity?: SortOrder
    reorderThreshold?: SortOrder
    deleted?: SortOrder
    lastRestockDate?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type StockBalanceMinOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    availableQuantity?: SortOrder
    onHandQuantity?: SortOrder
    reorderThreshold?: SortOrder
    deleted?: SortOrder
    lastRestockDate?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type StockBalanceSumOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    availableQuantity?: SortOrder
    onHandQuantity?: SortOrder
    reorderThreshold?: SortOrder
    version?: SortOrder
  }

  export type StockReceiptCountOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    receiptDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    version?: SortOrder
  }

  export type StockReceiptAvgOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    version?: SortOrder
  }

  export type StockReceiptMaxOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    receiptDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    version?: SortOrder
  }

  export type StockReceiptMinOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    receiptDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    version?: SortOrder
  }

  export type StockReceiptSumOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    version?: SortOrder
  }

  export type StockReceiptArchiveCountOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    receiptDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    version?: SortOrder
  }

  export type StockReceiptArchiveAvgOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    version?: SortOrder
  }

  export type StockReceiptArchiveMaxOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    receiptDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    version?: SortOrder
  }

  export type StockReceiptArchiveMinOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    receiptDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    version?: SortOrder
  }

  export type StockReceiptArchiveSumOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    quantity?: SortOrder
    cost?: SortOrder
    version?: SortOrder
  }

  export type StockMovementOrderByRelevanceInput = {
    fields: StockMovementOrderByRelevanceFieldEnum | StockMovementOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type StockMovementCountOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    previousAvailableQuantity?: SortOrder
    previousOnHandQuantity?: SortOrder
    availableQuantityDelta?: SortOrder
    onHandQuantityDelta?: SortOrder
    movementType?: SortOrder
    documentId?: SortOrder
    reason?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    performedBy?: SortOrder
  }

  export type StockMovementAvgOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    previousAvailableQuantity?: SortOrder
    previousOnHandQuantity?: SortOrder
    availableQuantityDelta?: SortOrder
    onHandQuantityDelta?: SortOrder
    documentId?: SortOrder
    version?: SortOrder
  }

  export type StockMovementMaxOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    previousAvailableQuantity?: SortOrder
    previousOnHandQuantity?: SortOrder
    availableQuantityDelta?: SortOrder
    onHandQuantityDelta?: SortOrder
    movementType?: SortOrder
    documentId?: SortOrder
    reason?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    performedBy?: SortOrder
  }

  export type StockMovementMinOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    previousAvailableQuantity?: SortOrder
    previousOnHandQuantity?: SortOrder
    availableQuantityDelta?: SortOrder
    onHandQuantityDelta?: SortOrder
    movementType?: SortOrder
    documentId?: SortOrder
    reason?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    performedBy?: SortOrder
  }

  export type StockMovementSumOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    previousAvailableQuantity?: SortOrder
    previousOnHandQuantity?: SortOrder
    availableQuantityDelta?: SortOrder
    onHandQuantityDelta?: SortOrder
    documentId?: SortOrder
    version?: SortOrder
  }

  export type StockMovementArchiveOrderByRelevanceInput = {
    fields: StockMovementArchiveOrderByRelevanceFieldEnum | StockMovementArchiveOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type StockMovementArchiveCountOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    itemCode?: SortOrder
    itemName?: SortOrder
    outletId?: SortOrder
    outletName?: SortOrder
    previousAvailableQuantity?: SortOrder
    previousOnHandQuantity?: SortOrder
    availableQuantityDelta?: SortOrder
    onHandQuantityDelta?: SortOrder
    movementType?: SortOrder
    documentId?: SortOrder
    documentType?: SortOrder
    reason?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type StockMovementArchiveAvgOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    previousAvailableQuantity?: SortOrder
    previousOnHandQuantity?: SortOrder
    availableQuantityDelta?: SortOrder
    onHandQuantityDelta?: SortOrder
    documentId?: SortOrder
    version?: SortOrder
  }

  export type StockMovementArchiveMaxOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    itemCode?: SortOrder
    itemName?: SortOrder
    outletId?: SortOrder
    outletName?: SortOrder
    previousAvailableQuantity?: SortOrder
    previousOnHandQuantity?: SortOrder
    availableQuantityDelta?: SortOrder
    onHandQuantityDelta?: SortOrder
    movementType?: SortOrder
    documentId?: SortOrder
    documentType?: SortOrder
    reason?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type StockMovementArchiveMinOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    itemCode?: SortOrder
    itemName?: SortOrder
    outletId?: SortOrder
    outletName?: SortOrder
    previousAvailableQuantity?: SortOrder
    previousOnHandQuantity?: SortOrder
    availableQuantityDelta?: SortOrder
    onHandQuantityDelta?: SortOrder
    movementType?: SortOrder
    documentId?: SortOrder
    documentType?: SortOrder
    reason?: SortOrder
    remark?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type StockMovementArchiveSumOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    previousAvailableQuantity?: SortOrder
    previousOnHandQuantity?: SortOrder
    availableQuantityDelta?: SortOrder
    onHandQuantityDelta?: SortOrder
    documentId?: SortOrder
    version?: SortOrder
  }

  export type StockSnapshotCountOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    availableQuantity?: SortOrder
    onHandQuantity?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type StockSnapshotAvgOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    availableQuantity?: SortOrder
    onHandQuantity?: SortOrder
    version?: SortOrder
  }

  export type StockSnapshotMaxOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    availableQuantity?: SortOrder
    onHandQuantity?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type StockSnapshotMinOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    availableQuantity?: SortOrder
    onHandQuantity?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type StockSnapshotSumOrderByAggregateInput = {
    id?: SortOrder
    itemId?: SortOrder
    outletId?: SortOrder
    availableQuantity?: SortOrder
    onHandQuantity?: SortOrder
    version?: SortOrder
  }

  export type MenuProfileOutletCountOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    menuProfileID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type MenuProfileOutletAvgOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    menuProfileID?: SortOrder
    version?: SortOrder
  }

  export type MenuProfileOutletMaxOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    menuProfileID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type MenuProfileOutletMinOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    menuProfileID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type MenuProfileOutletSumOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    menuProfileID?: SortOrder
    version?: SortOrder
  }

  export type MenuCategoryListRelationFilter = {
    every?: MenuCategoryWhereInput
    some?: MenuCategoryWhereInput
    none?: MenuCategoryWhereInput
  }

  export type MenuCategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MenuProfileOrderByRelevanceInput = {
    fields: MenuProfileOrderByRelevanceFieldEnum | MenuProfileOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type MenuProfileCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    dateStart?: SortOrder
    dateEnd?: SortOrder
    timeStart?: SortOrder
    timeEnd?: SortOrder
    isMonday?: SortOrder
    isTuesday?: SortOrder
    isWednesday?: SortOrder
    isThursday?: SortOrder
    isFriday?: SortOrder
    isSaturday?: SortOrder
    isSunday?: SortOrder
    sequence?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type MenuProfileAvgOrderByAggregateInput = {
    id?: SortOrder
    sequence?: SortOrder
    version?: SortOrder
  }

  export type MenuProfileMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    dateStart?: SortOrder
    dateEnd?: SortOrder
    timeStart?: SortOrder
    timeEnd?: SortOrder
    isMonday?: SortOrder
    isTuesday?: SortOrder
    isWednesday?: SortOrder
    isThursday?: SortOrder
    isFriday?: SortOrder
    isSaturday?: SortOrder
    isSunday?: SortOrder
    sequence?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type MenuProfileMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    dateStart?: SortOrder
    dateEnd?: SortOrder
    timeStart?: SortOrder
    timeEnd?: SortOrder
    isMonday?: SortOrder
    isTuesday?: SortOrder
    isWednesday?: SortOrder
    isThursday?: SortOrder
    isFriday?: SortOrder
    isSaturday?: SortOrder
    isSunday?: SortOrder
    sequence?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type MenuProfileSumOrderByAggregateInput = {
    id?: SortOrder
    sequence?: SortOrder
    version?: SortOrder
  }

  export type MenuProfileScalarRelationFilter = {
    is?: MenuProfileWhereInput
    isNot?: MenuProfileWhereInput
  }

  export type MenuItemListRelationFilter = {
    every?: MenuItemWhereInput
    some?: MenuItemWhereInput
    none?: MenuItemWhereInput
  }

  export type MenuItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MenuCategoryOrderByRelevanceInput = {
    fields: MenuCategoryOrderByRelevanceFieldEnum | MenuCategoryOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type MenuCategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    menuProfileID?: SortOrder
    imageURL?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type MenuCategoryAvgOrderByAggregateInput = {
    id?: SortOrder
    menuProfileID?: SortOrder
    version?: SortOrder
  }

  export type MenuCategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    menuProfileID?: SortOrder
    imageURL?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type MenuCategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    menuProfileID?: SortOrder
    imageURL?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type MenuCategorySumOrderByAggregateInput = {
    id?: SortOrder
    menuProfileID?: SortOrder
    version?: SortOrder
  }

  export type MenuCategoryScalarRelationFilter = {
    is?: MenuCategoryWhereInput
    isNot?: MenuCategoryWhereInput
  }

  export type MenuItemModifierGroupListRelationFilter = {
    every?: MenuItemModifierGroupWhereInput
    some?: MenuItemModifierGroupWhereInput
    none?: MenuItemModifierGroupWhereInput
  }

  export type MenuItemModifierGroupOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MenuItemOrderByRelevanceInput = {
    fields: MenuItemOrderByRelevanceFieldEnum | MenuItemOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type MenuItemCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    itemID?: SortOrder
    itemCode?: SortOrder
    imageURL?: SortOrder
    price?: SortOrder
    sequence?: SortOrder
    menuCategoryID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type MenuItemAvgOrderByAggregateInput = {
    id?: SortOrder
    itemID?: SortOrder
    price?: SortOrder
    sequence?: SortOrder
    menuCategoryID?: SortOrder
    version?: SortOrder
  }

  export type MenuItemMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    itemID?: SortOrder
    itemCode?: SortOrder
    imageURL?: SortOrder
    price?: SortOrder
    sequence?: SortOrder
    menuCategoryID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type MenuItemMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    itemID?: SortOrder
    itemCode?: SortOrder
    imageURL?: SortOrder
    price?: SortOrder
    sequence?: SortOrder
    menuCategoryID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type MenuItemSumOrderByAggregateInput = {
    id?: SortOrder
    itemID?: SortOrder
    price?: SortOrder
    sequence?: SortOrder
    menuCategoryID?: SortOrder
    version?: SortOrder
  }

  export type MenuItemScalarRelationFilter = {
    is?: MenuItemWhereInput
    isNot?: MenuItemWhereInput
  }

  export type MenuItemModifierListRelationFilter = {
    every?: MenuItemModifierWhereInput
    some?: MenuItemModifierWhereInput
    none?: MenuItemModifierWhereInput
  }

  export type MenuItemModifierOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MenuItemModifierGroupOrderByRelevanceInput = {
    fields: MenuItemModifierGroupOrderByRelevanceFieldEnum | MenuItemModifierGroupOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type MenuItemModifierGroupCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    minSelection?: SortOrder
    maxSelection?: SortOrder
    sequence?: SortOrder
    menuItemID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    freeModifierLimit?: SortOrder
  }

  export type MenuItemModifierGroupAvgOrderByAggregateInput = {
    id?: SortOrder
    minSelection?: SortOrder
    maxSelection?: SortOrder
    sequence?: SortOrder
    menuItemID?: SortOrder
    version?: SortOrder
    freeModifierLimit?: SortOrder
  }

  export type MenuItemModifierGroupMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    minSelection?: SortOrder
    maxSelection?: SortOrder
    sequence?: SortOrder
    menuItemID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    freeModifierLimit?: SortOrder
  }

  export type MenuItemModifierGroupMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    minSelection?: SortOrder
    maxSelection?: SortOrder
    sequence?: SortOrder
    menuItemID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    freeModifierLimit?: SortOrder
  }

  export type MenuItemModifierGroupSumOrderByAggregateInput = {
    id?: SortOrder
    minSelection?: SortOrder
    maxSelection?: SortOrder
    sequence?: SortOrder
    menuItemID?: SortOrder
    version?: SortOrder
    freeModifierLimit?: SortOrder
  }

  export type MenuItemModifierGroupScalarRelationFilter = {
    is?: MenuItemModifierGroupWhereInput
    isNot?: MenuItemModifierGroupWhereInput
  }

  export type MenuItemModifierOrderByRelevanceInput = {
    fields: MenuItemModifierOrderByRelevanceFieldEnum | MenuItemModifierOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type MenuItemModifierCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    itemID?: SortOrder
    itemCode?: SortOrder
    imageURL?: SortOrder
    price?: SortOrder
    defaultSelectionQty?: SortOrder
    sequence?: SortOrder
    menuItemModifierGroupID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type MenuItemModifierAvgOrderByAggregateInput = {
    id?: SortOrder
    itemID?: SortOrder
    price?: SortOrder
    defaultSelectionQty?: SortOrder
    sequence?: SortOrder
    menuItemModifierGroupID?: SortOrder
    version?: SortOrder
  }

  export type MenuItemModifierMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    itemID?: SortOrder
    itemCode?: SortOrder
    imageURL?: SortOrder
    price?: SortOrder
    defaultSelectionQty?: SortOrder
    sequence?: SortOrder
    menuItemModifierGroupID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type MenuItemModifierMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    itemID?: SortOrder
    itemCode?: SortOrder
    imageURL?: SortOrder
    price?: SortOrder
    defaultSelectionQty?: SortOrder
    sequence?: SortOrder
    menuItemModifierGroupID?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type MenuItemModifierSumOrderByAggregateInput = {
    id?: SortOrder
    itemID?: SortOrder
    price?: SortOrder
    defaultSelectionQty?: SortOrder
    sequence?: SortOrder
    menuItemModifierGroupID?: SortOrder
    version?: SortOrder
  }

  export type TableOrderByRelevanceInput = {
    fields: TableOrderByRelevanceFieldEnum | TableOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TableCountOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    tableNumber?: SortOrder
    capacity?: SortOrder
    status?: SortOrder
    salesId?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type TableAvgOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    capacity?: SortOrder
    salesId?: SortOrder
    version?: SortOrder
  }

  export type TableMaxOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    tableNumber?: SortOrder
    capacity?: SortOrder
    status?: SortOrder
    salesId?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type TableMinOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    tableNumber?: SortOrder
    capacity?: SortOrder
    status?: SortOrder
    salesId?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type TableSumOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    capacity?: SortOrder
    salesId?: SortOrder
    version?: SortOrder
  }

  export type MenuItemModifierNullableScalarRelationFilter = {
    is?: MenuItemModifierWhereInput | null
    isNot?: MenuItemModifierWhereInput | null
  }

  export type RecipeOrderByRelevanceInput = {
    fields: RecipeOrderByRelevanceFieldEnum | RecipeOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type RecipeCountOrderByAggregateInput = {
    id?: SortOrder
    menuItemId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    unit?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    batchYield?: SortOrder
    menuItemModifierId?: SortOrder
  }

  export type RecipeAvgOrderByAggregateInput = {
    id?: SortOrder
    menuItemId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    version?: SortOrder
    batchYield?: SortOrder
    menuItemModifierId?: SortOrder
  }

  export type RecipeMaxOrderByAggregateInput = {
    id?: SortOrder
    menuItemId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    unit?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    batchYield?: SortOrder
    menuItemModifierId?: SortOrder
  }

  export type RecipeMinOrderByAggregateInput = {
    id?: SortOrder
    menuItemId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    unit?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
    batchYield?: SortOrder
    menuItemModifierId?: SortOrder
  }

  export type RecipeSumOrderByAggregateInput = {
    id?: SortOrder
    menuItemId?: SortOrder
    itemId?: SortOrder
    quantity?: SortOrder
    version?: SortOrder
    batchYield?: SortOrder
    menuItemModifierId?: SortOrder
  }

  export type StationOrderByRelevanceInput = {
    fields: StationOrderByRelevanceFieldEnum | StationOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type StationCountOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    name?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type StationAvgOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    version?: SortOrder
  }

  export type StationMaxOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    name?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type StationMinOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    name?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type StationSumOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    version?: SortOrder
  }

  export type ReservationOrderByRelevanceInput = {
    fields: ReservationOrderByRelevanceFieldEnum | ReservationOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ReservationCountOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    tableId?: SortOrder
    dateTime?: SortOrder
    partySize?: SortOrder
    status?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type ReservationAvgOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    tableId?: SortOrder
    partySize?: SortOrder
    version?: SortOrder
  }

  export type ReservationMaxOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    tableId?: SortOrder
    dateTime?: SortOrder
    partySize?: SortOrder
    status?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type ReservationMinOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    tableId?: SortOrder
    dateTime?: SortOrder
    partySize?: SortOrder
    status?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type ReservationSumOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    tableId?: SortOrder
    partySize?: SortOrder
    version?: SortOrder
  }

  export type StationScalarRelationFilter = {
    is?: StationWhereInput
    isNot?: StationWhereInput
  }

  export type OrderRoutingOrderByRelevanceInput = {
    fields: OrderRoutingOrderByRelevanceFieldEnum | OrderRoutingOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type OrderRoutingCountOrderByAggregateInput = {
    id?: SortOrder
    salesItemId?: SortOrder
    stationId?: SortOrder
    status?: SortOrder
    sentAt?: SortOrder
    completedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type OrderRoutingAvgOrderByAggregateInput = {
    id?: SortOrder
    salesItemId?: SortOrder
    stationId?: SortOrder
    version?: SortOrder
  }

  export type OrderRoutingMaxOrderByAggregateInput = {
    id?: SortOrder
    salesItemId?: SortOrder
    stationId?: SortOrder
    status?: SortOrder
    sentAt?: SortOrder
    completedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type OrderRoutingMinOrderByAggregateInput = {
    id?: SortOrder
    salesItemId?: SortOrder
    stationId?: SortOrder
    status?: SortOrder
    sentAt?: SortOrder
    completedAt?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type OrderRoutingSumOrderByAggregateInput = {
    id?: SortOrder
    salesItemId?: SortOrder
    stationId?: SortOrder
    version?: SortOrder
  }

  export type WaitlistOrderByRelevanceInput = {
    fields: WaitlistOrderByRelevanceFieldEnum | WaitlistOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type WaitlistCountOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    partySize?: SortOrder
    status?: SortOrder
    waitTime?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type WaitlistAvgOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    partySize?: SortOrder
    waitTime?: SortOrder
    version?: SortOrder
  }

  export type WaitlistMaxOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    partySize?: SortOrder
    status?: SortOrder
    waitTime?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type WaitlistMinOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    partySize?: SortOrder
    status?: SortOrder
    waitTime?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type WaitlistSumOrderByAggregateInput = {
    id?: SortOrder
    outletId?: SortOrder
    customerId?: SortOrder
    partySize?: SortOrder
    waitTime?: SortOrder
    version?: SortOrder
  }

  export type PaymentNullableScalarRelationFilter = {
    is?: PaymentWhereInput | null
    isNot?: PaymentWhereInput | null
  }

  export type SplitBillCountOrderByAggregateInput = {
    id?: SortOrder
    salesId?: SortOrder
    amount?: SortOrder
    paymentId?: SortOrder
    customerId?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SplitBillAvgOrderByAggregateInput = {
    id?: SortOrder
    salesId?: SortOrder
    amount?: SortOrder
    paymentId?: SortOrder
    customerId?: SortOrder
    version?: SortOrder
  }

  export type SplitBillMaxOrderByAggregateInput = {
    id?: SortOrder
    salesId?: SortOrder
    amount?: SortOrder
    paymentId?: SortOrder
    customerId?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SplitBillMinOrderByAggregateInput = {
    id?: SortOrder
    salesId?: SortOrder
    amount?: SortOrder
    paymentId?: SortOrder
    customerId?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type SplitBillSumOrderByAggregateInput = {
    id?: SortOrder
    salesId?: SortOrder
    amount?: SortOrder
    paymentId?: SortOrder
    customerId?: SortOrder
    version?: SortOrder
  }

  export type EnumPromotionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PromotionType | EnumPromotionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PromotionType[]
    notIn?: $Enums.PromotionType[]
    not?: NestedEnumPromotionTypeFilter<$PrismaModel> | $Enums.PromotionType
  }

  export type EnumPromotionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PromotionStatus | EnumPromotionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PromotionStatus[]
    notIn?: $Enums.PromotionStatus[]
    not?: NestedEnumPromotionStatusFilter<$PrismaModel> | $Enums.PromotionStatus
  }

  export type EnumCombinationRuleFilter<$PrismaModel = never> = {
    equals?: $Enums.CombinationRule | EnumCombinationRuleFieldRefInput<$PrismaModel>
    in?: $Enums.CombinationRule[]
    notIn?: $Enums.CombinationRule[]
    not?: NestedEnumCombinationRuleFilter<$PrismaModel> | $Enums.CombinationRule
  }

  export type EnumDiscountTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DiscountType | EnumDiscountTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DiscountType[]
    notIn?: $Enums.DiscountType[]
    not?: NestedEnumDiscountTypeFilter<$PrismaModel> | $Enums.DiscountType
  }

  export type PromotionItemListRelationFilter = {
    every?: PromotionItemWhereInput
    some?: PromotionItemWhereInput
    none?: PromotionItemWhereInput
  }

  export type PromotionItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PromotionOrderByRelevanceInput = {
    fields: PromotionOrderByRelevanceFieldEnum | PromotionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type PromotionCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    combinationRule?: SortOrder
    discountType?: SortOrder
    discountValue?: SortOrder
    buyQuantity?: SortOrder
    getQuantity?: SortOrder
    getDiscountValue?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    validDays?: SortOrder
    minPurchaseAmount?: SortOrder
    minPurchaseQty?: SortOrder
    maxUsageTotal?: SortOrder
    maxUsagePerCustomer?: SortOrder
    currentUsage?: SortOrder
    isCustomerSpecific?: SortOrder
    createdBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type PromotionAvgOrderByAggregateInput = {
    id?: SortOrder
    priority?: SortOrder
    discountValue?: SortOrder
    buyQuantity?: SortOrder
    getQuantity?: SortOrder
    getDiscountValue?: SortOrder
    minPurchaseAmount?: SortOrder
    minPurchaseQty?: SortOrder
    maxUsageTotal?: SortOrder
    maxUsagePerCustomer?: SortOrder
    currentUsage?: SortOrder
    version?: SortOrder
  }

  export type PromotionMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    combinationRule?: SortOrder
    discountType?: SortOrder
    discountValue?: SortOrder
    buyQuantity?: SortOrder
    getQuantity?: SortOrder
    getDiscountValue?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    validDays?: SortOrder
    minPurchaseAmount?: SortOrder
    minPurchaseQty?: SortOrder
    maxUsageTotal?: SortOrder
    maxUsagePerCustomer?: SortOrder
    currentUsage?: SortOrder
    isCustomerSpecific?: SortOrder
    createdBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type PromotionMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    type?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    combinationRule?: SortOrder
    discountType?: SortOrder
    discountValue?: SortOrder
    buyQuantity?: SortOrder
    getQuantity?: SortOrder
    getDiscountValue?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    validDays?: SortOrder
    minPurchaseAmount?: SortOrder
    minPurchaseQty?: SortOrder
    maxUsageTotal?: SortOrder
    maxUsagePerCustomer?: SortOrder
    currentUsage?: SortOrder
    isCustomerSpecific?: SortOrder
    createdBy?: SortOrder
    deleted?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type PromotionSumOrderByAggregateInput = {
    id?: SortOrder
    priority?: SortOrder
    discountValue?: SortOrder
    buyQuantity?: SortOrder
    getQuantity?: SortOrder
    getDiscountValue?: SortOrder
    minPurchaseAmount?: SortOrder
    minPurchaseQty?: SortOrder
    maxUsageTotal?: SortOrder
    maxUsagePerCustomer?: SortOrder
    currentUsage?: SortOrder
    version?: SortOrder
  }

  export type EnumPromotionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PromotionType | EnumPromotionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PromotionType[]
    notIn?: $Enums.PromotionType[]
    not?: NestedEnumPromotionTypeWithAggregatesFilter<$PrismaModel> | $Enums.PromotionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPromotionTypeFilter<$PrismaModel>
    _max?: NestedEnumPromotionTypeFilter<$PrismaModel>
  }

  export type EnumPromotionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PromotionStatus | EnumPromotionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PromotionStatus[]
    notIn?: $Enums.PromotionStatus[]
    not?: NestedEnumPromotionStatusWithAggregatesFilter<$PrismaModel> | $Enums.PromotionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPromotionStatusFilter<$PrismaModel>
    _max?: NestedEnumPromotionStatusFilter<$PrismaModel>
  }

  export type EnumCombinationRuleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CombinationRule | EnumCombinationRuleFieldRefInput<$PrismaModel>
    in?: $Enums.CombinationRule[]
    notIn?: $Enums.CombinationRule[]
    not?: NestedEnumCombinationRuleWithAggregatesFilter<$PrismaModel> | $Enums.CombinationRule
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCombinationRuleFilter<$PrismaModel>
    _max?: NestedEnumCombinationRuleFilter<$PrismaModel>
  }

  export type EnumDiscountTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DiscountType | EnumDiscountTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DiscountType[]
    notIn?: $Enums.DiscountType[]
    not?: NestedEnumDiscountTypeWithAggregatesFilter<$PrismaModel> | $Enums.DiscountType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDiscountTypeFilter<$PrismaModel>
    _max?: NestedEnumDiscountTypeFilter<$PrismaModel>
  }

  export type PromotionScalarRelationFilter = {
    is?: PromotionWhereInput
    isNot?: PromotionWhereInput
  }

  export type PromotionItemOrderByRelevanceInput = {
    fields: PromotionItemOrderByRelevanceFieldEnum | PromotionItemOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type PromotionItemCountOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    itemId?: SortOrder
    categoryId?: SortOrder
    itemCode?: SortOrder
    itemName?: SortOrder
    itemRole?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type PromotionItemAvgOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    itemId?: SortOrder
    categoryId?: SortOrder
    version?: SortOrder
  }

  export type PromotionItemMaxOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    itemId?: SortOrder
    categoryId?: SortOrder
    itemCode?: SortOrder
    itemName?: SortOrder
    itemRole?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type PromotionItemMinOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    itemId?: SortOrder
    categoryId?: SortOrder
    itemCode?: SortOrder
    itemName?: SortOrder
    itemRole?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type PromotionItemSumOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    itemId?: SortOrder
    categoryId?: SortOrder
    version?: SortOrder
  }

  export type CustomerScalarRelationFilter = {
    is?: CustomerWhereInput
    isNot?: CustomerWhereInput
  }

  export type PromotionCustomerPromotionIdCustomerIdCompoundUniqueInput = {
    promotionId: number
    customerId: number
  }

  export type PromotionCustomerCountOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    customerId?: SortOrder
    maxUsage?: SortOrder
    currentUsage?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type PromotionCustomerAvgOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    customerId?: SortOrder
    maxUsage?: SortOrder
    currentUsage?: SortOrder
    version?: SortOrder
  }

  export type PromotionCustomerMaxOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    customerId?: SortOrder
    maxUsage?: SortOrder
    currentUsage?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type PromotionCustomerMinOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    customerId?: SortOrder
    maxUsage?: SortOrder
    currentUsage?: SortOrder
    deleted?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    version?: SortOrder
  }

  export type PromotionCustomerSumOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    customerId?: SortOrder
    maxUsage?: SortOrder
    currentUsage?: SortOrder
    version?: SortOrder
  }

  export type PromotionUsageCountOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    customerId?: SortOrder
    salesId?: SortOrder
    discountAmount?: SortOrder
    usedAt?: SortOrder
    version?: SortOrder
  }

  export type PromotionUsageAvgOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    customerId?: SortOrder
    salesId?: SortOrder
    discountAmount?: SortOrder
    version?: SortOrder
  }

  export type PromotionUsageMaxOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    customerId?: SortOrder
    salesId?: SortOrder
    discountAmount?: SortOrder
    usedAt?: SortOrder
    version?: SortOrder
  }

  export type PromotionUsageMinOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    customerId?: SortOrder
    salesId?: SortOrder
    discountAmount?: SortOrder
    usedAt?: SortOrder
    version?: SortOrder
  }

  export type PromotionUsageSumOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    customerId?: SortOrder
    salesId?: SortOrder
    discountAmount?: SortOrder
    version?: SortOrder
  }

  export type RolePermissionCreateNestedManyWithoutRoleInput = {
    create?: XOR<RolePermissionCreateWithoutRoleInput, RolePermissionUncheckedCreateWithoutRoleInput> | RolePermissionCreateWithoutRoleInput[] | RolePermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutRoleInput | RolePermissionCreateOrConnectWithoutRoleInput[]
    createMany?: RolePermissionCreateManyRoleInputEnvelope
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutRolesInput = {
    create?: XOR<UserCreateWithoutRolesInput, UserUncheckedCreateWithoutRolesInput> | UserCreateWithoutRolesInput[] | UserUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRolesInput | UserCreateOrConnectWithoutRolesInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type RolePermissionUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<RolePermissionCreateWithoutRoleInput, RolePermissionUncheckedCreateWithoutRoleInput> | RolePermissionCreateWithoutRoleInput[] | RolePermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutRoleInput | RolePermissionCreateOrConnectWithoutRoleInput[]
    createMany?: RolePermissionCreateManyRoleInputEnvelope
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<UserCreateWithoutRolesInput, UserUncheckedCreateWithoutRolesInput> | UserCreateWithoutRolesInput[] | UserUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRolesInput | UserCreateOrConnectWithoutRolesInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type RolePermissionUpdateManyWithoutRoleNestedInput = {
    create?: XOR<RolePermissionCreateWithoutRoleInput, RolePermissionUncheckedCreateWithoutRoleInput> | RolePermissionCreateWithoutRoleInput[] | RolePermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutRoleInput | RolePermissionCreateOrConnectWithoutRoleInput[]
    upsert?: RolePermissionUpsertWithWhereUniqueWithoutRoleInput | RolePermissionUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: RolePermissionCreateManyRoleInputEnvelope
    set?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    disconnect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    delete?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    update?: RolePermissionUpdateWithWhereUniqueWithoutRoleInput | RolePermissionUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: RolePermissionUpdateManyWithWhereWithoutRoleInput | RolePermissionUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
  }

  export type UserUpdateManyWithoutRolesNestedInput = {
    create?: XOR<UserCreateWithoutRolesInput, UserUncheckedCreateWithoutRolesInput> | UserCreateWithoutRolesInput[] | UserUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRolesInput | UserCreateOrConnectWithoutRolesInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutRolesInput | UserUpsertWithWhereUniqueWithoutRolesInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutRolesInput | UserUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: UserUpdateManyWithWhereWithoutRolesInput | UserUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type RolePermissionUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<RolePermissionCreateWithoutRoleInput, RolePermissionUncheckedCreateWithoutRoleInput> | RolePermissionCreateWithoutRoleInput[] | RolePermissionUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutRoleInput | RolePermissionCreateOrConnectWithoutRoleInput[]
    upsert?: RolePermissionUpsertWithWhereUniqueWithoutRoleInput | RolePermissionUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: RolePermissionCreateManyRoleInputEnvelope
    set?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    disconnect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    delete?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    update?: RolePermissionUpdateWithWhereUniqueWithoutRoleInput | RolePermissionUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: RolePermissionUpdateManyWithWhereWithoutRoleInput | RolePermissionUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<UserCreateWithoutRolesInput, UserUncheckedCreateWithoutRolesInput> | UserCreateWithoutRolesInput[] | UserUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRolesInput | UserCreateOrConnectWithoutRolesInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutRolesInput | UserUpsertWithWhereUniqueWithoutRolesInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutRolesInput | UserUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: UserUpdateManyWithWhereWithoutRolesInput | UserUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type RoleCreateNestedOneWithoutPermissionInput = {
    create?: XOR<RoleCreateWithoutPermissionInput, RoleUncheckedCreateWithoutPermissionInput>
    connectOrCreate?: RoleCreateOrConnectWithoutPermissionInput
    connect?: RoleWhereUniqueInput
  }

  export type RoleUpdateOneRequiredWithoutPermissionNestedInput = {
    create?: XOR<RoleCreateWithoutPermissionInput, RoleUncheckedCreateWithoutPermissionInput>
    connectOrCreate?: RoleCreateOrConnectWithoutPermissionInput
    upsert?: RoleUpsertWithoutPermissionInput
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutPermissionInput, RoleUpdateWithoutPermissionInput>, RoleUncheckedUpdateWithoutPermissionInput>
  }

  export type SettingCreateNestedManyWithoutUserInput = {
    create?: XOR<SettingCreateWithoutUserInput, SettingUncheckedCreateWithoutUserInput> | SettingCreateWithoutUserInput[] | SettingUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SettingCreateOrConnectWithoutUserInput | SettingCreateOrConnectWithoutUserInput[]
    createMany?: SettingCreateManyUserInputEnvelope
    connect?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
  }

  export type RoleCreateNestedManyWithoutUsersInput = {
    create?: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput> | RoleCreateWithoutUsersInput[] | RoleUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUsersInput | RoleCreateOrConnectWithoutUsersInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type SettingUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SettingCreateWithoutUserInput, SettingUncheckedCreateWithoutUserInput> | SettingCreateWithoutUserInput[] | SettingUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SettingCreateOrConnectWithoutUserInput | SettingCreateOrConnectWithoutUserInput[]
    createMany?: SettingCreateManyUserInputEnvelope
    connect?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
  }

  export type RoleUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput> | RoleCreateWithoutUsersInput[] | RoleUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUsersInput | RoleCreateOrConnectWithoutUsersInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type SettingUpdateManyWithoutUserNestedInput = {
    create?: XOR<SettingCreateWithoutUserInput, SettingUncheckedCreateWithoutUserInput> | SettingCreateWithoutUserInput[] | SettingUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SettingCreateOrConnectWithoutUserInput | SettingCreateOrConnectWithoutUserInput[]
    upsert?: SettingUpsertWithWhereUniqueWithoutUserInput | SettingUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SettingCreateManyUserInputEnvelope
    set?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
    disconnect?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
    delete?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
    connect?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
    update?: SettingUpdateWithWhereUniqueWithoutUserInput | SettingUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SettingUpdateManyWithWhereWithoutUserInput | SettingUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SettingScalarWhereInput | SettingScalarWhereInput[]
  }

  export type RoleUpdateManyWithoutUsersNestedInput = {
    create?: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput> | RoleCreateWithoutUsersInput[] | RoleUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUsersInput | RoleCreateOrConnectWithoutUsersInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutUsersInput | RoleUpsertWithWhereUniqueWithoutUsersInput[]
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutUsersInput | RoleUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutUsersInput | RoleUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type SettingUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SettingCreateWithoutUserInput, SettingUncheckedCreateWithoutUserInput> | SettingCreateWithoutUserInput[] | SettingUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SettingCreateOrConnectWithoutUserInput | SettingCreateOrConnectWithoutUserInput[]
    upsert?: SettingUpsertWithWhereUniqueWithoutUserInput | SettingUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SettingCreateManyUserInputEnvelope
    set?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
    disconnect?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
    delete?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
    connect?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
    update?: SettingUpdateWithWhereUniqueWithoutUserInput | SettingUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SettingUpdateManyWithWhereWithoutUserInput | SettingUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SettingScalarWhereInput | SettingScalarWhereInput[]
  }

  export type RoleUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput> | RoleCreateWithoutUsersInput[] | RoleUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUsersInput | RoleCreateOrConnectWithoutUsersInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutUsersInput | RoleUpsertWithWhereUniqueWithoutUsersInput[]
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutUsersInput | RoleUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutUsersInput | RoleUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutSettingsInput = {
    create?: XOR<UserCreateWithoutSettingsInput, UserUncheckedCreateWithoutSettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSettingsInput
    connect?: UserWhereUniqueInput
  }

  export type OutletCreateNestedOneWithoutSettingsInput = {
    create?: XOR<OutletCreateWithoutSettingsInput, OutletUncheckedCreateWithoutSettingsInput>
    connectOrCreate?: OutletCreateOrConnectWithoutSettingsInput
    connect?: OutletWhereUniqueInput
  }

  export type EnumSettingTypeFieldUpdateOperationsInput = {
    set?: $Enums.SettingType
  }

  export type UserUpdateOneWithoutSettingsNestedInput = {
    create?: XOR<UserCreateWithoutSettingsInput, UserUncheckedCreateWithoutSettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSettingsInput
    upsert?: UserUpsertWithoutSettingsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSettingsInput, UserUpdateWithoutSettingsInput>, UserUncheckedUpdateWithoutSettingsInput>
  }

  export type OutletUpdateOneWithoutSettingsNestedInput = {
    create?: XOR<OutletCreateWithoutSettingsInput, OutletUncheckedCreateWithoutSettingsInput>
    connectOrCreate?: OutletCreateOrConnectWithoutSettingsInput
    upsert?: OutletUpsertWithoutSettingsInput
    disconnect?: OutletWhereInput | boolean
    delete?: OutletWhereInput | boolean
    connect?: OutletWhereUniqueInput
    update?: XOR<XOR<OutletUpdateToOneWithWhereWithoutSettingsInput, OutletUpdateWithoutSettingsInput>, OutletUncheckedUpdateWithoutSettingsInput>
  }

  export type ItemCreateNestedManyWithoutSupplierInput = {
    create?: XOR<ItemCreateWithoutSupplierInput, ItemUncheckedCreateWithoutSupplierInput> | ItemCreateWithoutSupplierInput[] | ItemUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutSupplierInput | ItemCreateOrConnectWithoutSupplierInput[]
    createMany?: ItemCreateManySupplierInputEnvelope
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
  }

  export type PurchaseOrderCreateNestedManyWithoutSupplierInput = {
    create?: XOR<PurchaseOrderCreateWithoutSupplierInput, PurchaseOrderUncheckedCreateWithoutSupplierInput> | PurchaseOrderCreateWithoutSupplierInput[] | PurchaseOrderUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutSupplierInput | PurchaseOrderCreateOrConnectWithoutSupplierInput[]
    createMany?: PurchaseOrderCreateManySupplierInputEnvelope
    connect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
  }

  export type InvoiceCreateNestedManyWithoutSupplierInput = {
    create?: XOR<InvoiceCreateWithoutSupplierInput, InvoiceUncheckedCreateWithoutSupplierInput> | InvoiceCreateWithoutSupplierInput[] | InvoiceUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutSupplierInput | InvoiceCreateOrConnectWithoutSupplierInput[]
    createMany?: InvoiceCreateManySupplierInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type ItemUncheckedCreateNestedManyWithoutSupplierInput = {
    create?: XOR<ItemCreateWithoutSupplierInput, ItemUncheckedCreateWithoutSupplierInput> | ItemCreateWithoutSupplierInput[] | ItemUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutSupplierInput | ItemCreateOrConnectWithoutSupplierInput[]
    createMany?: ItemCreateManySupplierInputEnvelope
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
  }

  export type PurchaseOrderUncheckedCreateNestedManyWithoutSupplierInput = {
    create?: XOR<PurchaseOrderCreateWithoutSupplierInput, PurchaseOrderUncheckedCreateWithoutSupplierInput> | PurchaseOrderCreateWithoutSupplierInput[] | PurchaseOrderUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutSupplierInput | PurchaseOrderCreateOrConnectWithoutSupplierInput[]
    createMany?: PurchaseOrderCreateManySupplierInputEnvelope
    connect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
  }

  export type InvoiceUncheckedCreateNestedManyWithoutSupplierInput = {
    create?: XOR<InvoiceCreateWithoutSupplierInput, InvoiceUncheckedCreateWithoutSupplierInput> | InvoiceCreateWithoutSupplierInput[] | InvoiceUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutSupplierInput | InvoiceCreateOrConnectWithoutSupplierInput[]
    createMany?: InvoiceCreateManySupplierInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type ItemUpdateManyWithoutSupplierNestedInput = {
    create?: XOR<ItemCreateWithoutSupplierInput, ItemUncheckedCreateWithoutSupplierInput> | ItemCreateWithoutSupplierInput[] | ItemUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutSupplierInput | ItemCreateOrConnectWithoutSupplierInput[]
    upsert?: ItemUpsertWithWhereUniqueWithoutSupplierInput | ItemUpsertWithWhereUniqueWithoutSupplierInput[]
    createMany?: ItemCreateManySupplierInputEnvelope
    set?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    disconnect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    delete?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    update?: ItemUpdateWithWhereUniqueWithoutSupplierInput | ItemUpdateWithWhereUniqueWithoutSupplierInput[]
    updateMany?: ItemUpdateManyWithWhereWithoutSupplierInput | ItemUpdateManyWithWhereWithoutSupplierInput[]
    deleteMany?: ItemScalarWhereInput | ItemScalarWhereInput[]
  }

  export type PurchaseOrderUpdateManyWithoutSupplierNestedInput = {
    create?: XOR<PurchaseOrderCreateWithoutSupplierInput, PurchaseOrderUncheckedCreateWithoutSupplierInput> | PurchaseOrderCreateWithoutSupplierInput[] | PurchaseOrderUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutSupplierInput | PurchaseOrderCreateOrConnectWithoutSupplierInput[]
    upsert?: PurchaseOrderUpsertWithWhereUniqueWithoutSupplierInput | PurchaseOrderUpsertWithWhereUniqueWithoutSupplierInput[]
    createMany?: PurchaseOrderCreateManySupplierInputEnvelope
    set?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    disconnect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    delete?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    connect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    update?: PurchaseOrderUpdateWithWhereUniqueWithoutSupplierInput | PurchaseOrderUpdateWithWhereUniqueWithoutSupplierInput[]
    updateMany?: PurchaseOrderUpdateManyWithWhereWithoutSupplierInput | PurchaseOrderUpdateManyWithWhereWithoutSupplierInput[]
    deleteMany?: PurchaseOrderScalarWhereInput | PurchaseOrderScalarWhereInput[]
  }

  export type InvoiceUpdateManyWithoutSupplierNestedInput = {
    create?: XOR<InvoiceCreateWithoutSupplierInput, InvoiceUncheckedCreateWithoutSupplierInput> | InvoiceCreateWithoutSupplierInput[] | InvoiceUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutSupplierInput | InvoiceCreateOrConnectWithoutSupplierInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutSupplierInput | InvoiceUpsertWithWhereUniqueWithoutSupplierInput[]
    createMany?: InvoiceCreateManySupplierInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutSupplierInput | InvoiceUpdateWithWhereUniqueWithoutSupplierInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutSupplierInput | InvoiceUpdateManyWithWhereWithoutSupplierInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type ItemUncheckedUpdateManyWithoutSupplierNestedInput = {
    create?: XOR<ItemCreateWithoutSupplierInput, ItemUncheckedCreateWithoutSupplierInput> | ItemCreateWithoutSupplierInput[] | ItemUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutSupplierInput | ItemCreateOrConnectWithoutSupplierInput[]
    upsert?: ItemUpsertWithWhereUniqueWithoutSupplierInput | ItemUpsertWithWhereUniqueWithoutSupplierInput[]
    createMany?: ItemCreateManySupplierInputEnvelope
    set?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    disconnect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    delete?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    update?: ItemUpdateWithWhereUniqueWithoutSupplierInput | ItemUpdateWithWhereUniqueWithoutSupplierInput[]
    updateMany?: ItemUpdateManyWithWhereWithoutSupplierInput | ItemUpdateManyWithWhereWithoutSupplierInput[]
    deleteMany?: ItemScalarWhereInput | ItemScalarWhereInput[]
  }

  export type PurchaseOrderUncheckedUpdateManyWithoutSupplierNestedInput = {
    create?: XOR<PurchaseOrderCreateWithoutSupplierInput, PurchaseOrderUncheckedCreateWithoutSupplierInput> | PurchaseOrderCreateWithoutSupplierInput[] | PurchaseOrderUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutSupplierInput | PurchaseOrderCreateOrConnectWithoutSupplierInput[]
    upsert?: PurchaseOrderUpsertWithWhereUniqueWithoutSupplierInput | PurchaseOrderUpsertWithWhereUniqueWithoutSupplierInput[]
    createMany?: PurchaseOrderCreateManySupplierInputEnvelope
    set?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    disconnect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    delete?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    connect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    update?: PurchaseOrderUpdateWithWhereUniqueWithoutSupplierInput | PurchaseOrderUpdateWithWhereUniqueWithoutSupplierInput[]
    updateMany?: PurchaseOrderUpdateManyWithWhereWithoutSupplierInput | PurchaseOrderUpdateManyWithWhereWithoutSupplierInput[]
    deleteMany?: PurchaseOrderScalarWhereInput | PurchaseOrderScalarWhereInput[]
  }

  export type InvoiceUncheckedUpdateManyWithoutSupplierNestedInput = {
    create?: XOR<InvoiceCreateWithoutSupplierInput, InvoiceUncheckedCreateWithoutSupplierInput> | InvoiceCreateWithoutSupplierInput[] | InvoiceUncheckedCreateWithoutSupplierInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutSupplierInput | InvoiceCreateOrConnectWithoutSupplierInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutSupplierInput | InvoiceUpsertWithWhereUniqueWithoutSupplierInput[]
    createMany?: InvoiceCreateManySupplierInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutSupplierInput | InvoiceUpdateWithWhereUniqueWithoutSupplierInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutSupplierInput | InvoiceUpdateManyWithWhereWithoutSupplierInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type SalesCreateNestedManyWithoutCustomerInput = {
    create?: XOR<SalesCreateWithoutCustomerInput, SalesUncheckedCreateWithoutCustomerInput> | SalesCreateWithoutCustomerInput[] | SalesUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SalesCreateOrConnectWithoutCustomerInput | SalesCreateOrConnectWithoutCustomerInput[]
    createMany?: SalesCreateManyCustomerInputEnvelope
    connect?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
  }

  export type PromotionCustomerCreateNestedManyWithoutCustomerInput = {
    create?: XOR<PromotionCustomerCreateWithoutCustomerInput, PromotionCustomerUncheckedCreateWithoutCustomerInput> | PromotionCustomerCreateWithoutCustomerInput[] | PromotionCustomerUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: PromotionCustomerCreateOrConnectWithoutCustomerInput | PromotionCustomerCreateOrConnectWithoutCustomerInput[]
    createMany?: PromotionCustomerCreateManyCustomerInputEnvelope
    connect?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
  }

  export type PromotionUsageCreateNestedManyWithoutCustomerInput = {
    create?: XOR<PromotionUsageCreateWithoutCustomerInput, PromotionUsageUncheckedCreateWithoutCustomerInput> | PromotionUsageCreateWithoutCustomerInput[] | PromotionUsageUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: PromotionUsageCreateOrConnectWithoutCustomerInput | PromotionUsageCreateOrConnectWithoutCustomerInput[]
    createMany?: PromotionUsageCreateManyCustomerInputEnvelope
    connect?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
  }

  export type ReservationCreateNestedManyWithoutCustomerInput = {
    create?: XOR<ReservationCreateWithoutCustomerInput, ReservationUncheckedCreateWithoutCustomerInput> | ReservationCreateWithoutCustomerInput[] | ReservationUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutCustomerInput | ReservationCreateOrConnectWithoutCustomerInput[]
    createMany?: ReservationCreateManyCustomerInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type WaitlistCreateNestedManyWithoutCustomerInput = {
    create?: XOR<WaitlistCreateWithoutCustomerInput, WaitlistUncheckedCreateWithoutCustomerInput> | WaitlistCreateWithoutCustomerInput[] | WaitlistUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: WaitlistCreateOrConnectWithoutCustomerInput | WaitlistCreateOrConnectWithoutCustomerInput[]
    createMany?: WaitlistCreateManyCustomerInputEnvelope
    connect?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
  }

  export type SplitBillCreateNestedManyWithoutCustomerInput = {
    create?: XOR<SplitBillCreateWithoutCustomerInput, SplitBillUncheckedCreateWithoutCustomerInput> | SplitBillCreateWithoutCustomerInput[] | SplitBillUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SplitBillCreateOrConnectWithoutCustomerInput | SplitBillCreateOrConnectWithoutCustomerInput[]
    createMany?: SplitBillCreateManyCustomerInputEnvelope
    connect?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
  }

  export type SalesUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<SalesCreateWithoutCustomerInput, SalesUncheckedCreateWithoutCustomerInput> | SalesCreateWithoutCustomerInput[] | SalesUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SalesCreateOrConnectWithoutCustomerInput | SalesCreateOrConnectWithoutCustomerInput[]
    createMany?: SalesCreateManyCustomerInputEnvelope
    connect?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
  }

  export type PromotionCustomerUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<PromotionCustomerCreateWithoutCustomerInput, PromotionCustomerUncheckedCreateWithoutCustomerInput> | PromotionCustomerCreateWithoutCustomerInput[] | PromotionCustomerUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: PromotionCustomerCreateOrConnectWithoutCustomerInput | PromotionCustomerCreateOrConnectWithoutCustomerInput[]
    createMany?: PromotionCustomerCreateManyCustomerInputEnvelope
    connect?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
  }

  export type PromotionUsageUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<PromotionUsageCreateWithoutCustomerInput, PromotionUsageUncheckedCreateWithoutCustomerInput> | PromotionUsageCreateWithoutCustomerInput[] | PromotionUsageUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: PromotionUsageCreateOrConnectWithoutCustomerInput | PromotionUsageCreateOrConnectWithoutCustomerInput[]
    createMany?: PromotionUsageCreateManyCustomerInputEnvelope
    connect?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
  }

  export type ReservationUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<ReservationCreateWithoutCustomerInput, ReservationUncheckedCreateWithoutCustomerInput> | ReservationCreateWithoutCustomerInput[] | ReservationUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutCustomerInput | ReservationCreateOrConnectWithoutCustomerInput[]
    createMany?: ReservationCreateManyCustomerInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type WaitlistUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<WaitlistCreateWithoutCustomerInput, WaitlistUncheckedCreateWithoutCustomerInput> | WaitlistCreateWithoutCustomerInput[] | WaitlistUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: WaitlistCreateOrConnectWithoutCustomerInput | WaitlistCreateOrConnectWithoutCustomerInput[]
    createMany?: WaitlistCreateManyCustomerInputEnvelope
    connect?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
  }

  export type SplitBillUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<SplitBillCreateWithoutCustomerInput, SplitBillUncheckedCreateWithoutCustomerInput> | SplitBillCreateWithoutCustomerInput[] | SplitBillUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SplitBillCreateOrConnectWithoutCustomerInput | SplitBillCreateOrConnectWithoutCustomerInput[]
    createMany?: SplitBillCreateManyCustomerInputEnvelope
    connect?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
  }

  export type SalesUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<SalesCreateWithoutCustomerInput, SalesUncheckedCreateWithoutCustomerInput> | SalesCreateWithoutCustomerInput[] | SalesUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SalesCreateOrConnectWithoutCustomerInput | SalesCreateOrConnectWithoutCustomerInput[]
    upsert?: SalesUpsertWithWhereUniqueWithoutCustomerInput | SalesUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: SalesCreateManyCustomerInputEnvelope
    set?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
    disconnect?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
    delete?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
    connect?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
    update?: SalesUpdateWithWhereUniqueWithoutCustomerInput | SalesUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: SalesUpdateManyWithWhereWithoutCustomerInput | SalesUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: SalesScalarWhereInput | SalesScalarWhereInput[]
  }

  export type PromotionCustomerUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<PromotionCustomerCreateWithoutCustomerInput, PromotionCustomerUncheckedCreateWithoutCustomerInput> | PromotionCustomerCreateWithoutCustomerInput[] | PromotionCustomerUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: PromotionCustomerCreateOrConnectWithoutCustomerInput | PromotionCustomerCreateOrConnectWithoutCustomerInput[]
    upsert?: PromotionCustomerUpsertWithWhereUniqueWithoutCustomerInput | PromotionCustomerUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: PromotionCustomerCreateManyCustomerInputEnvelope
    set?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
    disconnect?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
    delete?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
    connect?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
    update?: PromotionCustomerUpdateWithWhereUniqueWithoutCustomerInput | PromotionCustomerUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: PromotionCustomerUpdateManyWithWhereWithoutCustomerInput | PromotionCustomerUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: PromotionCustomerScalarWhereInput | PromotionCustomerScalarWhereInput[]
  }

  export type PromotionUsageUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<PromotionUsageCreateWithoutCustomerInput, PromotionUsageUncheckedCreateWithoutCustomerInput> | PromotionUsageCreateWithoutCustomerInput[] | PromotionUsageUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: PromotionUsageCreateOrConnectWithoutCustomerInput | PromotionUsageCreateOrConnectWithoutCustomerInput[]
    upsert?: PromotionUsageUpsertWithWhereUniqueWithoutCustomerInput | PromotionUsageUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: PromotionUsageCreateManyCustomerInputEnvelope
    set?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
    disconnect?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
    delete?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
    connect?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
    update?: PromotionUsageUpdateWithWhereUniqueWithoutCustomerInput | PromotionUsageUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: PromotionUsageUpdateManyWithWhereWithoutCustomerInput | PromotionUsageUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: PromotionUsageScalarWhereInput | PromotionUsageScalarWhereInput[]
  }

  export type ReservationUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<ReservationCreateWithoutCustomerInput, ReservationUncheckedCreateWithoutCustomerInput> | ReservationCreateWithoutCustomerInput[] | ReservationUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutCustomerInput | ReservationCreateOrConnectWithoutCustomerInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutCustomerInput | ReservationUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: ReservationCreateManyCustomerInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutCustomerInput | ReservationUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutCustomerInput | ReservationUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type WaitlistUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<WaitlistCreateWithoutCustomerInput, WaitlistUncheckedCreateWithoutCustomerInput> | WaitlistCreateWithoutCustomerInput[] | WaitlistUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: WaitlistCreateOrConnectWithoutCustomerInput | WaitlistCreateOrConnectWithoutCustomerInput[]
    upsert?: WaitlistUpsertWithWhereUniqueWithoutCustomerInput | WaitlistUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: WaitlistCreateManyCustomerInputEnvelope
    set?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
    disconnect?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
    delete?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
    connect?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
    update?: WaitlistUpdateWithWhereUniqueWithoutCustomerInput | WaitlistUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: WaitlistUpdateManyWithWhereWithoutCustomerInput | WaitlistUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: WaitlistScalarWhereInput | WaitlistScalarWhereInput[]
  }

  export type SplitBillUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<SplitBillCreateWithoutCustomerInput, SplitBillUncheckedCreateWithoutCustomerInput> | SplitBillCreateWithoutCustomerInput[] | SplitBillUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SplitBillCreateOrConnectWithoutCustomerInput | SplitBillCreateOrConnectWithoutCustomerInput[]
    upsert?: SplitBillUpsertWithWhereUniqueWithoutCustomerInput | SplitBillUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: SplitBillCreateManyCustomerInputEnvelope
    set?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
    disconnect?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
    delete?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
    connect?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
    update?: SplitBillUpdateWithWhereUniqueWithoutCustomerInput | SplitBillUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: SplitBillUpdateManyWithWhereWithoutCustomerInput | SplitBillUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: SplitBillScalarWhereInput | SplitBillScalarWhereInput[]
  }

  export type SalesUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<SalesCreateWithoutCustomerInput, SalesUncheckedCreateWithoutCustomerInput> | SalesCreateWithoutCustomerInput[] | SalesUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SalesCreateOrConnectWithoutCustomerInput | SalesCreateOrConnectWithoutCustomerInput[]
    upsert?: SalesUpsertWithWhereUniqueWithoutCustomerInput | SalesUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: SalesCreateManyCustomerInputEnvelope
    set?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
    disconnect?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
    delete?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
    connect?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
    update?: SalesUpdateWithWhereUniqueWithoutCustomerInput | SalesUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: SalesUpdateManyWithWhereWithoutCustomerInput | SalesUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: SalesScalarWhereInput | SalesScalarWhereInput[]
  }

  export type PromotionCustomerUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<PromotionCustomerCreateWithoutCustomerInput, PromotionCustomerUncheckedCreateWithoutCustomerInput> | PromotionCustomerCreateWithoutCustomerInput[] | PromotionCustomerUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: PromotionCustomerCreateOrConnectWithoutCustomerInput | PromotionCustomerCreateOrConnectWithoutCustomerInput[]
    upsert?: PromotionCustomerUpsertWithWhereUniqueWithoutCustomerInput | PromotionCustomerUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: PromotionCustomerCreateManyCustomerInputEnvelope
    set?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
    disconnect?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
    delete?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
    connect?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
    update?: PromotionCustomerUpdateWithWhereUniqueWithoutCustomerInput | PromotionCustomerUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: PromotionCustomerUpdateManyWithWhereWithoutCustomerInput | PromotionCustomerUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: PromotionCustomerScalarWhereInput | PromotionCustomerScalarWhereInput[]
  }

  export type PromotionUsageUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<PromotionUsageCreateWithoutCustomerInput, PromotionUsageUncheckedCreateWithoutCustomerInput> | PromotionUsageCreateWithoutCustomerInput[] | PromotionUsageUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: PromotionUsageCreateOrConnectWithoutCustomerInput | PromotionUsageCreateOrConnectWithoutCustomerInput[]
    upsert?: PromotionUsageUpsertWithWhereUniqueWithoutCustomerInput | PromotionUsageUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: PromotionUsageCreateManyCustomerInputEnvelope
    set?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
    disconnect?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
    delete?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
    connect?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
    update?: PromotionUsageUpdateWithWhereUniqueWithoutCustomerInput | PromotionUsageUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: PromotionUsageUpdateManyWithWhereWithoutCustomerInput | PromotionUsageUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: PromotionUsageScalarWhereInput | PromotionUsageScalarWhereInput[]
  }

  export type ReservationUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<ReservationCreateWithoutCustomerInput, ReservationUncheckedCreateWithoutCustomerInput> | ReservationCreateWithoutCustomerInput[] | ReservationUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutCustomerInput | ReservationCreateOrConnectWithoutCustomerInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutCustomerInput | ReservationUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: ReservationCreateManyCustomerInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutCustomerInput | ReservationUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutCustomerInput | ReservationUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type WaitlistUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<WaitlistCreateWithoutCustomerInput, WaitlistUncheckedCreateWithoutCustomerInput> | WaitlistCreateWithoutCustomerInput[] | WaitlistUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: WaitlistCreateOrConnectWithoutCustomerInput | WaitlistCreateOrConnectWithoutCustomerInput[]
    upsert?: WaitlistUpsertWithWhereUniqueWithoutCustomerInput | WaitlistUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: WaitlistCreateManyCustomerInputEnvelope
    set?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
    disconnect?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
    delete?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
    connect?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
    update?: WaitlistUpdateWithWhereUniqueWithoutCustomerInput | WaitlistUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: WaitlistUpdateManyWithWhereWithoutCustomerInput | WaitlistUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: WaitlistScalarWhereInput | WaitlistScalarWhereInput[]
  }

  export type SplitBillUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<SplitBillCreateWithoutCustomerInput, SplitBillUncheckedCreateWithoutCustomerInput> | SplitBillCreateWithoutCustomerInput[] | SplitBillUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: SplitBillCreateOrConnectWithoutCustomerInput | SplitBillCreateOrConnectWithoutCustomerInput[]
    upsert?: SplitBillUpsertWithWhereUniqueWithoutCustomerInput | SplitBillUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: SplitBillCreateManyCustomerInputEnvelope
    set?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
    disconnect?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
    delete?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
    connect?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
    update?: SplitBillUpdateWithWhereUniqueWithoutCustomerInput | SplitBillUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: SplitBillUpdateManyWithWhereWithoutCustomerInput | SplitBillUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: SplitBillScalarWhereInput | SplitBillScalarWhereInput[]
  }

  export type StockBalanceCreateNestedManyWithoutOutletInput = {
    create?: XOR<StockBalanceCreateWithoutOutletInput, StockBalanceUncheckedCreateWithoutOutletInput> | StockBalanceCreateWithoutOutletInput[] | StockBalanceUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StockBalanceCreateOrConnectWithoutOutletInput | StockBalanceCreateOrConnectWithoutOutletInput[]
    createMany?: StockBalanceCreateManyOutletInputEnvelope
    connect?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
  }

  export type StockMovementCreateNestedManyWithoutOutletInput = {
    create?: XOR<StockMovementCreateWithoutOutletInput, StockMovementUncheckedCreateWithoutOutletInput> | StockMovementCreateWithoutOutletInput[] | StockMovementUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StockMovementCreateOrConnectWithoutOutletInput | StockMovementCreateOrConnectWithoutOutletInput[]
    createMany?: StockMovementCreateManyOutletInputEnvelope
    connect?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
  }

  export type StockSnapshotCreateNestedManyWithoutOutletInput = {
    create?: XOR<StockSnapshotCreateWithoutOutletInput, StockSnapshotUncheckedCreateWithoutOutletInput> | StockSnapshotCreateWithoutOutletInput[] | StockSnapshotUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StockSnapshotCreateOrConnectWithoutOutletInput | StockSnapshotCreateOrConnectWithoutOutletInput[]
    createMany?: StockSnapshotCreateManyOutletInputEnvelope
    connect?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
  }

  export type StockReceiptCreateNestedManyWithoutOutletInput = {
    create?: XOR<StockReceiptCreateWithoutOutletInput, StockReceiptUncheckedCreateWithoutOutletInput> | StockReceiptCreateWithoutOutletInput[] | StockReceiptUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StockReceiptCreateOrConnectWithoutOutletInput | StockReceiptCreateOrConnectWithoutOutletInput[]
    createMany?: StockReceiptCreateManyOutletInputEnvelope
    connect?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
  }

  export type SettingCreateNestedManyWithoutOutletInput = {
    create?: XOR<SettingCreateWithoutOutletInput, SettingUncheckedCreateWithoutOutletInput> | SettingCreateWithoutOutletInput[] | SettingUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: SettingCreateOrConnectWithoutOutletInput | SettingCreateOrConnectWithoutOutletInput[]
    createMany?: SettingCreateManyOutletInputEnvelope
    connect?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
  }

  export type TableCreateNestedManyWithoutOutletInput = {
    create?: XOR<TableCreateWithoutOutletInput, TableUncheckedCreateWithoutOutletInput> | TableCreateWithoutOutletInput[] | TableUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: TableCreateOrConnectWithoutOutletInput | TableCreateOrConnectWithoutOutletInput[]
    createMany?: TableCreateManyOutletInputEnvelope
    connect?: TableWhereUniqueInput | TableWhereUniqueInput[]
  }

  export type StationCreateNestedManyWithoutOutletInput = {
    create?: XOR<StationCreateWithoutOutletInput, StationUncheckedCreateWithoutOutletInput> | StationCreateWithoutOutletInput[] | StationUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StationCreateOrConnectWithoutOutletInput | StationCreateOrConnectWithoutOutletInput[]
    createMany?: StationCreateManyOutletInputEnvelope
    connect?: StationWhereUniqueInput | StationWhereUniqueInput[]
  }

  export type ReservationCreateNestedManyWithoutOutletInput = {
    create?: XOR<ReservationCreateWithoutOutletInput, ReservationUncheckedCreateWithoutOutletInput> | ReservationCreateWithoutOutletInput[] | ReservationUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutOutletInput | ReservationCreateOrConnectWithoutOutletInput[]
    createMany?: ReservationCreateManyOutletInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type WaitlistCreateNestedManyWithoutOutletInput = {
    create?: XOR<WaitlistCreateWithoutOutletInput, WaitlistUncheckedCreateWithoutOutletInput> | WaitlistCreateWithoutOutletInput[] | WaitlistUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: WaitlistCreateOrConnectWithoutOutletInput | WaitlistCreateOrConnectWithoutOutletInput[]
    createMany?: WaitlistCreateManyOutletInputEnvelope
    connect?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
  }

  export type StockBalanceUncheckedCreateNestedManyWithoutOutletInput = {
    create?: XOR<StockBalanceCreateWithoutOutletInput, StockBalanceUncheckedCreateWithoutOutletInput> | StockBalanceCreateWithoutOutletInput[] | StockBalanceUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StockBalanceCreateOrConnectWithoutOutletInput | StockBalanceCreateOrConnectWithoutOutletInput[]
    createMany?: StockBalanceCreateManyOutletInputEnvelope
    connect?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
  }

  export type StockMovementUncheckedCreateNestedManyWithoutOutletInput = {
    create?: XOR<StockMovementCreateWithoutOutletInput, StockMovementUncheckedCreateWithoutOutletInput> | StockMovementCreateWithoutOutletInput[] | StockMovementUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StockMovementCreateOrConnectWithoutOutletInput | StockMovementCreateOrConnectWithoutOutletInput[]
    createMany?: StockMovementCreateManyOutletInputEnvelope
    connect?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
  }

  export type StockSnapshotUncheckedCreateNestedManyWithoutOutletInput = {
    create?: XOR<StockSnapshotCreateWithoutOutletInput, StockSnapshotUncheckedCreateWithoutOutletInput> | StockSnapshotCreateWithoutOutletInput[] | StockSnapshotUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StockSnapshotCreateOrConnectWithoutOutletInput | StockSnapshotCreateOrConnectWithoutOutletInput[]
    createMany?: StockSnapshotCreateManyOutletInputEnvelope
    connect?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
  }

  export type StockReceiptUncheckedCreateNestedManyWithoutOutletInput = {
    create?: XOR<StockReceiptCreateWithoutOutletInput, StockReceiptUncheckedCreateWithoutOutletInput> | StockReceiptCreateWithoutOutletInput[] | StockReceiptUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StockReceiptCreateOrConnectWithoutOutletInput | StockReceiptCreateOrConnectWithoutOutletInput[]
    createMany?: StockReceiptCreateManyOutletInputEnvelope
    connect?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
  }

  export type SettingUncheckedCreateNestedManyWithoutOutletInput = {
    create?: XOR<SettingCreateWithoutOutletInput, SettingUncheckedCreateWithoutOutletInput> | SettingCreateWithoutOutletInput[] | SettingUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: SettingCreateOrConnectWithoutOutletInput | SettingCreateOrConnectWithoutOutletInput[]
    createMany?: SettingCreateManyOutletInputEnvelope
    connect?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
  }

  export type TableUncheckedCreateNestedManyWithoutOutletInput = {
    create?: XOR<TableCreateWithoutOutletInput, TableUncheckedCreateWithoutOutletInput> | TableCreateWithoutOutletInput[] | TableUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: TableCreateOrConnectWithoutOutletInput | TableCreateOrConnectWithoutOutletInput[]
    createMany?: TableCreateManyOutletInputEnvelope
    connect?: TableWhereUniqueInput | TableWhereUniqueInput[]
  }

  export type StationUncheckedCreateNestedManyWithoutOutletInput = {
    create?: XOR<StationCreateWithoutOutletInput, StationUncheckedCreateWithoutOutletInput> | StationCreateWithoutOutletInput[] | StationUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StationCreateOrConnectWithoutOutletInput | StationCreateOrConnectWithoutOutletInput[]
    createMany?: StationCreateManyOutletInputEnvelope
    connect?: StationWhereUniqueInput | StationWhereUniqueInput[]
  }

  export type ReservationUncheckedCreateNestedManyWithoutOutletInput = {
    create?: XOR<ReservationCreateWithoutOutletInput, ReservationUncheckedCreateWithoutOutletInput> | ReservationCreateWithoutOutletInput[] | ReservationUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutOutletInput | ReservationCreateOrConnectWithoutOutletInput[]
    createMany?: ReservationCreateManyOutletInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type WaitlistUncheckedCreateNestedManyWithoutOutletInput = {
    create?: XOR<WaitlistCreateWithoutOutletInput, WaitlistUncheckedCreateWithoutOutletInput> | WaitlistCreateWithoutOutletInput[] | WaitlistUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: WaitlistCreateOrConnectWithoutOutletInput | WaitlistCreateOrConnectWithoutOutletInput[]
    createMany?: WaitlistCreateManyOutletInputEnvelope
    connect?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
  }

  export type StockBalanceUpdateManyWithoutOutletNestedInput = {
    create?: XOR<StockBalanceCreateWithoutOutletInput, StockBalanceUncheckedCreateWithoutOutletInput> | StockBalanceCreateWithoutOutletInput[] | StockBalanceUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StockBalanceCreateOrConnectWithoutOutletInput | StockBalanceCreateOrConnectWithoutOutletInput[]
    upsert?: StockBalanceUpsertWithWhereUniqueWithoutOutletInput | StockBalanceUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: StockBalanceCreateManyOutletInputEnvelope
    set?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
    disconnect?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
    delete?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
    connect?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
    update?: StockBalanceUpdateWithWhereUniqueWithoutOutletInput | StockBalanceUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: StockBalanceUpdateManyWithWhereWithoutOutletInput | StockBalanceUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: StockBalanceScalarWhereInput | StockBalanceScalarWhereInput[]
  }

  export type StockMovementUpdateManyWithoutOutletNestedInput = {
    create?: XOR<StockMovementCreateWithoutOutletInput, StockMovementUncheckedCreateWithoutOutletInput> | StockMovementCreateWithoutOutletInput[] | StockMovementUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StockMovementCreateOrConnectWithoutOutletInput | StockMovementCreateOrConnectWithoutOutletInput[]
    upsert?: StockMovementUpsertWithWhereUniqueWithoutOutletInput | StockMovementUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: StockMovementCreateManyOutletInputEnvelope
    set?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
    disconnect?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
    delete?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
    connect?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
    update?: StockMovementUpdateWithWhereUniqueWithoutOutletInput | StockMovementUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: StockMovementUpdateManyWithWhereWithoutOutletInput | StockMovementUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: StockMovementScalarWhereInput | StockMovementScalarWhereInput[]
  }

  export type StockSnapshotUpdateManyWithoutOutletNestedInput = {
    create?: XOR<StockSnapshotCreateWithoutOutletInput, StockSnapshotUncheckedCreateWithoutOutletInput> | StockSnapshotCreateWithoutOutletInput[] | StockSnapshotUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StockSnapshotCreateOrConnectWithoutOutletInput | StockSnapshotCreateOrConnectWithoutOutletInput[]
    upsert?: StockSnapshotUpsertWithWhereUniqueWithoutOutletInput | StockSnapshotUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: StockSnapshotCreateManyOutletInputEnvelope
    set?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
    disconnect?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
    delete?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
    connect?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
    update?: StockSnapshotUpdateWithWhereUniqueWithoutOutletInput | StockSnapshotUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: StockSnapshotUpdateManyWithWhereWithoutOutletInput | StockSnapshotUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: StockSnapshotScalarWhereInput | StockSnapshotScalarWhereInput[]
  }

  export type StockReceiptUpdateManyWithoutOutletNestedInput = {
    create?: XOR<StockReceiptCreateWithoutOutletInput, StockReceiptUncheckedCreateWithoutOutletInput> | StockReceiptCreateWithoutOutletInput[] | StockReceiptUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StockReceiptCreateOrConnectWithoutOutletInput | StockReceiptCreateOrConnectWithoutOutletInput[]
    upsert?: StockReceiptUpsertWithWhereUniqueWithoutOutletInput | StockReceiptUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: StockReceiptCreateManyOutletInputEnvelope
    set?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
    disconnect?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
    delete?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
    connect?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
    update?: StockReceiptUpdateWithWhereUniqueWithoutOutletInput | StockReceiptUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: StockReceiptUpdateManyWithWhereWithoutOutletInput | StockReceiptUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: StockReceiptScalarWhereInput | StockReceiptScalarWhereInput[]
  }

  export type SettingUpdateManyWithoutOutletNestedInput = {
    create?: XOR<SettingCreateWithoutOutletInput, SettingUncheckedCreateWithoutOutletInput> | SettingCreateWithoutOutletInput[] | SettingUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: SettingCreateOrConnectWithoutOutletInput | SettingCreateOrConnectWithoutOutletInput[]
    upsert?: SettingUpsertWithWhereUniqueWithoutOutletInput | SettingUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: SettingCreateManyOutletInputEnvelope
    set?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
    disconnect?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
    delete?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
    connect?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
    update?: SettingUpdateWithWhereUniqueWithoutOutletInput | SettingUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: SettingUpdateManyWithWhereWithoutOutletInput | SettingUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: SettingScalarWhereInput | SettingScalarWhereInput[]
  }

  export type TableUpdateManyWithoutOutletNestedInput = {
    create?: XOR<TableCreateWithoutOutletInput, TableUncheckedCreateWithoutOutletInput> | TableCreateWithoutOutletInput[] | TableUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: TableCreateOrConnectWithoutOutletInput | TableCreateOrConnectWithoutOutletInput[]
    upsert?: TableUpsertWithWhereUniqueWithoutOutletInput | TableUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: TableCreateManyOutletInputEnvelope
    set?: TableWhereUniqueInput | TableWhereUniqueInput[]
    disconnect?: TableWhereUniqueInput | TableWhereUniqueInput[]
    delete?: TableWhereUniqueInput | TableWhereUniqueInput[]
    connect?: TableWhereUniqueInput | TableWhereUniqueInput[]
    update?: TableUpdateWithWhereUniqueWithoutOutletInput | TableUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: TableUpdateManyWithWhereWithoutOutletInput | TableUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: TableScalarWhereInput | TableScalarWhereInput[]
  }

  export type StationUpdateManyWithoutOutletNestedInput = {
    create?: XOR<StationCreateWithoutOutletInput, StationUncheckedCreateWithoutOutletInput> | StationCreateWithoutOutletInput[] | StationUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StationCreateOrConnectWithoutOutletInput | StationCreateOrConnectWithoutOutletInput[]
    upsert?: StationUpsertWithWhereUniqueWithoutOutletInput | StationUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: StationCreateManyOutletInputEnvelope
    set?: StationWhereUniqueInput | StationWhereUniqueInput[]
    disconnect?: StationWhereUniqueInput | StationWhereUniqueInput[]
    delete?: StationWhereUniqueInput | StationWhereUniqueInput[]
    connect?: StationWhereUniqueInput | StationWhereUniqueInput[]
    update?: StationUpdateWithWhereUniqueWithoutOutletInput | StationUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: StationUpdateManyWithWhereWithoutOutletInput | StationUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: StationScalarWhereInput | StationScalarWhereInput[]
  }

  export type ReservationUpdateManyWithoutOutletNestedInput = {
    create?: XOR<ReservationCreateWithoutOutletInput, ReservationUncheckedCreateWithoutOutletInput> | ReservationCreateWithoutOutletInput[] | ReservationUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutOutletInput | ReservationCreateOrConnectWithoutOutletInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutOutletInput | ReservationUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: ReservationCreateManyOutletInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutOutletInput | ReservationUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutOutletInput | ReservationUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type WaitlistUpdateManyWithoutOutletNestedInput = {
    create?: XOR<WaitlistCreateWithoutOutletInput, WaitlistUncheckedCreateWithoutOutletInput> | WaitlistCreateWithoutOutletInput[] | WaitlistUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: WaitlistCreateOrConnectWithoutOutletInput | WaitlistCreateOrConnectWithoutOutletInput[]
    upsert?: WaitlistUpsertWithWhereUniqueWithoutOutletInput | WaitlistUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: WaitlistCreateManyOutletInputEnvelope
    set?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
    disconnect?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
    delete?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
    connect?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
    update?: WaitlistUpdateWithWhereUniqueWithoutOutletInput | WaitlistUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: WaitlistUpdateManyWithWhereWithoutOutletInput | WaitlistUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: WaitlistScalarWhereInput | WaitlistScalarWhereInput[]
  }

  export type StockBalanceUncheckedUpdateManyWithoutOutletNestedInput = {
    create?: XOR<StockBalanceCreateWithoutOutletInput, StockBalanceUncheckedCreateWithoutOutletInput> | StockBalanceCreateWithoutOutletInput[] | StockBalanceUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StockBalanceCreateOrConnectWithoutOutletInput | StockBalanceCreateOrConnectWithoutOutletInput[]
    upsert?: StockBalanceUpsertWithWhereUniqueWithoutOutletInput | StockBalanceUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: StockBalanceCreateManyOutletInputEnvelope
    set?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
    disconnect?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
    delete?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
    connect?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
    update?: StockBalanceUpdateWithWhereUniqueWithoutOutletInput | StockBalanceUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: StockBalanceUpdateManyWithWhereWithoutOutletInput | StockBalanceUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: StockBalanceScalarWhereInput | StockBalanceScalarWhereInput[]
  }

  export type StockMovementUncheckedUpdateManyWithoutOutletNestedInput = {
    create?: XOR<StockMovementCreateWithoutOutletInput, StockMovementUncheckedCreateWithoutOutletInput> | StockMovementCreateWithoutOutletInput[] | StockMovementUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StockMovementCreateOrConnectWithoutOutletInput | StockMovementCreateOrConnectWithoutOutletInput[]
    upsert?: StockMovementUpsertWithWhereUniqueWithoutOutletInput | StockMovementUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: StockMovementCreateManyOutletInputEnvelope
    set?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
    disconnect?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
    delete?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
    connect?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
    update?: StockMovementUpdateWithWhereUniqueWithoutOutletInput | StockMovementUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: StockMovementUpdateManyWithWhereWithoutOutletInput | StockMovementUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: StockMovementScalarWhereInput | StockMovementScalarWhereInput[]
  }

  export type StockSnapshotUncheckedUpdateManyWithoutOutletNestedInput = {
    create?: XOR<StockSnapshotCreateWithoutOutletInput, StockSnapshotUncheckedCreateWithoutOutletInput> | StockSnapshotCreateWithoutOutletInput[] | StockSnapshotUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StockSnapshotCreateOrConnectWithoutOutletInput | StockSnapshotCreateOrConnectWithoutOutletInput[]
    upsert?: StockSnapshotUpsertWithWhereUniqueWithoutOutletInput | StockSnapshotUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: StockSnapshotCreateManyOutletInputEnvelope
    set?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
    disconnect?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
    delete?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
    connect?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
    update?: StockSnapshotUpdateWithWhereUniqueWithoutOutletInput | StockSnapshotUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: StockSnapshotUpdateManyWithWhereWithoutOutletInput | StockSnapshotUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: StockSnapshotScalarWhereInput | StockSnapshotScalarWhereInput[]
  }

  export type StockReceiptUncheckedUpdateManyWithoutOutletNestedInput = {
    create?: XOR<StockReceiptCreateWithoutOutletInput, StockReceiptUncheckedCreateWithoutOutletInput> | StockReceiptCreateWithoutOutletInput[] | StockReceiptUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StockReceiptCreateOrConnectWithoutOutletInput | StockReceiptCreateOrConnectWithoutOutletInput[]
    upsert?: StockReceiptUpsertWithWhereUniqueWithoutOutletInput | StockReceiptUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: StockReceiptCreateManyOutletInputEnvelope
    set?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
    disconnect?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
    delete?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
    connect?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
    update?: StockReceiptUpdateWithWhereUniqueWithoutOutletInput | StockReceiptUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: StockReceiptUpdateManyWithWhereWithoutOutletInput | StockReceiptUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: StockReceiptScalarWhereInput | StockReceiptScalarWhereInput[]
  }

  export type SettingUncheckedUpdateManyWithoutOutletNestedInput = {
    create?: XOR<SettingCreateWithoutOutletInput, SettingUncheckedCreateWithoutOutletInput> | SettingCreateWithoutOutletInput[] | SettingUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: SettingCreateOrConnectWithoutOutletInput | SettingCreateOrConnectWithoutOutletInput[]
    upsert?: SettingUpsertWithWhereUniqueWithoutOutletInput | SettingUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: SettingCreateManyOutletInputEnvelope
    set?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
    disconnect?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
    delete?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
    connect?: SettingWhereUniqueInput | SettingWhereUniqueInput[]
    update?: SettingUpdateWithWhereUniqueWithoutOutletInput | SettingUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: SettingUpdateManyWithWhereWithoutOutletInput | SettingUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: SettingScalarWhereInput | SettingScalarWhereInput[]
  }

  export type TableUncheckedUpdateManyWithoutOutletNestedInput = {
    create?: XOR<TableCreateWithoutOutletInput, TableUncheckedCreateWithoutOutletInput> | TableCreateWithoutOutletInput[] | TableUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: TableCreateOrConnectWithoutOutletInput | TableCreateOrConnectWithoutOutletInput[]
    upsert?: TableUpsertWithWhereUniqueWithoutOutletInput | TableUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: TableCreateManyOutletInputEnvelope
    set?: TableWhereUniqueInput | TableWhereUniqueInput[]
    disconnect?: TableWhereUniqueInput | TableWhereUniqueInput[]
    delete?: TableWhereUniqueInput | TableWhereUniqueInput[]
    connect?: TableWhereUniqueInput | TableWhereUniqueInput[]
    update?: TableUpdateWithWhereUniqueWithoutOutletInput | TableUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: TableUpdateManyWithWhereWithoutOutletInput | TableUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: TableScalarWhereInput | TableScalarWhereInput[]
  }

  export type StationUncheckedUpdateManyWithoutOutletNestedInput = {
    create?: XOR<StationCreateWithoutOutletInput, StationUncheckedCreateWithoutOutletInput> | StationCreateWithoutOutletInput[] | StationUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: StationCreateOrConnectWithoutOutletInput | StationCreateOrConnectWithoutOutletInput[]
    upsert?: StationUpsertWithWhereUniqueWithoutOutletInput | StationUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: StationCreateManyOutletInputEnvelope
    set?: StationWhereUniqueInput | StationWhereUniqueInput[]
    disconnect?: StationWhereUniqueInput | StationWhereUniqueInput[]
    delete?: StationWhereUniqueInput | StationWhereUniqueInput[]
    connect?: StationWhereUniqueInput | StationWhereUniqueInput[]
    update?: StationUpdateWithWhereUniqueWithoutOutletInput | StationUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: StationUpdateManyWithWhereWithoutOutletInput | StationUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: StationScalarWhereInput | StationScalarWhereInput[]
  }

  export type ReservationUncheckedUpdateManyWithoutOutletNestedInput = {
    create?: XOR<ReservationCreateWithoutOutletInput, ReservationUncheckedCreateWithoutOutletInput> | ReservationCreateWithoutOutletInput[] | ReservationUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutOutletInput | ReservationCreateOrConnectWithoutOutletInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutOutletInput | ReservationUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: ReservationCreateManyOutletInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutOutletInput | ReservationUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutOutletInput | ReservationUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type WaitlistUncheckedUpdateManyWithoutOutletNestedInput = {
    create?: XOR<WaitlistCreateWithoutOutletInput, WaitlistUncheckedCreateWithoutOutletInput> | WaitlistCreateWithoutOutletInput[] | WaitlistUncheckedCreateWithoutOutletInput[]
    connectOrCreate?: WaitlistCreateOrConnectWithoutOutletInput | WaitlistCreateOrConnectWithoutOutletInput[]
    upsert?: WaitlistUpsertWithWhereUniqueWithoutOutletInput | WaitlistUpsertWithWhereUniqueWithoutOutletInput[]
    createMany?: WaitlistCreateManyOutletInputEnvelope
    set?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
    disconnect?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
    delete?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
    connect?: WaitlistWhereUniqueInput | WaitlistWhereUniqueInput[]
    update?: WaitlistUpdateWithWhereUniqueWithoutOutletInput | WaitlistUpdateWithWhereUniqueWithoutOutletInput[]
    updateMany?: WaitlistUpdateManyWithWhereWithoutOutletInput | WaitlistUpdateManyWithWhereWithoutOutletInput[]
    deleteMany?: WaitlistScalarWhereInput | WaitlistScalarWhereInput[]
  }

  export type CategoryCreateNestedOneWithoutItemsInput = {
    create?: XOR<CategoryCreateWithoutItemsInput, CategoryUncheckedCreateWithoutItemsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutItemsInput
    connect?: CategoryWhereUniqueInput
  }

  export type SupplierCreateNestedOneWithoutItemsInput = {
    create?: XOR<SupplierCreateWithoutItemsInput, SupplierUncheckedCreateWithoutItemsInput>
    connectOrCreate?: SupplierCreateOrConnectWithoutItemsInput
    connect?: SupplierWhereUniqueInput
  }

  export type StockBalanceCreateNestedManyWithoutItemInput = {
    create?: XOR<StockBalanceCreateWithoutItemInput, StockBalanceUncheckedCreateWithoutItemInput> | StockBalanceCreateWithoutItemInput[] | StockBalanceUncheckedCreateWithoutItemInput[]
    connectOrCreate?: StockBalanceCreateOrConnectWithoutItemInput | StockBalanceCreateOrConnectWithoutItemInput[]
    createMany?: StockBalanceCreateManyItemInputEnvelope
    connect?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
  }

  export type StockMovementCreateNestedManyWithoutItemInput = {
    create?: XOR<StockMovementCreateWithoutItemInput, StockMovementUncheckedCreateWithoutItemInput> | StockMovementCreateWithoutItemInput[] | StockMovementUncheckedCreateWithoutItemInput[]
    connectOrCreate?: StockMovementCreateOrConnectWithoutItemInput | StockMovementCreateOrConnectWithoutItemInput[]
    createMany?: StockMovementCreateManyItemInputEnvelope
    connect?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
  }

  export type StockSnapshotCreateNestedManyWithoutItemInput = {
    create?: XOR<StockSnapshotCreateWithoutItemInput, StockSnapshotUncheckedCreateWithoutItemInput> | StockSnapshotCreateWithoutItemInput[] | StockSnapshotUncheckedCreateWithoutItemInput[]
    connectOrCreate?: StockSnapshotCreateOrConnectWithoutItemInput | StockSnapshotCreateOrConnectWithoutItemInput[]
    createMany?: StockSnapshotCreateManyItemInputEnvelope
    connect?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
  }

  export type StockReceiptCreateNestedManyWithoutItemInput = {
    create?: XOR<StockReceiptCreateWithoutItemInput, StockReceiptUncheckedCreateWithoutItemInput> | StockReceiptCreateWithoutItemInput[] | StockReceiptUncheckedCreateWithoutItemInput[]
    connectOrCreate?: StockReceiptCreateOrConnectWithoutItemInput | StockReceiptCreateOrConnectWithoutItemInput[]
    createMany?: StockReceiptCreateManyItemInputEnvelope
    connect?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
  }

  export type RecipeCreateNestedManyWithoutItemInput = {
    create?: XOR<RecipeCreateWithoutItemInput, RecipeUncheckedCreateWithoutItemInput> | RecipeCreateWithoutItemInput[] | RecipeUncheckedCreateWithoutItemInput[]
    connectOrCreate?: RecipeCreateOrConnectWithoutItemInput | RecipeCreateOrConnectWithoutItemInput[]
    createMany?: RecipeCreateManyItemInputEnvelope
    connect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
  }

  export type PurchaseOrderItemCreateNestedManyWithoutItemInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutItemInput, PurchaseOrderItemUncheckedCreateWithoutItemInput> | PurchaseOrderItemCreateWithoutItemInput[] | PurchaseOrderItemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutItemInput | PurchaseOrderItemCreateOrConnectWithoutItemInput[]
    createMany?: PurchaseOrderItemCreateManyItemInputEnvelope
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
  }

  export type DeliveryOrderItemCreateNestedManyWithoutItemInput = {
    create?: XOR<DeliveryOrderItemCreateWithoutItemInput, DeliveryOrderItemUncheckedCreateWithoutItemInput> | DeliveryOrderItemCreateWithoutItemInput[] | DeliveryOrderItemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: DeliveryOrderItemCreateOrConnectWithoutItemInput | DeliveryOrderItemCreateOrConnectWithoutItemInput[]
    createMany?: DeliveryOrderItemCreateManyItemInputEnvelope
    connect?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
  }

  export type InvoiceItemCreateNestedManyWithoutItemInput = {
    create?: XOR<InvoiceItemCreateWithoutItemInput, InvoiceItemUncheckedCreateWithoutItemInput> | InvoiceItemCreateWithoutItemInput[] | InvoiceItemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: InvoiceItemCreateOrConnectWithoutItemInput | InvoiceItemCreateOrConnectWithoutItemInput[]
    createMany?: InvoiceItemCreateManyItemInputEnvelope
    connect?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
  }

  export type StockBalanceUncheckedCreateNestedManyWithoutItemInput = {
    create?: XOR<StockBalanceCreateWithoutItemInput, StockBalanceUncheckedCreateWithoutItemInput> | StockBalanceCreateWithoutItemInput[] | StockBalanceUncheckedCreateWithoutItemInput[]
    connectOrCreate?: StockBalanceCreateOrConnectWithoutItemInput | StockBalanceCreateOrConnectWithoutItemInput[]
    createMany?: StockBalanceCreateManyItemInputEnvelope
    connect?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
  }

  export type StockMovementUncheckedCreateNestedManyWithoutItemInput = {
    create?: XOR<StockMovementCreateWithoutItemInput, StockMovementUncheckedCreateWithoutItemInput> | StockMovementCreateWithoutItemInput[] | StockMovementUncheckedCreateWithoutItemInput[]
    connectOrCreate?: StockMovementCreateOrConnectWithoutItemInput | StockMovementCreateOrConnectWithoutItemInput[]
    createMany?: StockMovementCreateManyItemInputEnvelope
    connect?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
  }

  export type StockSnapshotUncheckedCreateNestedManyWithoutItemInput = {
    create?: XOR<StockSnapshotCreateWithoutItemInput, StockSnapshotUncheckedCreateWithoutItemInput> | StockSnapshotCreateWithoutItemInput[] | StockSnapshotUncheckedCreateWithoutItemInput[]
    connectOrCreate?: StockSnapshotCreateOrConnectWithoutItemInput | StockSnapshotCreateOrConnectWithoutItemInput[]
    createMany?: StockSnapshotCreateManyItemInputEnvelope
    connect?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
  }

  export type StockReceiptUncheckedCreateNestedManyWithoutItemInput = {
    create?: XOR<StockReceiptCreateWithoutItemInput, StockReceiptUncheckedCreateWithoutItemInput> | StockReceiptCreateWithoutItemInput[] | StockReceiptUncheckedCreateWithoutItemInput[]
    connectOrCreate?: StockReceiptCreateOrConnectWithoutItemInput | StockReceiptCreateOrConnectWithoutItemInput[]
    createMany?: StockReceiptCreateManyItemInputEnvelope
    connect?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
  }

  export type RecipeUncheckedCreateNestedManyWithoutItemInput = {
    create?: XOR<RecipeCreateWithoutItemInput, RecipeUncheckedCreateWithoutItemInput> | RecipeCreateWithoutItemInput[] | RecipeUncheckedCreateWithoutItemInput[]
    connectOrCreate?: RecipeCreateOrConnectWithoutItemInput | RecipeCreateOrConnectWithoutItemInput[]
    createMany?: RecipeCreateManyItemInputEnvelope
    connect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
  }

  export type PurchaseOrderItemUncheckedCreateNestedManyWithoutItemInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutItemInput, PurchaseOrderItemUncheckedCreateWithoutItemInput> | PurchaseOrderItemCreateWithoutItemInput[] | PurchaseOrderItemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutItemInput | PurchaseOrderItemCreateOrConnectWithoutItemInput[]
    createMany?: PurchaseOrderItemCreateManyItemInputEnvelope
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
  }

  export type DeliveryOrderItemUncheckedCreateNestedManyWithoutItemInput = {
    create?: XOR<DeliveryOrderItemCreateWithoutItemInput, DeliveryOrderItemUncheckedCreateWithoutItemInput> | DeliveryOrderItemCreateWithoutItemInput[] | DeliveryOrderItemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: DeliveryOrderItemCreateOrConnectWithoutItemInput | DeliveryOrderItemCreateOrConnectWithoutItemInput[]
    createMany?: DeliveryOrderItemCreateManyItemInputEnvelope
    connect?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
  }

  export type InvoiceItemUncheckedCreateNestedManyWithoutItemInput = {
    create?: XOR<InvoiceItemCreateWithoutItemInput, InvoiceItemUncheckedCreateWithoutItemInput> | InvoiceItemCreateWithoutItemInput[] | InvoiceItemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: InvoiceItemCreateOrConnectWithoutItemInput | InvoiceItemCreateOrConnectWithoutItemInput[]
    createMany?: InvoiceItemCreateManyItemInputEnvelope
    connect?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CategoryUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<CategoryCreateWithoutItemsInput, CategoryUncheckedCreateWithoutItemsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutItemsInput
    upsert?: CategoryUpsertWithoutItemsInput
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutItemsInput, CategoryUpdateWithoutItemsInput>, CategoryUncheckedUpdateWithoutItemsInput>
  }

  export type SupplierUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<SupplierCreateWithoutItemsInput, SupplierUncheckedCreateWithoutItemsInput>
    connectOrCreate?: SupplierCreateOrConnectWithoutItemsInput
    upsert?: SupplierUpsertWithoutItemsInput
    connect?: SupplierWhereUniqueInput
    update?: XOR<XOR<SupplierUpdateToOneWithWhereWithoutItemsInput, SupplierUpdateWithoutItemsInput>, SupplierUncheckedUpdateWithoutItemsInput>
  }

  export type StockBalanceUpdateManyWithoutItemNestedInput = {
    create?: XOR<StockBalanceCreateWithoutItemInput, StockBalanceUncheckedCreateWithoutItemInput> | StockBalanceCreateWithoutItemInput[] | StockBalanceUncheckedCreateWithoutItemInput[]
    connectOrCreate?: StockBalanceCreateOrConnectWithoutItemInput | StockBalanceCreateOrConnectWithoutItemInput[]
    upsert?: StockBalanceUpsertWithWhereUniqueWithoutItemInput | StockBalanceUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: StockBalanceCreateManyItemInputEnvelope
    set?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
    disconnect?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
    delete?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
    connect?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
    update?: StockBalanceUpdateWithWhereUniqueWithoutItemInput | StockBalanceUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: StockBalanceUpdateManyWithWhereWithoutItemInput | StockBalanceUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: StockBalanceScalarWhereInput | StockBalanceScalarWhereInput[]
  }

  export type StockMovementUpdateManyWithoutItemNestedInput = {
    create?: XOR<StockMovementCreateWithoutItemInput, StockMovementUncheckedCreateWithoutItemInput> | StockMovementCreateWithoutItemInput[] | StockMovementUncheckedCreateWithoutItemInput[]
    connectOrCreate?: StockMovementCreateOrConnectWithoutItemInput | StockMovementCreateOrConnectWithoutItemInput[]
    upsert?: StockMovementUpsertWithWhereUniqueWithoutItemInput | StockMovementUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: StockMovementCreateManyItemInputEnvelope
    set?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
    disconnect?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
    delete?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
    connect?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
    update?: StockMovementUpdateWithWhereUniqueWithoutItemInput | StockMovementUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: StockMovementUpdateManyWithWhereWithoutItemInput | StockMovementUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: StockMovementScalarWhereInput | StockMovementScalarWhereInput[]
  }

  export type StockSnapshotUpdateManyWithoutItemNestedInput = {
    create?: XOR<StockSnapshotCreateWithoutItemInput, StockSnapshotUncheckedCreateWithoutItemInput> | StockSnapshotCreateWithoutItemInput[] | StockSnapshotUncheckedCreateWithoutItemInput[]
    connectOrCreate?: StockSnapshotCreateOrConnectWithoutItemInput | StockSnapshotCreateOrConnectWithoutItemInput[]
    upsert?: StockSnapshotUpsertWithWhereUniqueWithoutItemInput | StockSnapshotUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: StockSnapshotCreateManyItemInputEnvelope
    set?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
    disconnect?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
    delete?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
    connect?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
    update?: StockSnapshotUpdateWithWhereUniqueWithoutItemInput | StockSnapshotUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: StockSnapshotUpdateManyWithWhereWithoutItemInput | StockSnapshotUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: StockSnapshotScalarWhereInput | StockSnapshotScalarWhereInput[]
  }

  export type StockReceiptUpdateManyWithoutItemNestedInput = {
    create?: XOR<StockReceiptCreateWithoutItemInput, StockReceiptUncheckedCreateWithoutItemInput> | StockReceiptCreateWithoutItemInput[] | StockReceiptUncheckedCreateWithoutItemInput[]
    connectOrCreate?: StockReceiptCreateOrConnectWithoutItemInput | StockReceiptCreateOrConnectWithoutItemInput[]
    upsert?: StockReceiptUpsertWithWhereUniqueWithoutItemInput | StockReceiptUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: StockReceiptCreateManyItemInputEnvelope
    set?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
    disconnect?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
    delete?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
    connect?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
    update?: StockReceiptUpdateWithWhereUniqueWithoutItemInput | StockReceiptUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: StockReceiptUpdateManyWithWhereWithoutItemInput | StockReceiptUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: StockReceiptScalarWhereInput | StockReceiptScalarWhereInput[]
  }

  export type RecipeUpdateManyWithoutItemNestedInput = {
    create?: XOR<RecipeCreateWithoutItemInput, RecipeUncheckedCreateWithoutItemInput> | RecipeCreateWithoutItemInput[] | RecipeUncheckedCreateWithoutItemInput[]
    connectOrCreate?: RecipeCreateOrConnectWithoutItemInput | RecipeCreateOrConnectWithoutItemInput[]
    upsert?: RecipeUpsertWithWhereUniqueWithoutItemInput | RecipeUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: RecipeCreateManyItemInputEnvelope
    set?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    disconnect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    delete?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    connect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    update?: RecipeUpdateWithWhereUniqueWithoutItemInput | RecipeUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: RecipeUpdateManyWithWhereWithoutItemInput | RecipeUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: RecipeScalarWhereInput | RecipeScalarWhereInput[]
  }

  export type PurchaseOrderItemUpdateManyWithoutItemNestedInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutItemInput, PurchaseOrderItemUncheckedCreateWithoutItemInput> | PurchaseOrderItemCreateWithoutItemInput[] | PurchaseOrderItemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutItemInput | PurchaseOrderItemCreateOrConnectWithoutItemInput[]
    upsert?: PurchaseOrderItemUpsertWithWhereUniqueWithoutItemInput | PurchaseOrderItemUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: PurchaseOrderItemCreateManyItemInputEnvelope
    set?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    disconnect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    delete?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    update?: PurchaseOrderItemUpdateWithWhereUniqueWithoutItemInput | PurchaseOrderItemUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: PurchaseOrderItemUpdateManyWithWhereWithoutItemInput | PurchaseOrderItemUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: PurchaseOrderItemScalarWhereInput | PurchaseOrderItemScalarWhereInput[]
  }

  export type DeliveryOrderItemUpdateManyWithoutItemNestedInput = {
    create?: XOR<DeliveryOrderItemCreateWithoutItemInput, DeliveryOrderItemUncheckedCreateWithoutItemInput> | DeliveryOrderItemCreateWithoutItemInput[] | DeliveryOrderItemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: DeliveryOrderItemCreateOrConnectWithoutItemInput | DeliveryOrderItemCreateOrConnectWithoutItemInput[]
    upsert?: DeliveryOrderItemUpsertWithWhereUniqueWithoutItemInput | DeliveryOrderItemUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: DeliveryOrderItemCreateManyItemInputEnvelope
    set?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
    disconnect?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
    delete?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
    connect?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
    update?: DeliveryOrderItemUpdateWithWhereUniqueWithoutItemInput | DeliveryOrderItemUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: DeliveryOrderItemUpdateManyWithWhereWithoutItemInput | DeliveryOrderItemUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: DeliveryOrderItemScalarWhereInput | DeliveryOrderItemScalarWhereInput[]
  }

  export type InvoiceItemUpdateManyWithoutItemNestedInput = {
    create?: XOR<InvoiceItemCreateWithoutItemInput, InvoiceItemUncheckedCreateWithoutItemInput> | InvoiceItemCreateWithoutItemInput[] | InvoiceItemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: InvoiceItemCreateOrConnectWithoutItemInput | InvoiceItemCreateOrConnectWithoutItemInput[]
    upsert?: InvoiceItemUpsertWithWhereUniqueWithoutItemInput | InvoiceItemUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: InvoiceItemCreateManyItemInputEnvelope
    set?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
    disconnect?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
    delete?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
    connect?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
    update?: InvoiceItemUpdateWithWhereUniqueWithoutItemInput | InvoiceItemUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: InvoiceItemUpdateManyWithWhereWithoutItemInput | InvoiceItemUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: InvoiceItemScalarWhereInput | InvoiceItemScalarWhereInput[]
  }

  export type StockBalanceUncheckedUpdateManyWithoutItemNestedInput = {
    create?: XOR<StockBalanceCreateWithoutItemInput, StockBalanceUncheckedCreateWithoutItemInput> | StockBalanceCreateWithoutItemInput[] | StockBalanceUncheckedCreateWithoutItemInput[]
    connectOrCreate?: StockBalanceCreateOrConnectWithoutItemInput | StockBalanceCreateOrConnectWithoutItemInput[]
    upsert?: StockBalanceUpsertWithWhereUniqueWithoutItemInput | StockBalanceUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: StockBalanceCreateManyItemInputEnvelope
    set?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
    disconnect?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
    delete?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
    connect?: StockBalanceWhereUniqueInput | StockBalanceWhereUniqueInput[]
    update?: StockBalanceUpdateWithWhereUniqueWithoutItemInput | StockBalanceUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: StockBalanceUpdateManyWithWhereWithoutItemInput | StockBalanceUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: StockBalanceScalarWhereInput | StockBalanceScalarWhereInput[]
  }

  export type StockMovementUncheckedUpdateManyWithoutItemNestedInput = {
    create?: XOR<StockMovementCreateWithoutItemInput, StockMovementUncheckedCreateWithoutItemInput> | StockMovementCreateWithoutItemInput[] | StockMovementUncheckedCreateWithoutItemInput[]
    connectOrCreate?: StockMovementCreateOrConnectWithoutItemInput | StockMovementCreateOrConnectWithoutItemInput[]
    upsert?: StockMovementUpsertWithWhereUniqueWithoutItemInput | StockMovementUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: StockMovementCreateManyItemInputEnvelope
    set?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
    disconnect?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
    delete?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
    connect?: StockMovementWhereUniqueInput | StockMovementWhereUniqueInput[]
    update?: StockMovementUpdateWithWhereUniqueWithoutItemInput | StockMovementUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: StockMovementUpdateManyWithWhereWithoutItemInput | StockMovementUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: StockMovementScalarWhereInput | StockMovementScalarWhereInput[]
  }

  export type StockSnapshotUncheckedUpdateManyWithoutItemNestedInput = {
    create?: XOR<StockSnapshotCreateWithoutItemInput, StockSnapshotUncheckedCreateWithoutItemInput> | StockSnapshotCreateWithoutItemInput[] | StockSnapshotUncheckedCreateWithoutItemInput[]
    connectOrCreate?: StockSnapshotCreateOrConnectWithoutItemInput | StockSnapshotCreateOrConnectWithoutItemInput[]
    upsert?: StockSnapshotUpsertWithWhereUniqueWithoutItemInput | StockSnapshotUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: StockSnapshotCreateManyItemInputEnvelope
    set?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
    disconnect?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
    delete?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
    connect?: StockSnapshotWhereUniqueInput | StockSnapshotWhereUniqueInput[]
    update?: StockSnapshotUpdateWithWhereUniqueWithoutItemInput | StockSnapshotUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: StockSnapshotUpdateManyWithWhereWithoutItemInput | StockSnapshotUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: StockSnapshotScalarWhereInput | StockSnapshotScalarWhereInput[]
  }

  export type StockReceiptUncheckedUpdateManyWithoutItemNestedInput = {
    create?: XOR<StockReceiptCreateWithoutItemInput, StockReceiptUncheckedCreateWithoutItemInput> | StockReceiptCreateWithoutItemInput[] | StockReceiptUncheckedCreateWithoutItemInput[]
    connectOrCreate?: StockReceiptCreateOrConnectWithoutItemInput | StockReceiptCreateOrConnectWithoutItemInput[]
    upsert?: StockReceiptUpsertWithWhereUniqueWithoutItemInput | StockReceiptUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: StockReceiptCreateManyItemInputEnvelope
    set?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
    disconnect?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
    delete?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
    connect?: StockReceiptWhereUniqueInput | StockReceiptWhereUniqueInput[]
    update?: StockReceiptUpdateWithWhereUniqueWithoutItemInput | StockReceiptUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: StockReceiptUpdateManyWithWhereWithoutItemInput | StockReceiptUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: StockReceiptScalarWhereInput | StockReceiptScalarWhereInput[]
  }

  export type RecipeUncheckedUpdateManyWithoutItemNestedInput = {
    create?: XOR<RecipeCreateWithoutItemInput, RecipeUncheckedCreateWithoutItemInput> | RecipeCreateWithoutItemInput[] | RecipeUncheckedCreateWithoutItemInput[]
    connectOrCreate?: RecipeCreateOrConnectWithoutItemInput | RecipeCreateOrConnectWithoutItemInput[]
    upsert?: RecipeUpsertWithWhereUniqueWithoutItemInput | RecipeUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: RecipeCreateManyItemInputEnvelope
    set?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    disconnect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    delete?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    connect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    update?: RecipeUpdateWithWhereUniqueWithoutItemInput | RecipeUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: RecipeUpdateManyWithWhereWithoutItemInput | RecipeUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: RecipeScalarWhereInput | RecipeScalarWhereInput[]
  }

  export type PurchaseOrderItemUncheckedUpdateManyWithoutItemNestedInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutItemInput, PurchaseOrderItemUncheckedCreateWithoutItemInput> | PurchaseOrderItemCreateWithoutItemInput[] | PurchaseOrderItemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutItemInput | PurchaseOrderItemCreateOrConnectWithoutItemInput[]
    upsert?: PurchaseOrderItemUpsertWithWhereUniqueWithoutItemInput | PurchaseOrderItemUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: PurchaseOrderItemCreateManyItemInputEnvelope
    set?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    disconnect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    delete?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    update?: PurchaseOrderItemUpdateWithWhereUniqueWithoutItemInput | PurchaseOrderItemUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: PurchaseOrderItemUpdateManyWithWhereWithoutItemInput | PurchaseOrderItemUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: PurchaseOrderItemScalarWhereInput | PurchaseOrderItemScalarWhereInput[]
  }

  export type DeliveryOrderItemUncheckedUpdateManyWithoutItemNestedInput = {
    create?: XOR<DeliveryOrderItemCreateWithoutItemInput, DeliveryOrderItemUncheckedCreateWithoutItemInput> | DeliveryOrderItemCreateWithoutItemInput[] | DeliveryOrderItemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: DeliveryOrderItemCreateOrConnectWithoutItemInput | DeliveryOrderItemCreateOrConnectWithoutItemInput[]
    upsert?: DeliveryOrderItemUpsertWithWhereUniqueWithoutItemInput | DeliveryOrderItemUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: DeliveryOrderItemCreateManyItemInputEnvelope
    set?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
    disconnect?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
    delete?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
    connect?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
    update?: DeliveryOrderItemUpdateWithWhereUniqueWithoutItemInput | DeliveryOrderItemUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: DeliveryOrderItemUpdateManyWithWhereWithoutItemInput | DeliveryOrderItemUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: DeliveryOrderItemScalarWhereInput | DeliveryOrderItemScalarWhereInput[]
  }

  export type InvoiceItemUncheckedUpdateManyWithoutItemNestedInput = {
    create?: XOR<InvoiceItemCreateWithoutItemInput, InvoiceItemUncheckedCreateWithoutItemInput> | InvoiceItemCreateWithoutItemInput[] | InvoiceItemUncheckedCreateWithoutItemInput[]
    connectOrCreate?: InvoiceItemCreateOrConnectWithoutItemInput | InvoiceItemCreateOrConnectWithoutItemInput[]
    upsert?: InvoiceItemUpsertWithWhereUniqueWithoutItemInput | InvoiceItemUpsertWithWhereUniqueWithoutItemInput[]
    createMany?: InvoiceItemCreateManyItemInputEnvelope
    set?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
    disconnect?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
    delete?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
    connect?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
    update?: InvoiceItemUpdateWithWhereUniqueWithoutItemInput | InvoiceItemUpdateWithWhereUniqueWithoutItemInput[]
    updateMany?: InvoiceItemUpdateManyWithWhereWithoutItemInput | InvoiceItemUpdateManyWithWhereWithoutItemInput[]
    deleteMany?: InvoiceItemScalarWhereInput | InvoiceItemScalarWhereInput[]
  }

  export type ItemCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ItemCreateWithoutCategoryInput, ItemUncheckedCreateWithoutCategoryInput> | ItemCreateWithoutCategoryInput[] | ItemUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutCategoryInput | ItemCreateOrConnectWithoutCategoryInput[]
    createMany?: ItemCreateManyCategoryInputEnvelope
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
  }

  export type ItemUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ItemCreateWithoutCategoryInput, ItemUncheckedCreateWithoutCategoryInput> | ItemCreateWithoutCategoryInput[] | ItemUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutCategoryInput | ItemCreateOrConnectWithoutCategoryInput[]
    createMany?: ItemCreateManyCategoryInputEnvelope
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
  }

  export type ItemUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ItemCreateWithoutCategoryInput, ItemUncheckedCreateWithoutCategoryInput> | ItemCreateWithoutCategoryInput[] | ItemUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutCategoryInput | ItemCreateOrConnectWithoutCategoryInput[]
    upsert?: ItemUpsertWithWhereUniqueWithoutCategoryInput | ItemUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ItemCreateManyCategoryInputEnvelope
    set?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    disconnect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    delete?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    update?: ItemUpdateWithWhereUniqueWithoutCategoryInput | ItemUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ItemUpdateManyWithWhereWithoutCategoryInput | ItemUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ItemScalarWhereInput | ItemScalarWhereInput[]
  }

  export type ItemUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ItemCreateWithoutCategoryInput, ItemUncheckedCreateWithoutCategoryInput> | ItemCreateWithoutCategoryInput[] | ItemUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ItemCreateOrConnectWithoutCategoryInput | ItemCreateOrConnectWithoutCategoryInput[]
    upsert?: ItemUpsertWithWhereUniqueWithoutCategoryInput | ItemUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ItemCreateManyCategoryInputEnvelope
    set?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    disconnect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    delete?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    connect?: ItemWhereUniqueInput | ItemWhereUniqueInput[]
    update?: ItemUpdateWithWhereUniqueWithoutCategoryInput | ItemUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ItemUpdateManyWithWhereWithoutCategoryInput | ItemUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ItemScalarWhereInput | ItemScalarWhereInput[]
  }

  export type SalesItemCreateNestedManyWithoutSalesInput = {
    create?: XOR<SalesItemCreateWithoutSalesInput, SalesItemUncheckedCreateWithoutSalesInput> | SalesItemCreateWithoutSalesInput[] | SalesItemUncheckedCreateWithoutSalesInput[]
    connectOrCreate?: SalesItemCreateOrConnectWithoutSalesInput | SalesItemCreateOrConnectWithoutSalesInput[]
    createMany?: SalesItemCreateManySalesInputEnvelope
    connect?: SalesItemWhereUniqueInput | SalesItemWhereUniqueInput[]
  }

  export type PaymentCreateNestedManyWithoutSalesInput = {
    create?: XOR<PaymentCreateWithoutSalesInput, PaymentUncheckedCreateWithoutSalesInput> | PaymentCreateWithoutSalesInput[] | PaymentUncheckedCreateWithoutSalesInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutSalesInput | PaymentCreateOrConnectWithoutSalesInput[]
    createMany?: PaymentCreateManySalesInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type RegisterLogCreateNestedManyWithoutSalesInput = {
    create?: XOR<RegisterLogCreateWithoutSalesInput, RegisterLogUncheckedCreateWithoutSalesInput> | RegisterLogCreateWithoutSalesInput[] | RegisterLogUncheckedCreateWithoutSalesInput[]
    connectOrCreate?: RegisterLogCreateOrConnectWithoutSalesInput | RegisterLogCreateOrConnectWithoutSalesInput[]
    createMany?: RegisterLogCreateManySalesInputEnvelope
    connect?: RegisterLogWhereUniqueInput | RegisterLogWhereUniqueInput[]
  }

  export type CustomerCreateNestedOneWithoutSalesInput = {
    create?: XOR<CustomerCreateWithoutSalesInput, CustomerUncheckedCreateWithoutSalesInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutSalesInput
    connect?: CustomerWhereUniqueInput
  }

  export type TableCreateNestedOneWithoutSalesInput = {
    create?: XOR<TableCreateWithoutSalesInput, TableUncheckedCreateWithoutSalesInput>
    connectOrCreate?: TableCreateOrConnectWithoutSalesInput
    connect?: TableWhereUniqueInput
  }

  export type SalesItemUncheckedCreateNestedManyWithoutSalesInput = {
    create?: XOR<SalesItemCreateWithoutSalesInput, SalesItemUncheckedCreateWithoutSalesInput> | SalesItemCreateWithoutSalesInput[] | SalesItemUncheckedCreateWithoutSalesInput[]
    connectOrCreate?: SalesItemCreateOrConnectWithoutSalesInput | SalesItemCreateOrConnectWithoutSalesInput[]
    createMany?: SalesItemCreateManySalesInputEnvelope
    connect?: SalesItemWhereUniqueInput | SalesItemWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutSalesInput = {
    create?: XOR<PaymentCreateWithoutSalesInput, PaymentUncheckedCreateWithoutSalesInput> | PaymentCreateWithoutSalesInput[] | PaymentUncheckedCreateWithoutSalesInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutSalesInput | PaymentCreateOrConnectWithoutSalesInput[]
    createMany?: PaymentCreateManySalesInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type RegisterLogUncheckedCreateNestedManyWithoutSalesInput = {
    create?: XOR<RegisterLogCreateWithoutSalesInput, RegisterLogUncheckedCreateWithoutSalesInput> | RegisterLogCreateWithoutSalesInput[] | RegisterLogUncheckedCreateWithoutSalesInput[]
    connectOrCreate?: RegisterLogCreateOrConnectWithoutSalesInput | RegisterLogCreateOrConnectWithoutSalesInput[]
    createMany?: RegisterLogCreateManySalesInputEnvelope
    connect?: RegisterLogWhereUniqueInput | RegisterLogWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type SalesItemUpdateManyWithoutSalesNestedInput = {
    create?: XOR<SalesItemCreateWithoutSalesInput, SalesItemUncheckedCreateWithoutSalesInput> | SalesItemCreateWithoutSalesInput[] | SalesItemUncheckedCreateWithoutSalesInput[]
    connectOrCreate?: SalesItemCreateOrConnectWithoutSalesInput | SalesItemCreateOrConnectWithoutSalesInput[]
    upsert?: SalesItemUpsertWithWhereUniqueWithoutSalesInput | SalesItemUpsertWithWhereUniqueWithoutSalesInput[]
    createMany?: SalesItemCreateManySalesInputEnvelope
    set?: SalesItemWhereUniqueInput | SalesItemWhereUniqueInput[]
    disconnect?: SalesItemWhereUniqueInput | SalesItemWhereUniqueInput[]
    delete?: SalesItemWhereUniqueInput | SalesItemWhereUniqueInput[]
    connect?: SalesItemWhereUniqueInput | SalesItemWhereUniqueInput[]
    update?: SalesItemUpdateWithWhereUniqueWithoutSalesInput | SalesItemUpdateWithWhereUniqueWithoutSalesInput[]
    updateMany?: SalesItemUpdateManyWithWhereWithoutSalesInput | SalesItemUpdateManyWithWhereWithoutSalesInput[]
    deleteMany?: SalesItemScalarWhereInput | SalesItemScalarWhereInput[]
  }

  export type PaymentUpdateManyWithoutSalesNestedInput = {
    create?: XOR<PaymentCreateWithoutSalesInput, PaymentUncheckedCreateWithoutSalesInput> | PaymentCreateWithoutSalesInput[] | PaymentUncheckedCreateWithoutSalesInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutSalesInput | PaymentCreateOrConnectWithoutSalesInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutSalesInput | PaymentUpsertWithWhereUniqueWithoutSalesInput[]
    createMany?: PaymentCreateManySalesInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutSalesInput | PaymentUpdateWithWhereUniqueWithoutSalesInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutSalesInput | PaymentUpdateManyWithWhereWithoutSalesInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type RegisterLogUpdateManyWithoutSalesNestedInput = {
    create?: XOR<RegisterLogCreateWithoutSalesInput, RegisterLogUncheckedCreateWithoutSalesInput> | RegisterLogCreateWithoutSalesInput[] | RegisterLogUncheckedCreateWithoutSalesInput[]
    connectOrCreate?: RegisterLogCreateOrConnectWithoutSalesInput | RegisterLogCreateOrConnectWithoutSalesInput[]
    upsert?: RegisterLogUpsertWithWhereUniqueWithoutSalesInput | RegisterLogUpsertWithWhereUniqueWithoutSalesInput[]
    createMany?: RegisterLogCreateManySalesInputEnvelope
    set?: RegisterLogWhereUniqueInput | RegisterLogWhereUniqueInput[]
    disconnect?: RegisterLogWhereUniqueInput | RegisterLogWhereUniqueInput[]
    delete?: RegisterLogWhereUniqueInput | RegisterLogWhereUniqueInput[]
    connect?: RegisterLogWhereUniqueInput | RegisterLogWhereUniqueInput[]
    update?: RegisterLogUpdateWithWhereUniqueWithoutSalesInput | RegisterLogUpdateWithWhereUniqueWithoutSalesInput[]
    updateMany?: RegisterLogUpdateManyWithWhereWithoutSalesInput | RegisterLogUpdateManyWithWhereWithoutSalesInput[]
    deleteMany?: RegisterLogScalarWhereInput | RegisterLogScalarWhereInput[]
  }

  export type CustomerUpdateOneWithoutSalesNestedInput = {
    create?: XOR<CustomerCreateWithoutSalesInput, CustomerUncheckedCreateWithoutSalesInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutSalesInput
    upsert?: CustomerUpsertWithoutSalesInput
    disconnect?: CustomerWhereInput | boolean
    delete?: CustomerWhereInput | boolean
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutSalesInput, CustomerUpdateWithoutSalesInput>, CustomerUncheckedUpdateWithoutSalesInput>
  }

  export type TableUpdateOneWithoutSalesNestedInput = {
    create?: XOR<TableCreateWithoutSalesInput, TableUncheckedCreateWithoutSalesInput>
    connectOrCreate?: TableCreateOrConnectWithoutSalesInput
    upsert?: TableUpsertWithoutSalesInput
    disconnect?: TableWhereInput | boolean
    delete?: TableWhereInput | boolean
    connect?: TableWhereUniqueInput
    update?: XOR<XOR<TableUpdateToOneWithWhereWithoutSalesInput, TableUpdateWithoutSalesInput>, TableUncheckedUpdateWithoutSalesInput>
  }

  export type SalesItemUncheckedUpdateManyWithoutSalesNestedInput = {
    create?: XOR<SalesItemCreateWithoutSalesInput, SalesItemUncheckedCreateWithoutSalesInput> | SalesItemCreateWithoutSalesInput[] | SalesItemUncheckedCreateWithoutSalesInput[]
    connectOrCreate?: SalesItemCreateOrConnectWithoutSalesInput | SalesItemCreateOrConnectWithoutSalesInput[]
    upsert?: SalesItemUpsertWithWhereUniqueWithoutSalesInput | SalesItemUpsertWithWhereUniqueWithoutSalesInput[]
    createMany?: SalesItemCreateManySalesInputEnvelope
    set?: SalesItemWhereUniqueInput | SalesItemWhereUniqueInput[]
    disconnect?: SalesItemWhereUniqueInput | SalesItemWhereUniqueInput[]
    delete?: SalesItemWhereUniqueInput | SalesItemWhereUniqueInput[]
    connect?: SalesItemWhereUniqueInput | SalesItemWhereUniqueInput[]
    update?: SalesItemUpdateWithWhereUniqueWithoutSalesInput | SalesItemUpdateWithWhereUniqueWithoutSalesInput[]
    updateMany?: SalesItemUpdateManyWithWhereWithoutSalesInput | SalesItemUpdateManyWithWhereWithoutSalesInput[]
    deleteMany?: SalesItemScalarWhereInput | SalesItemScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutSalesNestedInput = {
    create?: XOR<PaymentCreateWithoutSalesInput, PaymentUncheckedCreateWithoutSalesInput> | PaymentCreateWithoutSalesInput[] | PaymentUncheckedCreateWithoutSalesInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutSalesInput | PaymentCreateOrConnectWithoutSalesInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutSalesInput | PaymentUpsertWithWhereUniqueWithoutSalesInput[]
    createMany?: PaymentCreateManySalesInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutSalesInput | PaymentUpdateWithWhereUniqueWithoutSalesInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutSalesInput | PaymentUpdateManyWithWhereWithoutSalesInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type RegisterLogUncheckedUpdateManyWithoutSalesNestedInput = {
    create?: XOR<RegisterLogCreateWithoutSalesInput, RegisterLogUncheckedCreateWithoutSalesInput> | RegisterLogCreateWithoutSalesInput[] | RegisterLogUncheckedCreateWithoutSalesInput[]
    connectOrCreate?: RegisterLogCreateOrConnectWithoutSalesInput | RegisterLogCreateOrConnectWithoutSalesInput[]
    upsert?: RegisterLogUpsertWithWhereUniqueWithoutSalesInput | RegisterLogUpsertWithWhereUniqueWithoutSalesInput[]
    createMany?: RegisterLogCreateManySalesInputEnvelope
    set?: RegisterLogWhereUniqueInput | RegisterLogWhereUniqueInput[]
    disconnect?: RegisterLogWhereUniqueInput | RegisterLogWhereUniqueInput[]
    delete?: RegisterLogWhereUniqueInput | RegisterLogWhereUniqueInput[]
    connect?: RegisterLogWhereUniqueInput | RegisterLogWhereUniqueInput[]
    update?: RegisterLogUpdateWithWhereUniqueWithoutSalesInput | RegisterLogUpdateWithWhereUniqueWithoutSalesInput[]
    updateMany?: RegisterLogUpdateManyWithWhereWithoutSalesInput | RegisterLogUpdateManyWithWhereWithoutSalesInput[]
    deleteMany?: RegisterLogScalarWhereInput | RegisterLogScalarWhereInput[]
  }

  export type SalesCreateNestedOneWithoutSalesItemsInput = {
    create?: XOR<SalesCreateWithoutSalesItemsInput, SalesUncheckedCreateWithoutSalesItemsInput>
    connectOrCreate?: SalesCreateOrConnectWithoutSalesItemsInput
    connect?: SalesWhereUniqueInput
  }

  export type SalesItemModifierCreateNestedManyWithoutSalesItemInput = {
    create?: XOR<SalesItemModifierCreateWithoutSalesItemInput, SalesItemModifierUncheckedCreateWithoutSalesItemInput> | SalesItemModifierCreateWithoutSalesItemInput[] | SalesItemModifierUncheckedCreateWithoutSalesItemInput[]
    connectOrCreate?: SalesItemModifierCreateOrConnectWithoutSalesItemInput | SalesItemModifierCreateOrConnectWithoutSalesItemInput[]
    createMany?: SalesItemModifierCreateManySalesItemInputEnvelope
    connect?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
  }

  export type OrderRoutingCreateNestedManyWithoutSalesItemInput = {
    create?: XOR<OrderRoutingCreateWithoutSalesItemInput, OrderRoutingUncheckedCreateWithoutSalesItemInput> | OrderRoutingCreateWithoutSalesItemInput[] | OrderRoutingUncheckedCreateWithoutSalesItemInput[]
    connectOrCreate?: OrderRoutingCreateOrConnectWithoutSalesItemInput | OrderRoutingCreateOrConnectWithoutSalesItemInput[]
    createMany?: OrderRoutingCreateManySalesItemInputEnvelope
    connect?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
  }

  export type SalesItemModifierUncheckedCreateNestedManyWithoutSalesItemInput = {
    create?: XOR<SalesItemModifierCreateWithoutSalesItemInput, SalesItemModifierUncheckedCreateWithoutSalesItemInput> | SalesItemModifierCreateWithoutSalesItemInput[] | SalesItemModifierUncheckedCreateWithoutSalesItemInput[]
    connectOrCreate?: SalesItemModifierCreateOrConnectWithoutSalesItemInput | SalesItemModifierCreateOrConnectWithoutSalesItemInput[]
    createMany?: SalesItemModifierCreateManySalesItemInputEnvelope
    connect?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
  }

  export type OrderRoutingUncheckedCreateNestedManyWithoutSalesItemInput = {
    create?: XOR<OrderRoutingCreateWithoutSalesItemInput, OrderRoutingUncheckedCreateWithoutSalesItemInput> | OrderRoutingCreateWithoutSalesItemInput[] | OrderRoutingUncheckedCreateWithoutSalesItemInput[]
    connectOrCreate?: OrderRoutingCreateOrConnectWithoutSalesItemInput | OrderRoutingCreateOrConnectWithoutSalesItemInput[]
    createMany?: OrderRoutingCreateManySalesItemInputEnvelope
    connect?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
  }

  export type SalesUpdateOneRequiredWithoutSalesItemsNestedInput = {
    create?: XOR<SalesCreateWithoutSalesItemsInput, SalesUncheckedCreateWithoutSalesItemsInput>
    connectOrCreate?: SalesCreateOrConnectWithoutSalesItemsInput
    upsert?: SalesUpsertWithoutSalesItemsInput
    connect?: SalesWhereUniqueInput
    update?: XOR<XOR<SalesUpdateToOneWithWhereWithoutSalesItemsInput, SalesUpdateWithoutSalesItemsInput>, SalesUncheckedUpdateWithoutSalesItemsInput>
  }

  export type SalesItemModifierUpdateManyWithoutSalesItemNestedInput = {
    create?: XOR<SalesItemModifierCreateWithoutSalesItemInput, SalesItemModifierUncheckedCreateWithoutSalesItemInput> | SalesItemModifierCreateWithoutSalesItemInput[] | SalesItemModifierUncheckedCreateWithoutSalesItemInput[]
    connectOrCreate?: SalesItemModifierCreateOrConnectWithoutSalesItemInput | SalesItemModifierCreateOrConnectWithoutSalesItemInput[]
    upsert?: SalesItemModifierUpsertWithWhereUniqueWithoutSalesItemInput | SalesItemModifierUpsertWithWhereUniqueWithoutSalesItemInput[]
    createMany?: SalesItemModifierCreateManySalesItemInputEnvelope
    set?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
    disconnect?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
    delete?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
    connect?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
    update?: SalesItemModifierUpdateWithWhereUniqueWithoutSalesItemInput | SalesItemModifierUpdateWithWhereUniqueWithoutSalesItemInput[]
    updateMany?: SalesItemModifierUpdateManyWithWhereWithoutSalesItemInput | SalesItemModifierUpdateManyWithWhereWithoutSalesItemInput[]
    deleteMany?: SalesItemModifierScalarWhereInput | SalesItemModifierScalarWhereInput[]
  }

  export type OrderRoutingUpdateManyWithoutSalesItemNestedInput = {
    create?: XOR<OrderRoutingCreateWithoutSalesItemInput, OrderRoutingUncheckedCreateWithoutSalesItemInput> | OrderRoutingCreateWithoutSalesItemInput[] | OrderRoutingUncheckedCreateWithoutSalesItemInput[]
    connectOrCreate?: OrderRoutingCreateOrConnectWithoutSalesItemInput | OrderRoutingCreateOrConnectWithoutSalesItemInput[]
    upsert?: OrderRoutingUpsertWithWhereUniqueWithoutSalesItemInput | OrderRoutingUpsertWithWhereUniqueWithoutSalesItemInput[]
    createMany?: OrderRoutingCreateManySalesItemInputEnvelope
    set?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
    disconnect?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
    delete?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
    connect?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
    update?: OrderRoutingUpdateWithWhereUniqueWithoutSalesItemInput | OrderRoutingUpdateWithWhereUniqueWithoutSalesItemInput[]
    updateMany?: OrderRoutingUpdateManyWithWhereWithoutSalesItemInput | OrderRoutingUpdateManyWithWhereWithoutSalesItemInput[]
    deleteMany?: OrderRoutingScalarWhereInput | OrderRoutingScalarWhereInput[]
  }

  export type SalesItemModifierUncheckedUpdateManyWithoutSalesItemNestedInput = {
    create?: XOR<SalesItemModifierCreateWithoutSalesItemInput, SalesItemModifierUncheckedCreateWithoutSalesItemInput> | SalesItemModifierCreateWithoutSalesItemInput[] | SalesItemModifierUncheckedCreateWithoutSalesItemInput[]
    connectOrCreate?: SalesItemModifierCreateOrConnectWithoutSalesItemInput | SalesItemModifierCreateOrConnectWithoutSalesItemInput[]
    upsert?: SalesItemModifierUpsertWithWhereUniqueWithoutSalesItemInput | SalesItemModifierUpsertWithWhereUniqueWithoutSalesItemInput[]
    createMany?: SalesItemModifierCreateManySalesItemInputEnvelope
    set?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
    disconnect?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
    delete?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
    connect?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
    update?: SalesItemModifierUpdateWithWhereUniqueWithoutSalesItemInput | SalesItemModifierUpdateWithWhereUniqueWithoutSalesItemInput[]
    updateMany?: SalesItemModifierUpdateManyWithWhereWithoutSalesItemInput | SalesItemModifierUpdateManyWithWhereWithoutSalesItemInput[]
    deleteMany?: SalesItemModifierScalarWhereInput | SalesItemModifierScalarWhereInput[]
  }

  export type OrderRoutingUncheckedUpdateManyWithoutSalesItemNestedInput = {
    create?: XOR<OrderRoutingCreateWithoutSalesItemInput, OrderRoutingUncheckedCreateWithoutSalesItemInput> | OrderRoutingCreateWithoutSalesItemInput[] | OrderRoutingUncheckedCreateWithoutSalesItemInput[]
    connectOrCreate?: OrderRoutingCreateOrConnectWithoutSalesItemInput | OrderRoutingCreateOrConnectWithoutSalesItemInput[]
    upsert?: OrderRoutingUpsertWithWhereUniqueWithoutSalesItemInput | OrderRoutingUpsertWithWhereUniqueWithoutSalesItemInput[]
    createMany?: OrderRoutingCreateManySalesItemInputEnvelope
    set?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
    disconnect?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
    delete?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
    connect?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
    update?: OrderRoutingUpdateWithWhereUniqueWithoutSalesItemInput | OrderRoutingUpdateWithWhereUniqueWithoutSalesItemInput[]
    updateMany?: OrderRoutingUpdateManyWithWhereWithoutSalesItemInput | OrderRoutingUpdateManyWithWhereWithoutSalesItemInput[]
    deleteMany?: OrderRoutingScalarWhereInput | OrderRoutingScalarWhereInput[]
  }

  export type MenuItemModifierCreateNestedOneWithoutSalesItemModifiersInput = {
    create?: XOR<MenuItemModifierCreateWithoutSalesItemModifiersInput, MenuItemModifierUncheckedCreateWithoutSalesItemModifiersInput>
    connectOrCreate?: MenuItemModifierCreateOrConnectWithoutSalesItemModifiersInput
    connect?: MenuItemModifierWhereUniqueInput
  }

  export type SalesItemCreateNestedOneWithoutSelectedModifiersInput = {
    create?: XOR<SalesItemCreateWithoutSelectedModifiersInput, SalesItemUncheckedCreateWithoutSelectedModifiersInput>
    connectOrCreate?: SalesItemCreateOrConnectWithoutSelectedModifiersInput
    connect?: SalesItemWhereUniqueInput
  }

  export type NullableEnumOrderStatusFieldUpdateOperationsInput = {
    set?: $Enums.OrderStatus | null
  }

  export type MenuItemModifierUpdateOneRequiredWithoutSalesItemModifiersNestedInput = {
    create?: XOR<MenuItemModifierCreateWithoutSalesItemModifiersInput, MenuItemModifierUncheckedCreateWithoutSalesItemModifiersInput>
    connectOrCreate?: MenuItemModifierCreateOrConnectWithoutSalesItemModifiersInput
    upsert?: MenuItemModifierUpsertWithoutSalesItemModifiersInput
    connect?: MenuItemModifierWhereUniqueInput
    update?: XOR<XOR<MenuItemModifierUpdateToOneWithWhereWithoutSalesItemModifiersInput, MenuItemModifierUpdateWithoutSalesItemModifiersInput>, MenuItemModifierUncheckedUpdateWithoutSalesItemModifiersInput>
  }

  export type SalesItemUpdateOneRequiredWithoutSelectedModifiersNestedInput = {
    create?: XOR<SalesItemCreateWithoutSelectedModifiersInput, SalesItemUncheckedCreateWithoutSelectedModifiersInput>
    connectOrCreate?: SalesItemCreateOrConnectWithoutSelectedModifiersInput
    upsert?: SalesItemUpsertWithoutSelectedModifiersInput
    connect?: SalesItemWhereUniqueInput
    update?: XOR<XOR<SalesItemUpdateToOneWithWhereWithoutSelectedModifiersInput, SalesItemUpdateWithoutSelectedModifiersInput>, SalesItemUncheckedUpdateWithoutSelectedModifiersInput>
  }

  export type SalesQuotationItemCreateNestedManyWithoutSalesQuotationInput = {
    create?: XOR<SalesQuotationItemCreateWithoutSalesQuotationInput, SalesQuotationItemUncheckedCreateWithoutSalesQuotationInput> | SalesQuotationItemCreateWithoutSalesQuotationInput[] | SalesQuotationItemUncheckedCreateWithoutSalesQuotationInput[]
    connectOrCreate?: SalesQuotationItemCreateOrConnectWithoutSalesQuotationInput | SalesQuotationItemCreateOrConnectWithoutSalesQuotationInput[]
    createMany?: SalesQuotationItemCreateManySalesQuotationInputEnvelope
    connect?: SalesQuotationItemWhereUniqueInput | SalesQuotationItemWhereUniqueInput[]
  }

  export type SalesQuotationItemUncheckedCreateNestedManyWithoutSalesQuotationInput = {
    create?: XOR<SalesQuotationItemCreateWithoutSalesQuotationInput, SalesQuotationItemUncheckedCreateWithoutSalesQuotationInput> | SalesQuotationItemCreateWithoutSalesQuotationInput[] | SalesQuotationItemUncheckedCreateWithoutSalesQuotationInput[]
    connectOrCreate?: SalesQuotationItemCreateOrConnectWithoutSalesQuotationInput | SalesQuotationItemCreateOrConnectWithoutSalesQuotationInput[]
    createMany?: SalesQuotationItemCreateManySalesQuotationInputEnvelope
    connect?: SalesQuotationItemWhereUniqueInput | SalesQuotationItemWhereUniqueInput[]
  }

  export type SalesQuotationItemUpdateManyWithoutSalesQuotationNestedInput = {
    create?: XOR<SalesQuotationItemCreateWithoutSalesQuotationInput, SalesQuotationItemUncheckedCreateWithoutSalesQuotationInput> | SalesQuotationItemCreateWithoutSalesQuotationInput[] | SalesQuotationItemUncheckedCreateWithoutSalesQuotationInput[]
    connectOrCreate?: SalesQuotationItemCreateOrConnectWithoutSalesQuotationInput | SalesQuotationItemCreateOrConnectWithoutSalesQuotationInput[]
    upsert?: SalesQuotationItemUpsertWithWhereUniqueWithoutSalesQuotationInput | SalesQuotationItemUpsertWithWhereUniqueWithoutSalesQuotationInput[]
    createMany?: SalesQuotationItemCreateManySalesQuotationInputEnvelope
    set?: SalesQuotationItemWhereUniqueInput | SalesQuotationItemWhereUniqueInput[]
    disconnect?: SalesQuotationItemWhereUniqueInput | SalesQuotationItemWhereUniqueInput[]
    delete?: SalesQuotationItemWhereUniqueInput | SalesQuotationItemWhereUniqueInput[]
    connect?: SalesQuotationItemWhereUniqueInput | SalesQuotationItemWhereUniqueInput[]
    update?: SalesQuotationItemUpdateWithWhereUniqueWithoutSalesQuotationInput | SalesQuotationItemUpdateWithWhereUniqueWithoutSalesQuotationInput[]
    updateMany?: SalesQuotationItemUpdateManyWithWhereWithoutSalesQuotationInput | SalesQuotationItemUpdateManyWithWhereWithoutSalesQuotationInput[]
    deleteMany?: SalesQuotationItemScalarWhereInput | SalesQuotationItemScalarWhereInput[]
  }

  export type SalesQuotationItemUncheckedUpdateManyWithoutSalesQuotationNestedInput = {
    create?: XOR<SalesQuotationItemCreateWithoutSalesQuotationInput, SalesQuotationItemUncheckedCreateWithoutSalesQuotationInput> | SalesQuotationItemCreateWithoutSalesQuotationInput[] | SalesQuotationItemUncheckedCreateWithoutSalesQuotationInput[]
    connectOrCreate?: SalesQuotationItemCreateOrConnectWithoutSalesQuotationInput | SalesQuotationItemCreateOrConnectWithoutSalesQuotationInput[]
    upsert?: SalesQuotationItemUpsertWithWhereUniqueWithoutSalesQuotationInput | SalesQuotationItemUpsertWithWhereUniqueWithoutSalesQuotationInput[]
    createMany?: SalesQuotationItemCreateManySalesQuotationInputEnvelope
    set?: SalesQuotationItemWhereUniqueInput | SalesQuotationItemWhereUniqueInput[]
    disconnect?: SalesQuotationItemWhereUniqueInput | SalesQuotationItemWhereUniqueInput[]
    delete?: SalesQuotationItemWhereUniqueInput | SalesQuotationItemWhereUniqueInput[]
    connect?: SalesQuotationItemWhereUniqueInput | SalesQuotationItemWhereUniqueInput[]
    update?: SalesQuotationItemUpdateWithWhereUniqueWithoutSalesQuotationInput | SalesQuotationItemUpdateWithWhereUniqueWithoutSalesQuotationInput[]
    updateMany?: SalesQuotationItemUpdateManyWithWhereWithoutSalesQuotationInput | SalesQuotationItemUpdateManyWithWhereWithoutSalesQuotationInput[]
    deleteMany?: SalesQuotationItemScalarWhereInput | SalesQuotationItemScalarWhereInput[]
  }

  export type SalesQuotationCreateNestedOneWithoutSalesQuotationItemsInput = {
    create?: XOR<SalesQuotationCreateWithoutSalesQuotationItemsInput, SalesQuotationUncheckedCreateWithoutSalesQuotationItemsInput>
    connectOrCreate?: SalesQuotationCreateOrConnectWithoutSalesQuotationItemsInput
    connect?: SalesQuotationWhereUniqueInput
  }

  export type SalesQuotationUpdateOneRequiredWithoutSalesQuotationItemsNestedInput = {
    create?: XOR<SalesQuotationCreateWithoutSalesQuotationItemsInput, SalesQuotationUncheckedCreateWithoutSalesQuotationItemsInput>
    connectOrCreate?: SalesQuotationCreateOrConnectWithoutSalesQuotationItemsInput
    upsert?: SalesQuotationUpsertWithoutSalesQuotationItemsInput
    connect?: SalesQuotationWhereUniqueInput
    update?: XOR<XOR<SalesQuotationUpdateToOneWithWhereWithoutSalesQuotationItemsInput, SalesQuotationUpdateWithoutSalesQuotationItemsInput>, SalesQuotationUncheckedUpdateWithoutSalesQuotationItemsInput>
  }

  export type SessionCreateNestedOneWithoutInvoicesInput = {
    create?: XOR<SessionCreateWithoutInvoicesInput, SessionUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: SessionCreateOrConnectWithoutInvoicesInput
    connect?: SessionWhereUniqueInput
  }

  export type PurchaseOrderCreateNestedOneWithoutInvoicesInput = {
    create?: XOR<PurchaseOrderCreateWithoutInvoicesInput, PurchaseOrderUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutInvoicesInput
    connect?: PurchaseOrderWhereUniqueInput
  }

  export type SupplierCreateNestedOneWithoutInvoicesInput = {
    create?: XOR<SupplierCreateWithoutInvoicesInput, SupplierUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: SupplierCreateOrConnectWithoutInvoicesInput
    connect?: SupplierWhereUniqueInput
  }

  export type InvoiceItemCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<InvoiceItemCreateWithoutInvoiceInput, InvoiceItemUncheckedCreateWithoutInvoiceInput> | InvoiceItemCreateWithoutInvoiceInput[] | InvoiceItemUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceItemCreateOrConnectWithoutInvoiceInput | InvoiceItemCreateOrConnectWithoutInvoiceInput[]
    createMany?: InvoiceItemCreateManyInvoiceInputEnvelope
    connect?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
  }

  export type DeliveryOrderCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<DeliveryOrderCreateWithoutInvoiceInput, DeliveryOrderUncheckedCreateWithoutInvoiceInput> | DeliveryOrderCreateWithoutInvoiceInput[] | DeliveryOrderUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: DeliveryOrderCreateOrConnectWithoutInvoiceInput | DeliveryOrderCreateOrConnectWithoutInvoiceInput[]
    createMany?: DeliveryOrderCreateManyInvoiceInputEnvelope
    connect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
  }

  export type InvoiceItemUncheckedCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<InvoiceItemCreateWithoutInvoiceInput, InvoiceItemUncheckedCreateWithoutInvoiceInput> | InvoiceItemCreateWithoutInvoiceInput[] | InvoiceItemUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceItemCreateOrConnectWithoutInvoiceInput | InvoiceItemCreateOrConnectWithoutInvoiceInput[]
    createMany?: InvoiceItemCreateManyInvoiceInputEnvelope
    connect?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
  }

  export type DeliveryOrderUncheckedCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<DeliveryOrderCreateWithoutInvoiceInput, DeliveryOrderUncheckedCreateWithoutInvoiceInput> | DeliveryOrderCreateWithoutInvoiceInput[] | DeliveryOrderUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: DeliveryOrderCreateOrConnectWithoutInvoiceInput | DeliveryOrderCreateOrConnectWithoutInvoiceInput[]
    createMany?: DeliveryOrderCreateManyInvoiceInputEnvelope
    connect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
  }

  export type SessionUpdateOneWithoutInvoicesNestedInput = {
    create?: XOR<SessionCreateWithoutInvoicesInput, SessionUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: SessionCreateOrConnectWithoutInvoicesInput
    upsert?: SessionUpsertWithoutInvoicesInput
    disconnect?: SessionWhereInput | boolean
    delete?: SessionWhereInput | boolean
    connect?: SessionWhereUniqueInput
    update?: XOR<XOR<SessionUpdateToOneWithWhereWithoutInvoicesInput, SessionUpdateWithoutInvoicesInput>, SessionUncheckedUpdateWithoutInvoicesInput>
  }

  export type PurchaseOrderUpdateOneWithoutInvoicesNestedInput = {
    create?: XOR<PurchaseOrderCreateWithoutInvoicesInput, PurchaseOrderUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutInvoicesInput
    upsert?: PurchaseOrderUpsertWithoutInvoicesInput
    disconnect?: PurchaseOrderWhereInput | boolean
    delete?: PurchaseOrderWhereInput | boolean
    connect?: PurchaseOrderWhereUniqueInput
    update?: XOR<XOR<PurchaseOrderUpdateToOneWithWhereWithoutInvoicesInput, PurchaseOrderUpdateWithoutInvoicesInput>, PurchaseOrderUncheckedUpdateWithoutInvoicesInput>
  }

  export type SupplierUpdateOneWithoutInvoicesNestedInput = {
    create?: XOR<SupplierCreateWithoutInvoicesInput, SupplierUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: SupplierCreateOrConnectWithoutInvoicesInput
    upsert?: SupplierUpsertWithoutInvoicesInput
    disconnect?: SupplierWhereInput | boolean
    delete?: SupplierWhereInput | boolean
    connect?: SupplierWhereUniqueInput
    update?: XOR<XOR<SupplierUpdateToOneWithWhereWithoutInvoicesInput, SupplierUpdateWithoutInvoicesInput>, SupplierUncheckedUpdateWithoutInvoicesInput>
  }

  export type InvoiceItemUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<InvoiceItemCreateWithoutInvoiceInput, InvoiceItemUncheckedCreateWithoutInvoiceInput> | InvoiceItemCreateWithoutInvoiceInput[] | InvoiceItemUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceItemCreateOrConnectWithoutInvoiceInput | InvoiceItemCreateOrConnectWithoutInvoiceInput[]
    upsert?: InvoiceItemUpsertWithWhereUniqueWithoutInvoiceInput | InvoiceItemUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: InvoiceItemCreateManyInvoiceInputEnvelope
    set?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
    disconnect?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
    delete?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
    connect?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
    update?: InvoiceItemUpdateWithWhereUniqueWithoutInvoiceInput | InvoiceItemUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: InvoiceItemUpdateManyWithWhereWithoutInvoiceInput | InvoiceItemUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: InvoiceItemScalarWhereInput | InvoiceItemScalarWhereInput[]
  }

  export type DeliveryOrderUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<DeliveryOrderCreateWithoutInvoiceInput, DeliveryOrderUncheckedCreateWithoutInvoiceInput> | DeliveryOrderCreateWithoutInvoiceInput[] | DeliveryOrderUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: DeliveryOrderCreateOrConnectWithoutInvoiceInput | DeliveryOrderCreateOrConnectWithoutInvoiceInput[]
    upsert?: DeliveryOrderUpsertWithWhereUniqueWithoutInvoiceInput | DeliveryOrderUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: DeliveryOrderCreateManyInvoiceInputEnvelope
    set?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    disconnect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    delete?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    connect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    update?: DeliveryOrderUpdateWithWhereUniqueWithoutInvoiceInput | DeliveryOrderUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: DeliveryOrderUpdateManyWithWhereWithoutInvoiceInput | DeliveryOrderUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: DeliveryOrderScalarWhereInput | DeliveryOrderScalarWhereInput[]
  }

  export type InvoiceItemUncheckedUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<InvoiceItemCreateWithoutInvoiceInput, InvoiceItemUncheckedCreateWithoutInvoiceInput> | InvoiceItemCreateWithoutInvoiceInput[] | InvoiceItemUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: InvoiceItemCreateOrConnectWithoutInvoiceInput | InvoiceItemCreateOrConnectWithoutInvoiceInput[]
    upsert?: InvoiceItemUpsertWithWhereUniqueWithoutInvoiceInput | InvoiceItemUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: InvoiceItemCreateManyInvoiceInputEnvelope
    set?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
    disconnect?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
    delete?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
    connect?: InvoiceItemWhereUniqueInput | InvoiceItemWhereUniqueInput[]
    update?: InvoiceItemUpdateWithWhereUniqueWithoutInvoiceInput | InvoiceItemUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: InvoiceItemUpdateManyWithWhereWithoutInvoiceInput | InvoiceItemUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: InvoiceItemScalarWhereInput | InvoiceItemScalarWhereInput[]
  }

  export type DeliveryOrderUncheckedUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<DeliveryOrderCreateWithoutInvoiceInput, DeliveryOrderUncheckedCreateWithoutInvoiceInput> | DeliveryOrderCreateWithoutInvoiceInput[] | DeliveryOrderUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: DeliveryOrderCreateOrConnectWithoutInvoiceInput | DeliveryOrderCreateOrConnectWithoutInvoiceInput[]
    upsert?: DeliveryOrderUpsertWithWhereUniqueWithoutInvoiceInput | DeliveryOrderUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: DeliveryOrderCreateManyInvoiceInputEnvelope
    set?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    disconnect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    delete?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    connect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    update?: DeliveryOrderUpdateWithWhereUniqueWithoutInvoiceInput | DeliveryOrderUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: DeliveryOrderUpdateManyWithWhereWithoutInvoiceInput | DeliveryOrderUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: DeliveryOrderScalarWhereInput | DeliveryOrderScalarWhereInput[]
  }

  export type InvoiceCreateNestedOneWithoutInvoiceItemsInput = {
    create?: XOR<InvoiceCreateWithoutInvoiceItemsInput, InvoiceUncheckedCreateWithoutInvoiceItemsInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutInvoiceItemsInput
    connect?: InvoiceWhereUniqueInput
  }

  export type ItemCreateNestedOneWithoutInvoiceItemsInput = {
    create?: XOR<ItemCreateWithoutInvoiceItemsInput, ItemUncheckedCreateWithoutInvoiceItemsInput>
    connectOrCreate?: ItemCreateOrConnectWithoutInvoiceItemsInput
    connect?: ItemWhereUniqueInput
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type InvoiceUpdateOneRequiredWithoutInvoiceItemsNestedInput = {
    create?: XOR<InvoiceCreateWithoutInvoiceItemsInput, InvoiceUncheckedCreateWithoutInvoiceItemsInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutInvoiceItemsInput
    upsert?: InvoiceUpsertWithoutInvoiceItemsInput
    connect?: InvoiceWhereUniqueInput
    update?: XOR<XOR<InvoiceUpdateToOneWithWhereWithoutInvoiceItemsInput, InvoiceUpdateWithoutInvoiceItemsInput>, InvoiceUncheckedUpdateWithoutInvoiceItemsInput>
  }

  export type ItemUpdateOneRequiredWithoutInvoiceItemsNestedInput = {
    create?: XOR<ItemCreateWithoutInvoiceItemsInput, ItemUncheckedCreateWithoutInvoiceItemsInput>
    connectOrCreate?: ItemCreateOrConnectWithoutInvoiceItemsInput
    upsert?: ItemUpsertWithoutInvoiceItemsInput
    connect?: ItemWhereUniqueInput
    update?: XOR<XOR<ItemUpdateToOneWithWhereWithoutInvoiceItemsInput, ItemUpdateWithoutInvoiceItemsInput>, ItemUncheckedUpdateWithoutInvoiceItemsInput>
  }

  export type SessionCreateNestedOneWithoutDeliveryOrdersInput = {
    create?: XOR<SessionCreateWithoutDeliveryOrdersInput, SessionUncheckedCreateWithoutDeliveryOrdersInput>
    connectOrCreate?: SessionCreateOrConnectWithoutDeliveryOrdersInput
    connect?: SessionWhereUniqueInput
  }

  export type PurchaseOrderCreateNestedOneWithoutDeliveryOrdersInput = {
    create?: XOR<PurchaseOrderCreateWithoutDeliveryOrdersInput, PurchaseOrderUncheckedCreateWithoutDeliveryOrdersInput>
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutDeliveryOrdersInput
    connect?: PurchaseOrderWhereUniqueInput
  }

  export type InvoiceCreateNestedOneWithoutDeliveryOrdersInput = {
    create?: XOR<InvoiceCreateWithoutDeliveryOrdersInput, InvoiceUncheckedCreateWithoutDeliveryOrdersInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutDeliveryOrdersInput
    connect?: InvoiceWhereUniqueInput
  }

  export type DeliveryOrderItemCreateNestedManyWithoutDeliveryOrderInput = {
    create?: XOR<DeliveryOrderItemCreateWithoutDeliveryOrderInput, DeliveryOrderItemUncheckedCreateWithoutDeliveryOrderInput> | DeliveryOrderItemCreateWithoutDeliveryOrderInput[] | DeliveryOrderItemUncheckedCreateWithoutDeliveryOrderInput[]
    connectOrCreate?: DeliveryOrderItemCreateOrConnectWithoutDeliveryOrderInput | DeliveryOrderItemCreateOrConnectWithoutDeliveryOrderInput[]
    createMany?: DeliveryOrderItemCreateManyDeliveryOrderInputEnvelope
    connect?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
  }

  export type DeliveryOrderItemUncheckedCreateNestedManyWithoutDeliveryOrderInput = {
    create?: XOR<DeliveryOrderItemCreateWithoutDeliveryOrderInput, DeliveryOrderItemUncheckedCreateWithoutDeliveryOrderInput> | DeliveryOrderItemCreateWithoutDeliveryOrderInput[] | DeliveryOrderItemUncheckedCreateWithoutDeliveryOrderInput[]
    connectOrCreate?: DeliveryOrderItemCreateOrConnectWithoutDeliveryOrderInput | DeliveryOrderItemCreateOrConnectWithoutDeliveryOrderInput[]
    createMany?: DeliveryOrderItemCreateManyDeliveryOrderInputEnvelope
    connect?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
  }

  export type SessionUpdateOneWithoutDeliveryOrdersNestedInput = {
    create?: XOR<SessionCreateWithoutDeliveryOrdersInput, SessionUncheckedCreateWithoutDeliveryOrdersInput>
    connectOrCreate?: SessionCreateOrConnectWithoutDeliveryOrdersInput
    upsert?: SessionUpsertWithoutDeliveryOrdersInput
    disconnect?: SessionWhereInput | boolean
    delete?: SessionWhereInput | boolean
    connect?: SessionWhereUniqueInput
    update?: XOR<XOR<SessionUpdateToOneWithWhereWithoutDeliveryOrdersInput, SessionUpdateWithoutDeliveryOrdersInput>, SessionUncheckedUpdateWithoutDeliveryOrdersInput>
  }

  export type PurchaseOrderUpdateOneWithoutDeliveryOrdersNestedInput = {
    create?: XOR<PurchaseOrderCreateWithoutDeliveryOrdersInput, PurchaseOrderUncheckedCreateWithoutDeliveryOrdersInput>
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutDeliveryOrdersInput
    upsert?: PurchaseOrderUpsertWithoutDeliveryOrdersInput
    disconnect?: PurchaseOrderWhereInput | boolean
    delete?: PurchaseOrderWhereInput | boolean
    connect?: PurchaseOrderWhereUniqueInput
    update?: XOR<XOR<PurchaseOrderUpdateToOneWithWhereWithoutDeliveryOrdersInput, PurchaseOrderUpdateWithoutDeliveryOrdersInput>, PurchaseOrderUncheckedUpdateWithoutDeliveryOrdersInput>
  }

  export type InvoiceUpdateOneWithoutDeliveryOrdersNestedInput = {
    create?: XOR<InvoiceCreateWithoutDeliveryOrdersInput, InvoiceUncheckedCreateWithoutDeliveryOrdersInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutDeliveryOrdersInput
    upsert?: InvoiceUpsertWithoutDeliveryOrdersInput
    disconnect?: InvoiceWhereInput | boolean
    delete?: InvoiceWhereInput | boolean
    connect?: InvoiceWhereUniqueInput
    update?: XOR<XOR<InvoiceUpdateToOneWithWhereWithoutDeliveryOrdersInput, InvoiceUpdateWithoutDeliveryOrdersInput>, InvoiceUncheckedUpdateWithoutDeliveryOrdersInput>
  }

  export type DeliveryOrderItemUpdateManyWithoutDeliveryOrderNestedInput = {
    create?: XOR<DeliveryOrderItemCreateWithoutDeliveryOrderInput, DeliveryOrderItemUncheckedCreateWithoutDeliveryOrderInput> | DeliveryOrderItemCreateWithoutDeliveryOrderInput[] | DeliveryOrderItemUncheckedCreateWithoutDeliveryOrderInput[]
    connectOrCreate?: DeliveryOrderItemCreateOrConnectWithoutDeliveryOrderInput | DeliveryOrderItemCreateOrConnectWithoutDeliveryOrderInput[]
    upsert?: DeliveryOrderItemUpsertWithWhereUniqueWithoutDeliveryOrderInput | DeliveryOrderItemUpsertWithWhereUniqueWithoutDeliveryOrderInput[]
    createMany?: DeliveryOrderItemCreateManyDeliveryOrderInputEnvelope
    set?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
    disconnect?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
    delete?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
    connect?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
    update?: DeliveryOrderItemUpdateWithWhereUniqueWithoutDeliveryOrderInput | DeliveryOrderItemUpdateWithWhereUniqueWithoutDeliveryOrderInput[]
    updateMany?: DeliveryOrderItemUpdateManyWithWhereWithoutDeliveryOrderInput | DeliveryOrderItemUpdateManyWithWhereWithoutDeliveryOrderInput[]
    deleteMany?: DeliveryOrderItemScalarWhereInput | DeliveryOrderItemScalarWhereInput[]
  }

  export type DeliveryOrderItemUncheckedUpdateManyWithoutDeliveryOrderNestedInput = {
    create?: XOR<DeliveryOrderItemCreateWithoutDeliveryOrderInput, DeliveryOrderItemUncheckedCreateWithoutDeliveryOrderInput> | DeliveryOrderItemCreateWithoutDeliveryOrderInput[] | DeliveryOrderItemUncheckedCreateWithoutDeliveryOrderInput[]
    connectOrCreate?: DeliveryOrderItemCreateOrConnectWithoutDeliveryOrderInput | DeliveryOrderItemCreateOrConnectWithoutDeliveryOrderInput[]
    upsert?: DeliveryOrderItemUpsertWithWhereUniqueWithoutDeliveryOrderInput | DeliveryOrderItemUpsertWithWhereUniqueWithoutDeliveryOrderInput[]
    createMany?: DeliveryOrderItemCreateManyDeliveryOrderInputEnvelope
    set?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
    disconnect?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
    delete?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
    connect?: DeliveryOrderItemWhereUniqueInput | DeliveryOrderItemWhereUniqueInput[]
    update?: DeliveryOrderItemUpdateWithWhereUniqueWithoutDeliveryOrderInput | DeliveryOrderItemUpdateWithWhereUniqueWithoutDeliveryOrderInput[]
    updateMany?: DeliveryOrderItemUpdateManyWithWhereWithoutDeliveryOrderInput | DeliveryOrderItemUpdateManyWithWhereWithoutDeliveryOrderInput[]
    deleteMany?: DeliveryOrderItemScalarWhereInput | DeliveryOrderItemScalarWhereInput[]
  }

  export type DeliveryOrderCreateNestedOneWithoutDeliveryOrderItemsInput = {
    create?: XOR<DeliveryOrderCreateWithoutDeliveryOrderItemsInput, DeliveryOrderUncheckedCreateWithoutDeliveryOrderItemsInput>
    connectOrCreate?: DeliveryOrderCreateOrConnectWithoutDeliveryOrderItemsInput
    connect?: DeliveryOrderWhereUniqueInput
  }

  export type ItemCreateNestedOneWithoutDeliveryOrderItemsInput = {
    create?: XOR<ItemCreateWithoutDeliveryOrderItemsInput, ItemUncheckedCreateWithoutDeliveryOrderItemsInput>
    connectOrCreate?: ItemCreateOrConnectWithoutDeliveryOrderItemsInput
    connect?: ItemWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DeliveryOrderUpdateOneRequiredWithoutDeliveryOrderItemsNestedInput = {
    create?: XOR<DeliveryOrderCreateWithoutDeliveryOrderItemsInput, DeliveryOrderUncheckedCreateWithoutDeliveryOrderItemsInput>
    connectOrCreate?: DeliveryOrderCreateOrConnectWithoutDeliveryOrderItemsInput
    upsert?: DeliveryOrderUpsertWithoutDeliveryOrderItemsInput
    connect?: DeliveryOrderWhereUniqueInput
    update?: XOR<XOR<DeliveryOrderUpdateToOneWithWhereWithoutDeliveryOrderItemsInput, DeliveryOrderUpdateWithoutDeliveryOrderItemsInput>, DeliveryOrderUncheckedUpdateWithoutDeliveryOrderItemsInput>
  }

  export type ItemUpdateOneRequiredWithoutDeliveryOrderItemsNestedInput = {
    create?: XOR<ItemCreateWithoutDeliveryOrderItemsInput, ItemUncheckedCreateWithoutDeliveryOrderItemsInput>
    connectOrCreate?: ItemCreateOrConnectWithoutDeliveryOrderItemsInput
    upsert?: ItemUpsertWithoutDeliveryOrderItemsInput
    connect?: ItemWhereUniqueInput
    update?: XOR<XOR<ItemUpdateToOneWithWhereWithoutDeliveryOrderItemsInput, ItemUpdateWithoutDeliveryOrderItemsInput>, ItemUncheckedUpdateWithoutDeliveryOrderItemsInput>
  }

  export type SessionCreateNestedOneWithoutPurchaseOrdersInput = {
    create?: XOR<SessionCreateWithoutPurchaseOrdersInput, SessionUncheckedCreateWithoutPurchaseOrdersInput>
    connectOrCreate?: SessionCreateOrConnectWithoutPurchaseOrdersInput
    connect?: SessionWhereUniqueInput
  }

  export type SupplierCreateNestedOneWithoutPurchaseOrdersInput = {
    create?: XOR<SupplierCreateWithoutPurchaseOrdersInput, SupplierUncheckedCreateWithoutPurchaseOrdersInput>
    connectOrCreate?: SupplierCreateOrConnectWithoutPurchaseOrdersInput
    connect?: SupplierWhereUniqueInput
  }

  export type PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutPurchaseOrderInput, PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput> | PurchaseOrderItemCreateWithoutPurchaseOrderInput[] | PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput | PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput[]
    createMany?: PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
  }

  export type DeliveryOrderCreateNestedManyWithoutPurchaseOrderInput = {
    create?: XOR<DeliveryOrderCreateWithoutPurchaseOrderInput, DeliveryOrderUncheckedCreateWithoutPurchaseOrderInput> | DeliveryOrderCreateWithoutPurchaseOrderInput[] | DeliveryOrderUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: DeliveryOrderCreateOrConnectWithoutPurchaseOrderInput | DeliveryOrderCreateOrConnectWithoutPurchaseOrderInput[]
    createMany?: DeliveryOrderCreateManyPurchaseOrderInputEnvelope
    connect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
  }

  export type InvoiceCreateNestedManyWithoutPurchaseOrderInput = {
    create?: XOR<InvoiceCreateWithoutPurchaseOrderInput, InvoiceUncheckedCreateWithoutPurchaseOrderInput> | InvoiceCreateWithoutPurchaseOrderInput[] | InvoiceUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutPurchaseOrderInput | InvoiceCreateOrConnectWithoutPurchaseOrderInput[]
    createMany?: InvoiceCreateManyPurchaseOrderInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type PurchaseOrderItemUncheckedCreateNestedManyWithoutPurchaseOrderInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutPurchaseOrderInput, PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput> | PurchaseOrderItemCreateWithoutPurchaseOrderInput[] | PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput | PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput[]
    createMany?: PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
  }

  export type DeliveryOrderUncheckedCreateNestedManyWithoutPurchaseOrderInput = {
    create?: XOR<DeliveryOrderCreateWithoutPurchaseOrderInput, DeliveryOrderUncheckedCreateWithoutPurchaseOrderInput> | DeliveryOrderCreateWithoutPurchaseOrderInput[] | DeliveryOrderUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: DeliveryOrderCreateOrConnectWithoutPurchaseOrderInput | DeliveryOrderCreateOrConnectWithoutPurchaseOrderInput[]
    createMany?: DeliveryOrderCreateManyPurchaseOrderInputEnvelope
    connect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
  }

  export type InvoiceUncheckedCreateNestedManyWithoutPurchaseOrderInput = {
    create?: XOR<InvoiceCreateWithoutPurchaseOrderInput, InvoiceUncheckedCreateWithoutPurchaseOrderInput> | InvoiceCreateWithoutPurchaseOrderInput[] | InvoiceUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutPurchaseOrderInput | InvoiceCreateOrConnectWithoutPurchaseOrderInput[]
    createMany?: InvoiceCreateManyPurchaseOrderInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type SessionUpdateOneWithoutPurchaseOrdersNestedInput = {
    create?: XOR<SessionCreateWithoutPurchaseOrdersInput, SessionUncheckedCreateWithoutPurchaseOrdersInput>
    connectOrCreate?: SessionCreateOrConnectWithoutPurchaseOrdersInput
    upsert?: SessionUpsertWithoutPurchaseOrdersInput
    disconnect?: SessionWhereInput | boolean
    delete?: SessionWhereInput | boolean
    connect?: SessionWhereUniqueInput
    update?: XOR<XOR<SessionUpdateToOneWithWhereWithoutPurchaseOrdersInput, SessionUpdateWithoutPurchaseOrdersInput>, SessionUncheckedUpdateWithoutPurchaseOrdersInput>
  }

  export type SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput = {
    create?: XOR<SupplierCreateWithoutPurchaseOrdersInput, SupplierUncheckedCreateWithoutPurchaseOrdersInput>
    connectOrCreate?: SupplierCreateOrConnectWithoutPurchaseOrdersInput
    upsert?: SupplierUpsertWithoutPurchaseOrdersInput
    connect?: SupplierWhereUniqueInput
    update?: XOR<XOR<SupplierUpdateToOneWithWhereWithoutPurchaseOrdersInput, SupplierUpdateWithoutPurchaseOrdersInput>, SupplierUncheckedUpdateWithoutPurchaseOrdersInput>
  }

  export type PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutPurchaseOrderInput, PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput> | PurchaseOrderItemCreateWithoutPurchaseOrderInput[] | PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput | PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput[]
    upsert?: PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput | PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput[]
    createMany?: PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope
    set?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    disconnect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    delete?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    update?: PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput | PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput[]
    updateMany?: PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput | PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput[]
    deleteMany?: PurchaseOrderItemScalarWhereInput | PurchaseOrderItemScalarWhereInput[]
  }

  export type DeliveryOrderUpdateManyWithoutPurchaseOrderNestedInput = {
    create?: XOR<DeliveryOrderCreateWithoutPurchaseOrderInput, DeliveryOrderUncheckedCreateWithoutPurchaseOrderInput> | DeliveryOrderCreateWithoutPurchaseOrderInput[] | DeliveryOrderUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: DeliveryOrderCreateOrConnectWithoutPurchaseOrderInput | DeliveryOrderCreateOrConnectWithoutPurchaseOrderInput[]
    upsert?: DeliveryOrderUpsertWithWhereUniqueWithoutPurchaseOrderInput | DeliveryOrderUpsertWithWhereUniqueWithoutPurchaseOrderInput[]
    createMany?: DeliveryOrderCreateManyPurchaseOrderInputEnvelope
    set?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    disconnect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    delete?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    connect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    update?: DeliveryOrderUpdateWithWhereUniqueWithoutPurchaseOrderInput | DeliveryOrderUpdateWithWhereUniqueWithoutPurchaseOrderInput[]
    updateMany?: DeliveryOrderUpdateManyWithWhereWithoutPurchaseOrderInput | DeliveryOrderUpdateManyWithWhereWithoutPurchaseOrderInput[]
    deleteMany?: DeliveryOrderScalarWhereInput | DeliveryOrderScalarWhereInput[]
  }

  export type InvoiceUpdateManyWithoutPurchaseOrderNestedInput = {
    create?: XOR<InvoiceCreateWithoutPurchaseOrderInput, InvoiceUncheckedCreateWithoutPurchaseOrderInput> | InvoiceCreateWithoutPurchaseOrderInput[] | InvoiceUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutPurchaseOrderInput | InvoiceCreateOrConnectWithoutPurchaseOrderInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutPurchaseOrderInput | InvoiceUpsertWithWhereUniqueWithoutPurchaseOrderInput[]
    createMany?: InvoiceCreateManyPurchaseOrderInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutPurchaseOrderInput | InvoiceUpdateWithWhereUniqueWithoutPurchaseOrderInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutPurchaseOrderInput | InvoiceUpdateManyWithWhereWithoutPurchaseOrderInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderNestedInput = {
    create?: XOR<PurchaseOrderItemCreateWithoutPurchaseOrderInput, PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput> | PurchaseOrderItemCreateWithoutPurchaseOrderInput[] | PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput | PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput[]
    upsert?: PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput | PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput[]
    createMany?: PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope
    set?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    disconnect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    delete?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    connect?: PurchaseOrderItemWhereUniqueInput | PurchaseOrderItemWhereUniqueInput[]
    update?: PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput | PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput[]
    updateMany?: PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput | PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput[]
    deleteMany?: PurchaseOrderItemScalarWhereInput | PurchaseOrderItemScalarWhereInput[]
  }

  export type DeliveryOrderUncheckedUpdateManyWithoutPurchaseOrderNestedInput = {
    create?: XOR<DeliveryOrderCreateWithoutPurchaseOrderInput, DeliveryOrderUncheckedCreateWithoutPurchaseOrderInput> | DeliveryOrderCreateWithoutPurchaseOrderInput[] | DeliveryOrderUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: DeliveryOrderCreateOrConnectWithoutPurchaseOrderInput | DeliveryOrderCreateOrConnectWithoutPurchaseOrderInput[]
    upsert?: DeliveryOrderUpsertWithWhereUniqueWithoutPurchaseOrderInput | DeliveryOrderUpsertWithWhereUniqueWithoutPurchaseOrderInput[]
    createMany?: DeliveryOrderCreateManyPurchaseOrderInputEnvelope
    set?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    disconnect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    delete?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    connect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    update?: DeliveryOrderUpdateWithWhereUniqueWithoutPurchaseOrderInput | DeliveryOrderUpdateWithWhereUniqueWithoutPurchaseOrderInput[]
    updateMany?: DeliveryOrderUpdateManyWithWhereWithoutPurchaseOrderInput | DeliveryOrderUpdateManyWithWhereWithoutPurchaseOrderInput[]
    deleteMany?: DeliveryOrderScalarWhereInput | DeliveryOrderScalarWhereInput[]
  }

  export type InvoiceUncheckedUpdateManyWithoutPurchaseOrderNestedInput = {
    create?: XOR<InvoiceCreateWithoutPurchaseOrderInput, InvoiceUncheckedCreateWithoutPurchaseOrderInput> | InvoiceCreateWithoutPurchaseOrderInput[] | InvoiceUncheckedCreateWithoutPurchaseOrderInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutPurchaseOrderInput | InvoiceCreateOrConnectWithoutPurchaseOrderInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutPurchaseOrderInput | InvoiceUpsertWithWhereUniqueWithoutPurchaseOrderInput[]
    createMany?: InvoiceCreateManyPurchaseOrderInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutPurchaseOrderInput | InvoiceUpdateWithWhereUniqueWithoutPurchaseOrderInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutPurchaseOrderInput | InvoiceUpdateManyWithWhereWithoutPurchaseOrderInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type PurchaseOrderCreateNestedOneWithoutPurchaseOrderItemsInput = {
    create?: XOR<PurchaseOrderCreateWithoutPurchaseOrderItemsInput, PurchaseOrderUncheckedCreateWithoutPurchaseOrderItemsInput>
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutPurchaseOrderItemsInput
    connect?: PurchaseOrderWhereUniqueInput
  }

  export type ItemCreateNestedOneWithoutPurchaseOrderItemsInput = {
    create?: XOR<ItemCreateWithoutPurchaseOrderItemsInput, ItemUncheckedCreateWithoutPurchaseOrderItemsInput>
    connectOrCreate?: ItemCreateOrConnectWithoutPurchaseOrderItemsInput
    connect?: ItemWhereUniqueInput
  }

  export type PurchaseOrderUpdateOneRequiredWithoutPurchaseOrderItemsNestedInput = {
    create?: XOR<PurchaseOrderCreateWithoutPurchaseOrderItemsInput, PurchaseOrderUncheckedCreateWithoutPurchaseOrderItemsInput>
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutPurchaseOrderItemsInput
    upsert?: PurchaseOrderUpsertWithoutPurchaseOrderItemsInput
    connect?: PurchaseOrderWhereUniqueInput
    update?: XOR<XOR<PurchaseOrderUpdateToOneWithWhereWithoutPurchaseOrderItemsInput, PurchaseOrderUpdateWithoutPurchaseOrderItemsInput>, PurchaseOrderUncheckedUpdateWithoutPurchaseOrderItemsInput>
  }

  export type ItemUpdateOneRequiredWithoutPurchaseOrderItemsNestedInput = {
    create?: XOR<ItemCreateWithoutPurchaseOrderItemsInput, ItemUncheckedCreateWithoutPurchaseOrderItemsInput>
    connectOrCreate?: ItemCreateOrConnectWithoutPurchaseOrderItemsInput
    upsert?: ItemUpsertWithoutPurchaseOrderItemsInput
    connect?: ItemWhereUniqueInput
    update?: XOR<XOR<ItemUpdateToOneWithWhereWithoutPurchaseOrderItemsInput, ItemUpdateWithoutPurchaseOrderItemsInput>, ItemUncheckedUpdateWithoutPurchaseOrderItemsInput>
  }

  export type CardInfoCreateNestedManyWithoutPaymentInput = {
    create?: XOR<CardInfoCreateWithoutPaymentInput, CardInfoUncheckedCreateWithoutPaymentInput> | CardInfoCreateWithoutPaymentInput[] | CardInfoUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: CardInfoCreateOrConnectWithoutPaymentInput | CardInfoCreateOrConnectWithoutPaymentInput[]
    createMany?: CardInfoCreateManyPaymentInputEnvelope
    connect?: CardInfoWhereUniqueInput | CardInfoWhereUniqueInput[]
  }

  export type SalesCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<SalesCreateWithoutPaymentsInput, SalesUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: SalesCreateOrConnectWithoutPaymentsInput
    connect?: SalesWhereUniqueInput
  }

  export type SplitBillCreateNestedManyWithoutPaymentInput = {
    create?: XOR<SplitBillCreateWithoutPaymentInput, SplitBillUncheckedCreateWithoutPaymentInput> | SplitBillCreateWithoutPaymentInput[] | SplitBillUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: SplitBillCreateOrConnectWithoutPaymentInput | SplitBillCreateOrConnectWithoutPaymentInput[]
    createMany?: SplitBillCreateManyPaymentInputEnvelope
    connect?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
  }

  export type CardInfoUncheckedCreateNestedManyWithoutPaymentInput = {
    create?: XOR<CardInfoCreateWithoutPaymentInput, CardInfoUncheckedCreateWithoutPaymentInput> | CardInfoCreateWithoutPaymentInput[] | CardInfoUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: CardInfoCreateOrConnectWithoutPaymentInput | CardInfoCreateOrConnectWithoutPaymentInput[]
    createMany?: CardInfoCreateManyPaymentInputEnvelope
    connect?: CardInfoWhereUniqueInput | CardInfoWhereUniqueInput[]
  }

  export type SplitBillUncheckedCreateNestedManyWithoutPaymentInput = {
    create?: XOR<SplitBillCreateWithoutPaymentInput, SplitBillUncheckedCreateWithoutPaymentInput> | SplitBillCreateWithoutPaymentInput[] | SplitBillUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: SplitBillCreateOrConnectWithoutPaymentInput | SplitBillCreateOrConnectWithoutPaymentInput[]
    createMany?: SplitBillCreateManyPaymentInputEnvelope
    connect?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
  }

  export type CardInfoUpdateManyWithoutPaymentNestedInput = {
    create?: XOR<CardInfoCreateWithoutPaymentInput, CardInfoUncheckedCreateWithoutPaymentInput> | CardInfoCreateWithoutPaymentInput[] | CardInfoUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: CardInfoCreateOrConnectWithoutPaymentInput | CardInfoCreateOrConnectWithoutPaymentInput[]
    upsert?: CardInfoUpsertWithWhereUniqueWithoutPaymentInput | CardInfoUpsertWithWhereUniqueWithoutPaymentInput[]
    createMany?: CardInfoCreateManyPaymentInputEnvelope
    set?: CardInfoWhereUniqueInput | CardInfoWhereUniqueInput[]
    disconnect?: CardInfoWhereUniqueInput | CardInfoWhereUniqueInput[]
    delete?: CardInfoWhereUniqueInput | CardInfoWhereUniqueInput[]
    connect?: CardInfoWhereUniqueInput | CardInfoWhereUniqueInput[]
    update?: CardInfoUpdateWithWhereUniqueWithoutPaymentInput | CardInfoUpdateWithWhereUniqueWithoutPaymentInput[]
    updateMany?: CardInfoUpdateManyWithWhereWithoutPaymentInput | CardInfoUpdateManyWithWhereWithoutPaymentInput[]
    deleteMany?: CardInfoScalarWhereInput | CardInfoScalarWhereInput[]
  }

  export type SalesUpdateOneRequiredWithoutPaymentsNestedInput = {
    create?: XOR<SalesCreateWithoutPaymentsInput, SalesUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: SalesCreateOrConnectWithoutPaymentsInput
    upsert?: SalesUpsertWithoutPaymentsInput
    connect?: SalesWhereUniqueInput
    update?: XOR<XOR<SalesUpdateToOneWithWhereWithoutPaymentsInput, SalesUpdateWithoutPaymentsInput>, SalesUncheckedUpdateWithoutPaymentsInput>
  }

  export type SplitBillUpdateManyWithoutPaymentNestedInput = {
    create?: XOR<SplitBillCreateWithoutPaymentInput, SplitBillUncheckedCreateWithoutPaymentInput> | SplitBillCreateWithoutPaymentInput[] | SplitBillUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: SplitBillCreateOrConnectWithoutPaymentInput | SplitBillCreateOrConnectWithoutPaymentInput[]
    upsert?: SplitBillUpsertWithWhereUniqueWithoutPaymentInput | SplitBillUpsertWithWhereUniqueWithoutPaymentInput[]
    createMany?: SplitBillCreateManyPaymentInputEnvelope
    set?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
    disconnect?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
    delete?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
    connect?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
    update?: SplitBillUpdateWithWhereUniqueWithoutPaymentInput | SplitBillUpdateWithWhereUniqueWithoutPaymentInput[]
    updateMany?: SplitBillUpdateManyWithWhereWithoutPaymentInput | SplitBillUpdateManyWithWhereWithoutPaymentInput[]
    deleteMany?: SplitBillScalarWhereInput | SplitBillScalarWhereInput[]
  }

  export type CardInfoUncheckedUpdateManyWithoutPaymentNestedInput = {
    create?: XOR<CardInfoCreateWithoutPaymentInput, CardInfoUncheckedCreateWithoutPaymentInput> | CardInfoCreateWithoutPaymentInput[] | CardInfoUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: CardInfoCreateOrConnectWithoutPaymentInput | CardInfoCreateOrConnectWithoutPaymentInput[]
    upsert?: CardInfoUpsertWithWhereUniqueWithoutPaymentInput | CardInfoUpsertWithWhereUniqueWithoutPaymentInput[]
    createMany?: CardInfoCreateManyPaymentInputEnvelope
    set?: CardInfoWhereUniqueInput | CardInfoWhereUniqueInput[]
    disconnect?: CardInfoWhereUniqueInput | CardInfoWhereUniqueInput[]
    delete?: CardInfoWhereUniqueInput | CardInfoWhereUniqueInput[]
    connect?: CardInfoWhereUniqueInput | CardInfoWhereUniqueInput[]
    update?: CardInfoUpdateWithWhereUniqueWithoutPaymentInput | CardInfoUpdateWithWhereUniqueWithoutPaymentInput[]
    updateMany?: CardInfoUpdateManyWithWhereWithoutPaymentInput | CardInfoUpdateManyWithWhereWithoutPaymentInput[]
    deleteMany?: CardInfoScalarWhereInput | CardInfoScalarWhereInput[]
  }

  export type SplitBillUncheckedUpdateManyWithoutPaymentNestedInput = {
    create?: XOR<SplitBillCreateWithoutPaymentInput, SplitBillUncheckedCreateWithoutPaymentInput> | SplitBillCreateWithoutPaymentInput[] | SplitBillUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: SplitBillCreateOrConnectWithoutPaymentInput | SplitBillCreateOrConnectWithoutPaymentInput[]
    upsert?: SplitBillUpsertWithWhereUniqueWithoutPaymentInput | SplitBillUpsertWithWhereUniqueWithoutPaymentInput[]
    createMany?: SplitBillCreateManyPaymentInputEnvelope
    set?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
    disconnect?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
    delete?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
    connect?: SplitBillWhereUniqueInput | SplitBillWhereUniqueInput[]
    update?: SplitBillUpdateWithWhereUniqueWithoutPaymentInput | SplitBillUpdateWithWhereUniqueWithoutPaymentInput[]
    updateMany?: SplitBillUpdateManyWithWhereWithoutPaymentInput | SplitBillUpdateManyWithWhereWithoutPaymentInput[]
    deleteMany?: SplitBillScalarWhereInput | SplitBillScalarWhereInput[]
  }

  export type SalesCreateNestedOneWithoutRegisterLogsInput = {
    create?: XOR<SalesCreateWithoutRegisterLogsInput, SalesUncheckedCreateWithoutRegisterLogsInput>
    connectOrCreate?: SalesCreateOrConnectWithoutRegisterLogsInput
    connect?: SalesWhereUniqueInput
  }

  export type SalesUpdateOneRequiredWithoutRegisterLogsNestedInput = {
    create?: XOR<SalesCreateWithoutRegisterLogsInput, SalesUncheckedCreateWithoutRegisterLogsInput>
    connectOrCreate?: SalesCreateOrConnectWithoutRegisterLogsInput
    upsert?: SalesUpsertWithoutRegisterLogsInput
    connect?: SalesWhereUniqueInput
    update?: XOR<XOR<SalesUpdateToOneWithWhereWithoutRegisterLogsInput, SalesUpdateWithoutRegisterLogsInput>, SalesUncheckedUpdateWithoutRegisterLogsInput>
  }

  export type PaymentCreateNestedOneWithoutCardInfosInput = {
    create?: XOR<PaymentCreateWithoutCardInfosInput, PaymentUncheckedCreateWithoutCardInfosInput>
    connectOrCreate?: PaymentCreateOrConnectWithoutCardInfosInput
    connect?: PaymentWhereUniqueInput
  }

  export type PaymentUpdateOneRequiredWithoutCardInfosNestedInput = {
    create?: XOR<PaymentCreateWithoutCardInfosInput, PaymentUncheckedCreateWithoutCardInfosInput>
    connectOrCreate?: PaymentCreateOrConnectWithoutCardInfosInput
    upsert?: PaymentUpsertWithoutCardInfosInput
    connect?: PaymentWhereUniqueInput
    update?: XOR<XOR<PaymentUpdateToOneWithWhereWithoutCardInfosInput, PaymentUpdateWithoutCardInfosInput>, PaymentUncheckedUpdateWithoutCardInfosInput>
  }

  export type DeclarationCreateNestedManyWithoutSessionInput = {
    create?: XOR<DeclarationCreateWithoutSessionInput, DeclarationUncheckedCreateWithoutSessionInput> | DeclarationCreateWithoutSessionInput[] | DeclarationUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: DeclarationCreateOrConnectWithoutSessionInput | DeclarationCreateOrConnectWithoutSessionInput[]
    createMany?: DeclarationCreateManySessionInputEnvelope
    connect?: DeclarationWhereUniqueInput | DeclarationWhereUniqueInput[]
  }

  export type PurchaseOrderCreateNestedManyWithoutSessionInput = {
    create?: XOR<PurchaseOrderCreateWithoutSessionInput, PurchaseOrderUncheckedCreateWithoutSessionInput> | PurchaseOrderCreateWithoutSessionInput[] | PurchaseOrderUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutSessionInput | PurchaseOrderCreateOrConnectWithoutSessionInput[]
    createMany?: PurchaseOrderCreateManySessionInputEnvelope
    connect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
  }

  export type DeliveryOrderCreateNestedManyWithoutSessionInput = {
    create?: XOR<DeliveryOrderCreateWithoutSessionInput, DeliveryOrderUncheckedCreateWithoutSessionInput> | DeliveryOrderCreateWithoutSessionInput[] | DeliveryOrderUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: DeliveryOrderCreateOrConnectWithoutSessionInput | DeliveryOrderCreateOrConnectWithoutSessionInput[]
    createMany?: DeliveryOrderCreateManySessionInputEnvelope
    connect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
  }

  export type InvoiceCreateNestedManyWithoutSessionInput = {
    create?: XOR<InvoiceCreateWithoutSessionInput, InvoiceUncheckedCreateWithoutSessionInput> | InvoiceCreateWithoutSessionInput[] | InvoiceUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutSessionInput | InvoiceCreateOrConnectWithoutSessionInput[]
    createMany?: InvoiceCreateManySessionInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type DeclarationUncheckedCreateNestedManyWithoutSessionInput = {
    create?: XOR<DeclarationCreateWithoutSessionInput, DeclarationUncheckedCreateWithoutSessionInput> | DeclarationCreateWithoutSessionInput[] | DeclarationUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: DeclarationCreateOrConnectWithoutSessionInput | DeclarationCreateOrConnectWithoutSessionInput[]
    createMany?: DeclarationCreateManySessionInputEnvelope
    connect?: DeclarationWhereUniqueInput | DeclarationWhereUniqueInput[]
  }

  export type PurchaseOrderUncheckedCreateNestedManyWithoutSessionInput = {
    create?: XOR<PurchaseOrderCreateWithoutSessionInput, PurchaseOrderUncheckedCreateWithoutSessionInput> | PurchaseOrderCreateWithoutSessionInput[] | PurchaseOrderUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutSessionInput | PurchaseOrderCreateOrConnectWithoutSessionInput[]
    createMany?: PurchaseOrderCreateManySessionInputEnvelope
    connect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
  }

  export type DeliveryOrderUncheckedCreateNestedManyWithoutSessionInput = {
    create?: XOR<DeliveryOrderCreateWithoutSessionInput, DeliveryOrderUncheckedCreateWithoutSessionInput> | DeliveryOrderCreateWithoutSessionInput[] | DeliveryOrderUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: DeliveryOrderCreateOrConnectWithoutSessionInput | DeliveryOrderCreateOrConnectWithoutSessionInput[]
    createMany?: DeliveryOrderCreateManySessionInputEnvelope
    connect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
  }

  export type InvoiceUncheckedCreateNestedManyWithoutSessionInput = {
    create?: XOR<InvoiceCreateWithoutSessionInput, InvoiceUncheckedCreateWithoutSessionInput> | InvoiceCreateWithoutSessionInput[] | InvoiceUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutSessionInput | InvoiceCreateOrConnectWithoutSessionInput[]
    createMany?: InvoiceCreateManySessionInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type DeclarationUpdateManyWithoutSessionNestedInput = {
    create?: XOR<DeclarationCreateWithoutSessionInput, DeclarationUncheckedCreateWithoutSessionInput> | DeclarationCreateWithoutSessionInput[] | DeclarationUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: DeclarationCreateOrConnectWithoutSessionInput | DeclarationCreateOrConnectWithoutSessionInput[]
    upsert?: DeclarationUpsertWithWhereUniqueWithoutSessionInput | DeclarationUpsertWithWhereUniqueWithoutSessionInput[]
    createMany?: DeclarationCreateManySessionInputEnvelope
    set?: DeclarationWhereUniqueInput | DeclarationWhereUniqueInput[]
    disconnect?: DeclarationWhereUniqueInput | DeclarationWhereUniqueInput[]
    delete?: DeclarationWhereUniqueInput | DeclarationWhereUniqueInput[]
    connect?: DeclarationWhereUniqueInput | DeclarationWhereUniqueInput[]
    update?: DeclarationUpdateWithWhereUniqueWithoutSessionInput | DeclarationUpdateWithWhereUniqueWithoutSessionInput[]
    updateMany?: DeclarationUpdateManyWithWhereWithoutSessionInput | DeclarationUpdateManyWithWhereWithoutSessionInput[]
    deleteMany?: DeclarationScalarWhereInput | DeclarationScalarWhereInput[]
  }

  export type PurchaseOrderUpdateManyWithoutSessionNestedInput = {
    create?: XOR<PurchaseOrderCreateWithoutSessionInput, PurchaseOrderUncheckedCreateWithoutSessionInput> | PurchaseOrderCreateWithoutSessionInput[] | PurchaseOrderUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutSessionInput | PurchaseOrderCreateOrConnectWithoutSessionInput[]
    upsert?: PurchaseOrderUpsertWithWhereUniqueWithoutSessionInput | PurchaseOrderUpsertWithWhereUniqueWithoutSessionInput[]
    createMany?: PurchaseOrderCreateManySessionInputEnvelope
    set?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    disconnect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    delete?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    connect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    update?: PurchaseOrderUpdateWithWhereUniqueWithoutSessionInput | PurchaseOrderUpdateWithWhereUniqueWithoutSessionInput[]
    updateMany?: PurchaseOrderUpdateManyWithWhereWithoutSessionInput | PurchaseOrderUpdateManyWithWhereWithoutSessionInput[]
    deleteMany?: PurchaseOrderScalarWhereInput | PurchaseOrderScalarWhereInput[]
  }

  export type DeliveryOrderUpdateManyWithoutSessionNestedInput = {
    create?: XOR<DeliveryOrderCreateWithoutSessionInput, DeliveryOrderUncheckedCreateWithoutSessionInput> | DeliveryOrderCreateWithoutSessionInput[] | DeliveryOrderUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: DeliveryOrderCreateOrConnectWithoutSessionInput | DeliveryOrderCreateOrConnectWithoutSessionInput[]
    upsert?: DeliveryOrderUpsertWithWhereUniqueWithoutSessionInput | DeliveryOrderUpsertWithWhereUniqueWithoutSessionInput[]
    createMany?: DeliveryOrderCreateManySessionInputEnvelope
    set?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    disconnect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    delete?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    connect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    update?: DeliveryOrderUpdateWithWhereUniqueWithoutSessionInput | DeliveryOrderUpdateWithWhereUniqueWithoutSessionInput[]
    updateMany?: DeliveryOrderUpdateManyWithWhereWithoutSessionInput | DeliveryOrderUpdateManyWithWhereWithoutSessionInput[]
    deleteMany?: DeliveryOrderScalarWhereInput | DeliveryOrderScalarWhereInput[]
  }

  export type InvoiceUpdateManyWithoutSessionNestedInput = {
    create?: XOR<InvoiceCreateWithoutSessionInput, InvoiceUncheckedCreateWithoutSessionInput> | InvoiceCreateWithoutSessionInput[] | InvoiceUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutSessionInput | InvoiceCreateOrConnectWithoutSessionInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutSessionInput | InvoiceUpsertWithWhereUniqueWithoutSessionInput[]
    createMany?: InvoiceCreateManySessionInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutSessionInput | InvoiceUpdateWithWhereUniqueWithoutSessionInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutSessionInput | InvoiceUpdateManyWithWhereWithoutSessionInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type DeclarationUncheckedUpdateManyWithoutSessionNestedInput = {
    create?: XOR<DeclarationCreateWithoutSessionInput, DeclarationUncheckedCreateWithoutSessionInput> | DeclarationCreateWithoutSessionInput[] | DeclarationUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: DeclarationCreateOrConnectWithoutSessionInput | DeclarationCreateOrConnectWithoutSessionInput[]
    upsert?: DeclarationUpsertWithWhereUniqueWithoutSessionInput | DeclarationUpsertWithWhereUniqueWithoutSessionInput[]
    createMany?: DeclarationCreateManySessionInputEnvelope
    set?: DeclarationWhereUniqueInput | DeclarationWhereUniqueInput[]
    disconnect?: DeclarationWhereUniqueInput | DeclarationWhereUniqueInput[]
    delete?: DeclarationWhereUniqueInput | DeclarationWhereUniqueInput[]
    connect?: DeclarationWhereUniqueInput | DeclarationWhereUniqueInput[]
    update?: DeclarationUpdateWithWhereUniqueWithoutSessionInput | DeclarationUpdateWithWhereUniqueWithoutSessionInput[]
    updateMany?: DeclarationUpdateManyWithWhereWithoutSessionInput | DeclarationUpdateManyWithWhereWithoutSessionInput[]
    deleteMany?: DeclarationScalarWhereInput | DeclarationScalarWhereInput[]
  }

  export type PurchaseOrderUncheckedUpdateManyWithoutSessionNestedInput = {
    create?: XOR<PurchaseOrderCreateWithoutSessionInput, PurchaseOrderUncheckedCreateWithoutSessionInput> | PurchaseOrderCreateWithoutSessionInput[] | PurchaseOrderUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: PurchaseOrderCreateOrConnectWithoutSessionInput | PurchaseOrderCreateOrConnectWithoutSessionInput[]
    upsert?: PurchaseOrderUpsertWithWhereUniqueWithoutSessionInput | PurchaseOrderUpsertWithWhereUniqueWithoutSessionInput[]
    createMany?: PurchaseOrderCreateManySessionInputEnvelope
    set?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    disconnect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    delete?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    connect?: PurchaseOrderWhereUniqueInput | PurchaseOrderWhereUniqueInput[]
    update?: PurchaseOrderUpdateWithWhereUniqueWithoutSessionInput | PurchaseOrderUpdateWithWhereUniqueWithoutSessionInput[]
    updateMany?: PurchaseOrderUpdateManyWithWhereWithoutSessionInput | PurchaseOrderUpdateManyWithWhereWithoutSessionInput[]
    deleteMany?: PurchaseOrderScalarWhereInput | PurchaseOrderScalarWhereInput[]
  }

  export type DeliveryOrderUncheckedUpdateManyWithoutSessionNestedInput = {
    create?: XOR<DeliveryOrderCreateWithoutSessionInput, DeliveryOrderUncheckedCreateWithoutSessionInput> | DeliveryOrderCreateWithoutSessionInput[] | DeliveryOrderUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: DeliveryOrderCreateOrConnectWithoutSessionInput | DeliveryOrderCreateOrConnectWithoutSessionInput[]
    upsert?: DeliveryOrderUpsertWithWhereUniqueWithoutSessionInput | DeliveryOrderUpsertWithWhereUniqueWithoutSessionInput[]
    createMany?: DeliveryOrderCreateManySessionInputEnvelope
    set?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    disconnect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    delete?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    connect?: DeliveryOrderWhereUniqueInput | DeliveryOrderWhereUniqueInput[]
    update?: DeliveryOrderUpdateWithWhereUniqueWithoutSessionInput | DeliveryOrderUpdateWithWhereUniqueWithoutSessionInput[]
    updateMany?: DeliveryOrderUpdateManyWithWhereWithoutSessionInput | DeliveryOrderUpdateManyWithWhereWithoutSessionInput[]
    deleteMany?: DeliveryOrderScalarWhereInput | DeliveryOrderScalarWhereInput[]
  }

  export type InvoiceUncheckedUpdateManyWithoutSessionNestedInput = {
    create?: XOR<InvoiceCreateWithoutSessionInput, InvoiceUncheckedCreateWithoutSessionInput> | InvoiceCreateWithoutSessionInput[] | InvoiceUncheckedCreateWithoutSessionInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutSessionInput | InvoiceCreateOrConnectWithoutSessionInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutSessionInput | InvoiceUpsertWithWhereUniqueWithoutSessionInput[]
    createMany?: InvoiceCreateManySessionInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutSessionInput | InvoiceUpdateWithWhereUniqueWithoutSessionInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutSessionInput | InvoiceUpdateManyWithWhereWithoutSessionInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type SessionCreateNestedOneWithoutDeclarationsInput = {
    create?: XOR<SessionCreateWithoutDeclarationsInput, SessionUncheckedCreateWithoutDeclarationsInput>
    connectOrCreate?: SessionCreateOrConnectWithoutDeclarationsInput
    connect?: SessionWhereUniqueInput
  }

  export type SessionUpdateOneRequiredWithoutDeclarationsNestedInput = {
    create?: XOR<SessionCreateWithoutDeclarationsInput, SessionUncheckedCreateWithoutDeclarationsInput>
    connectOrCreate?: SessionCreateOrConnectWithoutDeclarationsInput
    upsert?: SessionUpsertWithoutDeclarationsInput
    connect?: SessionWhereUniqueInput
    update?: XOR<XOR<SessionUpdateToOneWithWhereWithoutDeclarationsInput, SessionUpdateWithoutDeclarationsInput>, SessionUncheckedUpdateWithoutDeclarationsInput>
  }

  export type ItemCreateNestedOneWithoutStockBalanceInput = {
    create?: XOR<ItemCreateWithoutStockBalanceInput, ItemUncheckedCreateWithoutStockBalanceInput>
    connectOrCreate?: ItemCreateOrConnectWithoutStockBalanceInput
    connect?: ItemWhereUniqueInput
  }

  export type OutletCreateNestedOneWithoutStockBalancesInput = {
    create?: XOR<OutletCreateWithoutStockBalancesInput, OutletUncheckedCreateWithoutStockBalancesInput>
    connectOrCreate?: OutletCreateOrConnectWithoutStockBalancesInput
    connect?: OutletWhereUniqueInput
  }

  export type ItemUpdateOneRequiredWithoutStockBalanceNestedInput = {
    create?: XOR<ItemCreateWithoutStockBalanceInput, ItemUncheckedCreateWithoutStockBalanceInput>
    connectOrCreate?: ItemCreateOrConnectWithoutStockBalanceInput
    upsert?: ItemUpsertWithoutStockBalanceInput
    connect?: ItemWhereUniqueInput
    update?: XOR<XOR<ItemUpdateToOneWithWhereWithoutStockBalanceInput, ItemUpdateWithoutStockBalanceInput>, ItemUncheckedUpdateWithoutStockBalanceInput>
  }

  export type OutletUpdateOneRequiredWithoutStockBalancesNestedInput = {
    create?: XOR<OutletCreateWithoutStockBalancesInput, OutletUncheckedCreateWithoutStockBalancesInput>
    connectOrCreate?: OutletCreateOrConnectWithoutStockBalancesInput
    upsert?: OutletUpsertWithoutStockBalancesInput
    connect?: OutletWhereUniqueInput
    update?: XOR<XOR<OutletUpdateToOneWithWhereWithoutStockBalancesInput, OutletUpdateWithoutStockBalancesInput>, OutletUncheckedUpdateWithoutStockBalancesInput>
  }

  export type ItemCreateNestedOneWithoutStockReceiptsInput = {
    create?: XOR<ItemCreateWithoutStockReceiptsInput, ItemUncheckedCreateWithoutStockReceiptsInput>
    connectOrCreate?: ItemCreateOrConnectWithoutStockReceiptsInput
    connect?: ItemWhereUniqueInput
  }

  export type OutletCreateNestedOneWithoutStockReceiptsInput = {
    create?: XOR<OutletCreateWithoutStockReceiptsInput, OutletUncheckedCreateWithoutStockReceiptsInput>
    connectOrCreate?: OutletCreateOrConnectWithoutStockReceiptsInput
    connect?: OutletWhereUniqueInput
  }

  export type ItemUpdateOneRequiredWithoutStockReceiptsNestedInput = {
    create?: XOR<ItemCreateWithoutStockReceiptsInput, ItemUncheckedCreateWithoutStockReceiptsInput>
    connectOrCreate?: ItemCreateOrConnectWithoutStockReceiptsInput
    upsert?: ItemUpsertWithoutStockReceiptsInput
    connect?: ItemWhereUniqueInput
    update?: XOR<XOR<ItemUpdateToOneWithWhereWithoutStockReceiptsInput, ItemUpdateWithoutStockReceiptsInput>, ItemUncheckedUpdateWithoutStockReceiptsInput>
  }

  export type OutletUpdateOneRequiredWithoutStockReceiptsNestedInput = {
    create?: XOR<OutletCreateWithoutStockReceiptsInput, OutletUncheckedCreateWithoutStockReceiptsInput>
    connectOrCreate?: OutletCreateOrConnectWithoutStockReceiptsInput
    upsert?: OutletUpsertWithoutStockReceiptsInput
    connect?: OutletWhereUniqueInput
    update?: XOR<XOR<OutletUpdateToOneWithWhereWithoutStockReceiptsInput, OutletUpdateWithoutStockReceiptsInput>, OutletUncheckedUpdateWithoutStockReceiptsInput>
  }

  export type ItemCreateNestedOneWithoutStockMovementsInput = {
    create?: XOR<ItemCreateWithoutStockMovementsInput, ItemUncheckedCreateWithoutStockMovementsInput>
    connectOrCreate?: ItemCreateOrConnectWithoutStockMovementsInput
    connect?: ItemWhereUniqueInput
  }

  export type OutletCreateNestedOneWithoutStockMovementsInput = {
    create?: XOR<OutletCreateWithoutStockMovementsInput, OutletUncheckedCreateWithoutStockMovementsInput>
    connectOrCreate?: OutletCreateOrConnectWithoutStockMovementsInput
    connect?: OutletWhereUniqueInput
  }

  export type ItemUpdateOneRequiredWithoutStockMovementsNestedInput = {
    create?: XOR<ItemCreateWithoutStockMovementsInput, ItemUncheckedCreateWithoutStockMovementsInput>
    connectOrCreate?: ItemCreateOrConnectWithoutStockMovementsInput
    upsert?: ItemUpsertWithoutStockMovementsInput
    connect?: ItemWhereUniqueInput
    update?: XOR<XOR<ItemUpdateToOneWithWhereWithoutStockMovementsInput, ItemUpdateWithoutStockMovementsInput>, ItemUncheckedUpdateWithoutStockMovementsInput>
  }

  export type OutletUpdateOneRequiredWithoutStockMovementsNestedInput = {
    create?: XOR<OutletCreateWithoutStockMovementsInput, OutletUncheckedCreateWithoutStockMovementsInput>
    connectOrCreate?: OutletCreateOrConnectWithoutStockMovementsInput
    upsert?: OutletUpsertWithoutStockMovementsInput
    connect?: OutletWhereUniqueInput
    update?: XOR<XOR<OutletUpdateToOneWithWhereWithoutStockMovementsInput, OutletUpdateWithoutStockMovementsInput>, OutletUncheckedUpdateWithoutStockMovementsInput>
  }

  export type ItemCreateNestedOneWithoutStockSnapshotsInput = {
    create?: XOR<ItemCreateWithoutStockSnapshotsInput, ItemUncheckedCreateWithoutStockSnapshotsInput>
    connectOrCreate?: ItemCreateOrConnectWithoutStockSnapshotsInput
    connect?: ItemWhereUniqueInput
  }

  export type OutletCreateNestedOneWithoutStockSnapshotsInput = {
    create?: XOR<OutletCreateWithoutStockSnapshotsInput, OutletUncheckedCreateWithoutStockSnapshotsInput>
    connectOrCreate?: OutletCreateOrConnectWithoutStockSnapshotsInput
    connect?: OutletWhereUniqueInput
  }

  export type ItemUpdateOneRequiredWithoutStockSnapshotsNestedInput = {
    create?: XOR<ItemCreateWithoutStockSnapshotsInput, ItemUncheckedCreateWithoutStockSnapshotsInput>
    connectOrCreate?: ItemCreateOrConnectWithoutStockSnapshotsInput
    upsert?: ItemUpsertWithoutStockSnapshotsInput
    connect?: ItemWhereUniqueInput
    update?: XOR<XOR<ItemUpdateToOneWithWhereWithoutStockSnapshotsInput, ItemUpdateWithoutStockSnapshotsInput>, ItemUncheckedUpdateWithoutStockSnapshotsInput>
  }

  export type OutletUpdateOneRequiredWithoutStockSnapshotsNestedInput = {
    create?: XOR<OutletCreateWithoutStockSnapshotsInput, OutletUncheckedCreateWithoutStockSnapshotsInput>
    connectOrCreate?: OutletCreateOrConnectWithoutStockSnapshotsInput
    upsert?: OutletUpsertWithoutStockSnapshotsInput
    connect?: OutletWhereUniqueInput
    update?: XOR<XOR<OutletUpdateToOneWithWhereWithoutStockSnapshotsInput, OutletUpdateWithoutStockSnapshotsInput>, OutletUncheckedUpdateWithoutStockSnapshotsInput>
  }

  export type MenuCategoryCreateNestedManyWithoutMenuProfileInput = {
    create?: XOR<MenuCategoryCreateWithoutMenuProfileInput, MenuCategoryUncheckedCreateWithoutMenuProfileInput> | MenuCategoryCreateWithoutMenuProfileInput[] | MenuCategoryUncheckedCreateWithoutMenuProfileInput[]
    connectOrCreate?: MenuCategoryCreateOrConnectWithoutMenuProfileInput | MenuCategoryCreateOrConnectWithoutMenuProfileInput[]
    createMany?: MenuCategoryCreateManyMenuProfileInputEnvelope
    connect?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
  }

  export type MenuCategoryUncheckedCreateNestedManyWithoutMenuProfileInput = {
    create?: XOR<MenuCategoryCreateWithoutMenuProfileInput, MenuCategoryUncheckedCreateWithoutMenuProfileInput> | MenuCategoryCreateWithoutMenuProfileInput[] | MenuCategoryUncheckedCreateWithoutMenuProfileInput[]
    connectOrCreate?: MenuCategoryCreateOrConnectWithoutMenuProfileInput | MenuCategoryCreateOrConnectWithoutMenuProfileInput[]
    createMany?: MenuCategoryCreateManyMenuProfileInputEnvelope
    connect?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
  }

  export type MenuCategoryUpdateManyWithoutMenuProfileNestedInput = {
    create?: XOR<MenuCategoryCreateWithoutMenuProfileInput, MenuCategoryUncheckedCreateWithoutMenuProfileInput> | MenuCategoryCreateWithoutMenuProfileInput[] | MenuCategoryUncheckedCreateWithoutMenuProfileInput[]
    connectOrCreate?: MenuCategoryCreateOrConnectWithoutMenuProfileInput | MenuCategoryCreateOrConnectWithoutMenuProfileInput[]
    upsert?: MenuCategoryUpsertWithWhereUniqueWithoutMenuProfileInput | MenuCategoryUpsertWithWhereUniqueWithoutMenuProfileInput[]
    createMany?: MenuCategoryCreateManyMenuProfileInputEnvelope
    set?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
    disconnect?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
    delete?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
    connect?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
    update?: MenuCategoryUpdateWithWhereUniqueWithoutMenuProfileInput | MenuCategoryUpdateWithWhereUniqueWithoutMenuProfileInput[]
    updateMany?: MenuCategoryUpdateManyWithWhereWithoutMenuProfileInput | MenuCategoryUpdateManyWithWhereWithoutMenuProfileInput[]
    deleteMany?: MenuCategoryScalarWhereInput | MenuCategoryScalarWhereInput[]
  }

  export type MenuCategoryUncheckedUpdateManyWithoutMenuProfileNestedInput = {
    create?: XOR<MenuCategoryCreateWithoutMenuProfileInput, MenuCategoryUncheckedCreateWithoutMenuProfileInput> | MenuCategoryCreateWithoutMenuProfileInput[] | MenuCategoryUncheckedCreateWithoutMenuProfileInput[]
    connectOrCreate?: MenuCategoryCreateOrConnectWithoutMenuProfileInput | MenuCategoryCreateOrConnectWithoutMenuProfileInput[]
    upsert?: MenuCategoryUpsertWithWhereUniqueWithoutMenuProfileInput | MenuCategoryUpsertWithWhereUniqueWithoutMenuProfileInput[]
    createMany?: MenuCategoryCreateManyMenuProfileInputEnvelope
    set?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
    disconnect?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
    delete?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
    connect?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
    update?: MenuCategoryUpdateWithWhereUniqueWithoutMenuProfileInput | MenuCategoryUpdateWithWhereUniqueWithoutMenuProfileInput[]
    updateMany?: MenuCategoryUpdateManyWithWhereWithoutMenuProfileInput | MenuCategoryUpdateManyWithWhereWithoutMenuProfileInput[]
    deleteMany?: MenuCategoryScalarWhereInput | MenuCategoryScalarWhereInput[]
  }

  export type MenuProfileCreateNestedOneWithoutMenuCategoriesInput = {
    create?: XOR<MenuProfileCreateWithoutMenuCategoriesInput, MenuProfileUncheckedCreateWithoutMenuCategoriesInput>
    connectOrCreate?: MenuProfileCreateOrConnectWithoutMenuCategoriesInput
    connect?: MenuProfileWhereUniqueInput
  }

  export type MenuItemCreateNestedManyWithoutMenuCategoryInput = {
    create?: XOR<MenuItemCreateWithoutMenuCategoryInput, MenuItemUncheckedCreateWithoutMenuCategoryInput> | MenuItemCreateWithoutMenuCategoryInput[] | MenuItemUncheckedCreateWithoutMenuCategoryInput[]
    connectOrCreate?: MenuItemCreateOrConnectWithoutMenuCategoryInput | MenuItemCreateOrConnectWithoutMenuCategoryInput[]
    createMany?: MenuItemCreateManyMenuCategoryInputEnvelope
    connect?: MenuItemWhereUniqueInput | MenuItemWhereUniqueInput[]
  }

  export type MenuItemUncheckedCreateNestedManyWithoutMenuCategoryInput = {
    create?: XOR<MenuItemCreateWithoutMenuCategoryInput, MenuItemUncheckedCreateWithoutMenuCategoryInput> | MenuItemCreateWithoutMenuCategoryInput[] | MenuItemUncheckedCreateWithoutMenuCategoryInput[]
    connectOrCreate?: MenuItemCreateOrConnectWithoutMenuCategoryInput | MenuItemCreateOrConnectWithoutMenuCategoryInput[]
    createMany?: MenuItemCreateManyMenuCategoryInputEnvelope
    connect?: MenuItemWhereUniqueInput | MenuItemWhereUniqueInput[]
  }

  export type MenuProfileUpdateOneRequiredWithoutMenuCategoriesNestedInput = {
    create?: XOR<MenuProfileCreateWithoutMenuCategoriesInput, MenuProfileUncheckedCreateWithoutMenuCategoriesInput>
    connectOrCreate?: MenuProfileCreateOrConnectWithoutMenuCategoriesInput
    upsert?: MenuProfileUpsertWithoutMenuCategoriesInput
    connect?: MenuProfileWhereUniqueInput
    update?: XOR<XOR<MenuProfileUpdateToOneWithWhereWithoutMenuCategoriesInput, MenuProfileUpdateWithoutMenuCategoriesInput>, MenuProfileUncheckedUpdateWithoutMenuCategoriesInput>
  }

  export type MenuItemUpdateManyWithoutMenuCategoryNestedInput = {
    create?: XOR<MenuItemCreateWithoutMenuCategoryInput, MenuItemUncheckedCreateWithoutMenuCategoryInput> | MenuItemCreateWithoutMenuCategoryInput[] | MenuItemUncheckedCreateWithoutMenuCategoryInput[]
    connectOrCreate?: MenuItemCreateOrConnectWithoutMenuCategoryInput | MenuItemCreateOrConnectWithoutMenuCategoryInput[]
    upsert?: MenuItemUpsertWithWhereUniqueWithoutMenuCategoryInput | MenuItemUpsertWithWhereUniqueWithoutMenuCategoryInput[]
    createMany?: MenuItemCreateManyMenuCategoryInputEnvelope
    set?: MenuItemWhereUniqueInput | MenuItemWhereUniqueInput[]
    disconnect?: MenuItemWhereUniqueInput | MenuItemWhereUniqueInput[]
    delete?: MenuItemWhereUniqueInput | MenuItemWhereUniqueInput[]
    connect?: MenuItemWhereUniqueInput | MenuItemWhereUniqueInput[]
    update?: MenuItemUpdateWithWhereUniqueWithoutMenuCategoryInput | MenuItemUpdateWithWhereUniqueWithoutMenuCategoryInput[]
    updateMany?: MenuItemUpdateManyWithWhereWithoutMenuCategoryInput | MenuItemUpdateManyWithWhereWithoutMenuCategoryInput[]
    deleteMany?: MenuItemScalarWhereInput | MenuItemScalarWhereInput[]
  }

  export type MenuItemUncheckedUpdateManyWithoutMenuCategoryNestedInput = {
    create?: XOR<MenuItemCreateWithoutMenuCategoryInput, MenuItemUncheckedCreateWithoutMenuCategoryInput> | MenuItemCreateWithoutMenuCategoryInput[] | MenuItemUncheckedCreateWithoutMenuCategoryInput[]
    connectOrCreate?: MenuItemCreateOrConnectWithoutMenuCategoryInput | MenuItemCreateOrConnectWithoutMenuCategoryInput[]
    upsert?: MenuItemUpsertWithWhereUniqueWithoutMenuCategoryInput | MenuItemUpsertWithWhereUniqueWithoutMenuCategoryInput[]
    createMany?: MenuItemCreateManyMenuCategoryInputEnvelope
    set?: MenuItemWhereUniqueInput | MenuItemWhereUniqueInput[]
    disconnect?: MenuItemWhereUniqueInput | MenuItemWhereUniqueInput[]
    delete?: MenuItemWhereUniqueInput | MenuItemWhereUniqueInput[]
    connect?: MenuItemWhereUniqueInput | MenuItemWhereUniqueInput[]
    update?: MenuItemUpdateWithWhereUniqueWithoutMenuCategoryInput | MenuItemUpdateWithWhereUniqueWithoutMenuCategoryInput[]
    updateMany?: MenuItemUpdateManyWithWhereWithoutMenuCategoryInput | MenuItemUpdateManyWithWhereWithoutMenuCategoryInput[]
    deleteMany?: MenuItemScalarWhereInput | MenuItemScalarWhereInput[]
  }

  export type MenuCategoryCreateNestedOneWithoutMenuItemsInput = {
    create?: XOR<MenuCategoryCreateWithoutMenuItemsInput, MenuCategoryUncheckedCreateWithoutMenuItemsInput>
    connectOrCreate?: MenuCategoryCreateOrConnectWithoutMenuItemsInput
    connect?: MenuCategoryWhereUniqueInput
  }

  export type MenuItemModifierGroupCreateNestedManyWithoutMenuItemInput = {
    create?: XOR<MenuItemModifierGroupCreateWithoutMenuItemInput, MenuItemModifierGroupUncheckedCreateWithoutMenuItemInput> | MenuItemModifierGroupCreateWithoutMenuItemInput[] | MenuItemModifierGroupUncheckedCreateWithoutMenuItemInput[]
    connectOrCreate?: MenuItemModifierGroupCreateOrConnectWithoutMenuItemInput | MenuItemModifierGroupCreateOrConnectWithoutMenuItemInput[]
    createMany?: MenuItemModifierGroupCreateManyMenuItemInputEnvelope
    connect?: MenuItemModifierGroupWhereUniqueInput | MenuItemModifierGroupWhereUniqueInput[]
  }

  export type RecipeCreateNestedManyWithoutMenuItemInput = {
    create?: XOR<RecipeCreateWithoutMenuItemInput, RecipeUncheckedCreateWithoutMenuItemInput> | RecipeCreateWithoutMenuItemInput[] | RecipeUncheckedCreateWithoutMenuItemInput[]
    connectOrCreate?: RecipeCreateOrConnectWithoutMenuItemInput | RecipeCreateOrConnectWithoutMenuItemInput[]
    createMany?: RecipeCreateManyMenuItemInputEnvelope
    connect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
  }

  export type MenuItemModifierGroupUncheckedCreateNestedManyWithoutMenuItemInput = {
    create?: XOR<MenuItemModifierGroupCreateWithoutMenuItemInput, MenuItemModifierGroupUncheckedCreateWithoutMenuItemInput> | MenuItemModifierGroupCreateWithoutMenuItemInput[] | MenuItemModifierGroupUncheckedCreateWithoutMenuItemInput[]
    connectOrCreate?: MenuItemModifierGroupCreateOrConnectWithoutMenuItemInput | MenuItemModifierGroupCreateOrConnectWithoutMenuItemInput[]
    createMany?: MenuItemModifierGroupCreateManyMenuItemInputEnvelope
    connect?: MenuItemModifierGroupWhereUniqueInput | MenuItemModifierGroupWhereUniqueInput[]
  }

  export type RecipeUncheckedCreateNestedManyWithoutMenuItemInput = {
    create?: XOR<RecipeCreateWithoutMenuItemInput, RecipeUncheckedCreateWithoutMenuItemInput> | RecipeCreateWithoutMenuItemInput[] | RecipeUncheckedCreateWithoutMenuItemInput[]
    connectOrCreate?: RecipeCreateOrConnectWithoutMenuItemInput | RecipeCreateOrConnectWithoutMenuItemInput[]
    createMany?: RecipeCreateManyMenuItemInputEnvelope
    connect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
  }

  export type MenuCategoryUpdateOneRequiredWithoutMenuItemsNestedInput = {
    create?: XOR<MenuCategoryCreateWithoutMenuItemsInput, MenuCategoryUncheckedCreateWithoutMenuItemsInput>
    connectOrCreate?: MenuCategoryCreateOrConnectWithoutMenuItemsInput
    upsert?: MenuCategoryUpsertWithoutMenuItemsInput
    connect?: MenuCategoryWhereUniqueInput
    update?: XOR<XOR<MenuCategoryUpdateToOneWithWhereWithoutMenuItemsInput, MenuCategoryUpdateWithoutMenuItemsInput>, MenuCategoryUncheckedUpdateWithoutMenuItemsInput>
  }

  export type MenuItemModifierGroupUpdateManyWithoutMenuItemNestedInput = {
    create?: XOR<MenuItemModifierGroupCreateWithoutMenuItemInput, MenuItemModifierGroupUncheckedCreateWithoutMenuItemInput> | MenuItemModifierGroupCreateWithoutMenuItemInput[] | MenuItemModifierGroupUncheckedCreateWithoutMenuItemInput[]
    connectOrCreate?: MenuItemModifierGroupCreateOrConnectWithoutMenuItemInput | MenuItemModifierGroupCreateOrConnectWithoutMenuItemInput[]
    upsert?: MenuItemModifierGroupUpsertWithWhereUniqueWithoutMenuItemInput | MenuItemModifierGroupUpsertWithWhereUniqueWithoutMenuItemInput[]
    createMany?: MenuItemModifierGroupCreateManyMenuItemInputEnvelope
    set?: MenuItemModifierGroupWhereUniqueInput | MenuItemModifierGroupWhereUniqueInput[]
    disconnect?: MenuItemModifierGroupWhereUniqueInput | MenuItemModifierGroupWhereUniqueInput[]
    delete?: MenuItemModifierGroupWhereUniqueInput | MenuItemModifierGroupWhereUniqueInput[]
    connect?: MenuItemModifierGroupWhereUniqueInput | MenuItemModifierGroupWhereUniqueInput[]
    update?: MenuItemModifierGroupUpdateWithWhereUniqueWithoutMenuItemInput | MenuItemModifierGroupUpdateWithWhereUniqueWithoutMenuItemInput[]
    updateMany?: MenuItemModifierGroupUpdateManyWithWhereWithoutMenuItemInput | MenuItemModifierGroupUpdateManyWithWhereWithoutMenuItemInput[]
    deleteMany?: MenuItemModifierGroupScalarWhereInput | MenuItemModifierGroupScalarWhereInput[]
  }

  export type RecipeUpdateManyWithoutMenuItemNestedInput = {
    create?: XOR<RecipeCreateWithoutMenuItemInput, RecipeUncheckedCreateWithoutMenuItemInput> | RecipeCreateWithoutMenuItemInput[] | RecipeUncheckedCreateWithoutMenuItemInput[]
    connectOrCreate?: RecipeCreateOrConnectWithoutMenuItemInput | RecipeCreateOrConnectWithoutMenuItemInput[]
    upsert?: RecipeUpsertWithWhereUniqueWithoutMenuItemInput | RecipeUpsertWithWhereUniqueWithoutMenuItemInput[]
    createMany?: RecipeCreateManyMenuItemInputEnvelope
    set?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    disconnect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    delete?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    connect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    update?: RecipeUpdateWithWhereUniqueWithoutMenuItemInput | RecipeUpdateWithWhereUniqueWithoutMenuItemInput[]
    updateMany?: RecipeUpdateManyWithWhereWithoutMenuItemInput | RecipeUpdateManyWithWhereWithoutMenuItemInput[]
    deleteMany?: RecipeScalarWhereInput | RecipeScalarWhereInput[]
  }

  export type MenuItemModifierGroupUncheckedUpdateManyWithoutMenuItemNestedInput = {
    create?: XOR<MenuItemModifierGroupCreateWithoutMenuItemInput, MenuItemModifierGroupUncheckedCreateWithoutMenuItemInput> | MenuItemModifierGroupCreateWithoutMenuItemInput[] | MenuItemModifierGroupUncheckedCreateWithoutMenuItemInput[]
    connectOrCreate?: MenuItemModifierGroupCreateOrConnectWithoutMenuItemInput | MenuItemModifierGroupCreateOrConnectWithoutMenuItemInput[]
    upsert?: MenuItemModifierGroupUpsertWithWhereUniqueWithoutMenuItemInput | MenuItemModifierGroupUpsertWithWhereUniqueWithoutMenuItemInput[]
    createMany?: MenuItemModifierGroupCreateManyMenuItemInputEnvelope
    set?: MenuItemModifierGroupWhereUniqueInput | MenuItemModifierGroupWhereUniqueInput[]
    disconnect?: MenuItemModifierGroupWhereUniqueInput | MenuItemModifierGroupWhereUniqueInput[]
    delete?: MenuItemModifierGroupWhereUniqueInput | MenuItemModifierGroupWhereUniqueInput[]
    connect?: MenuItemModifierGroupWhereUniqueInput | MenuItemModifierGroupWhereUniqueInput[]
    update?: MenuItemModifierGroupUpdateWithWhereUniqueWithoutMenuItemInput | MenuItemModifierGroupUpdateWithWhereUniqueWithoutMenuItemInput[]
    updateMany?: MenuItemModifierGroupUpdateManyWithWhereWithoutMenuItemInput | MenuItemModifierGroupUpdateManyWithWhereWithoutMenuItemInput[]
    deleteMany?: MenuItemModifierGroupScalarWhereInput | MenuItemModifierGroupScalarWhereInput[]
  }

  export type RecipeUncheckedUpdateManyWithoutMenuItemNestedInput = {
    create?: XOR<RecipeCreateWithoutMenuItemInput, RecipeUncheckedCreateWithoutMenuItemInput> | RecipeCreateWithoutMenuItemInput[] | RecipeUncheckedCreateWithoutMenuItemInput[]
    connectOrCreate?: RecipeCreateOrConnectWithoutMenuItemInput | RecipeCreateOrConnectWithoutMenuItemInput[]
    upsert?: RecipeUpsertWithWhereUniqueWithoutMenuItemInput | RecipeUpsertWithWhereUniqueWithoutMenuItemInput[]
    createMany?: RecipeCreateManyMenuItemInputEnvelope
    set?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    disconnect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    delete?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    connect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    update?: RecipeUpdateWithWhereUniqueWithoutMenuItemInput | RecipeUpdateWithWhereUniqueWithoutMenuItemInput[]
    updateMany?: RecipeUpdateManyWithWhereWithoutMenuItemInput | RecipeUpdateManyWithWhereWithoutMenuItemInput[]
    deleteMany?: RecipeScalarWhereInput | RecipeScalarWhereInput[]
  }

  export type MenuItemCreateNestedOneWithoutMenuItemModifierGroupsInput = {
    create?: XOR<MenuItemCreateWithoutMenuItemModifierGroupsInput, MenuItemUncheckedCreateWithoutMenuItemModifierGroupsInput>
    connectOrCreate?: MenuItemCreateOrConnectWithoutMenuItemModifierGroupsInput
    connect?: MenuItemWhereUniqueInput
  }

  export type MenuItemModifierCreateNestedManyWithoutMenuItemModifierGroupInput = {
    create?: XOR<MenuItemModifierCreateWithoutMenuItemModifierGroupInput, MenuItemModifierUncheckedCreateWithoutMenuItemModifierGroupInput> | MenuItemModifierCreateWithoutMenuItemModifierGroupInput[] | MenuItemModifierUncheckedCreateWithoutMenuItemModifierGroupInput[]
    connectOrCreate?: MenuItemModifierCreateOrConnectWithoutMenuItemModifierGroupInput | MenuItemModifierCreateOrConnectWithoutMenuItemModifierGroupInput[]
    createMany?: MenuItemModifierCreateManyMenuItemModifierGroupInputEnvelope
    connect?: MenuItemModifierWhereUniqueInput | MenuItemModifierWhereUniqueInput[]
  }

  export type MenuItemModifierUncheckedCreateNestedManyWithoutMenuItemModifierGroupInput = {
    create?: XOR<MenuItemModifierCreateWithoutMenuItemModifierGroupInput, MenuItemModifierUncheckedCreateWithoutMenuItemModifierGroupInput> | MenuItemModifierCreateWithoutMenuItemModifierGroupInput[] | MenuItemModifierUncheckedCreateWithoutMenuItemModifierGroupInput[]
    connectOrCreate?: MenuItemModifierCreateOrConnectWithoutMenuItemModifierGroupInput | MenuItemModifierCreateOrConnectWithoutMenuItemModifierGroupInput[]
    createMany?: MenuItemModifierCreateManyMenuItemModifierGroupInputEnvelope
    connect?: MenuItemModifierWhereUniqueInput | MenuItemModifierWhereUniqueInput[]
  }

  export type MenuItemUpdateOneRequiredWithoutMenuItemModifierGroupsNestedInput = {
    create?: XOR<MenuItemCreateWithoutMenuItemModifierGroupsInput, MenuItemUncheckedCreateWithoutMenuItemModifierGroupsInput>
    connectOrCreate?: MenuItemCreateOrConnectWithoutMenuItemModifierGroupsInput
    upsert?: MenuItemUpsertWithoutMenuItemModifierGroupsInput
    connect?: MenuItemWhereUniqueInput
    update?: XOR<XOR<MenuItemUpdateToOneWithWhereWithoutMenuItemModifierGroupsInput, MenuItemUpdateWithoutMenuItemModifierGroupsInput>, MenuItemUncheckedUpdateWithoutMenuItemModifierGroupsInput>
  }

  export type MenuItemModifierUpdateManyWithoutMenuItemModifierGroupNestedInput = {
    create?: XOR<MenuItemModifierCreateWithoutMenuItemModifierGroupInput, MenuItemModifierUncheckedCreateWithoutMenuItemModifierGroupInput> | MenuItemModifierCreateWithoutMenuItemModifierGroupInput[] | MenuItemModifierUncheckedCreateWithoutMenuItemModifierGroupInput[]
    connectOrCreate?: MenuItemModifierCreateOrConnectWithoutMenuItemModifierGroupInput | MenuItemModifierCreateOrConnectWithoutMenuItemModifierGroupInput[]
    upsert?: MenuItemModifierUpsertWithWhereUniqueWithoutMenuItemModifierGroupInput | MenuItemModifierUpsertWithWhereUniqueWithoutMenuItemModifierGroupInput[]
    createMany?: MenuItemModifierCreateManyMenuItemModifierGroupInputEnvelope
    set?: MenuItemModifierWhereUniqueInput | MenuItemModifierWhereUniqueInput[]
    disconnect?: MenuItemModifierWhereUniqueInput | MenuItemModifierWhereUniqueInput[]
    delete?: MenuItemModifierWhereUniqueInput | MenuItemModifierWhereUniqueInput[]
    connect?: MenuItemModifierWhereUniqueInput | MenuItemModifierWhereUniqueInput[]
    update?: MenuItemModifierUpdateWithWhereUniqueWithoutMenuItemModifierGroupInput | MenuItemModifierUpdateWithWhereUniqueWithoutMenuItemModifierGroupInput[]
    updateMany?: MenuItemModifierUpdateManyWithWhereWithoutMenuItemModifierGroupInput | MenuItemModifierUpdateManyWithWhereWithoutMenuItemModifierGroupInput[]
    deleteMany?: MenuItemModifierScalarWhereInput | MenuItemModifierScalarWhereInput[]
  }

  export type MenuItemModifierUncheckedUpdateManyWithoutMenuItemModifierGroupNestedInput = {
    create?: XOR<MenuItemModifierCreateWithoutMenuItemModifierGroupInput, MenuItemModifierUncheckedCreateWithoutMenuItemModifierGroupInput> | MenuItemModifierCreateWithoutMenuItemModifierGroupInput[] | MenuItemModifierUncheckedCreateWithoutMenuItemModifierGroupInput[]
    connectOrCreate?: MenuItemModifierCreateOrConnectWithoutMenuItemModifierGroupInput | MenuItemModifierCreateOrConnectWithoutMenuItemModifierGroupInput[]
    upsert?: MenuItemModifierUpsertWithWhereUniqueWithoutMenuItemModifierGroupInput | MenuItemModifierUpsertWithWhereUniqueWithoutMenuItemModifierGroupInput[]
    createMany?: MenuItemModifierCreateManyMenuItemModifierGroupInputEnvelope
    set?: MenuItemModifierWhereUniqueInput | MenuItemModifierWhereUniqueInput[]
    disconnect?: MenuItemModifierWhereUniqueInput | MenuItemModifierWhereUniqueInput[]
    delete?: MenuItemModifierWhereUniqueInput | MenuItemModifierWhereUniqueInput[]
    connect?: MenuItemModifierWhereUniqueInput | MenuItemModifierWhereUniqueInput[]
    update?: MenuItemModifierUpdateWithWhereUniqueWithoutMenuItemModifierGroupInput | MenuItemModifierUpdateWithWhereUniqueWithoutMenuItemModifierGroupInput[]
    updateMany?: MenuItemModifierUpdateManyWithWhereWithoutMenuItemModifierGroupInput | MenuItemModifierUpdateManyWithWhereWithoutMenuItemModifierGroupInput[]
    deleteMany?: MenuItemModifierScalarWhereInput | MenuItemModifierScalarWhereInput[]
  }

  export type MenuItemModifierGroupCreateNestedOneWithoutMenuItemModifiersInput = {
    create?: XOR<MenuItemModifierGroupCreateWithoutMenuItemModifiersInput, MenuItemModifierGroupUncheckedCreateWithoutMenuItemModifiersInput>
    connectOrCreate?: MenuItemModifierGroupCreateOrConnectWithoutMenuItemModifiersInput
    connect?: MenuItemModifierGroupWhereUniqueInput
  }

  export type SalesItemModifierCreateNestedManyWithoutMenuItemModifierInput = {
    create?: XOR<SalesItemModifierCreateWithoutMenuItemModifierInput, SalesItemModifierUncheckedCreateWithoutMenuItemModifierInput> | SalesItemModifierCreateWithoutMenuItemModifierInput[] | SalesItemModifierUncheckedCreateWithoutMenuItemModifierInput[]
    connectOrCreate?: SalesItemModifierCreateOrConnectWithoutMenuItemModifierInput | SalesItemModifierCreateOrConnectWithoutMenuItemModifierInput[]
    createMany?: SalesItemModifierCreateManyMenuItemModifierInputEnvelope
    connect?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
  }

  export type RecipeCreateNestedManyWithoutMenuItemModifierInput = {
    create?: XOR<RecipeCreateWithoutMenuItemModifierInput, RecipeUncheckedCreateWithoutMenuItemModifierInput> | RecipeCreateWithoutMenuItemModifierInput[] | RecipeUncheckedCreateWithoutMenuItemModifierInput[]
    connectOrCreate?: RecipeCreateOrConnectWithoutMenuItemModifierInput | RecipeCreateOrConnectWithoutMenuItemModifierInput[]
    createMany?: RecipeCreateManyMenuItemModifierInputEnvelope
    connect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
  }

  export type SalesItemModifierUncheckedCreateNestedManyWithoutMenuItemModifierInput = {
    create?: XOR<SalesItemModifierCreateWithoutMenuItemModifierInput, SalesItemModifierUncheckedCreateWithoutMenuItemModifierInput> | SalesItemModifierCreateWithoutMenuItemModifierInput[] | SalesItemModifierUncheckedCreateWithoutMenuItemModifierInput[]
    connectOrCreate?: SalesItemModifierCreateOrConnectWithoutMenuItemModifierInput | SalesItemModifierCreateOrConnectWithoutMenuItemModifierInput[]
    createMany?: SalesItemModifierCreateManyMenuItemModifierInputEnvelope
    connect?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
  }

  export type RecipeUncheckedCreateNestedManyWithoutMenuItemModifierInput = {
    create?: XOR<RecipeCreateWithoutMenuItemModifierInput, RecipeUncheckedCreateWithoutMenuItemModifierInput> | RecipeCreateWithoutMenuItemModifierInput[] | RecipeUncheckedCreateWithoutMenuItemModifierInput[]
    connectOrCreate?: RecipeCreateOrConnectWithoutMenuItemModifierInput | RecipeCreateOrConnectWithoutMenuItemModifierInput[]
    createMany?: RecipeCreateManyMenuItemModifierInputEnvelope
    connect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
  }

  export type MenuItemModifierGroupUpdateOneRequiredWithoutMenuItemModifiersNestedInput = {
    create?: XOR<MenuItemModifierGroupCreateWithoutMenuItemModifiersInput, MenuItemModifierGroupUncheckedCreateWithoutMenuItemModifiersInput>
    connectOrCreate?: MenuItemModifierGroupCreateOrConnectWithoutMenuItemModifiersInput
    upsert?: MenuItemModifierGroupUpsertWithoutMenuItemModifiersInput
    connect?: MenuItemModifierGroupWhereUniqueInput
    update?: XOR<XOR<MenuItemModifierGroupUpdateToOneWithWhereWithoutMenuItemModifiersInput, MenuItemModifierGroupUpdateWithoutMenuItemModifiersInput>, MenuItemModifierGroupUncheckedUpdateWithoutMenuItemModifiersInput>
  }

  export type SalesItemModifierUpdateManyWithoutMenuItemModifierNestedInput = {
    create?: XOR<SalesItemModifierCreateWithoutMenuItemModifierInput, SalesItemModifierUncheckedCreateWithoutMenuItemModifierInput> | SalesItemModifierCreateWithoutMenuItemModifierInput[] | SalesItemModifierUncheckedCreateWithoutMenuItemModifierInput[]
    connectOrCreate?: SalesItemModifierCreateOrConnectWithoutMenuItemModifierInput | SalesItemModifierCreateOrConnectWithoutMenuItemModifierInput[]
    upsert?: SalesItemModifierUpsertWithWhereUniqueWithoutMenuItemModifierInput | SalesItemModifierUpsertWithWhereUniqueWithoutMenuItemModifierInput[]
    createMany?: SalesItemModifierCreateManyMenuItemModifierInputEnvelope
    set?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
    disconnect?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
    delete?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
    connect?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
    update?: SalesItemModifierUpdateWithWhereUniqueWithoutMenuItemModifierInput | SalesItemModifierUpdateWithWhereUniqueWithoutMenuItemModifierInput[]
    updateMany?: SalesItemModifierUpdateManyWithWhereWithoutMenuItemModifierInput | SalesItemModifierUpdateManyWithWhereWithoutMenuItemModifierInput[]
    deleteMany?: SalesItemModifierScalarWhereInput | SalesItemModifierScalarWhereInput[]
  }

  export type RecipeUpdateManyWithoutMenuItemModifierNestedInput = {
    create?: XOR<RecipeCreateWithoutMenuItemModifierInput, RecipeUncheckedCreateWithoutMenuItemModifierInput> | RecipeCreateWithoutMenuItemModifierInput[] | RecipeUncheckedCreateWithoutMenuItemModifierInput[]
    connectOrCreate?: RecipeCreateOrConnectWithoutMenuItemModifierInput | RecipeCreateOrConnectWithoutMenuItemModifierInput[]
    upsert?: RecipeUpsertWithWhereUniqueWithoutMenuItemModifierInput | RecipeUpsertWithWhereUniqueWithoutMenuItemModifierInput[]
    createMany?: RecipeCreateManyMenuItemModifierInputEnvelope
    set?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    disconnect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    delete?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    connect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    update?: RecipeUpdateWithWhereUniqueWithoutMenuItemModifierInput | RecipeUpdateWithWhereUniqueWithoutMenuItemModifierInput[]
    updateMany?: RecipeUpdateManyWithWhereWithoutMenuItemModifierInput | RecipeUpdateManyWithWhereWithoutMenuItemModifierInput[]
    deleteMany?: RecipeScalarWhereInput | RecipeScalarWhereInput[]
  }

  export type SalesItemModifierUncheckedUpdateManyWithoutMenuItemModifierNestedInput = {
    create?: XOR<SalesItemModifierCreateWithoutMenuItemModifierInput, SalesItemModifierUncheckedCreateWithoutMenuItemModifierInput> | SalesItemModifierCreateWithoutMenuItemModifierInput[] | SalesItemModifierUncheckedCreateWithoutMenuItemModifierInput[]
    connectOrCreate?: SalesItemModifierCreateOrConnectWithoutMenuItemModifierInput | SalesItemModifierCreateOrConnectWithoutMenuItemModifierInput[]
    upsert?: SalesItemModifierUpsertWithWhereUniqueWithoutMenuItemModifierInput | SalesItemModifierUpsertWithWhereUniqueWithoutMenuItemModifierInput[]
    createMany?: SalesItemModifierCreateManyMenuItemModifierInputEnvelope
    set?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
    disconnect?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
    delete?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
    connect?: SalesItemModifierWhereUniqueInput | SalesItemModifierWhereUniqueInput[]
    update?: SalesItemModifierUpdateWithWhereUniqueWithoutMenuItemModifierInput | SalesItemModifierUpdateWithWhereUniqueWithoutMenuItemModifierInput[]
    updateMany?: SalesItemModifierUpdateManyWithWhereWithoutMenuItemModifierInput | SalesItemModifierUpdateManyWithWhereWithoutMenuItemModifierInput[]
    deleteMany?: SalesItemModifierScalarWhereInput | SalesItemModifierScalarWhereInput[]
  }

  export type RecipeUncheckedUpdateManyWithoutMenuItemModifierNestedInput = {
    create?: XOR<RecipeCreateWithoutMenuItemModifierInput, RecipeUncheckedCreateWithoutMenuItemModifierInput> | RecipeCreateWithoutMenuItemModifierInput[] | RecipeUncheckedCreateWithoutMenuItemModifierInput[]
    connectOrCreate?: RecipeCreateOrConnectWithoutMenuItemModifierInput | RecipeCreateOrConnectWithoutMenuItemModifierInput[]
    upsert?: RecipeUpsertWithWhereUniqueWithoutMenuItemModifierInput | RecipeUpsertWithWhereUniqueWithoutMenuItemModifierInput[]
    createMany?: RecipeCreateManyMenuItemModifierInputEnvelope
    set?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    disconnect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    delete?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    connect?: RecipeWhereUniqueInput | RecipeWhereUniqueInput[]
    update?: RecipeUpdateWithWhereUniqueWithoutMenuItemModifierInput | RecipeUpdateWithWhereUniqueWithoutMenuItemModifierInput[]
    updateMany?: RecipeUpdateManyWithWhereWithoutMenuItemModifierInput | RecipeUpdateManyWithWhereWithoutMenuItemModifierInput[]
    deleteMany?: RecipeScalarWhereInput | RecipeScalarWhereInput[]
  }

  export type OutletCreateNestedOneWithoutTablesInput = {
    create?: XOR<OutletCreateWithoutTablesInput, OutletUncheckedCreateWithoutTablesInput>
    connectOrCreate?: OutletCreateOrConnectWithoutTablesInput
    connect?: OutletWhereUniqueInput
  }

  export type SalesCreateNestedManyWithoutTableInput = {
    create?: XOR<SalesCreateWithoutTableInput, SalesUncheckedCreateWithoutTableInput> | SalesCreateWithoutTableInput[] | SalesUncheckedCreateWithoutTableInput[]
    connectOrCreate?: SalesCreateOrConnectWithoutTableInput | SalesCreateOrConnectWithoutTableInput[]
    createMany?: SalesCreateManyTableInputEnvelope
    connect?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
  }

  export type ReservationCreateNestedManyWithoutTableInput = {
    create?: XOR<ReservationCreateWithoutTableInput, ReservationUncheckedCreateWithoutTableInput> | ReservationCreateWithoutTableInput[] | ReservationUncheckedCreateWithoutTableInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutTableInput | ReservationCreateOrConnectWithoutTableInput[]
    createMany?: ReservationCreateManyTableInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type SalesUncheckedCreateNestedManyWithoutTableInput = {
    create?: XOR<SalesCreateWithoutTableInput, SalesUncheckedCreateWithoutTableInput> | SalesCreateWithoutTableInput[] | SalesUncheckedCreateWithoutTableInput[]
    connectOrCreate?: SalesCreateOrConnectWithoutTableInput | SalesCreateOrConnectWithoutTableInput[]
    createMany?: SalesCreateManyTableInputEnvelope
    connect?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
  }

  export type ReservationUncheckedCreateNestedManyWithoutTableInput = {
    create?: XOR<ReservationCreateWithoutTableInput, ReservationUncheckedCreateWithoutTableInput> | ReservationCreateWithoutTableInput[] | ReservationUncheckedCreateWithoutTableInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutTableInput | ReservationCreateOrConnectWithoutTableInput[]
    createMany?: ReservationCreateManyTableInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type OutletUpdateOneRequiredWithoutTablesNestedInput = {
    create?: XOR<OutletCreateWithoutTablesInput, OutletUncheckedCreateWithoutTablesInput>
    connectOrCreate?: OutletCreateOrConnectWithoutTablesInput
    upsert?: OutletUpsertWithoutTablesInput
    connect?: OutletWhereUniqueInput
    update?: XOR<XOR<OutletUpdateToOneWithWhereWithoutTablesInput, OutletUpdateWithoutTablesInput>, OutletUncheckedUpdateWithoutTablesInput>
  }

  export type SalesUpdateManyWithoutTableNestedInput = {
    create?: XOR<SalesCreateWithoutTableInput, SalesUncheckedCreateWithoutTableInput> | SalesCreateWithoutTableInput[] | SalesUncheckedCreateWithoutTableInput[]
    connectOrCreate?: SalesCreateOrConnectWithoutTableInput | SalesCreateOrConnectWithoutTableInput[]
    upsert?: SalesUpsertWithWhereUniqueWithoutTableInput | SalesUpsertWithWhereUniqueWithoutTableInput[]
    createMany?: SalesCreateManyTableInputEnvelope
    set?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
    disconnect?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
    delete?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
    connect?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
    update?: SalesUpdateWithWhereUniqueWithoutTableInput | SalesUpdateWithWhereUniqueWithoutTableInput[]
    updateMany?: SalesUpdateManyWithWhereWithoutTableInput | SalesUpdateManyWithWhereWithoutTableInput[]
    deleteMany?: SalesScalarWhereInput | SalesScalarWhereInput[]
  }

  export type ReservationUpdateManyWithoutTableNestedInput = {
    create?: XOR<ReservationCreateWithoutTableInput, ReservationUncheckedCreateWithoutTableInput> | ReservationCreateWithoutTableInput[] | ReservationUncheckedCreateWithoutTableInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutTableInput | ReservationCreateOrConnectWithoutTableInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutTableInput | ReservationUpsertWithWhereUniqueWithoutTableInput[]
    createMany?: ReservationCreateManyTableInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutTableInput | ReservationUpdateWithWhereUniqueWithoutTableInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutTableInput | ReservationUpdateManyWithWhereWithoutTableInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type SalesUncheckedUpdateManyWithoutTableNestedInput = {
    create?: XOR<SalesCreateWithoutTableInput, SalesUncheckedCreateWithoutTableInput> | SalesCreateWithoutTableInput[] | SalesUncheckedCreateWithoutTableInput[]
    connectOrCreate?: SalesCreateOrConnectWithoutTableInput | SalesCreateOrConnectWithoutTableInput[]
    upsert?: SalesUpsertWithWhereUniqueWithoutTableInput | SalesUpsertWithWhereUniqueWithoutTableInput[]
    createMany?: SalesCreateManyTableInputEnvelope
    set?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
    disconnect?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
    delete?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
    connect?: SalesWhereUniqueInput | SalesWhereUniqueInput[]
    update?: SalesUpdateWithWhereUniqueWithoutTableInput | SalesUpdateWithWhereUniqueWithoutTableInput[]
    updateMany?: SalesUpdateManyWithWhereWithoutTableInput | SalesUpdateManyWithWhereWithoutTableInput[]
    deleteMany?: SalesScalarWhereInput | SalesScalarWhereInput[]
  }

  export type ReservationUncheckedUpdateManyWithoutTableNestedInput = {
    create?: XOR<ReservationCreateWithoutTableInput, ReservationUncheckedCreateWithoutTableInput> | ReservationCreateWithoutTableInput[] | ReservationUncheckedCreateWithoutTableInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutTableInput | ReservationCreateOrConnectWithoutTableInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutTableInput | ReservationUpsertWithWhereUniqueWithoutTableInput[]
    createMany?: ReservationCreateManyTableInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutTableInput | ReservationUpdateWithWhereUniqueWithoutTableInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutTableInput | ReservationUpdateManyWithWhereWithoutTableInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type MenuItemModifierCreateNestedOneWithoutRecipesInput = {
    create?: XOR<MenuItemModifierCreateWithoutRecipesInput, MenuItemModifierUncheckedCreateWithoutRecipesInput>
    connectOrCreate?: MenuItemModifierCreateOrConnectWithoutRecipesInput
    connect?: MenuItemModifierWhereUniqueInput
  }

  export type MenuItemCreateNestedOneWithoutRecipesInput = {
    create?: XOR<MenuItemCreateWithoutRecipesInput, MenuItemUncheckedCreateWithoutRecipesInput>
    connectOrCreate?: MenuItemCreateOrConnectWithoutRecipesInput
    connect?: MenuItemWhereUniqueInput
  }

  export type ItemCreateNestedOneWithoutRecipesInput = {
    create?: XOR<ItemCreateWithoutRecipesInput, ItemUncheckedCreateWithoutRecipesInput>
    connectOrCreate?: ItemCreateOrConnectWithoutRecipesInput
    connect?: ItemWhereUniqueInput
  }

  export type MenuItemModifierUpdateOneWithoutRecipesNestedInput = {
    create?: XOR<MenuItemModifierCreateWithoutRecipesInput, MenuItemModifierUncheckedCreateWithoutRecipesInput>
    connectOrCreate?: MenuItemModifierCreateOrConnectWithoutRecipesInput
    upsert?: MenuItemModifierUpsertWithoutRecipesInput
    disconnect?: MenuItemModifierWhereInput | boolean
    delete?: MenuItemModifierWhereInput | boolean
    connect?: MenuItemModifierWhereUniqueInput
    update?: XOR<XOR<MenuItemModifierUpdateToOneWithWhereWithoutRecipesInput, MenuItemModifierUpdateWithoutRecipesInput>, MenuItemModifierUncheckedUpdateWithoutRecipesInput>
  }

  export type MenuItemUpdateOneRequiredWithoutRecipesNestedInput = {
    create?: XOR<MenuItemCreateWithoutRecipesInput, MenuItemUncheckedCreateWithoutRecipesInput>
    connectOrCreate?: MenuItemCreateOrConnectWithoutRecipesInput
    upsert?: MenuItemUpsertWithoutRecipesInput
    connect?: MenuItemWhereUniqueInput
    update?: XOR<XOR<MenuItemUpdateToOneWithWhereWithoutRecipesInput, MenuItemUpdateWithoutRecipesInput>, MenuItemUncheckedUpdateWithoutRecipesInput>
  }

  export type ItemUpdateOneRequiredWithoutRecipesNestedInput = {
    create?: XOR<ItemCreateWithoutRecipesInput, ItemUncheckedCreateWithoutRecipesInput>
    connectOrCreate?: ItemCreateOrConnectWithoutRecipesInput
    upsert?: ItemUpsertWithoutRecipesInput
    connect?: ItemWhereUniqueInput
    update?: XOR<XOR<ItemUpdateToOneWithWhereWithoutRecipesInput, ItemUpdateWithoutRecipesInput>, ItemUncheckedUpdateWithoutRecipesInput>
  }

  export type OutletCreateNestedOneWithoutStationsInput = {
    create?: XOR<OutletCreateWithoutStationsInput, OutletUncheckedCreateWithoutStationsInput>
    connectOrCreate?: OutletCreateOrConnectWithoutStationsInput
    connect?: OutletWhereUniqueInput
  }

  export type OrderRoutingCreateNestedManyWithoutStationInput = {
    create?: XOR<OrderRoutingCreateWithoutStationInput, OrderRoutingUncheckedCreateWithoutStationInput> | OrderRoutingCreateWithoutStationInput[] | OrderRoutingUncheckedCreateWithoutStationInput[]
    connectOrCreate?: OrderRoutingCreateOrConnectWithoutStationInput | OrderRoutingCreateOrConnectWithoutStationInput[]
    createMany?: OrderRoutingCreateManyStationInputEnvelope
    connect?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
  }

  export type OrderRoutingUncheckedCreateNestedManyWithoutStationInput = {
    create?: XOR<OrderRoutingCreateWithoutStationInput, OrderRoutingUncheckedCreateWithoutStationInput> | OrderRoutingCreateWithoutStationInput[] | OrderRoutingUncheckedCreateWithoutStationInput[]
    connectOrCreate?: OrderRoutingCreateOrConnectWithoutStationInput | OrderRoutingCreateOrConnectWithoutStationInput[]
    createMany?: OrderRoutingCreateManyStationInputEnvelope
    connect?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
  }

  export type OutletUpdateOneRequiredWithoutStationsNestedInput = {
    create?: XOR<OutletCreateWithoutStationsInput, OutletUncheckedCreateWithoutStationsInput>
    connectOrCreate?: OutletCreateOrConnectWithoutStationsInput
    upsert?: OutletUpsertWithoutStationsInput
    connect?: OutletWhereUniqueInput
    update?: XOR<XOR<OutletUpdateToOneWithWhereWithoutStationsInput, OutletUpdateWithoutStationsInput>, OutletUncheckedUpdateWithoutStationsInput>
  }

  export type OrderRoutingUpdateManyWithoutStationNestedInput = {
    create?: XOR<OrderRoutingCreateWithoutStationInput, OrderRoutingUncheckedCreateWithoutStationInput> | OrderRoutingCreateWithoutStationInput[] | OrderRoutingUncheckedCreateWithoutStationInput[]
    connectOrCreate?: OrderRoutingCreateOrConnectWithoutStationInput | OrderRoutingCreateOrConnectWithoutStationInput[]
    upsert?: OrderRoutingUpsertWithWhereUniqueWithoutStationInput | OrderRoutingUpsertWithWhereUniqueWithoutStationInput[]
    createMany?: OrderRoutingCreateManyStationInputEnvelope
    set?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
    disconnect?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
    delete?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
    connect?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
    update?: OrderRoutingUpdateWithWhereUniqueWithoutStationInput | OrderRoutingUpdateWithWhereUniqueWithoutStationInput[]
    updateMany?: OrderRoutingUpdateManyWithWhereWithoutStationInput | OrderRoutingUpdateManyWithWhereWithoutStationInput[]
    deleteMany?: OrderRoutingScalarWhereInput | OrderRoutingScalarWhereInput[]
  }

  export type OrderRoutingUncheckedUpdateManyWithoutStationNestedInput = {
    create?: XOR<OrderRoutingCreateWithoutStationInput, OrderRoutingUncheckedCreateWithoutStationInput> | OrderRoutingCreateWithoutStationInput[] | OrderRoutingUncheckedCreateWithoutStationInput[]
    connectOrCreate?: OrderRoutingCreateOrConnectWithoutStationInput | OrderRoutingCreateOrConnectWithoutStationInput[]
    upsert?: OrderRoutingUpsertWithWhereUniqueWithoutStationInput | OrderRoutingUpsertWithWhereUniqueWithoutStationInput[]
    createMany?: OrderRoutingCreateManyStationInputEnvelope
    set?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
    disconnect?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
    delete?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
    connect?: OrderRoutingWhereUniqueInput | OrderRoutingWhereUniqueInput[]
    update?: OrderRoutingUpdateWithWhereUniqueWithoutStationInput | OrderRoutingUpdateWithWhereUniqueWithoutStationInput[]
    updateMany?: OrderRoutingUpdateManyWithWhereWithoutStationInput | OrderRoutingUpdateManyWithWhereWithoutStationInput[]
    deleteMany?: OrderRoutingScalarWhereInput | OrderRoutingScalarWhereInput[]
  }

  export type OutletCreateNestedOneWithoutReservationsInput = {
    create?: XOR<OutletCreateWithoutReservationsInput, OutletUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: OutletCreateOrConnectWithoutReservationsInput
    connect?: OutletWhereUniqueInput
  }

  export type CustomerCreateNestedOneWithoutReservationsInput = {
    create?: XOR<CustomerCreateWithoutReservationsInput, CustomerUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutReservationsInput
    connect?: CustomerWhereUniqueInput
  }

  export type TableCreateNestedOneWithoutReservationsInput = {
    create?: XOR<TableCreateWithoutReservationsInput, TableUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: TableCreateOrConnectWithoutReservationsInput
    connect?: TableWhereUniqueInput
  }

  export type OutletUpdateOneRequiredWithoutReservationsNestedInput = {
    create?: XOR<OutletCreateWithoutReservationsInput, OutletUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: OutletCreateOrConnectWithoutReservationsInput
    upsert?: OutletUpsertWithoutReservationsInput
    connect?: OutletWhereUniqueInput
    update?: XOR<XOR<OutletUpdateToOneWithWhereWithoutReservationsInput, OutletUpdateWithoutReservationsInput>, OutletUncheckedUpdateWithoutReservationsInput>
  }

  export type CustomerUpdateOneWithoutReservationsNestedInput = {
    create?: XOR<CustomerCreateWithoutReservationsInput, CustomerUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutReservationsInput
    upsert?: CustomerUpsertWithoutReservationsInput
    disconnect?: CustomerWhereInput | boolean
    delete?: CustomerWhereInput | boolean
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutReservationsInput, CustomerUpdateWithoutReservationsInput>, CustomerUncheckedUpdateWithoutReservationsInput>
  }

  export type TableUpdateOneWithoutReservationsNestedInput = {
    create?: XOR<TableCreateWithoutReservationsInput, TableUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: TableCreateOrConnectWithoutReservationsInput
    upsert?: TableUpsertWithoutReservationsInput
    disconnect?: TableWhereInput | boolean
    delete?: TableWhereInput | boolean
    connect?: TableWhereUniqueInput
    update?: XOR<XOR<TableUpdateToOneWithWhereWithoutReservationsInput, TableUpdateWithoutReservationsInput>, TableUncheckedUpdateWithoutReservationsInput>
  }

  export type SalesItemCreateNestedOneWithoutOrderRoutingInput = {
    create?: XOR<SalesItemCreateWithoutOrderRoutingInput, SalesItemUncheckedCreateWithoutOrderRoutingInput>
    connectOrCreate?: SalesItemCreateOrConnectWithoutOrderRoutingInput
    connect?: SalesItemWhereUniqueInput
  }

  export type StationCreateNestedOneWithoutOrderRoutingInput = {
    create?: XOR<StationCreateWithoutOrderRoutingInput, StationUncheckedCreateWithoutOrderRoutingInput>
    connectOrCreate?: StationCreateOrConnectWithoutOrderRoutingInput
    connect?: StationWhereUniqueInput
  }

  export type SalesItemUpdateOneRequiredWithoutOrderRoutingNestedInput = {
    create?: XOR<SalesItemCreateWithoutOrderRoutingInput, SalesItemUncheckedCreateWithoutOrderRoutingInput>
    connectOrCreate?: SalesItemCreateOrConnectWithoutOrderRoutingInput
    upsert?: SalesItemUpsertWithoutOrderRoutingInput
    connect?: SalesItemWhereUniqueInput
    update?: XOR<XOR<SalesItemUpdateToOneWithWhereWithoutOrderRoutingInput, SalesItemUpdateWithoutOrderRoutingInput>, SalesItemUncheckedUpdateWithoutOrderRoutingInput>
  }

  export type StationUpdateOneRequiredWithoutOrderRoutingNestedInput = {
    create?: XOR<StationCreateWithoutOrderRoutingInput, StationUncheckedCreateWithoutOrderRoutingInput>
    connectOrCreate?: StationCreateOrConnectWithoutOrderRoutingInput
    upsert?: StationUpsertWithoutOrderRoutingInput
    connect?: StationWhereUniqueInput
    update?: XOR<XOR<StationUpdateToOneWithWhereWithoutOrderRoutingInput, StationUpdateWithoutOrderRoutingInput>, StationUncheckedUpdateWithoutOrderRoutingInput>
  }

  export type OutletCreateNestedOneWithoutWaitlistsInput = {
    create?: XOR<OutletCreateWithoutWaitlistsInput, OutletUncheckedCreateWithoutWaitlistsInput>
    connectOrCreate?: OutletCreateOrConnectWithoutWaitlistsInput
    connect?: OutletWhereUniqueInput
  }

  export type CustomerCreateNestedOneWithoutWaitlistsInput = {
    create?: XOR<CustomerCreateWithoutWaitlistsInput, CustomerUncheckedCreateWithoutWaitlistsInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutWaitlistsInput
    connect?: CustomerWhereUniqueInput
  }

  export type OutletUpdateOneRequiredWithoutWaitlistsNestedInput = {
    create?: XOR<OutletCreateWithoutWaitlistsInput, OutletUncheckedCreateWithoutWaitlistsInput>
    connectOrCreate?: OutletCreateOrConnectWithoutWaitlistsInput
    upsert?: OutletUpsertWithoutWaitlistsInput
    connect?: OutletWhereUniqueInput
    update?: XOR<XOR<OutletUpdateToOneWithWhereWithoutWaitlistsInput, OutletUpdateWithoutWaitlistsInput>, OutletUncheckedUpdateWithoutWaitlistsInput>
  }

  export type CustomerUpdateOneWithoutWaitlistsNestedInput = {
    create?: XOR<CustomerCreateWithoutWaitlistsInput, CustomerUncheckedCreateWithoutWaitlistsInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutWaitlistsInput
    upsert?: CustomerUpsertWithoutWaitlistsInput
    disconnect?: CustomerWhereInput | boolean
    delete?: CustomerWhereInput | boolean
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutWaitlistsInput, CustomerUpdateWithoutWaitlistsInput>, CustomerUncheckedUpdateWithoutWaitlistsInput>
  }

  export type PaymentCreateNestedOneWithoutSplitBillsInput = {
    create?: XOR<PaymentCreateWithoutSplitBillsInput, PaymentUncheckedCreateWithoutSplitBillsInput>
    connectOrCreate?: PaymentCreateOrConnectWithoutSplitBillsInput
    connect?: PaymentWhereUniqueInput
  }

  export type CustomerCreateNestedOneWithoutSplitBillsInput = {
    create?: XOR<CustomerCreateWithoutSplitBillsInput, CustomerUncheckedCreateWithoutSplitBillsInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutSplitBillsInput
    connect?: CustomerWhereUniqueInput
  }

  export type PaymentUpdateOneWithoutSplitBillsNestedInput = {
    create?: XOR<PaymentCreateWithoutSplitBillsInput, PaymentUncheckedCreateWithoutSplitBillsInput>
    connectOrCreate?: PaymentCreateOrConnectWithoutSplitBillsInput
    upsert?: PaymentUpsertWithoutSplitBillsInput
    disconnect?: PaymentWhereInput | boolean
    delete?: PaymentWhereInput | boolean
    connect?: PaymentWhereUniqueInput
    update?: XOR<XOR<PaymentUpdateToOneWithWhereWithoutSplitBillsInput, PaymentUpdateWithoutSplitBillsInput>, PaymentUncheckedUpdateWithoutSplitBillsInput>
  }

  export type CustomerUpdateOneWithoutSplitBillsNestedInput = {
    create?: XOR<CustomerCreateWithoutSplitBillsInput, CustomerUncheckedCreateWithoutSplitBillsInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutSplitBillsInput
    upsert?: CustomerUpsertWithoutSplitBillsInput
    disconnect?: CustomerWhereInput | boolean
    delete?: CustomerWhereInput | boolean
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutSplitBillsInput, CustomerUpdateWithoutSplitBillsInput>, CustomerUncheckedUpdateWithoutSplitBillsInput>
  }

  export type PromotionItemCreateNestedManyWithoutPromotionInput = {
    create?: XOR<PromotionItemCreateWithoutPromotionInput, PromotionItemUncheckedCreateWithoutPromotionInput> | PromotionItemCreateWithoutPromotionInput[] | PromotionItemUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionItemCreateOrConnectWithoutPromotionInput | PromotionItemCreateOrConnectWithoutPromotionInput[]
    createMany?: PromotionItemCreateManyPromotionInputEnvelope
    connect?: PromotionItemWhereUniqueInput | PromotionItemWhereUniqueInput[]
  }

  export type PromotionCustomerCreateNestedManyWithoutPromotionInput = {
    create?: XOR<PromotionCustomerCreateWithoutPromotionInput, PromotionCustomerUncheckedCreateWithoutPromotionInput> | PromotionCustomerCreateWithoutPromotionInput[] | PromotionCustomerUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionCustomerCreateOrConnectWithoutPromotionInput | PromotionCustomerCreateOrConnectWithoutPromotionInput[]
    createMany?: PromotionCustomerCreateManyPromotionInputEnvelope
    connect?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
  }

  export type PromotionUsageCreateNestedManyWithoutPromotionInput = {
    create?: XOR<PromotionUsageCreateWithoutPromotionInput, PromotionUsageUncheckedCreateWithoutPromotionInput> | PromotionUsageCreateWithoutPromotionInput[] | PromotionUsageUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionUsageCreateOrConnectWithoutPromotionInput | PromotionUsageCreateOrConnectWithoutPromotionInput[]
    createMany?: PromotionUsageCreateManyPromotionInputEnvelope
    connect?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
  }

  export type PromotionItemUncheckedCreateNestedManyWithoutPromotionInput = {
    create?: XOR<PromotionItemCreateWithoutPromotionInput, PromotionItemUncheckedCreateWithoutPromotionInput> | PromotionItemCreateWithoutPromotionInput[] | PromotionItemUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionItemCreateOrConnectWithoutPromotionInput | PromotionItemCreateOrConnectWithoutPromotionInput[]
    createMany?: PromotionItemCreateManyPromotionInputEnvelope
    connect?: PromotionItemWhereUniqueInput | PromotionItemWhereUniqueInput[]
  }

  export type PromotionCustomerUncheckedCreateNestedManyWithoutPromotionInput = {
    create?: XOR<PromotionCustomerCreateWithoutPromotionInput, PromotionCustomerUncheckedCreateWithoutPromotionInput> | PromotionCustomerCreateWithoutPromotionInput[] | PromotionCustomerUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionCustomerCreateOrConnectWithoutPromotionInput | PromotionCustomerCreateOrConnectWithoutPromotionInput[]
    createMany?: PromotionCustomerCreateManyPromotionInputEnvelope
    connect?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
  }

  export type PromotionUsageUncheckedCreateNestedManyWithoutPromotionInput = {
    create?: XOR<PromotionUsageCreateWithoutPromotionInput, PromotionUsageUncheckedCreateWithoutPromotionInput> | PromotionUsageCreateWithoutPromotionInput[] | PromotionUsageUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionUsageCreateOrConnectWithoutPromotionInput | PromotionUsageCreateOrConnectWithoutPromotionInput[]
    createMany?: PromotionUsageCreateManyPromotionInputEnvelope
    connect?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
  }

  export type EnumPromotionTypeFieldUpdateOperationsInput = {
    set?: $Enums.PromotionType
  }

  export type EnumPromotionStatusFieldUpdateOperationsInput = {
    set?: $Enums.PromotionStatus
  }

  export type EnumCombinationRuleFieldUpdateOperationsInput = {
    set?: $Enums.CombinationRule
  }

  export type EnumDiscountTypeFieldUpdateOperationsInput = {
    set?: $Enums.DiscountType
  }

  export type PromotionItemUpdateManyWithoutPromotionNestedInput = {
    create?: XOR<PromotionItemCreateWithoutPromotionInput, PromotionItemUncheckedCreateWithoutPromotionInput> | PromotionItemCreateWithoutPromotionInput[] | PromotionItemUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionItemCreateOrConnectWithoutPromotionInput | PromotionItemCreateOrConnectWithoutPromotionInput[]
    upsert?: PromotionItemUpsertWithWhereUniqueWithoutPromotionInput | PromotionItemUpsertWithWhereUniqueWithoutPromotionInput[]
    createMany?: PromotionItemCreateManyPromotionInputEnvelope
    set?: PromotionItemWhereUniqueInput | PromotionItemWhereUniqueInput[]
    disconnect?: PromotionItemWhereUniqueInput | PromotionItemWhereUniqueInput[]
    delete?: PromotionItemWhereUniqueInput | PromotionItemWhereUniqueInput[]
    connect?: PromotionItemWhereUniqueInput | PromotionItemWhereUniqueInput[]
    update?: PromotionItemUpdateWithWhereUniqueWithoutPromotionInput | PromotionItemUpdateWithWhereUniqueWithoutPromotionInput[]
    updateMany?: PromotionItemUpdateManyWithWhereWithoutPromotionInput | PromotionItemUpdateManyWithWhereWithoutPromotionInput[]
    deleteMany?: PromotionItemScalarWhereInput | PromotionItemScalarWhereInput[]
  }

  export type PromotionCustomerUpdateManyWithoutPromotionNestedInput = {
    create?: XOR<PromotionCustomerCreateWithoutPromotionInput, PromotionCustomerUncheckedCreateWithoutPromotionInput> | PromotionCustomerCreateWithoutPromotionInput[] | PromotionCustomerUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionCustomerCreateOrConnectWithoutPromotionInput | PromotionCustomerCreateOrConnectWithoutPromotionInput[]
    upsert?: PromotionCustomerUpsertWithWhereUniqueWithoutPromotionInput | PromotionCustomerUpsertWithWhereUniqueWithoutPromotionInput[]
    createMany?: PromotionCustomerCreateManyPromotionInputEnvelope
    set?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
    disconnect?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
    delete?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
    connect?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
    update?: PromotionCustomerUpdateWithWhereUniqueWithoutPromotionInput | PromotionCustomerUpdateWithWhereUniqueWithoutPromotionInput[]
    updateMany?: PromotionCustomerUpdateManyWithWhereWithoutPromotionInput | PromotionCustomerUpdateManyWithWhereWithoutPromotionInput[]
    deleteMany?: PromotionCustomerScalarWhereInput | PromotionCustomerScalarWhereInput[]
  }

  export type PromotionUsageUpdateManyWithoutPromotionNestedInput = {
    create?: XOR<PromotionUsageCreateWithoutPromotionInput, PromotionUsageUncheckedCreateWithoutPromotionInput> | PromotionUsageCreateWithoutPromotionInput[] | PromotionUsageUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionUsageCreateOrConnectWithoutPromotionInput | PromotionUsageCreateOrConnectWithoutPromotionInput[]
    upsert?: PromotionUsageUpsertWithWhereUniqueWithoutPromotionInput | PromotionUsageUpsertWithWhereUniqueWithoutPromotionInput[]
    createMany?: PromotionUsageCreateManyPromotionInputEnvelope
    set?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
    disconnect?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
    delete?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
    connect?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
    update?: PromotionUsageUpdateWithWhereUniqueWithoutPromotionInput | PromotionUsageUpdateWithWhereUniqueWithoutPromotionInput[]
    updateMany?: PromotionUsageUpdateManyWithWhereWithoutPromotionInput | PromotionUsageUpdateManyWithWhereWithoutPromotionInput[]
    deleteMany?: PromotionUsageScalarWhereInput | PromotionUsageScalarWhereInput[]
  }

  export type PromotionItemUncheckedUpdateManyWithoutPromotionNestedInput = {
    create?: XOR<PromotionItemCreateWithoutPromotionInput, PromotionItemUncheckedCreateWithoutPromotionInput> | PromotionItemCreateWithoutPromotionInput[] | PromotionItemUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionItemCreateOrConnectWithoutPromotionInput | PromotionItemCreateOrConnectWithoutPromotionInput[]
    upsert?: PromotionItemUpsertWithWhereUniqueWithoutPromotionInput | PromotionItemUpsertWithWhereUniqueWithoutPromotionInput[]
    createMany?: PromotionItemCreateManyPromotionInputEnvelope
    set?: PromotionItemWhereUniqueInput | PromotionItemWhereUniqueInput[]
    disconnect?: PromotionItemWhereUniqueInput | PromotionItemWhereUniqueInput[]
    delete?: PromotionItemWhereUniqueInput | PromotionItemWhereUniqueInput[]
    connect?: PromotionItemWhereUniqueInput | PromotionItemWhereUniqueInput[]
    update?: PromotionItemUpdateWithWhereUniqueWithoutPromotionInput | PromotionItemUpdateWithWhereUniqueWithoutPromotionInput[]
    updateMany?: PromotionItemUpdateManyWithWhereWithoutPromotionInput | PromotionItemUpdateManyWithWhereWithoutPromotionInput[]
    deleteMany?: PromotionItemScalarWhereInput | PromotionItemScalarWhereInput[]
  }

  export type PromotionCustomerUncheckedUpdateManyWithoutPromotionNestedInput = {
    create?: XOR<PromotionCustomerCreateWithoutPromotionInput, PromotionCustomerUncheckedCreateWithoutPromotionInput> | PromotionCustomerCreateWithoutPromotionInput[] | PromotionCustomerUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionCustomerCreateOrConnectWithoutPromotionInput | PromotionCustomerCreateOrConnectWithoutPromotionInput[]
    upsert?: PromotionCustomerUpsertWithWhereUniqueWithoutPromotionInput | PromotionCustomerUpsertWithWhereUniqueWithoutPromotionInput[]
    createMany?: PromotionCustomerCreateManyPromotionInputEnvelope
    set?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
    disconnect?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
    delete?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
    connect?: PromotionCustomerWhereUniqueInput | PromotionCustomerWhereUniqueInput[]
    update?: PromotionCustomerUpdateWithWhereUniqueWithoutPromotionInput | PromotionCustomerUpdateWithWhereUniqueWithoutPromotionInput[]
    updateMany?: PromotionCustomerUpdateManyWithWhereWithoutPromotionInput | PromotionCustomerUpdateManyWithWhereWithoutPromotionInput[]
    deleteMany?: PromotionCustomerScalarWhereInput | PromotionCustomerScalarWhereInput[]
  }

  export type PromotionUsageUncheckedUpdateManyWithoutPromotionNestedInput = {
    create?: XOR<PromotionUsageCreateWithoutPromotionInput, PromotionUsageUncheckedCreateWithoutPromotionInput> | PromotionUsageCreateWithoutPromotionInput[] | PromotionUsageUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionUsageCreateOrConnectWithoutPromotionInput | PromotionUsageCreateOrConnectWithoutPromotionInput[]
    upsert?: PromotionUsageUpsertWithWhereUniqueWithoutPromotionInput | PromotionUsageUpsertWithWhereUniqueWithoutPromotionInput[]
    createMany?: PromotionUsageCreateManyPromotionInputEnvelope
    set?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
    disconnect?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
    delete?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
    connect?: PromotionUsageWhereUniqueInput | PromotionUsageWhereUniqueInput[]
    update?: PromotionUsageUpdateWithWhereUniqueWithoutPromotionInput | PromotionUsageUpdateWithWhereUniqueWithoutPromotionInput[]
    updateMany?: PromotionUsageUpdateManyWithWhereWithoutPromotionInput | PromotionUsageUpdateManyWithWhereWithoutPromotionInput[]
    deleteMany?: PromotionUsageScalarWhereInput | PromotionUsageScalarWhereInput[]
  }

  export type PromotionCreateNestedOneWithoutItemsInput = {
    create?: XOR<PromotionCreateWithoutItemsInput, PromotionUncheckedCreateWithoutItemsInput>
    connectOrCreate?: PromotionCreateOrConnectWithoutItemsInput
    connect?: PromotionWhereUniqueInput
  }

  export type PromotionUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<PromotionCreateWithoutItemsInput, PromotionUncheckedCreateWithoutItemsInput>
    connectOrCreate?: PromotionCreateOrConnectWithoutItemsInput
    upsert?: PromotionUpsertWithoutItemsInput
    connect?: PromotionWhereUniqueInput
    update?: XOR<XOR<PromotionUpdateToOneWithWhereWithoutItemsInput, PromotionUpdateWithoutItemsInput>, PromotionUncheckedUpdateWithoutItemsInput>
  }

  export type PromotionCreateNestedOneWithoutCustomersInput = {
    create?: XOR<PromotionCreateWithoutCustomersInput, PromotionUncheckedCreateWithoutCustomersInput>
    connectOrCreate?: PromotionCreateOrConnectWithoutCustomersInput
    connect?: PromotionWhereUniqueInput
  }

  export type CustomerCreateNestedOneWithoutPromotionsInput = {
    create?: XOR<CustomerCreateWithoutPromotionsInput, CustomerUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutPromotionsInput
    connect?: CustomerWhereUniqueInput
  }

  export type PromotionUpdateOneRequiredWithoutCustomersNestedInput = {
    create?: XOR<PromotionCreateWithoutCustomersInput, PromotionUncheckedCreateWithoutCustomersInput>
    connectOrCreate?: PromotionCreateOrConnectWithoutCustomersInput
    upsert?: PromotionUpsertWithoutCustomersInput
    connect?: PromotionWhereUniqueInput
    update?: XOR<XOR<PromotionUpdateToOneWithWhereWithoutCustomersInput, PromotionUpdateWithoutCustomersInput>, PromotionUncheckedUpdateWithoutCustomersInput>
  }

  export type CustomerUpdateOneRequiredWithoutPromotionsNestedInput = {
    create?: XOR<CustomerCreateWithoutPromotionsInput, CustomerUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutPromotionsInput
    upsert?: CustomerUpsertWithoutPromotionsInput
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutPromotionsInput, CustomerUpdateWithoutPromotionsInput>, CustomerUncheckedUpdateWithoutPromotionsInput>
  }

  export type PromotionCreateNestedOneWithoutUsageHistoryInput = {
    create?: XOR<PromotionCreateWithoutUsageHistoryInput, PromotionUncheckedCreateWithoutUsageHistoryInput>
    connectOrCreate?: PromotionCreateOrConnectWithoutUsageHistoryInput
    connect?: PromotionWhereUniqueInput
  }

  export type CustomerCreateNestedOneWithoutPromotionUsageInput = {
    create?: XOR<CustomerCreateWithoutPromotionUsageInput, CustomerUncheckedCreateWithoutPromotionUsageInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutPromotionUsageInput
    connect?: CustomerWhereUniqueInput
  }

  export type PromotionUpdateOneRequiredWithoutUsageHistoryNestedInput = {
    create?: XOR<PromotionCreateWithoutUsageHistoryInput, PromotionUncheckedCreateWithoutUsageHistoryInput>
    connectOrCreate?: PromotionCreateOrConnectWithoutUsageHistoryInput
    upsert?: PromotionUpsertWithoutUsageHistoryInput
    connect?: PromotionWhereUniqueInput
    update?: XOR<XOR<PromotionUpdateToOneWithWhereWithoutUsageHistoryInput, PromotionUpdateWithoutUsageHistoryInput>, PromotionUncheckedUpdateWithoutUsageHistoryInput>
  }

  export type CustomerUpdateOneWithoutPromotionUsageNestedInput = {
    create?: XOR<CustomerCreateWithoutPromotionUsageInput, CustomerUncheckedCreateWithoutPromotionUsageInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutPromotionUsageInput
    upsert?: CustomerUpsertWithoutPromotionUsageInput
    disconnect?: CustomerWhereInput | boolean
    delete?: CustomerWhereInput | boolean
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutPromotionUsageInput, CustomerUpdateWithoutPromotionUsageInput>, CustomerUncheckedUpdateWithoutPromotionUsageInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumSettingTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.SettingType | EnumSettingTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SettingType[]
    notIn?: $Enums.SettingType[]
    not?: NestedEnumSettingTypeFilter<$PrismaModel> | $Enums.SettingType
  }

  export type NestedEnumSettingTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SettingType | EnumSettingTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SettingType[]
    notIn?: $Enums.SettingType[]
    not?: NestedEnumSettingTypeWithAggregatesFilter<$PrismaModel> | $Enums.SettingType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSettingTypeFilter<$PrismaModel>
    _max?: NestedEnumSettingTypeFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumOrderStatusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel> | null
    in?: $Enums.OrderStatus[] | null
    notIn?: $Enums.OrderStatus[] | null
    not?: NestedEnumOrderStatusNullableFilter<$PrismaModel> | $Enums.OrderStatus | null
  }

  export type NestedEnumOrderStatusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel> | null
    in?: $Enums.OrderStatus[] | null
    notIn?: $Enums.OrderStatus[] | null
    not?: NestedEnumOrderStatusNullableWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusNullableFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumPromotionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PromotionType | EnumPromotionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PromotionType[]
    notIn?: $Enums.PromotionType[]
    not?: NestedEnumPromotionTypeFilter<$PrismaModel> | $Enums.PromotionType
  }

  export type NestedEnumPromotionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PromotionStatus | EnumPromotionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PromotionStatus[]
    notIn?: $Enums.PromotionStatus[]
    not?: NestedEnumPromotionStatusFilter<$PrismaModel> | $Enums.PromotionStatus
  }

  export type NestedEnumCombinationRuleFilter<$PrismaModel = never> = {
    equals?: $Enums.CombinationRule | EnumCombinationRuleFieldRefInput<$PrismaModel>
    in?: $Enums.CombinationRule[]
    notIn?: $Enums.CombinationRule[]
    not?: NestedEnumCombinationRuleFilter<$PrismaModel> | $Enums.CombinationRule
  }

  export type NestedEnumDiscountTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DiscountType | EnumDiscountTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DiscountType[]
    notIn?: $Enums.DiscountType[]
    not?: NestedEnumDiscountTypeFilter<$PrismaModel> | $Enums.DiscountType
  }

  export type NestedEnumPromotionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PromotionType | EnumPromotionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PromotionType[]
    notIn?: $Enums.PromotionType[]
    not?: NestedEnumPromotionTypeWithAggregatesFilter<$PrismaModel> | $Enums.PromotionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPromotionTypeFilter<$PrismaModel>
    _max?: NestedEnumPromotionTypeFilter<$PrismaModel>
  }

  export type NestedEnumPromotionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PromotionStatus | EnumPromotionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PromotionStatus[]
    notIn?: $Enums.PromotionStatus[]
    not?: NestedEnumPromotionStatusWithAggregatesFilter<$PrismaModel> | $Enums.PromotionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPromotionStatusFilter<$PrismaModel>
    _max?: NestedEnumPromotionStatusFilter<$PrismaModel>
  }

  export type NestedEnumCombinationRuleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CombinationRule | EnumCombinationRuleFieldRefInput<$PrismaModel>
    in?: $Enums.CombinationRule[]
    notIn?: $Enums.CombinationRule[]
    not?: NestedEnumCombinationRuleWithAggregatesFilter<$PrismaModel> | $Enums.CombinationRule
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCombinationRuleFilter<$PrismaModel>
    _max?: NestedEnumCombinationRuleFilter<$PrismaModel>
  }

  export type NestedEnumDiscountTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DiscountType | EnumDiscountTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DiscountType[]
    notIn?: $Enums.DiscountType[]
    not?: NestedEnumDiscountTypeWithAggregatesFilter<$PrismaModel> | $Enums.DiscountType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDiscountTypeFilter<$PrismaModel>
    _max?: NestedEnumDiscountTypeFilter<$PrismaModel>
  }

  export type RolePermissionCreateWithoutRoleInput = {
    permissionId: number
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type RolePermissionUncheckedCreateWithoutRoleInput = {
    id?: number
    permissionId: number
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type RolePermissionCreateOrConnectWithoutRoleInput = {
    where: RolePermissionWhereUniqueInput
    create: XOR<RolePermissionCreateWithoutRoleInput, RolePermissionUncheckedCreateWithoutRoleInput>
  }

  export type RolePermissionCreateManyRoleInputEnvelope = {
    data: RolePermissionCreateManyRoleInput | RolePermissionCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutRolesInput = {
    username: string
    password: string
    lastName?: string | null
    firstName?: string | null
    mobile?: string | null
    email?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    settings?: SettingCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutRolesInput = {
    id?: number
    username: string
    password: string
    lastName?: string | null
    firstName?: string | null
    mobile?: string | null
    email?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    settings?: SettingUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutRolesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRolesInput, UserUncheckedCreateWithoutRolesInput>
  }

  export type RolePermissionUpsertWithWhereUniqueWithoutRoleInput = {
    where: RolePermissionWhereUniqueInput
    update: XOR<RolePermissionUpdateWithoutRoleInput, RolePermissionUncheckedUpdateWithoutRoleInput>
    create: XOR<RolePermissionCreateWithoutRoleInput, RolePermissionUncheckedCreateWithoutRoleInput>
  }

  export type RolePermissionUpdateWithWhereUniqueWithoutRoleInput = {
    where: RolePermissionWhereUniqueInput
    data: XOR<RolePermissionUpdateWithoutRoleInput, RolePermissionUncheckedUpdateWithoutRoleInput>
  }

  export type RolePermissionUpdateManyWithWhereWithoutRoleInput = {
    where: RolePermissionScalarWhereInput
    data: XOR<RolePermissionUpdateManyMutationInput, RolePermissionUncheckedUpdateManyWithoutRoleInput>
  }

  export type RolePermissionScalarWhereInput = {
    AND?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
    OR?: RolePermissionScalarWhereInput[]
    NOT?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
    id?: IntFilter<"RolePermission"> | number
    roleId?: IntFilter<"RolePermission"> | number
    permissionId?: IntFilter<"RolePermission"> | number
    createdAt?: DateTimeNullableFilter<"RolePermission"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"RolePermission"> | Date | string | null
    deleted?: BoolFilter<"RolePermission"> | boolean
    deletedAt?: DateTimeNullableFilter<"RolePermission"> | Date | string | null
    version?: IntNullableFilter<"RolePermission"> | number | null
  }

  export type UserUpsertWithWhereUniqueWithoutRolesInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutRolesInput, UserUncheckedUpdateWithoutRolesInput>
    create: XOR<UserCreateWithoutRolesInput, UserUncheckedCreateWithoutRolesInput>
  }

  export type UserUpdateWithWhereUniqueWithoutRolesInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutRolesInput, UserUncheckedUpdateWithoutRolesInput>
  }

  export type UserUpdateManyWithWhereWithoutRolesInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutRolesInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: IntFilter<"User"> | number
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    lastName?: StringNullableFilter<"User"> | string | null
    firstName?: StringNullableFilter<"User"> | string | null
    mobile?: StringNullableFilter<"User"> | string | null
    email?: StringNullableFilter<"User"> | string | null
    deleted?: BoolFilter<"User"> | boolean
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"User"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    version?: IntNullableFilter<"User"> | number | null
  }

  export type RoleCreateWithoutPermissionInput = {
    name: string
    category?: string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
    users?: UserCreateNestedManyWithoutRolesInput
  }

  export type RoleUncheckedCreateWithoutPermissionInput = {
    id?: number
    name: string
    category?: string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
    users?: UserUncheckedCreateNestedManyWithoutRolesInput
  }

  export type RoleCreateOrConnectWithoutPermissionInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutPermissionInput, RoleUncheckedCreateWithoutPermissionInput>
  }

  export type RoleUpsertWithoutPermissionInput = {
    update: XOR<RoleUpdateWithoutPermissionInput, RoleUncheckedUpdateWithoutPermissionInput>
    create: XOR<RoleCreateWithoutPermissionInput, RoleUncheckedCreateWithoutPermissionInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutPermissionInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutPermissionInput, RoleUncheckedUpdateWithoutPermissionInput>
  }

  export type RoleUpdateWithoutPermissionInput = {
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    users?: UserUpdateManyWithoutRolesNestedInput
  }

  export type RoleUncheckedUpdateWithoutPermissionInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    users?: UserUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type SettingCreateWithoutUserInput = {
    tenantId?: number | null
    key: string
    value: string
    type: $Enums.SettingType
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    outlet?: OutletCreateNestedOneWithoutSettingsInput
  }

  export type SettingUncheckedCreateWithoutUserInput = {
    id?: number
    tenantId?: number | null
    outletId?: number | null
    key: string
    value: string
    type: $Enums.SettingType
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SettingCreateOrConnectWithoutUserInput = {
    where: SettingWhereUniqueInput
    create: XOR<SettingCreateWithoutUserInput, SettingUncheckedCreateWithoutUserInput>
  }

  export type SettingCreateManyUserInputEnvelope = {
    data: SettingCreateManyUserInput | SettingCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type RoleCreateWithoutUsersInput = {
    name: string
    category?: string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
    permission?: RolePermissionCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateWithoutUsersInput = {
    id?: number
    name: string
    category?: string | null
    description?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
    permission?: RolePermissionUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleCreateOrConnectWithoutUsersInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
  }

  export type SettingUpsertWithWhereUniqueWithoutUserInput = {
    where: SettingWhereUniqueInput
    update: XOR<SettingUpdateWithoutUserInput, SettingUncheckedUpdateWithoutUserInput>
    create: XOR<SettingCreateWithoutUserInput, SettingUncheckedCreateWithoutUserInput>
  }

  export type SettingUpdateWithWhereUniqueWithoutUserInput = {
    where: SettingWhereUniqueInput
    data: XOR<SettingUpdateWithoutUserInput, SettingUncheckedUpdateWithoutUserInput>
  }

  export type SettingUpdateManyWithWhereWithoutUserInput = {
    where: SettingScalarWhereInput
    data: XOR<SettingUpdateManyMutationInput, SettingUncheckedUpdateManyWithoutUserInput>
  }

  export type SettingScalarWhereInput = {
    AND?: SettingScalarWhereInput | SettingScalarWhereInput[]
    OR?: SettingScalarWhereInput[]
    NOT?: SettingScalarWhereInput | SettingScalarWhereInput[]
    id?: IntFilter<"Setting"> | number
    tenantId?: IntNullableFilter<"Setting"> | number | null
    userId?: IntNullableFilter<"Setting"> | number | null
    outletId?: IntNullableFilter<"Setting"> | number | null
    key?: StringFilter<"Setting"> | string
    value?: StringFilter<"Setting"> | string
    type?: EnumSettingTypeFilter<"Setting"> | $Enums.SettingType
    deleted?: BoolFilter<"Setting"> | boolean
    deletedAt?: DateTimeNullableFilter<"Setting"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Setting"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Setting"> | Date | string | null
    version?: IntNullableFilter<"Setting"> | number | null
  }

  export type RoleUpsertWithWhereUniqueWithoutUsersInput = {
    where: RoleWhereUniqueInput
    update: XOR<RoleUpdateWithoutUsersInput, RoleUncheckedUpdateWithoutUsersInput>
    create: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
  }

  export type RoleUpdateWithWhereUniqueWithoutUsersInput = {
    where: RoleWhereUniqueInput
    data: XOR<RoleUpdateWithoutUsersInput, RoleUncheckedUpdateWithoutUsersInput>
  }

  export type RoleUpdateManyWithWhereWithoutUsersInput = {
    where: RoleScalarWhereInput
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyWithoutUsersInput>
  }

  export type RoleScalarWhereInput = {
    AND?: RoleScalarWhereInput | RoleScalarWhereInput[]
    OR?: RoleScalarWhereInput[]
    NOT?: RoleScalarWhereInput | RoleScalarWhereInput[]
    id?: IntFilter<"Role"> | number
    name?: StringFilter<"Role"> | string
    category?: StringNullableFilter<"Role"> | string | null
    description?: StringNullableFilter<"Role"> | string | null
    createdAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    deleted?: BoolFilter<"Role"> | boolean
    deletedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    version?: IntNullableFilter<"Role"> | number | null
  }

  export type UserCreateWithoutSettingsInput = {
    username: string
    password: string
    lastName?: string | null
    firstName?: string | null
    mobile?: string | null
    email?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    roles?: RoleCreateNestedManyWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutSettingsInput = {
    id?: number
    username: string
    password: string
    lastName?: string | null
    firstName?: string | null
    mobile?: string | null
    email?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    roles?: RoleUncheckedCreateNestedManyWithoutUsersInput
  }

  export type UserCreateOrConnectWithoutSettingsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSettingsInput, UserUncheckedCreateWithoutSettingsInput>
  }

  export type OutletCreateWithoutSettingsInput = {
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceCreateNestedManyWithoutOutletInput
    stockMovements?: StockMovementCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutOutletInput
    tables?: TableCreateNestedManyWithoutOutletInput
    stations?: StationCreateNestedManyWithoutOutletInput
    reservations?: ReservationCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistCreateNestedManyWithoutOutletInput
  }

  export type OutletUncheckedCreateWithoutSettingsInput = {
    id?: number
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceUncheckedCreateNestedManyWithoutOutletInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutOutletInput
    tables?: TableUncheckedCreateNestedManyWithoutOutletInput
    stations?: StationUncheckedCreateNestedManyWithoutOutletInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistUncheckedCreateNestedManyWithoutOutletInput
  }

  export type OutletCreateOrConnectWithoutSettingsInput = {
    where: OutletWhereUniqueInput
    create: XOR<OutletCreateWithoutSettingsInput, OutletUncheckedCreateWithoutSettingsInput>
  }

  export type UserUpsertWithoutSettingsInput = {
    update: XOR<UserUpdateWithoutSettingsInput, UserUncheckedUpdateWithoutSettingsInput>
    create: XOR<UserCreateWithoutSettingsInput, UserUncheckedCreateWithoutSettingsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSettingsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSettingsInput, UserUncheckedUpdateWithoutSettingsInput>
  }

  export type UserUpdateWithoutSettingsInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    roles?: RoleUpdateManyWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSettingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    roles?: RoleUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type OutletUpsertWithoutSettingsInput = {
    update: XOR<OutletUpdateWithoutSettingsInput, OutletUncheckedUpdateWithoutSettingsInput>
    create: XOR<OutletCreateWithoutSettingsInput, OutletUncheckedCreateWithoutSettingsInput>
    where?: OutletWhereInput
  }

  export type OutletUpdateToOneWithWhereWithoutSettingsInput = {
    where?: OutletWhereInput
    data: XOR<OutletUpdateWithoutSettingsInput, OutletUncheckedUpdateWithoutSettingsInput>
  }

  export type OutletUpdateWithoutSettingsInput = {
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUpdateManyWithoutOutletNestedInput
    stockMovements?: StockMovementUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutOutletNestedInput
    tables?: TableUpdateManyWithoutOutletNestedInput
    stations?: StationUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUpdateManyWithoutOutletNestedInput
  }

  export type OutletUncheckedUpdateWithoutSettingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUncheckedUpdateManyWithoutOutletNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutOutletNestedInput
    tables?: TableUncheckedUpdateManyWithoutOutletNestedInput
    stations?: StationUncheckedUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUncheckedUpdateManyWithoutOutletNestedInput
  }

  export type ItemCreateWithoutSupplierInput = {
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    category: CategoryCreateNestedOneWithoutItemsInput
    stockBalance?: StockBalanceCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutItemInput
    recipes?: RecipeCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemCreateNestedManyWithoutItemInput
  }

  export type ItemUncheckedCreateWithoutSupplierInput = {
    id?: number
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    categoryId: number
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalance?: StockBalanceUncheckedCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutItemInput
    recipes?: RecipeUncheckedCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemCreateOrConnectWithoutSupplierInput = {
    where: ItemWhereUniqueInput
    create: XOR<ItemCreateWithoutSupplierInput, ItemUncheckedCreateWithoutSupplierInput>
  }

  export type ItemCreateManySupplierInputEnvelope = {
    data: ItemCreateManySupplierInput | ItemCreateManySupplierInput[]
    skipDuplicates?: boolean
  }

  export type PurchaseOrderCreateWithoutSupplierInput = {
    purchaseOrderNumber: string
    outletId: number
    purchaseOrderDate?: Date | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    roundingAmount?: Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: Decimal | DecimalJsLike | number | string | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    status: string
    remark?: string | null
    currency?: string
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    session?: SessionCreateNestedOneWithoutPurchaseOrdersInput
    purchaseOrderItems?: PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput
    deliveryOrders?: DeliveryOrderCreateNestedManyWithoutPurchaseOrderInput
    invoices?: InvoiceCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderUncheckedCreateWithoutSupplierInput = {
    id?: number
    purchaseOrderNumber: string
    outletId: number
    purchaseOrderDate?: Date | string | null
    sessionId?: number | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    roundingAmount?: Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: Decimal | DecimalJsLike | number | string | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    status: string
    remark?: string | null
    currency?: string
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    purchaseOrderItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutPurchaseOrderInput
    deliveryOrders?: DeliveryOrderUncheckedCreateNestedManyWithoutPurchaseOrderInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderCreateOrConnectWithoutSupplierInput = {
    where: PurchaseOrderWhereUniqueInput
    create: XOR<PurchaseOrderCreateWithoutSupplierInput, PurchaseOrderUncheckedCreateWithoutSupplierInput>
  }

  export type PurchaseOrderCreateManySupplierInputEnvelope = {
    data: PurchaseOrderCreateManySupplierInput | PurchaseOrderCreateManySupplierInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceCreateWithoutSupplierInput = {
    invoiceNumber: string
    taxInvoiceNumber: string
    outletId: number
    subtotalAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    invoiceDate?: Date | string | null
    paymentDate?: Date | string | null
    dueDate?: Date | string | null
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    session?: SessionCreateNestedOneWithoutInvoicesInput
    purchaseOrder?: PurchaseOrderCreateNestedOneWithoutInvoicesInput
    invoiceItems?: InvoiceItemCreateNestedManyWithoutInvoiceInput
    deliveryOrders?: DeliveryOrderCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutSupplierInput = {
    id?: number
    invoiceNumber: string
    taxInvoiceNumber: string
    purchaseOrderId?: number | null
    outletId: number
    subtotalAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    sessionId?: number | null
    discountType?: string | null
    discountAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    invoiceDate?: Date | string | null
    paymentDate?: Date | string | null
    dueDate?: Date | string | null
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    invoiceItems?: InvoiceItemUncheckedCreateNestedManyWithoutInvoiceInput
    deliveryOrders?: DeliveryOrderUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutSupplierInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutSupplierInput, InvoiceUncheckedCreateWithoutSupplierInput>
  }

  export type InvoiceCreateManySupplierInputEnvelope = {
    data: InvoiceCreateManySupplierInput | InvoiceCreateManySupplierInput[]
    skipDuplicates?: boolean
  }

  export type ItemUpsertWithWhereUniqueWithoutSupplierInput = {
    where: ItemWhereUniqueInput
    update: XOR<ItemUpdateWithoutSupplierInput, ItemUncheckedUpdateWithoutSupplierInput>
    create: XOR<ItemCreateWithoutSupplierInput, ItemUncheckedCreateWithoutSupplierInput>
  }

  export type ItemUpdateWithWhereUniqueWithoutSupplierInput = {
    where: ItemWhereUniqueInput
    data: XOR<ItemUpdateWithoutSupplierInput, ItemUncheckedUpdateWithoutSupplierInput>
  }

  export type ItemUpdateManyWithWhereWithoutSupplierInput = {
    where: ItemScalarWhereInput
    data: XOR<ItemUpdateManyMutationInput, ItemUncheckedUpdateManyWithoutSupplierInput>
  }

  export type ItemScalarWhereInput = {
    AND?: ItemScalarWhereInput | ItemScalarWhereInput[]
    OR?: ItemScalarWhereInput[]
    NOT?: ItemScalarWhereInput | ItemScalarWhereInput[]
    id?: IntFilter<"Item"> | number
    itemName?: StringFilter<"Item"> | string
    itemCode?: StringFilter<"Item"> | string
    itemType?: StringFilter<"Item"> | string
    itemModel?: StringFilter<"Item"> | string
    itemBrand?: StringFilter<"Item"> | string
    itemDescription?: StringNullableFilter<"Item"> | string | null
    categoryId?: IntFilter<"Item"> | number
    cost?: DecimalFilter<"Item"> | Decimal | DecimalJsLike | number | string
    price?: DecimalFilter<"Item"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Item"> | string
    isOpenPrice?: BoolNullableFilter<"Item"> | boolean | null
    unitOfMeasure?: StringFilter<"Item"> | string
    height?: FloatNullableFilter<"Item"> | number | null
    width?: FloatNullableFilter<"Item"> | number | null
    length?: FloatNullableFilter<"Item"> | number | null
    weight?: FloatNullableFilter<"Item"> | number | null
    alternateLookUp?: StringNullableFilter<"Item"> | string | null
    image?: StringNullableFilter<"Item"> | string | null
    hasTax?: BoolNullableFilter<"Item"> | boolean | null
    taxRate?: FloatNullableFilter<"Item"> | number | null
    supplierId?: IntFilter<"Item"> | number
    deleted?: BoolFilter<"Item"> | boolean
    deletedAt?: DateTimeNullableFilter<"Item"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Item"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Item"> | Date | string | null
    version?: IntNullableFilter<"Item"> | number | null
  }

  export type PurchaseOrderUpsertWithWhereUniqueWithoutSupplierInput = {
    where: PurchaseOrderWhereUniqueInput
    update: XOR<PurchaseOrderUpdateWithoutSupplierInput, PurchaseOrderUncheckedUpdateWithoutSupplierInput>
    create: XOR<PurchaseOrderCreateWithoutSupplierInput, PurchaseOrderUncheckedCreateWithoutSupplierInput>
  }

  export type PurchaseOrderUpdateWithWhereUniqueWithoutSupplierInput = {
    where: PurchaseOrderWhereUniqueInput
    data: XOR<PurchaseOrderUpdateWithoutSupplierInput, PurchaseOrderUncheckedUpdateWithoutSupplierInput>
  }

  export type PurchaseOrderUpdateManyWithWhereWithoutSupplierInput = {
    where: PurchaseOrderScalarWhereInput
    data: XOR<PurchaseOrderUpdateManyMutationInput, PurchaseOrderUncheckedUpdateManyWithoutSupplierInput>
  }

  export type PurchaseOrderScalarWhereInput = {
    AND?: PurchaseOrderScalarWhereInput | PurchaseOrderScalarWhereInput[]
    OR?: PurchaseOrderScalarWhereInput[]
    NOT?: PurchaseOrderScalarWhereInput | PurchaseOrderScalarWhereInput[]
    id?: IntFilter<"PurchaseOrder"> | number
    purchaseOrderNumber?: StringFilter<"PurchaseOrder"> | string
    outletId?: IntFilter<"PurchaseOrder"> | number
    supplierId?: IntFilter<"PurchaseOrder"> | number
    purchaseOrderDate?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    sessionId?: IntNullableFilter<"PurchaseOrder"> | number | null
    discountType?: StringNullableFilter<"PurchaseOrder"> | string | null
    discountAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    taxAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    totalAmount?: DecimalNullableFilter<"PurchaseOrder"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"PurchaseOrder"> | string
    remark?: StringNullableFilter<"PurchaseOrder"> | string | null
    currency?: StringFilter<"PurchaseOrder"> | string
    performedBy?: StringNullableFilter<"PurchaseOrder"> | string | null
    deleted?: BoolFilter<"PurchaseOrder"> | boolean
    deletedAt?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"PurchaseOrder"> | Date | string | null
    version?: IntNullableFilter<"PurchaseOrder"> | number | null
  }

  export type InvoiceUpsertWithWhereUniqueWithoutSupplierInput = {
    where: InvoiceWhereUniqueInput
    update: XOR<InvoiceUpdateWithoutSupplierInput, InvoiceUncheckedUpdateWithoutSupplierInput>
    create: XOR<InvoiceCreateWithoutSupplierInput, InvoiceUncheckedCreateWithoutSupplierInput>
  }

  export type InvoiceUpdateWithWhereUniqueWithoutSupplierInput = {
    where: InvoiceWhereUniqueInput
    data: XOR<InvoiceUpdateWithoutSupplierInput, InvoiceUncheckedUpdateWithoutSupplierInput>
  }

  export type InvoiceUpdateManyWithWhereWithoutSupplierInput = {
    where: InvoiceScalarWhereInput
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyWithoutSupplierInput>
  }

  export type InvoiceScalarWhereInput = {
    AND?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
    OR?: InvoiceScalarWhereInput[]
    NOT?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
    id?: IntFilter<"Invoice"> | number
    invoiceNumber?: StringFilter<"Invoice"> | string
    taxInvoiceNumber?: StringFilter<"Invoice"> | string
    purchaseOrderId?: IntNullableFilter<"Invoice"> | number | null
    supplierId?: IntNullableFilter<"Invoice"> | number | null
    outletId?: IntFilter<"Invoice"> | number
    subtotalAmount?: DecimalFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    sessionId?: IntNullableFilter<"Invoice"> | number | null
    discountType?: StringNullableFilter<"Invoice"> | string | null
    discountAmount?: DecimalFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"Invoice"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"Invoice"> | string
    status?: StringFilter<"Invoice"> | string
    invoiceDate?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    paymentDate?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    dueDate?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    remark?: StringNullableFilter<"Invoice"> | string | null
    performedBy?: StringNullableFilter<"Invoice"> | string | null
    deleted?: BoolFilter<"Invoice"> | boolean
    deletedAt?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Invoice"> | Date | string | null
    version?: IntNullableFilter<"Invoice"> | number | null
  }

  export type SalesCreateWithoutCustomerInput = {
    outletId: number
    businessDate: Date | string
    salesType: string
    customerName?: string | null
    phoneNumber?: string | null
    billStreet?: string
    billCity?: string
    billState?: string
    billPostalCode?: string
    billCountry?: string
    shipStreet?: string
    shipCity?: string
    shipState?: string
    shipPostalCode?: string
    shipCountry?: string
    totalItemDiscountAmount?: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    profitAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    roundingAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    changeAmount?: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string
    completedSessionId?: number | null
    sessionId: number
    eodId: number
    salesQuotationId?: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    orderStatus?: string | null
    salesItems?: SalesItemCreateNestedManyWithoutSalesInput
    payments?: PaymentCreateNestedManyWithoutSalesInput
    registerLogs?: RegisterLogCreateNestedManyWithoutSalesInput
    table?: TableCreateNestedOneWithoutSalesInput
  }

  export type SalesUncheckedCreateWithoutCustomerInput = {
    id?: number
    outletId: number
    businessDate: Date | string
    salesType: string
    customerName?: string | null
    phoneNumber?: string | null
    billStreet?: string
    billCity?: string
    billState?: string
    billPostalCode?: string
    billCountry?: string
    shipStreet?: string
    shipCity?: string
    shipState?: string
    shipPostalCode?: string
    shipCountry?: string
    totalItemDiscountAmount?: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    profitAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    roundingAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    changeAmount?: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string
    completedSessionId?: number | null
    sessionId: number
    eodId: number
    salesQuotationId?: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    tableId?: number | null
    orderStatus?: string | null
    salesItems?: SalesItemUncheckedCreateNestedManyWithoutSalesInput
    payments?: PaymentUncheckedCreateNestedManyWithoutSalesInput
    registerLogs?: RegisterLogUncheckedCreateNestedManyWithoutSalesInput
  }

  export type SalesCreateOrConnectWithoutCustomerInput = {
    where: SalesWhereUniqueInput
    create: XOR<SalesCreateWithoutCustomerInput, SalesUncheckedCreateWithoutCustomerInput>
  }

  export type SalesCreateManyCustomerInputEnvelope = {
    data: SalesCreateManyCustomerInput | SalesCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type PromotionCustomerCreateWithoutCustomerInput = {
    maxUsage?: number | null
    currentUsage?: number
    deleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
    promotion: PromotionCreateNestedOneWithoutCustomersInput
  }

  export type PromotionCustomerUncheckedCreateWithoutCustomerInput = {
    id?: number
    promotionId: number
    maxUsage?: number | null
    currentUsage?: number
    deleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
  }

  export type PromotionCustomerCreateOrConnectWithoutCustomerInput = {
    where: PromotionCustomerWhereUniqueInput
    create: XOR<PromotionCustomerCreateWithoutCustomerInput, PromotionCustomerUncheckedCreateWithoutCustomerInput>
  }

  export type PromotionCustomerCreateManyCustomerInputEnvelope = {
    data: PromotionCustomerCreateManyCustomerInput | PromotionCustomerCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type PromotionUsageCreateWithoutCustomerInput = {
    salesId?: number | null
    discountAmount: Decimal | DecimalJsLike | number | string
    usedAt?: Date | string
    version?: number | null
    promotion: PromotionCreateNestedOneWithoutUsageHistoryInput
  }

  export type PromotionUsageUncheckedCreateWithoutCustomerInput = {
    id?: number
    promotionId: number
    salesId?: number | null
    discountAmount: Decimal | DecimalJsLike | number | string
    usedAt?: Date | string
    version?: number | null
  }

  export type PromotionUsageCreateOrConnectWithoutCustomerInput = {
    where: PromotionUsageWhereUniqueInput
    create: XOR<PromotionUsageCreateWithoutCustomerInput, PromotionUsageUncheckedCreateWithoutCustomerInput>
  }

  export type PromotionUsageCreateManyCustomerInputEnvelope = {
    data: PromotionUsageCreateManyCustomerInput | PromotionUsageCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type ReservationCreateWithoutCustomerInput = {
    dateTime: Date | string
    partySize: number
    status: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    outlet: OutletCreateNestedOneWithoutReservationsInput
    table?: TableCreateNestedOneWithoutReservationsInput
  }

  export type ReservationUncheckedCreateWithoutCustomerInput = {
    id?: number
    outletId: number
    tableId?: number | null
    dateTime: Date | string
    partySize: number
    status: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type ReservationCreateOrConnectWithoutCustomerInput = {
    where: ReservationWhereUniqueInput
    create: XOR<ReservationCreateWithoutCustomerInput, ReservationUncheckedCreateWithoutCustomerInput>
  }

  export type ReservationCreateManyCustomerInputEnvelope = {
    data: ReservationCreateManyCustomerInput | ReservationCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type WaitlistCreateWithoutCustomerInput = {
    partySize: number
    status: string
    waitTime?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    outlet: OutletCreateNestedOneWithoutWaitlistsInput
  }

  export type WaitlistUncheckedCreateWithoutCustomerInput = {
    id?: number
    outletId: number
    partySize: number
    status: string
    waitTime?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type WaitlistCreateOrConnectWithoutCustomerInput = {
    where: WaitlistWhereUniqueInput
    create: XOR<WaitlistCreateWithoutCustomerInput, WaitlistUncheckedCreateWithoutCustomerInput>
  }

  export type WaitlistCreateManyCustomerInputEnvelope = {
    data: WaitlistCreateManyCustomerInput | WaitlistCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type SplitBillCreateWithoutCustomerInput = {
    salesId: number
    amount: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    payment?: PaymentCreateNestedOneWithoutSplitBillsInput
  }

  export type SplitBillUncheckedCreateWithoutCustomerInput = {
    id?: number
    salesId: number
    amount: Decimal | DecimalJsLike | number | string
    paymentId?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SplitBillCreateOrConnectWithoutCustomerInput = {
    where: SplitBillWhereUniqueInput
    create: XOR<SplitBillCreateWithoutCustomerInput, SplitBillUncheckedCreateWithoutCustomerInput>
  }

  export type SplitBillCreateManyCustomerInputEnvelope = {
    data: SplitBillCreateManyCustomerInput | SplitBillCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type SalesUpsertWithWhereUniqueWithoutCustomerInput = {
    where: SalesWhereUniqueInput
    update: XOR<SalesUpdateWithoutCustomerInput, SalesUncheckedUpdateWithoutCustomerInput>
    create: XOR<SalesCreateWithoutCustomerInput, SalesUncheckedCreateWithoutCustomerInput>
  }

  export type SalesUpdateWithWhereUniqueWithoutCustomerInput = {
    where: SalesWhereUniqueInput
    data: XOR<SalesUpdateWithoutCustomerInput, SalesUncheckedUpdateWithoutCustomerInput>
  }

  export type SalesUpdateManyWithWhereWithoutCustomerInput = {
    where: SalesScalarWhereInput
    data: XOR<SalesUpdateManyMutationInput, SalesUncheckedUpdateManyWithoutCustomerInput>
  }

  export type SalesScalarWhereInput = {
    AND?: SalesScalarWhereInput | SalesScalarWhereInput[]
    OR?: SalesScalarWhereInput[]
    NOT?: SalesScalarWhereInput | SalesScalarWhereInput[]
    id?: IntFilter<"Sales"> | number
    outletId?: IntFilter<"Sales"> | number
    businessDate?: DateTimeFilter<"Sales"> | Date | string
    salesType?: StringFilter<"Sales"> | string
    customerName?: StringNullableFilter<"Sales"> | string | null
    customerId?: IntNullableFilter<"Sales"> | number | null
    phoneNumber?: StringNullableFilter<"Sales"> | string | null
    billStreet?: StringFilter<"Sales"> | string
    billCity?: StringFilter<"Sales"> | string
    billState?: StringFilter<"Sales"> | string
    billPostalCode?: StringFilter<"Sales"> | string
    billCountry?: StringFilter<"Sales"> | string
    shipStreet?: StringFilter<"Sales"> | string
    shipCity?: StringFilter<"Sales"> | string
    shipState?: StringFilter<"Sales"> | string
    shipPostalCode?: StringFilter<"Sales"> | string
    shipCountry?: StringFilter<"Sales"> | string
    totalItemDiscountAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFilter<"Sales"> | Decimal | DecimalJsLike | number | string
    status?: StringFilter<"Sales"> | string
    remark?: StringFilter<"Sales"> | string
    completedSessionId?: IntNullableFilter<"Sales"> | number | null
    sessionId?: IntFilter<"Sales"> | number
    eodId?: IntFilter<"Sales"> | number
    salesQuotationId?: IntFilter<"Sales"> | number
    performedBy?: StringNullableFilter<"Sales"> | string | null
    deleted?: BoolFilter<"Sales"> | boolean
    deletedAt?: DateTimeNullableFilter<"Sales"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Sales"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Sales"> | Date | string | null
    version?: IntNullableFilter<"Sales"> | number | null
    tableId?: IntNullableFilter<"Sales"> | number | null
    orderStatus?: StringNullableFilter<"Sales"> | string | null
  }

  export type PromotionCustomerUpsertWithWhereUniqueWithoutCustomerInput = {
    where: PromotionCustomerWhereUniqueInput
    update: XOR<PromotionCustomerUpdateWithoutCustomerInput, PromotionCustomerUncheckedUpdateWithoutCustomerInput>
    create: XOR<PromotionCustomerCreateWithoutCustomerInput, PromotionCustomerUncheckedCreateWithoutCustomerInput>
  }

  export type PromotionCustomerUpdateWithWhereUniqueWithoutCustomerInput = {
    where: PromotionCustomerWhereUniqueInput
    data: XOR<PromotionCustomerUpdateWithoutCustomerInput, PromotionCustomerUncheckedUpdateWithoutCustomerInput>
  }

  export type PromotionCustomerUpdateManyWithWhereWithoutCustomerInput = {
    where: PromotionCustomerScalarWhereInput
    data: XOR<PromotionCustomerUpdateManyMutationInput, PromotionCustomerUncheckedUpdateManyWithoutCustomerInput>
  }

  export type PromotionCustomerScalarWhereInput = {
    AND?: PromotionCustomerScalarWhereInput | PromotionCustomerScalarWhereInput[]
    OR?: PromotionCustomerScalarWhereInput[]
    NOT?: PromotionCustomerScalarWhereInput | PromotionCustomerScalarWhereInput[]
    id?: IntFilter<"PromotionCustomer"> | number
    promotionId?: IntFilter<"PromotionCustomer"> | number
    customerId?: IntFilter<"PromotionCustomer"> | number
    maxUsage?: IntNullableFilter<"PromotionCustomer"> | number | null
    currentUsage?: IntFilter<"PromotionCustomer"> | number
    deleted?: BoolFilter<"PromotionCustomer"> | boolean
    createdAt?: DateTimeFilter<"PromotionCustomer"> | Date | string
    updatedAt?: DateTimeFilter<"PromotionCustomer"> | Date | string
    version?: IntNullableFilter<"PromotionCustomer"> | number | null
  }

  export type PromotionUsageUpsertWithWhereUniqueWithoutCustomerInput = {
    where: PromotionUsageWhereUniqueInput
    update: XOR<PromotionUsageUpdateWithoutCustomerInput, PromotionUsageUncheckedUpdateWithoutCustomerInput>
    create: XOR<PromotionUsageCreateWithoutCustomerInput, PromotionUsageUncheckedCreateWithoutCustomerInput>
  }

  export type PromotionUsageUpdateWithWhereUniqueWithoutCustomerInput = {
    where: PromotionUsageWhereUniqueInput
    data: XOR<PromotionUsageUpdateWithoutCustomerInput, PromotionUsageUncheckedUpdateWithoutCustomerInput>
  }

  export type PromotionUsageUpdateManyWithWhereWithoutCustomerInput = {
    where: PromotionUsageScalarWhereInput
    data: XOR<PromotionUsageUpdateManyMutationInput, PromotionUsageUncheckedUpdateManyWithoutCustomerInput>
  }

  export type PromotionUsageScalarWhereInput = {
    AND?: PromotionUsageScalarWhereInput | PromotionUsageScalarWhereInput[]
    OR?: PromotionUsageScalarWhereInput[]
    NOT?: PromotionUsageScalarWhereInput | PromotionUsageScalarWhereInput[]
    id?: IntFilter<"PromotionUsage"> | number
    promotionId?: IntFilter<"PromotionUsage"> | number
    customerId?: IntNullableFilter<"PromotionUsage"> | number | null
    salesId?: IntNullableFilter<"PromotionUsage"> | number | null
    discountAmount?: DecimalFilter<"PromotionUsage"> | Decimal | DecimalJsLike | number | string
    usedAt?: DateTimeFilter<"PromotionUsage"> | Date | string
    version?: IntNullableFilter<"PromotionUsage"> | number | null
  }

  export type ReservationUpsertWithWhereUniqueWithoutCustomerInput = {
    where: ReservationWhereUniqueInput
    update: XOR<ReservationUpdateWithoutCustomerInput, ReservationUncheckedUpdateWithoutCustomerInput>
    create: XOR<ReservationCreateWithoutCustomerInput, ReservationUncheckedCreateWithoutCustomerInput>
  }

  export type ReservationUpdateWithWhereUniqueWithoutCustomerInput = {
    where: ReservationWhereUniqueInput
    data: XOR<ReservationUpdateWithoutCustomerInput, ReservationUncheckedUpdateWithoutCustomerInput>
  }

  export type ReservationUpdateManyWithWhereWithoutCustomerInput = {
    where: ReservationScalarWhereInput
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyWithoutCustomerInput>
  }

  export type ReservationScalarWhereInput = {
    AND?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
    OR?: ReservationScalarWhereInput[]
    NOT?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
    id?: IntFilter<"Reservation"> | number
    outletId?: IntFilter<"Reservation"> | number
    customerId?: IntNullableFilter<"Reservation"> | number | null
    tableId?: IntNullableFilter<"Reservation"> | number | null
    dateTime?: DateTimeFilter<"Reservation"> | Date | string
    partySize?: IntFilter<"Reservation"> | number
    status?: StringFilter<"Reservation"> | string
    deleted?: BoolFilter<"Reservation"> | boolean
    deletedAt?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    version?: IntNullableFilter<"Reservation"> | number | null
  }

  export type WaitlistUpsertWithWhereUniqueWithoutCustomerInput = {
    where: WaitlistWhereUniqueInput
    update: XOR<WaitlistUpdateWithoutCustomerInput, WaitlistUncheckedUpdateWithoutCustomerInput>
    create: XOR<WaitlistCreateWithoutCustomerInput, WaitlistUncheckedCreateWithoutCustomerInput>
  }

  export type WaitlistUpdateWithWhereUniqueWithoutCustomerInput = {
    where: WaitlistWhereUniqueInput
    data: XOR<WaitlistUpdateWithoutCustomerInput, WaitlistUncheckedUpdateWithoutCustomerInput>
  }

  export type WaitlistUpdateManyWithWhereWithoutCustomerInput = {
    where: WaitlistScalarWhereInput
    data: XOR<WaitlistUpdateManyMutationInput, WaitlistUncheckedUpdateManyWithoutCustomerInput>
  }

  export type WaitlistScalarWhereInput = {
    AND?: WaitlistScalarWhereInput | WaitlistScalarWhereInput[]
    OR?: WaitlistScalarWhereInput[]
    NOT?: WaitlistScalarWhereInput | WaitlistScalarWhereInput[]
    id?: IntFilter<"Waitlist"> | number
    outletId?: IntFilter<"Waitlist"> | number
    customerId?: IntNullableFilter<"Waitlist"> | number | null
    partySize?: IntFilter<"Waitlist"> | number
    status?: StringFilter<"Waitlist"> | string
    waitTime?: IntNullableFilter<"Waitlist"> | number | null
    deleted?: BoolFilter<"Waitlist"> | boolean
    deletedAt?: DateTimeNullableFilter<"Waitlist"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Waitlist"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Waitlist"> | Date | string | null
    version?: IntNullableFilter<"Waitlist"> | number | null
  }

  export type SplitBillUpsertWithWhereUniqueWithoutCustomerInput = {
    where: SplitBillWhereUniqueInput
    update: XOR<SplitBillUpdateWithoutCustomerInput, SplitBillUncheckedUpdateWithoutCustomerInput>
    create: XOR<SplitBillCreateWithoutCustomerInput, SplitBillUncheckedCreateWithoutCustomerInput>
  }

  export type SplitBillUpdateWithWhereUniqueWithoutCustomerInput = {
    where: SplitBillWhereUniqueInput
    data: XOR<SplitBillUpdateWithoutCustomerInput, SplitBillUncheckedUpdateWithoutCustomerInput>
  }

  export type SplitBillUpdateManyWithWhereWithoutCustomerInput = {
    where: SplitBillScalarWhereInput
    data: XOR<SplitBillUpdateManyMutationInput, SplitBillUncheckedUpdateManyWithoutCustomerInput>
  }

  export type SplitBillScalarWhereInput = {
    AND?: SplitBillScalarWhereInput | SplitBillScalarWhereInput[]
    OR?: SplitBillScalarWhereInput[]
    NOT?: SplitBillScalarWhereInput | SplitBillScalarWhereInput[]
    id?: IntFilter<"SplitBill"> | number
    salesId?: IntFilter<"SplitBill"> | number
    amount?: DecimalFilter<"SplitBill"> | Decimal | DecimalJsLike | number | string
    paymentId?: IntNullableFilter<"SplitBill"> | number | null
    customerId?: IntNullableFilter<"SplitBill"> | number | null
    deleted?: BoolFilter<"SplitBill"> | boolean
    deletedAt?: DateTimeNullableFilter<"SplitBill"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"SplitBill"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"SplitBill"> | Date | string | null
    version?: IntNullableFilter<"SplitBill"> | number | null
  }

  export type StockBalanceCreateWithoutOutletInput = {
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    reorderThreshold?: Decimal | DecimalJsLike | number | string | null
    deleted?: boolean
    lastRestockDate?: Date | string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    item: ItemCreateNestedOneWithoutStockBalanceInput
  }

  export type StockBalanceUncheckedCreateWithoutOutletInput = {
    id?: number
    itemId: number
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    reorderThreshold?: Decimal | DecimalJsLike | number | string | null
    deleted?: boolean
    lastRestockDate?: Date | string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StockBalanceCreateOrConnectWithoutOutletInput = {
    where: StockBalanceWhereUniqueInput
    create: XOR<StockBalanceCreateWithoutOutletInput, StockBalanceUncheckedCreateWithoutOutletInput>
  }

  export type StockBalanceCreateManyOutletInputEnvelope = {
    data: StockBalanceCreateManyOutletInput | StockBalanceCreateManyOutletInput[]
    skipDuplicates?: boolean
  }

  export type StockMovementCreateWithoutOutletInput = {
    previousAvailableQuantity: Decimal | DecimalJsLike | number | string
    previousOnHandQuantity: Decimal | DecimalJsLike | number | string
    availableQuantityDelta: Decimal | DecimalJsLike | number | string
    onHandQuantityDelta: Decimal | DecimalJsLike | number | string
    movementType: string
    documentId: number
    reason: string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    performedBy?: string | null
    item: ItemCreateNestedOneWithoutStockMovementsInput
  }

  export type StockMovementUncheckedCreateWithoutOutletInput = {
    id?: number
    itemId: number
    previousAvailableQuantity: Decimal | DecimalJsLike | number | string
    previousOnHandQuantity: Decimal | DecimalJsLike | number | string
    availableQuantityDelta: Decimal | DecimalJsLike | number | string
    onHandQuantityDelta: Decimal | DecimalJsLike | number | string
    movementType: string
    documentId: number
    reason: string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    performedBy?: string | null
  }

  export type StockMovementCreateOrConnectWithoutOutletInput = {
    where: StockMovementWhereUniqueInput
    create: XOR<StockMovementCreateWithoutOutletInput, StockMovementUncheckedCreateWithoutOutletInput>
  }

  export type StockMovementCreateManyOutletInputEnvelope = {
    data: StockMovementCreateManyOutletInput | StockMovementCreateManyOutletInput[]
    skipDuplicates?: boolean
  }

  export type StockSnapshotCreateWithoutOutletInput = {
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    item: ItemCreateNestedOneWithoutStockSnapshotsInput
  }

  export type StockSnapshotUncheckedCreateWithoutOutletInput = {
    id?: number
    itemId: number
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StockSnapshotCreateOrConnectWithoutOutletInput = {
    where: StockSnapshotWhereUniqueInput
    create: XOR<StockSnapshotCreateWithoutOutletInput, StockSnapshotUncheckedCreateWithoutOutletInput>
  }

  export type StockSnapshotCreateManyOutletInputEnvelope = {
    data: StockSnapshotCreateManyOutletInput | StockSnapshotCreateManyOutletInput[]
    skipDuplicates?: boolean
  }

  export type StockReceiptCreateWithoutOutletInput = {
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    receiptDate?: Date | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
    item: ItemCreateNestedOneWithoutStockReceiptsInput
  }

  export type StockReceiptUncheckedCreateWithoutOutletInput = {
    id?: number
    itemId: number
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    receiptDate?: Date | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type StockReceiptCreateOrConnectWithoutOutletInput = {
    where: StockReceiptWhereUniqueInput
    create: XOR<StockReceiptCreateWithoutOutletInput, StockReceiptUncheckedCreateWithoutOutletInput>
  }

  export type StockReceiptCreateManyOutletInputEnvelope = {
    data: StockReceiptCreateManyOutletInput | StockReceiptCreateManyOutletInput[]
    skipDuplicates?: boolean
  }

  export type SettingCreateWithoutOutletInput = {
    tenantId?: number | null
    key: string
    value: string
    type: $Enums.SettingType
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    user?: UserCreateNestedOneWithoutSettingsInput
  }

  export type SettingUncheckedCreateWithoutOutletInput = {
    id?: number
    tenantId?: number | null
    userId?: number | null
    key: string
    value: string
    type: $Enums.SettingType
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SettingCreateOrConnectWithoutOutletInput = {
    where: SettingWhereUniqueInput
    create: XOR<SettingCreateWithoutOutletInput, SettingUncheckedCreateWithoutOutletInput>
  }

  export type SettingCreateManyOutletInputEnvelope = {
    data: SettingCreateManyOutletInput | SettingCreateManyOutletInput[]
    skipDuplicates?: boolean
  }

  export type TableCreateWithoutOutletInput = {
    tableNumber: string
    capacity: number
    status: string
    salesId?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales?: SalesCreateNestedManyWithoutTableInput
    reservations?: ReservationCreateNestedManyWithoutTableInput
  }

  export type TableUncheckedCreateWithoutOutletInput = {
    id?: number
    tableNumber: string
    capacity: number
    status: string
    salesId?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales?: SalesUncheckedCreateNestedManyWithoutTableInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutTableInput
  }

  export type TableCreateOrConnectWithoutOutletInput = {
    where: TableWhereUniqueInput
    create: XOR<TableCreateWithoutOutletInput, TableUncheckedCreateWithoutOutletInput>
  }

  export type TableCreateManyOutletInputEnvelope = {
    data: TableCreateManyOutletInput | TableCreateManyOutletInput[]
    skipDuplicates?: boolean
  }

  export type StationCreateWithoutOutletInput = {
    name: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    orderRouting?: OrderRoutingCreateNestedManyWithoutStationInput
  }

  export type StationUncheckedCreateWithoutOutletInput = {
    id?: number
    name: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    orderRouting?: OrderRoutingUncheckedCreateNestedManyWithoutStationInput
  }

  export type StationCreateOrConnectWithoutOutletInput = {
    where: StationWhereUniqueInput
    create: XOR<StationCreateWithoutOutletInput, StationUncheckedCreateWithoutOutletInput>
  }

  export type StationCreateManyOutletInputEnvelope = {
    data: StationCreateManyOutletInput | StationCreateManyOutletInput[]
    skipDuplicates?: boolean
  }

  export type ReservationCreateWithoutOutletInput = {
    dateTime: Date | string
    partySize: number
    status: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    customer?: CustomerCreateNestedOneWithoutReservationsInput
    table?: TableCreateNestedOneWithoutReservationsInput
  }

  export type ReservationUncheckedCreateWithoutOutletInput = {
    id?: number
    customerId?: number | null
    tableId?: number | null
    dateTime: Date | string
    partySize: number
    status: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type ReservationCreateOrConnectWithoutOutletInput = {
    where: ReservationWhereUniqueInput
    create: XOR<ReservationCreateWithoutOutletInput, ReservationUncheckedCreateWithoutOutletInput>
  }

  export type ReservationCreateManyOutletInputEnvelope = {
    data: ReservationCreateManyOutletInput | ReservationCreateManyOutletInput[]
    skipDuplicates?: boolean
  }

  export type WaitlistCreateWithoutOutletInput = {
    partySize: number
    status: string
    waitTime?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    customer?: CustomerCreateNestedOneWithoutWaitlistsInput
  }

  export type WaitlistUncheckedCreateWithoutOutletInput = {
    id?: number
    customerId?: number | null
    partySize: number
    status: string
    waitTime?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type WaitlistCreateOrConnectWithoutOutletInput = {
    where: WaitlistWhereUniqueInput
    create: XOR<WaitlistCreateWithoutOutletInput, WaitlistUncheckedCreateWithoutOutletInput>
  }

  export type WaitlistCreateManyOutletInputEnvelope = {
    data: WaitlistCreateManyOutletInput | WaitlistCreateManyOutletInput[]
    skipDuplicates?: boolean
  }

  export type StockBalanceUpsertWithWhereUniqueWithoutOutletInput = {
    where: StockBalanceWhereUniqueInput
    update: XOR<StockBalanceUpdateWithoutOutletInput, StockBalanceUncheckedUpdateWithoutOutletInput>
    create: XOR<StockBalanceCreateWithoutOutletInput, StockBalanceUncheckedCreateWithoutOutletInput>
  }

  export type StockBalanceUpdateWithWhereUniqueWithoutOutletInput = {
    where: StockBalanceWhereUniqueInput
    data: XOR<StockBalanceUpdateWithoutOutletInput, StockBalanceUncheckedUpdateWithoutOutletInput>
  }

  export type StockBalanceUpdateManyWithWhereWithoutOutletInput = {
    where: StockBalanceScalarWhereInput
    data: XOR<StockBalanceUpdateManyMutationInput, StockBalanceUncheckedUpdateManyWithoutOutletInput>
  }

  export type StockBalanceScalarWhereInput = {
    AND?: StockBalanceScalarWhereInput | StockBalanceScalarWhereInput[]
    OR?: StockBalanceScalarWhereInput[]
    NOT?: StockBalanceScalarWhereInput | StockBalanceScalarWhereInput[]
    id?: IntFilter<"StockBalance"> | number
    itemId?: IntFilter<"StockBalance"> | number
    outletId?: IntFilter<"StockBalance"> | number
    availableQuantity?: DecimalFilter<"StockBalance"> | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFilter<"StockBalance"> | Decimal | DecimalJsLike | number | string
    reorderThreshold?: DecimalNullableFilter<"StockBalance"> | Decimal | DecimalJsLike | number | string | null
    deleted?: BoolFilter<"StockBalance"> | boolean
    lastRestockDate?: DateTimeNullableFilter<"StockBalance"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"StockBalance"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"StockBalance"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"StockBalance"> | Date | string | null
    version?: IntNullableFilter<"StockBalance"> | number | null
  }

  export type StockMovementUpsertWithWhereUniqueWithoutOutletInput = {
    where: StockMovementWhereUniqueInput
    update: XOR<StockMovementUpdateWithoutOutletInput, StockMovementUncheckedUpdateWithoutOutletInput>
    create: XOR<StockMovementCreateWithoutOutletInput, StockMovementUncheckedCreateWithoutOutletInput>
  }

  export type StockMovementUpdateWithWhereUniqueWithoutOutletInput = {
    where: StockMovementWhereUniqueInput
    data: XOR<StockMovementUpdateWithoutOutletInput, StockMovementUncheckedUpdateWithoutOutletInput>
  }

  export type StockMovementUpdateManyWithWhereWithoutOutletInput = {
    where: StockMovementScalarWhereInput
    data: XOR<StockMovementUpdateManyMutationInput, StockMovementUncheckedUpdateManyWithoutOutletInput>
  }

  export type StockMovementScalarWhereInput = {
    AND?: StockMovementScalarWhereInput | StockMovementScalarWhereInput[]
    OR?: StockMovementScalarWhereInput[]
    NOT?: StockMovementScalarWhereInput | StockMovementScalarWhereInput[]
    id?: IntFilter<"StockMovement"> | number
    itemId?: IntFilter<"StockMovement"> | number
    outletId?: IntFilter<"StockMovement"> | number
    previousAvailableQuantity?: DecimalFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    movementType?: StringFilter<"StockMovement"> | string
    documentId?: IntFilter<"StockMovement"> | number
    reason?: StringFilter<"StockMovement"> | string
    remark?: StringFilter<"StockMovement"> | string
    deleted?: BoolFilter<"StockMovement"> | boolean
    createdAt?: DateTimeNullableFilter<"StockMovement"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"StockMovement"> | Date | string | null
    version?: IntNullableFilter<"StockMovement"> | number | null
    performedBy?: StringNullableFilter<"StockMovement"> | string | null
  }

  export type StockSnapshotUpsertWithWhereUniqueWithoutOutletInput = {
    where: StockSnapshotWhereUniqueInput
    update: XOR<StockSnapshotUpdateWithoutOutletInput, StockSnapshotUncheckedUpdateWithoutOutletInput>
    create: XOR<StockSnapshotCreateWithoutOutletInput, StockSnapshotUncheckedCreateWithoutOutletInput>
  }

  export type StockSnapshotUpdateWithWhereUniqueWithoutOutletInput = {
    where: StockSnapshotWhereUniqueInput
    data: XOR<StockSnapshotUpdateWithoutOutletInput, StockSnapshotUncheckedUpdateWithoutOutletInput>
  }

  export type StockSnapshotUpdateManyWithWhereWithoutOutletInput = {
    where: StockSnapshotScalarWhereInput
    data: XOR<StockSnapshotUpdateManyMutationInput, StockSnapshotUncheckedUpdateManyWithoutOutletInput>
  }

  export type StockSnapshotScalarWhereInput = {
    AND?: StockSnapshotScalarWhereInput | StockSnapshotScalarWhereInput[]
    OR?: StockSnapshotScalarWhereInput[]
    NOT?: StockSnapshotScalarWhereInput | StockSnapshotScalarWhereInput[]
    id?: IntFilter<"StockSnapshot"> | number
    itemId?: IntFilter<"StockSnapshot"> | number
    outletId?: IntFilter<"StockSnapshot"> | number
    availableQuantity?: DecimalFilter<"StockSnapshot"> | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFilter<"StockSnapshot"> | Decimal | DecimalJsLike | number | string
    deleted?: BoolFilter<"StockSnapshot"> | boolean
    deletedAt?: DateTimeNullableFilter<"StockSnapshot"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"StockSnapshot"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"StockSnapshot"> | Date | string | null
    version?: IntNullableFilter<"StockSnapshot"> | number | null
  }

  export type StockReceiptUpsertWithWhereUniqueWithoutOutletInput = {
    where: StockReceiptWhereUniqueInput
    update: XOR<StockReceiptUpdateWithoutOutletInput, StockReceiptUncheckedUpdateWithoutOutletInput>
    create: XOR<StockReceiptCreateWithoutOutletInput, StockReceiptUncheckedCreateWithoutOutletInput>
  }

  export type StockReceiptUpdateWithWhereUniqueWithoutOutletInput = {
    where: StockReceiptWhereUniqueInput
    data: XOR<StockReceiptUpdateWithoutOutletInput, StockReceiptUncheckedUpdateWithoutOutletInput>
  }

  export type StockReceiptUpdateManyWithWhereWithoutOutletInput = {
    where: StockReceiptScalarWhereInput
    data: XOR<StockReceiptUpdateManyMutationInput, StockReceiptUncheckedUpdateManyWithoutOutletInput>
  }

  export type StockReceiptScalarWhereInput = {
    AND?: StockReceiptScalarWhereInput | StockReceiptScalarWhereInput[]
    OR?: StockReceiptScalarWhereInput[]
    NOT?: StockReceiptScalarWhereInput | StockReceiptScalarWhereInput[]
    id?: IntFilter<"StockReceipt"> | number
    itemId?: IntFilter<"StockReceipt"> | number
    outletId?: IntFilter<"StockReceipt"> | number
    quantity?: DecimalFilter<"StockReceipt"> | Decimal | DecimalJsLike | number | string
    cost?: DecimalFilter<"StockReceipt"> | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFilter<"StockReceipt"> | Date | string
    createdAt?: DateTimeNullableFilter<"StockReceipt"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"StockReceipt"> | Date | string | null
    deleted?: BoolFilter<"StockReceipt"> | boolean
    deletedAt?: DateTimeNullableFilter<"StockReceipt"> | Date | string | null
    version?: IntNullableFilter<"StockReceipt"> | number | null
  }

  export type SettingUpsertWithWhereUniqueWithoutOutletInput = {
    where: SettingWhereUniqueInput
    update: XOR<SettingUpdateWithoutOutletInput, SettingUncheckedUpdateWithoutOutletInput>
    create: XOR<SettingCreateWithoutOutletInput, SettingUncheckedCreateWithoutOutletInput>
  }

  export type SettingUpdateWithWhereUniqueWithoutOutletInput = {
    where: SettingWhereUniqueInput
    data: XOR<SettingUpdateWithoutOutletInput, SettingUncheckedUpdateWithoutOutletInput>
  }

  export type SettingUpdateManyWithWhereWithoutOutletInput = {
    where: SettingScalarWhereInput
    data: XOR<SettingUpdateManyMutationInput, SettingUncheckedUpdateManyWithoutOutletInput>
  }

  export type TableUpsertWithWhereUniqueWithoutOutletInput = {
    where: TableWhereUniqueInput
    update: XOR<TableUpdateWithoutOutletInput, TableUncheckedUpdateWithoutOutletInput>
    create: XOR<TableCreateWithoutOutletInput, TableUncheckedCreateWithoutOutletInput>
  }

  export type TableUpdateWithWhereUniqueWithoutOutletInput = {
    where: TableWhereUniqueInput
    data: XOR<TableUpdateWithoutOutletInput, TableUncheckedUpdateWithoutOutletInput>
  }

  export type TableUpdateManyWithWhereWithoutOutletInput = {
    where: TableScalarWhereInput
    data: XOR<TableUpdateManyMutationInput, TableUncheckedUpdateManyWithoutOutletInput>
  }

  export type TableScalarWhereInput = {
    AND?: TableScalarWhereInput | TableScalarWhereInput[]
    OR?: TableScalarWhereInput[]
    NOT?: TableScalarWhereInput | TableScalarWhereInput[]
    id?: IntFilter<"Table"> | number
    outletId?: IntFilter<"Table"> | number
    tableNumber?: StringFilter<"Table"> | string
    capacity?: IntFilter<"Table"> | number
    status?: StringFilter<"Table"> | string
    salesId?: IntNullableFilter<"Table"> | number | null
    deleted?: BoolFilter<"Table"> | boolean
    deletedAt?: DateTimeNullableFilter<"Table"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Table"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Table"> | Date | string | null
    version?: IntNullableFilter<"Table"> | number | null
  }

  export type StationUpsertWithWhereUniqueWithoutOutletInput = {
    where: StationWhereUniqueInput
    update: XOR<StationUpdateWithoutOutletInput, StationUncheckedUpdateWithoutOutletInput>
    create: XOR<StationCreateWithoutOutletInput, StationUncheckedCreateWithoutOutletInput>
  }

  export type StationUpdateWithWhereUniqueWithoutOutletInput = {
    where: StationWhereUniqueInput
    data: XOR<StationUpdateWithoutOutletInput, StationUncheckedUpdateWithoutOutletInput>
  }

  export type StationUpdateManyWithWhereWithoutOutletInput = {
    where: StationScalarWhereInput
    data: XOR<StationUpdateManyMutationInput, StationUncheckedUpdateManyWithoutOutletInput>
  }

  export type StationScalarWhereInput = {
    AND?: StationScalarWhereInput | StationScalarWhereInput[]
    OR?: StationScalarWhereInput[]
    NOT?: StationScalarWhereInput | StationScalarWhereInput[]
    id?: IntFilter<"Station"> | number
    outletId?: IntFilter<"Station"> | number
    name?: StringFilter<"Station"> | string
    deleted?: BoolFilter<"Station"> | boolean
    deletedAt?: DateTimeNullableFilter<"Station"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Station"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Station"> | Date | string | null
    version?: IntNullableFilter<"Station"> | number | null
  }

  export type ReservationUpsertWithWhereUniqueWithoutOutletInput = {
    where: ReservationWhereUniqueInput
    update: XOR<ReservationUpdateWithoutOutletInput, ReservationUncheckedUpdateWithoutOutletInput>
    create: XOR<ReservationCreateWithoutOutletInput, ReservationUncheckedCreateWithoutOutletInput>
  }

  export type ReservationUpdateWithWhereUniqueWithoutOutletInput = {
    where: ReservationWhereUniqueInput
    data: XOR<ReservationUpdateWithoutOutletInput, ReservationUncheckedUpdateWithoutOutletInput>
  }

  export type ReservationUpdateManyWithWhereWithoutOutletInput = {
    where: ReservationScalarWhereInput
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyWithoutOutletInput>
  }

  export type WaitlistUpsertWithWhereUniqueWithoutOutletInput = {
    where: WaitlistWhereUniqueInput
    update: XOR<WaitlistUpdateWithoutOutletInput, WaitlistUncheckedUpdateWithoutOutletInput>
    create: XOR<WaitlistCreateWithoutOutletInput, WaitlistUncheckedCreateWithoutOutletInput>
  }

  export type WaitlistUpdateWithWhereUniqueWithoutOutletInput = {
    where: WaitlistWhereUniqueInput
    data: XOR<WaitlistUpdateWithoutOutletInput, WaitlistUncheckedUpdateWithoutOutletInput>
  }

  export type WaitlistUpdateManyWithWhereWithoutOutletInput = {
    where: WaitlistScalarWhereInput
    data: XOR<WaitlistUpdateManyMutationInput, WaitlistUncheckedUpdateManyWithoutOutletInput>
  }

  export type CategoryCreateWithoutItemsInput = {
    name: string
    description?: string | null
    parentId?: number | null
    image?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type CategoryUncheckedCreateWithoutItemsInput = {
    id?: number
    name: string
    description?: string | null
    parentId?: number | null
    image?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type CategoryCreateOrConnectWithoutItemsInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutItemsInput, CategoryUncheckedCreateWithoutItemsInput>
  }

  export type SupplierCreateWithoutItemsInput = {
    companyName: string
    companyStreet?: string | null
    companyCity?: string | null
    companyState?: string | null
    companyPostalCode?: string | null
    companyCountry?: string | null
    companyRegisterNumber?: string | null
    personInChargeLastName?: string | null
    personInChargeFirstName?: string | null
    mobile?: string | null
    email?: string | null
    remark?: string | null
    hasTax: boolean
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutSupplierInput
    invoices?: InvoiceCreateNestedManyWithoutSupplierInput
  }

  export type SupplierUncheckedCreateWithoutItemsInput = {
    id?: number
    companyName: string
    companyStreet?: string | null
    companyCity?: string | null
    companyState?: string | null
    companyPostalCode?: string | null
    companyCountry?: string | null
    companyRegisterNumber?: string | null
    personInChargeLastName?: string | null
    personInChargeFirstName?: string | null
    mobile?: string | null
    email?: string | null
    remark?: string | null
    hasTax: boolean
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutSupplierInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutSupplierInput
  }

  export type SupplierCreateOrConnectWithoutItemsInput = {
    where: SupplierWhereUniqueInput
    create: XOR<SupplierCreateWithoutItemsInput, SupplierUncheckedCreateWithoutItemsInput>
  }

  export type StockBalanceCreateWithoutItemInput = {
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    reorderThreshold?: Decimal | DecimalJsLike | number | string | null
    deleted?: boolean
    lastRestockDate?: Date | string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    outlet: OutletCreateNestedOneWithoutStockBalancesInput
  }

  export type StockBalanceUncheckedCreateWithoutItemInput = {
    id?: number
    outletId: number
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    reorderThreshold?: Decimal | DecimalJsLike | number | string | null
    deleted?: boolean
    lastRestockDate?: Date | string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StockBalanceCreateOrConnectWithoutItemInput = {
    where: StockBalanceWhereUniqueInput
    create: XOR<StockBalanceCreateWithoutItemInput, StockBalanceUncheckedCreateWithoutItemInput>
  }

  export type StockBalanceCreateManyItemInputEnvelope = {
    data: StockBalanceCreateManyItemInput | StockBalanceCreateManyItemInput[]
    skipDuplicates?: boolean
  }

  export type StockMovementCreateWithoutItemInput = {
    previousAvailableQuantity: Decimal | DecimalJsLike | number | string
    previousOnHandQuantity: Decimal | DecimalJsLike | number | string
    availableQuantityDelta: Decimal | DecimalJsLike | number | string
    onHandQuantityDelta: Decimal | DecimalJsLike | number | string
    movementType: string
    documentId: number
    reason: string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    performedBy?: string | null
    outlet: OutletCreateNestedOneWithoutStockMovementsInput
  }

  export type StockMovementUncheckedCreateWithoutItemInput = {
    id?: number
    outletId: number
    previousAvailableQuantity: Decimal | DecimalJsLike | number | string
    previousOnHandQuantity: Decimal | DecimalJsLike | number | string
    availableQuantityDelta: Decimal | DecimalJsLike | number | string
    onHandQuantityDelta: Decimal | DecimalJsLike | number | string
    movementType: string
    documentId: number
    reason: string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    performedBy?: string | null
  }

  export type StockMovementCreateOrConnectWithoutItemInput = {
    where: StockMovementWhereUniqueInput
    create: XOR<StockMovementCreateWithoutItemInput, StockMovementUncheckedCreateWithoutItemInput>
  }

  export type StockMovementCreateManyItemInputEnvelope = {
    data: StockMovementCreateManyItemInput | StockMovementCreateManyItemInput[]
    skipDuplicates?: boolean
  }

  export type StockSnapshotCreateWithoutItemInput = {
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    outlet: OutletCreateNestedOneWithoutStockSnapshotsInput
  }

  export type StockSnapshotUncheckedCreateWithoutItemInput = {
    id?: number
    outletId: number
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StockSnapshotCreateOrConnectWithoutItemInput = {
    where: StockSnapshotWhereUniqueInput
    create: XOR<StockSnapshotCreateWithoutItemInput, StockSnapshotUncheckedCreateWithoutItemInput>
  }

  export type StockSnapshotCreateManyItemInputEnvelope = {
    data: StockSnapshotCreateManyItemInput | StockSnapshotCreateManyItemInput[]
    skipDuplicates?: boolean
  }

  export type StockReceiptCreateWithoutItemInput = {
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    receiptDate?: Date | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
    outlet: OutletCreateNestedOneWithoutStockReceiptsInput
  }

  export type StockReceiptUncheckedCreateWithoutItemInput = {
    id?: number
    outletId: number
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    receiptDate?: Date | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type StockReceiptCreateOrConnectWithoutItemInput = {
    where: StockReceiptWhereUniqueInput
    create: XOR<StockReceiptCreateWithoutItemInput, StockReceiptUncheckedCreateWithoutItemInput>
  }

  export type StockReceiptCreateManyItemInputEnvelope = {
    data: StockReceiptCreateManyItemInput | StockReceiptCreateManyItemInput[]
    skipDuplicates?: boolean
  }

  export type RecipeCreateWithoutItemInput = {
    quantity: number
    unit: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    batchYield?: number | null
    menuItemModifier?: MenuItemModifierCreateNestedOneWithoutRecipesInput
    menuItem: MenuItemCreateNestedOneWithoutRecipesInput
  }

  export type RecipeUncheckedCreateWithoutItemInput = {
    id?: number
    menuItemId: number
    quantity: number
    unit: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    batchYield?: number | null
    menuItemModifierId?: number | null
  }

  export type RecipeCreateOrConnectWithoutItemInput = {
    where: RecipeWhereUniqueInput
    create: XOR<RecipeCreateWithoutItemInput, RecipeUncheckedCreateWithoutItemInput>
  }

  export type RecipeCreateManyItemInputEnvelope = {
    data: RecipeCreateManyItemInput | RecipeCreateManyItemInput[]
    skipDuplicates?: boolean
  }

  export type PurchaseOrderItemCreateWithoutItemInput = {
    quantity: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    purchaseOrder: PurchaseOrderCreateNestedOneWithoutPurchaseOrderItemsInput
  }

  export type PurchaseOrderItemUncheckedCreateWithoutItemInput = {
    id?: number
    purchaseOrderId: number
    quantity: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
  }

  export type PurchaseOrderItemCreateOrConnectWithoutItemInput = {
    where: PurchaseOrderItemWhereUniqueInput
    create: XOR<PurchaseOrderItemCreateWithoutItemInput, PurchaseOrderItemUncheckedCreateWithoutItemInput>
  }

  export type PurchaseOrderItemCreateManyItemInputEnvelope = {
    data: PurchaseOrderItemCreateManyItemInput | PurchaseOrderItemCreateManyItemInput[]
    skipDuplicates?: boolean
  }

  export type DeliveryOrderItemCreateWithoutItemInput = {
    orderedQuantity: number
    receivedQuantity: number
    unitPrice?: Decimal | DecimalJsLike | number | string | null
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    deliveryOrder: DeliveryOrderCreateNestedOneWithoutDeliveryOrderItemsInput
  }

  export type DeliveryOrderItemUncheckedCreateWithoutItemInput = {
    id?: number
    deliveryOrderId: number
    orderedQuantity: number
    receivedQuantity: number
    unitPrice?: Decimal | DecimalJsLike | number | string | null
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
  }

  export type DeliveryOrderItemCreateOrConnectWithoutItemInput = {
    where: DeliveryOrderItemWhereUniqueInput
    create: XOR<DeliveryOrderItemCreateWithoutItemInput, DeliveryOrderItemUncheckedCreateWithoutItemInput>
  }

  export type DeliveryOrderItemCreateManyItemInputEnvelope = {
    data: DeliveryOrderItemCreateManyItemInput | DeliveryOrderItemCreateManyItemInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceItemCreateWithoutItemInput = {
    quantity: Decimal | DecimalJsLike | number | string
    unitPrice: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
    invoice: InvoiceCreateNestedOneWithoutInvoiceItemsInput
  }

  export type InvoiceItemUncheckedCreateWithoutItemInput = {
    id?: number
    invoiceId: number
    quantity: Decimal | DecimalJsLike | number | string
    unitPrice: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type InvoiceItemCreateOrConnectWithoutItemInput = {
    where: InvoiceItemWhereUniqueInput
    create: XOR<InvoiceItemCreateWithoutItemInput, InvoiceItemUncheckedCreateWithoutItemInput>
  }

  export type InvoiceItemCreateManyItemInputEnvelope = {
    data: InvoiceItemCreateManyItemInput | InvoiceItemCreateManyItemInput[]
    skipDuplicates?: boolean
  }

  export type CategoryUpsertWithoutItemsInput = {
    update: XOR<CategoryUpdateWithoutItemsInput, CategoryUncheckedUpdateWithoutItemsInput>
    create: XOR<CategoryCreateWithoutItemsInput, CategoryUncheckedCreateWithoutItemsInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutItemsInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutItemsInput, CategoryUncheckedUpdateWithoutItemsInput>
  }

  export type CategoryUpdateWithoutItemsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableIntFieldUpdateOperationsInput | number | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CategoryUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parentId?: NullableIntFieldUpdateOperationsInput | number | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SupplierUpsertWithoutItemsInput = {
    update: XOR<SupplierUpdateWithoutItemsInput, SupplierUncheckedUpdateWithoutItemsInput>
    create: XOR<SupplierCreateWithoutItemsInput, SupplierUncheckedCreateWithoutItemsInput>
    where?: SupplierWhereInput
  }

  export type SupplierUpdateToOneWithWhereWithoutItemsInput = {
    where?: SupplierWhereInput
    data: XOR<SupplierUpdateWithoutItemsInput, SupplierUncheckedUpdateWithoutItemsInput>
  }

  export type SupplierUpdateWithoutItemsInput = {
    companyName?: StringFieldUpdateOperationsInput | string
    companyStreet?: NullableStringFieldUpdateOperationsInput | string | null
    companyCity?: NullableStringFieldUpdateOperationsInput | string | null
    companyState?: NullableStringFieldUpdateOperationsInput | string | null
    companyPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    companyCountry?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegisterNumber?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeLastName?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeFirstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrders?: PurchaseOrderUpdateManyWithoutSupplierNestedInput
    invoices?: InvoiceUpdateManyWithoutSupplierNestedInput
  }

  export type SupplierUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    companyName?: StringFieldUpdateOperationsInput | string
    companyStreet?: NullableStringFieldUpdateOperationsInput | string | null
    companyCity?: NullableStringFieldUpdateOperationsInput | string | null
    companyState?: NullableStringFieldUpdateOperationsInput | string | null
    companyPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    companyCountry?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegisterNumber?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeLastName?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeFirstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutSupplierNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutSupplierNestedInput
  }

  export type StockBalanceUpsertWithWhereUniqueWithoutItemInput = {
    where: StockBalanceWhereUniqueInput
    update: XOR<StockBalanceUpdateWithoutItemInput, StockBalanceUncheckedUpdateWithoutItemInput>
    create: XOR<StockBalanceCreateWithoutItemInput, StockBalanceUncheckedCreateWithoutItemInput>
  }

  export type StockBalanceUpdateWithWhereUniqueWithoutItemInput = {
    where: StockBalanceWhereUniqueInput
    data: XOR<StockBalanceUpdateWithoutItemInput, StockBalanceUncheckedUpdateWithoutItemInput>
  }

  export type StockBalanceUpdateManyWithWhereWithoutItemInput = {
    where: StockBalanceScalarWhereInput
    data: XOR<StockBalanceUpdateManyMutationInput, StockBalanceUncheckedUpdateManyWithoutItemInput>
  }

  export type StockMovementUpsertWithWhereUniqueWithoutItemInput = {
    where: StockMovementWhereUniqueInput
    update: XOR<StockMovementUpdateWithoutItemInput, StockMovementUncheckedUpdateWithoutItemInput>
    create: XOR<StockMovementCreateWithoutItemInput, StockMovementUncheckedCreateWithoutItemInput>
  }

  export type StockMovementUpdateWithWhereUniqueWithoutItemInput = {
    where: StockMovementWhereUniqueInput
    data: XOR<StockMovementUpdateWithoutItemInput, StockMovementUncheckedUpdateWithoutItemInput>
  }

  export type StockMovementUpdateManyWithWhereWithoutItemInput = {
    where: StockMovementScalarWhereInput
    data: XOR<StockMovementUpdateManyMutationInput, StockMovementUncheckedUpdateManyWithoutItemInput>
  }

  export type StockSnapshotUpsertWithWhereUniqueWithoutItemInput = {
    where: StockSnapshotWhereUniqueInput
    update: XOR<StockSnapshotUpdateWithoutItemInput, StockSnapshotUncheckedUpdateWithoutItemInput>
    create: XOR<StockSnapshotCreateWithoutItemInput, StockSnapshotUncheckedCreateWithoutItemInput>
  }

  export type StockSnapshotUpdateWithWhereUniqueWithoutItemInput = {
    where: StockSnapshotWhereUniqueInput
    data: XOR<StockSnapshotUpdateWithoutItemInput, StockSnapshotUncheckedUpdateWithoutItemInput>
  }

  export type StockSnapshotUpdateManyWithWhereWithoutItemInput = {
    where: StockSnapshotScalarWhereInput
    data: XOR<StockSnapshotUpdateManyMutationInput, StockSnapshotUncheckedUpdateManyWithoutItemInput>
  }

  export type StockReceiptUpsertWithWhereUniqueWithoutItemInput = {
    where: StockReceiptWhereUniqueInput
    update: XOR<StockReceiptUpdateWithoutItemInput, StockReceiptUncheckedUpdateWithoutItemInput>
    create: XOR<StockReceiptCreateWithoutItemInput, StockReceiptUncheckedCreateWithoutItemInput>
  }

  export type StockReceiptUpdateWithWhereUniqueWithoutItemInput = {
    where: StockReceiptWhereUniqueInput
    data: XOR<StockReceiptUpdateWithoutItemInput, StockReceiptUncheckedUpdateWithoutItemInput>
  }

  export type StockReceiptUpdateManyWithWhereWithoutItemInput = {
    where: StockReceiptScalarWhereInput
    data: XOR<StockReceiptUpdateManyMutationInput, StockReceiptUncheckedUpdateManyWithoutItemInput>
  }

  export type RecipeUpsertWithWhereUniqueWithoutItemInput = {
    where: RecipeWhereUniqueInput
    update: XOR<RecipeUpdateWithoutItemInput, RecipeUncheckedUpdateWithoutItemInput>
    create: XOR<RecipeCreateWithoutItemInput, RecipeUncheckedCreateWithoutItemInput>
  }

  export type RecipeUpdateWithWhereUniqueWithoutItemInput = {
    where: RecipeWhereUniqueInput
    data: XOR<RecipeUpdateWithoutItemInput, RecipeUncheckedUpdateWithoutItemInput>
  }

  export type RecipeUpdateManyWithWhereWithoutItemInput = {
    where: RecipeScalarWhereInput
    data: XOR<RecipeUpdateManyMutationInput, RecipeUncheckedUpdateManyWithoutItemInput>
  }

  export type RecipeScalarWhereInput = {
    AND?: RecipeScalarWhereInput | RecipeScalarWhereInput[]
    OR?: RecipeScalarWhereInput[]
    NOT?: RecipeScalarWhereInput | RecipeScalarWhereInput[]
    id?: IntFilter<"Recipe"> | number
    menuItemId?: IntFilter<"Recipe"> | number
    itemId?: IntFilter<"Recipe"> | number
    quantity?: FloatFilter<"Recipe"> | number
    unit?: StringFilter<"Recipe"> | string
    deleted?: BoolFilter<"Recipe"> | boolean
    deletedAt?: DateTimeNullableFilter<"Recipe"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Recipe"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Recipe"> | Date | string | null
    version?: IntNullableFilter<"Recipe"> | number | null
    batchYield?: FloatNullableFilter<"Recipe"> | number | null
    menuItemModifierId?: IntNullableFilter<"Recipe"> | number | null
  }

  export type PurchaseOrderItemUpsertWithWhereUniqueWithoutItemInput = {
    where: PurchaseOrderItemWhereUniqueInput
    update: XOR<PurchaseOrderItemUpdateWithoutItemInput, PurchaseOrderItemUncheckedUpdateWithoutItemInput>
    create: XOR<PurchaseOrderItemCreateWithoutItemInput, PurchaseOrderItemUncheckedCreateWithoutItemInput>
  }

  export type PurchaseOrderItemUpdateWithWhereUniqueWithoutItemInput = {
    where: PurchaseOrderItemWhereUniqueInput
    data: XOR<PurchaseOrderItemUpdateWithoutItemInput, PurchaseOrderItemUncheckedUpdateWithoutItemInput>
  }

  export type PurchaseOrderItemUpdateManyWithWhereWithoutItemInput = {
    where: PurchaseOrderItemScalarWhereInput
    data: XOR<PurchaseOrderItemUpdateManyMutationInput, PurchaseOrderItemUncheckedUpdateManyWithoutItemInput>
  }

  export type PurchaseOrderItemScalarWhereInput = {
    AND?: PurchaseOrderItemScalarWhereInput | PurchaseOrderItemScalarWhereInput[]
    OR?: PurchaseOrderItemScalarWhereInput[]
    NOT?: PurchaseOrderItemScalarWhereInput | PurchaseOrderItemScalarWhereInput[]
    id?: IntFilter<"PurchaseOrderItem"> | number
    purchaseOrderId?: IntFilter<"PurchaseOrderItem"> | number
    itemId?: IntFilter<"PurchaseOrderItem"> | number
    quantity?: DecimalFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalNullableFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string | null
    discountType?: StringNullableFilter<"PurchaseOrderItem"> | string | null
    discountAmount?: DecimalNullableFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFilter<"PurchaseOrderItem"> | Decimal | DecimalJsLike | number | string
    remark?: StringNullableFilter<"PurchaseOrderItem"> | string | null
    version?: IntNullableFilter<"PurchaseOrderItem"> | number | null
    createdAt?: DateTimeNullableFilter<"PurchaseOrderItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"PurchaseOrderItem"> | Date | string | null
    deleted?: BoolFilter<"PurchaseOrderItem"> | boolean
    deletedAt?: DateTimeNullableFilter<"PurchaseOrderItem"> | Date | string | null
  }

  export type DeliveryOrderItemUpsertWithWhereUniqueWithoutItemInput = {
    where: DeliveryOrderItemWhereUniqueInput
    update: XOR<DeliveryOrderItemUpdateWithoutItemInput, DeliveryOrderItemUncheckedUpdateWithoutItemInput>
    create: XOR<DeliveryOrderItemCreateWithoutItemInput, DeliveryOrderItemUncheckedCreateWithoutItemInput>
  }

  export type DeliveryOrderItemUpdateWithWhereUniqueWithoutItemInput = {
    where: DeliveryOrderItemWhereUniqueInput
    data: XOR<DeliveryOrderItemUpdateWithoutItemInput, DeliveryOrderItemUncheckedUpdateWithoutItemInput>
  }

  export type DeliveryOrderItemUpdateManyWithWhereWithoutItemInput = {
    where: DeliveryOrderItemScalarWhereInput
    data: XOR<DeliveryOrderItemUpdateManyMutationInput, DeliveryOrderItemUncheckedUpdateManyWithoutItemInput>
  }

  export type DeliveryOrderItemScalarWhereInput = {
    AND?: DeliveryOrderItemScalarWhereInput | DeliveryOrderItemScalarWhereInput[]
    OR?: DeliveryOrderItemScalarWhereInput[]
    NOT?: DeliveryOrderItemScalarWhereInput | DeliveryOrderItemScalarWhereInput[]
    id?: IntFilter<"DeliveryOrderItem"> | number
    deliveryOrderId?: IntFilter<"DeliveryOrderItem"> | number
    itemId?: IntFilter<"DeliveryOrderItem"> | number
    orderedQuantity?: FloatFilter<"DeliveryOrderItem"> | number
    receivedQuantity?: FloatFilter<"DeliveryOrderItem"> | number
    unitPrice?: DecimalNullableFilter<"DeliveryOrderItem"> | Decimal | DecimalJsLike | number | string | null
    remark?: StringNullableFilter<"DeliveryOrderItem"> | string | null
    version?: IntNullableFilter<"DeliveryOrderItem"> | number | null
    createdAt?: DateTimeNullableFilter<"DeliveryOrderItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"DeliveryOrderItem"> | Date | string | null
    deleted?: BoolFilter<"DeliveryOrderItem"> | boolean
    deletedAt?: DateTimeNullableFilter<"DeliveryOrderItem"> | Date | string | null
  }

  export type InvoiceItemUpsertWithWhereUniqueWithoutItemInput = {
    where: InvoiceItemWhereUniqueInput
    update: XOR<InvoiceItemUpdateWithoutItemInput, InvoiceItemUncheckedUpdateWithoutItemInput>
    create: XOR<InvoiceItemCreateWithoutItemInput, InvoiceItemUncheckedCreateWithoutItemInput>
  }

  export type InvoiceItemUpdateWithWhereUniqueWithoutItemInput = {
    where: InvoiceItemWhereUniqueInput
    data: XOR<InvoiceItemUpdateWithoutItemInput, InvoiceItemUncheckedUpdateWithoutItemInput>
  }

  export type InvoiceItemUpdateManyWithWhereWithoutItemInput = {
    where: InvoiceItemScalarWhereInput
    data: XOR<InvoiceItemUpdateManyMutationInput, InvoiceItemUncheckedUpdateManyWithoutItemInput>
  }

  export type InvoiceItemScalarWhereInput = {
    AND?: InvoiceItemScalarWhereInput | InvoiceItemScalarWhereInput[]
    OR?: InvoiceItemScalarWhereInput[]
    NOT?: InvoiceItemScalarWhereInput | InvoiceItemScalarWhereInput[]
    id?: IntFilter<"InvoiceItem"> | number
    invoiceId?: IntFilter<"InvoiceItem"> | number
    itemId?: IntFilter<"InvoiceItem"> | number
    quantity?: DecimalFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string
    unitPrice?: DecimalFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string
    discountType?: StringNullableFilter<"InvoiceItem"> | string | null
    discountAmount?: DecimalNullableFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string | null
    taxAmount?: DecimalNullableFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string | null
    subtotal?: DecimalFilter<"InvoiceItem"> | Decimal | DecimalJsLike | number | string
    remark?: StringNullableFilter<"InvoiceItem"> | string | null
    createdAt?: DateTimeNullableFilter<"InvoiceItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"InvoiceItem"> | Date | string | null
    deleted?: BoolFilter<"InvoiceItem"> | boolean
    deletedAt?: DateTimeNullableFilter<"InvoiceItem"> | Date | string | null
    version?: IntNullableFilter<"InvoiceItem"> | number | null
  }

  export type ItemCreateWithoutCategoryInput = {
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    supplier: SupplierCreateNestedOneWithoutItemsInput
    stockBalance?: StockBalanceCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutItemInput
    recipes?: RecipeCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemCreateNestedManyWithoutItemInput
  }

  export type ItemUncheckedCreateWithoutCategoryInput = {
    id?: number
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    supplierId: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalance?: StockBalanceUncheckedCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutItemInput
    recipes?: RecipeUncheckedCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemCreateOrConnectWithoutCategoryInput = {
    where: ItemWhereUniqueInput
    create: XOR<ItemCreateWithoutCategoryInput, ItemUncheckedCreateWithoutCategoryInput>
  }

  export type ItemCreateManyCategoryInputEnvelope = {
    data: ItemCreateManyCategoryInput | ItemCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type ItemUpsertWithWhereUniqueWithoutCategoryInput = {
    where: ItemWhereUniqueInput
    update: XOR<ItemUpdateWithoutCategoryInput, ItemUncheckedUpdateWithoutCategoryInput>
    create: XOR<ItemCreateWithoutCategoryInput, ItemUncheckedCreateWithoutCategoryInput>
  }

  export type ItemUpdateWithWhereUniqueWithoutCategoryInput = {
    where: ItemWhereUniqueInput
    data: XOR<ItemUpdateWithoutCategoryInput, ItemUncheckedUpdateWithoutCategoryInput>
  }

  export type ItemUpdateManyWithWhereWithoutCategoryInput = {
    where: ItemScalarWhereInput
    data: XOR<ItemUpdateManyMutationInput, ItemUncheckedUpdateManyWithoutCategoryInput>
  }

  export type SalesItemCreateWithoutSalesInput = {
    itemId: number
    itemName: string
    itemCode: string
    itemBrand: string
    itemModel?: string
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    priceBeforeTax: Decimal | DecimalJsLike | number | string
    profit: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    specialInstructions?: string | null
    itemStatus?: string | null
    priority?: string | null
    estimatedPrepTime?: number | null
    selectedModifiers?: SalesItemModifierCreateNestedManyWithoutSalesItemInput
    orderRouting?: OrderRoutingCreateNestedManyWithoutSalesItemInput
  }

  export type SalesItemUncheckedCreateWithoutSalesInput = {
    id?: number
    itemId: number
    itemName: string
    itemCode: string
    itemBrand: string
    itemModel?: string
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    priceBeforeTax: Decimal | DecimalJsLike | number | string
    profit: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    specialInstructions?: string | null
    itemStatus?: string | null
    priority?: string | null
    estimatedPrepTime?: number | null
    selectedModifiers?: SalesItemModifierUncheckedCreateNestedManyWithoutSalesItemInput
    orderRouting?: OrderRoutingUncheckedCreateNestedManyWithoutSalesItemInput
  }

  export type SalesItemCreateOrConnectWithoutSalesInput = {
    where: SalesItemWhereUniqueInput
    create: XOR<SalesItemCreateWithoutSalesInput, SalesItemUncheckedCreateWithoutSalesInput>
  }

  export type SalesItemCreateManySalesInputEnvelope = {
    data: SalesItemCreateManySalesInput | SalesItemCreateManySalesInput[]
    skipDuplicates?: boolean
  }

  export type PaymentCreateWithoutSalesInput = {
    method: string
    tenderedAmount: Decimal | DecimalJsLike | number | string
    paidAmount: Decimal | DecimalJsLike | number | string
    currencySymbol?: string
    reference?: string
    remark?: string
    businessDate: Date | string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    cardInfos?: CardInfoCreateNestedManyWithoutPaymentInput
    splitBills?: SplitBillCreateNestedManyWithoutPaymentInput
  }

  export type PaymentUncheckedCreateWithoutSalesInput = {
    id?: number
    method: string
    tenderedAmount: Decimal | DecimalJsLike | number | string
    paidAmount: Decimal | DecimalJsLike | number | string
    currencySymbol?: string
    reference?: string
    remark?: string
    businessDate: Date | string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    cardInfos?: CardInfoUncheckedCreateNestedManyWithoutPaymentInput
    splitBills?: SplitBillUncheckedCreateNestedManyWithoutPaymentInput
  }

  export type PaymentCreateOrConnectWithoutSalesInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutSalesInput, PaymentUncheckedCreateWithoutSalesInput>
  }

  export type PaymentCreateManySalesInputEnvelope = {
    data: PaymentCreateManySalesInput | PaymentCreateManySalesInput[]
    skipDuplicates?: boolean
  }

  export type RegisterLogCreateWithoutSalesInput = {
    type: string
    modifiedAmount: Decimal | DecimalJsLike | number | string
    currencySymbol?: string
    remark?: string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type RegisterLogUncheckedCreateWithoutSalesInput = {
    id?: number
    type: string
    modifiedAmount: Decimal | DecimalJsLike | number | string
    currencySymbol?: string
    remark?: string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type RegisterLogCreateOrConnectWithoutSalesInput = {
    where: RegisterLogWhereUniqueInput
    create: XOR<RegisterLogCreateWithoutSalesInput, RegisterLogUncheckedCreateWithoutSalesInput>
  }

  export type RegisterLogCreateManySalesInputEnvelope = {
    data: RegisterLogCreateManySalesInput | RegisterLogCreateManySalesInput[]
    skipDuplicates?: boolean
  }

  export type CustomerCreateWithoutSalesInput = {
    salutation?: string
    lastName: string
    firstName: string
    mobile?: string | null
    email?: string | null
    gender?: string | null
    billStreet?: string | null
    billCity?: string | null
    billState?: string | null
    billPostalCode?: string | null
    billCountry?: string | null
    billRemark?: string | null
    shipStreet?: string | null
    shipCity?: string | null
    shipState?: string | null
    shipPostalCode?: string | null
    shipCountry?: string | null
    shipRemark?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    promotions?: PromotionCustomerCreateNestedManyWithoutCustomerInput
    promotionUsage?: PromotionUsageCreateNestedManyWithoutCustomerInput
    reservations?: ReservationCreateNestedManyWithoutCustomerInput
    waitlists?: WaitlistCreateNestedManyWithoutCustomerInput
    splitBills?: SplitBillCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutSalesInput = {
    id?: number
    salutation?: string
    lastName: string
    firstName: string
    mobile?: string | null
    email?: string | null
    gender?: string | null
    billStreet?: string | null
    billCity?: string | null
    billState?: string | null
    billPostalCode?: string | null
    billCountry?: string | null
    billRemark?: string | null
    shipStreet?: string | null
    shipCity?: string | null
    shipState?: string | null
    shipPostalCode?: string | null
    shipCountry?: string | null
    shipRemark?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    promotions?: PromotionCustomerUncheckedCreateNestedManyWithoutCustomerInput
    promotionUsage?: PromotionUsageUncheckedCreateNestedManyWithoutCustomerInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutCustomerInput
    waitlists?: WaitlistUncheckedCreateNestedManyWithoutCustomerInput
    splitBills?: SplitBillUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutSalesInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutSalesInput, CustomerUncheckedCreateWithoutSalesInput>
  }

  export type TableCreateWithoutSalesInput = {
    tableNumber: string
    capacity: number
    status: string
    salesId?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    outlet: OutletCreateNestedOneWithoutTablesInput
    reservations?: ReservationCreateNestedManyWithoutTableInput
  }

  export type TableUncheckedCreateWithoutSalesInput = {
    id?: number
    outletId: number
    tableNumber: string
    capacity: number
    status: string
    salesId?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    reservations?: ReservationUncheckedCreateNestedManyWithoutTableInput
  }

  export type TableCreateOrConnectWithoutSalesInput = {
    where: TableWhereUniqueInput
    create: XOR<TableCreateWithoutSalesInput, TableUncheckedCreateWithoutSalesInput>
  }

  export type SalesItemUpsertWithWhereUniqueWithoutSalesInput = {
    where: SalesItemWhereUniqueInput
    update: XOR<SalesItemUpdateWithoutSalesInput, SalesItemUncheckedUpdateWithoutSalesInput>
    create: XOR<SalesItemCreateWithoutSalesInput, SalesItemUncheckedCreateWithoutSalesInput>
  }

  export type SalesItemUpdateWithWhereUniqueWithoutSalesInput = {
    where: SalesItemWhereUniqueInput
    data: XOR<SalesItemUpdateWithoutSalesInput, SalesItemUncheckedUpdateWithoutSalesInput>
  }

  export type SalesItemUpdateManyWithWhereWithoutSalesInput = {
    where: SalesItemScalarWhereInput
    data: XOR<SalesItemUpdateManyMutationInput, SalesItemUncheckedUpdateManyWithoutSalesInput>
  }

  export type SalesItemScalarWhereInput = {
    AND?: SalesItemScalarWhereInput | SalesItemScalarWhereInput[]
    OR?: SalesItemScalarWhereInput[]
    NOT?: SalesItemScalarWhereInput | SalesItemScalarWhereInput[]
    id?: IntFilter<"SalesItem"> | number
    salesId?: IntFilter<"SalesItem"> | number
    itemId?: IntFilter<"SalesItem"> | number
    itemName?: StringFilter<"SalesItem"> | string
    itemCode?: StringFilter<"SalesItem"> | string
    itemBrand?: StringFilter<"SalesItem"> | string
    itemModel?: StringFilter<"SalesItem"> | string
    quantity?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    cost?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    price?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    priceBeforeTax?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    profit?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFilter<"SalesItem"> | Decimal | DecimalJsLike | number | string
    remark?: StringFilter<"SalesItem"> | string
    deleted?: BoolFilter<"SalesItem"> | boolean
    createdAt?: DateTimeNullableFilter<"SalesItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"SalesItem"> | Date | string | null
    version?: IntNullableFilter<"SalesItem"> | number | null
    specialInstructions?: StringNullableFilter<"SalesItem"> | string | null
    itemStatus?: StringNullableFilter<"SalesItem"> | string | null
    priority?: StringNullableFilter<"SalesItem"> | string | null
    estimatedPrepTime?: IntNullableFilter<"SalesItem"> | number | null
  }

  export type PaymentUpsertWithWhereUniqueWithoutSalesInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutSalesInput, PaymentUncheckedUpdateWithoutSalesInput>
    create: XOR<PaymentCreateWithoutSalesInput, PaymentUncheckedCreateWithoutSalesInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutSalesInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutSalesInput, PaymentUncheckedUpdateWithoutSalesInput>
  }

  export type PaymentUpdateManyWithWhereWithoutSalesInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutSalesInput>
  }

  export type PaymentScalarWhereInput = {
    AND?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    OR?: PaymentScalarWhereInput[]
    NOT?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    id?: IntFilter<"Payment"> | number
    method?: StringFilter<"Payment"> | string
    tenderedAmount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFilter<"Payment"> | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFilter<"Payment"> | string
    salesId?: IntFilter<"Payment"> | number
    reference?: StringFilter<"Payment"> | string
    remark?: StringFilter<"Payment"> | string
    businessDate?: DateTimeFilter<"Payment"> | Date | string
    status?: StringFilter<"Payment"> | string
    outletId?: IntFilter<"Payment"> | number
    sessionId?: IntFilter<"Payment"> | number
    eodId?: IntFilter<"Payment"> | number
    performedBy?: StringNullableFilter<"Payment"> | string | null
    deleted?: BoolFilter<"Payment"> | boolean
    deletedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    version?: IntNullableFilter<"Payment"> | number | null
  }

  export type RegisterLogUpsertWithWhereUniqueWithoutSalesInput = {
    where: RegisterLogWhereUniqueInput
    update: XOR<RegisterLogUpdateWithoutSalesInput, RegisterLogUncheckedUpdateWithoutSalesInput>
    create: XOR<RegisterLogCreateWithoutSalesInput, RegisterLogUncheckedCreateWithoutSalesInput>
  }

  export type RegisterLogUpdateWithWhereUniqueWithoutSalesInput = {
    where: RegisterLogWhereUniqueInput
    data: XOR<RegisterLogUpdateWithoutSalesInput, RegisterLogUncheckedUpdateWithoutSalesInput>
  }

  export type RegisterLogUpdateManyWithWhereWithoutSalesInput = {
    where: RegisterLogScalarWhereInput
    data: XOR<RegisterLogUpdateManyMutationInput, RegisterLogUncheckedUpdateManyWithoutSalesInput>
  }

  export type RegisterLogScalarWhereInput = {
    AND?: RegisterLogScalarWhereInput | RegisterLogScalarWhereInput[]
    OR?: RegisterLogScalarWhereInput[]
    NOT?: RegisterLogScalarWhereInput | RegisterLogScalarWhereInput[]
    id?: IntFilter<"RegisterLog"> | number
    type?: StringFilter<"RegisterLog"> | string
    modifiedAmount?: DecimalFilter<"RegisterLog"> | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFilter<"RegisterLog"> | string
    salesId?: IntFilter<"RegisterLog"> | number
    remark?: StringFilter<"RegisterLog"> | string
    status?: StringFilter<"RegisterLog"> | string
    outletId?: IntFilter<"RegisterLog"> | number
    sessionId?: IntFilter<"RegisterLog"> | number
    eodId?: IntFilter<"RegisterLog"> | number
    performedBy?: StringNullableFilter<"RegisterLog"> | string | null
    deleted?: BoolFilter<"RegisterLog"> | boolean
    createdAt?: DateTimeNullableFilter<"RegisterLog"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"RegisterLog"> | Date | string | null
    version?: IntNullableFilter<"RegisterLog"> | number | null
  }

  export type CustomerUpsertWithoutSalesInput = {
    update: XOR<CustomerUpdateWithoutSalesInput, CustomerUncheckedUpdateWithoutSalesInput>
    create: XOR<CustomerCreateWithoutSalesInput, CustomerUncheckedCreateWithoutSalesInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutSalesInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutSalesInput, CustomerUncheckedUpdateWithoutSalesInput>
  }

  export type CustomerUpdateWithoutSalesInput = {
    salutation?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: NullableStringFieldUpdateOperationsInput | string | null
    billCity?: NullableStringFieldUpdateOperationsInput | string | null
    billState?: NullableStringFieldUpdateOperationsInput | string | null
    billPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    billCountry?: NullableStringFieldUpdateOperationsInput | string | null
    billRemark?: NullableStringFieldUpdateOperationsInput | string | null
    shipStreet?: NullableStringFieldUpdateOperationsInput | string | null
    shipCity?: NullableStringFieldUpdateOperationsInput | string | null
    shipState?: NullableStringFieldUpdateOperationsInput | string | null
    shipPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    shipCountry?: NullableStringFieldUpdateOperationsInput | string | null
    shipRemark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionCustomerUpdateManyWithoutCustomerNestedInput
    promotionUsage?: PromotionUsageUpdateManyWithoutCustomerNestedInput
    reservations?: ReservationUpdateManyWithoutCustomerNestedInput
    waitlists?: WaitlistUpdateManyWithoutCustomerNestedInput
    splitBills?: SplitBillUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutSalesInput = {
    id?: IntFieldUpdateOperationsInput | number
    salutation?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: NullableStringFieldUpdateOperationsInput | string | null
    billCity?: NullableStringFieldUpdateOperationsInput | string | null
    billState?: NullableStringFieldUpdateOperationsInput | string | null
    billPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    billCountry?: NullableStringFieldUpdateOperationsInput | string | null
    billRemark?: NullableStringFieldUpdateOperationsInput | string | null
    shipStreet?: NullableStringFieldUpdateOperationsInput | string | null
    shipCity?: NullableStringFieldUpdateOperationsInput | string | null
    shipState?: NullableStringFieldUpdateOperationsInput | string | null
    shipPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    shipCountry?: NullableStringFieldUpdateOperationsInput | string | null
    shipRemark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionCustomerUncheckedUpdateManyWithoutCustomerNestedInput
    promotionUsage?: PromotionUsageUncheckedUpdateManyWithoutCustomerNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutCustomerNestedInput
    waitlists?: WaitlistUncheckedUpdateManyWithoutCustomerNestedInput
    splitBills?: SplitBillUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type TableUpsertWithoutSalesInput = {
    update: XOR<TableUpdateWithoutSalesInput, TableUncheckedUpdateWithoutSalesInput>
    create: XOR<TableCreateWithoutSalesInput, TableUncheckedCreateWithoutSalesInput>
    where?: TableWhereInput
  }

  export type TableUpdateToOneWithWhereWithoutSalesInput = {
    where?: TableWhereInput
    data: XOR<TableUpdateWithoutSalesInput, TableUncheckedUpdateWithoutSalesInput>
  }

  export type TableUpdateWithoutSalesInput = {
    tableNumber?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    outlet?: OutletUpdateOneRequiredWithoutTablesNestedInput
    reservations?: ReservationUpdateManyWithoutTableNestedInput
  }

  export type TableUncheckedUpdateWithoutSalesInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    tableNumber?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    reservations?: ReservationUncheckedUpdateManyWithoutTableNestedInput
  }

  export type SalesCreateWithoutSalesItemsInput = {
    outletId: number
    businessDate: Date | string
    salesType: string
    customerName?: string | null
    phoneNumber?: string | null
    billStreet?: string
    billCity?: string
    billState?: string
    billPostalCode?: string
    billCountry?: string
    shipStreet?: string
    shipCity?: string
    shipState?: string
    shipPostalCode?: string
    shipCountry?: string
    totalItemDiscountAmount?: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    profitAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    roundingAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    changeAmount?: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string
    completedSessionId?: number | null
    sessionId: number
    eodId: number
    salesQuotationId?: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    orderStatus?: string | null
    payments?: PaymentCreateNestedManyWithoutSalesInput
    registerLogs?: RegisterLogCreateNestedManyWithoutSalesInput
    customer?: CustomerCreateNestedOneWithoutSalesInput
    table?: TableCreateNestedOneWithoutSalesInput
  }

  export type SalesUncheckedCreateWithoutSalesItemsInput = {
    id?: number
    outletId: number
    businessDate: Date | string
    salesType: string
    customerName?: string | null
    customerId?: number | null
    phoneNumber?: string | null
    billStreet?: string
    billCity?: string
    billState?: string
    billPostalCode?: string
    billCountry?: string
    shipStreet?: string
    shipCity?: string
    shipState?: string
    shipPostalCode?: string
    shipCountry?: string
    totalItemDiscountAmount?: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    profitAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    roundingAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    changeAmount?: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string
    completedSessionId?: number | null
    sessionId: number
    eodId: number
    salesQuotationId?: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    tableId?: number | null
    orderStatus?: string | null
    payments?: PaymentUncheckedCreateNestedManyWithoutSalesInput
    registerLogs?: RegisterLogUncheckedCreateNestedManyWithoutSalesInput
  }

  export type SalesCreateOrConnectWithoutSalesItemsInput = {
    where: SalesWhereUniqueInput
    create: XOR<SalesCreateWithoutSalesItemsInput, SalesUncheckedCreateWithoutSalesItemsInput>
  }

  export type SalesItemModifierCreateWithoutSalesItemInput = {
    itemId?: number | null
    modifierName: string
    modifierPrice: Decimal | DecimalJsLike | number | string
    quantity?: number
    status?: $Enums.OrderStatus | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuItemModifier: MenuItemModifierCreateNestedOneWithoutSalesItemModifiersInput
  }

  export type SalesItemModifierUncheckedCreateWithoutSalesItemInput = {
    id?: number
    menuItemModifierId: number
    itemId?: number | null
    modifierName: string
    modifierPrice: Decimal | DecimalJsLike | number | string
    quantity?: number
    status?: $Enums.OrderStatus | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SalesItemModifierCreateOrConnectWithoutSalesItemInput = {
    where: SalesItemModifierWhereUniqueInput
    create: XOR<SalesItemModifierCreateWithoutSalesItemInput, SalesItemModifierUncheckedCreateWithoutSalesItemInput>
  }

  export type SalesItemModifierCreateManySalesItemInputEnvelope = {
    data: SalesItemModifierCreateManySalesItemInput | SalesItemModifierCreateManySalesItemInput[]
    skipDuplicates?: boolean
  }

  export type OrderRoutingCreateWithoutSalesItemInput = {
    status: string
    sentAt?: Date | string | null
    completedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    station: StationCreateNestedOneWithoutOrderRoutingInput
  }

  export type OrderRoutingUncheckedCreateWithoutSalesItemInput = {
    id?: number
    stationId: number
    status: string
    sentAt?: Date | string | null
    completedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type OrderRoutingCreateOrConnectWithoutSalesItemInput = {
    where: OrderRoutingWhereUniqueInput
    create: XOR<OrderRoutingCreateWithoutSalesItemInput, OrderRoutingUncheckedCreateWithoutSalesItemInput>
  }

  export type OrderRoutingCreateManySalesItemInputEnvelope = {
    data: OrderRoutingCreateManySalesItemInput | OrderRoutingCreateManySalesItemInput[]
    skipDuplicates?: boolean
  }

  export type SalesUpsertWithoutSalesItemsInput = {
    update: XOR<SalesUpdateWithoutSalesItemsInput, SalesUncheckedUpdateWithoutSalesItemsInput>
    create: XOR<SalesCreateWithoutSalesItemsInput, SalesUncheckedCreateWithoutSalesItemsInput>
    where?: SalesWhereInput
  }

  export type SalesUpdateToOneWithWhereWithoutSalesItemsInput = {
    where?: SalesWhereInput
    data: XOR<SalesUpdateWithoutSalesItemsInput, SalesUncheckedUpdateWithoutSalesItemsInput>
  }

  export type SalesUpdateWithoutSalesItemsInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    salesType?: StringFieldUpdateOperationsInput | string
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: StringFieldUpdateOperationsInput | string
    billCity?: StringFieldUpdateOperationsInput | string
    billState?: StringFieldUpdateOperationsInput | string
    billPostalCode?: StringFieldUpdateOperationsInput | string
    billCountry?: StringFieldUpdateOperationsInput | string
    shipStreet?: StringFieldUpdateOperationsInput | string
    shipCity?: StringFieldUpdateOperationsInput | string
    shipState?: StringFieldUpdateOperationsInput | string
    shipPostalCode?: StringFieldUpdateOperationsInput | string
    shipCountry?: StringFieldUpdateOperationsInput | string
    totalItemDiscountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    completedSessionId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    orderStatus?: NullableStringFieldUpdateOperationsInput | string | null
    payments?: PaymentUpdateManyWithoutSalesNestedInput
    registerLogs?: RegisterLogUpdateManyWithoutSalesNestedInput
    customer?: CustomerUpdateOneWithoutSalesNestedInput
    table?: TableUpdateOneWithoutSalesNestedInput
  }

  export type SalesUncheckedUpdateWithoutSalesItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    salesType?: StringFieldUpdateOperationsInput | string
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: StringFieldUpdateOperationsInput | string
    billCity?: StringFieldUpdateOperationsInput | string
    billState?: StringFieldUpdateOperationsInput | string
    billPostalCode?: StringFieldUpdateOperationsInput | string
    billCountry?: StringFieldUpdateOperationsInput | string
    shipStreet?: StringFieldUpdateOperationsInput | string
    shipCity?: StringFieldUpdateOperationsInput | string
    shipState?: StringFieldUpdateOperationsInput | string
    shipPostalCode?: StringFieldUpdateOperationsInput | string
    shipCountry?: StringFieldUpdateOperationsInput | string
    totalItemDiscountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    completedSessionId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    tableId?: NullableIntFieldUpdateOperationsInput | number | null
    orderStatus?: NullableStringFieldUpdateOperationsInput | string | null
    payments?: PaymentUncheckedUpdateManyWithoutSalesNestedInput
    registerLogs?: RegisterLogUncheckedUpdateManyWithoutSalesNestedInput
  }

  export type SalesItemModifierUpsertWithWhereUniqueWithoutSalesItemInput = {
    where: SalesItemModifierWhereUniqueInput
    update: XOR<SalesItemModifierUpdateWithoutSalesItemInput, SalesItemModifierUncheckedUpdateWithoutSalesItemInput>
    create: XOR<SalesItemModifierCreateWithoutSalesItemInput, SalesItemModifierUncheckedCreateWithoutSalesItemInput>
  }

  export type SalesItemModifierUpdateWithWhereUniqueWithoutSalesItemInput = {
    where: SalesItemModifierWhereUniqueInput
    data: XOR<SalesItemModifierUpdateWithoutSalesItemInput, SalesItemModifierUncheckedUpdateWithoutSalesItemInput>
  }

  export type SalesItemModifierUpdateManyWithWhereWithoutSalesItemInput = {
    where: SalesItemModifierScalarWhereInput
    data: XOR<SalesItemModifierUpdateManyMutationInput, SalesItemModifierUncheckedUpdateManyWithoutSalesItemInput>
  }

  export type SalesItemModifierScalarWhereInput = {
    AND?: SalesItemModifierScalarWhereInput | SalesItemModifierScalarWhereInput[]
    OR?: SalesItemModifierScalarWhereInput[]
    NOT?: SalesItemModifierScalarWhereInput | SalesItemModifierScalarWhereInput[]
    id?: IntFilter<"SalesItemModifier"> | number
    salesItemId?: IntFilter<"SalesItemModifier"> | number
    menuItemModifierId?: IntFilter<"SalesItemModifier"> | number
    itemId?: IntNullableFilter<"SalesItemModifier"> | number | null
    modifierName?: StringFilter<"SalesItemModifier"> | string
    modifierPrice?: DecimalFilter<"SalesItemModifier"> | Decimal | DecimalJsLike | number | string
    quantity?: IntFilter<"SalesItemModifier"> | number
    status?: EnumOrderStatusNullableFilter<"SalesItemModifier"> | $Enums.OrderStatus | null
    deleted?: BoolFilter<"SalesItemModifier"> | boolean
    deletedAt?: DateTimeNullableFilter<"SalesItemModifier"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"SalesItemModifier"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"SalesItemModifier"> | Date | string | null
    version?: IntNullableFilter<"SalesItemModifier"> | number | null
  }

  export type OrderRoutingUpsertWithWhereUniqueWithoutSalesItemInput = {
    where: OrderRoutingWhereUniqueInput
    update: XOR<OrderRoutingUpdateWithoutSalesItemInput, OrderRoutingUncheckedUpdateWithoutSalesItemInput>
    create: XOR<OrderRoutingCreateWithoutSalesItemInput, OrderRoutingUncheckedCreateWithoutSalesItemInput>
  }

  export type OrderRoutingUpdateWithWhereUniqueWithoutSalesItemInput = {
    where: OrderRoutingWhereUniqueInput
    data: XOR<OrderRoutingUpdateWithoutSalesItemInput, OrderRoutingUncheckedUpdateWithoutSalesItemInput>
  }

  export type OrderRoutingUpdateManyWithWhereWithoutSalesItemInput = {
    where: OrderRoutingScalarWhereInput
    data: XOR<OrderRoutingUpdateManyMutationInput, OrderRoutingUncheckedUpdateManyWithoutSalesItemInput>
  }

  export type OrderRoutingScalarWhereInput = {
    AND?: OrderRoutingScalarWhereInput | OrderRoutingScalarWhereInput[]
    OR?: OrderRoutingScalarWhereInput[]
    NOT?: OrderRoutingScalarWhereInput | OrderRoutingScalarWhereInput[]
    id?: IntFilter<"OrderRouting"> | number
    salesItemId?: IntFilter<"OrderRouting"> | number
    stationId?: IntFilter<"OrderRouting"> | number
    status?: StringFilter<"OrderRouting"> | string
    sentAt?: DateTimeNullableFilter<"OrderRouting"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"OrderRouting"> | Date | string | null
    deleted?: BoolFilter<"OrderRouting"> | boolean
    deletedAt?: DateTimeNullableFilter<"OrderRouting"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"OrderRouting"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"OrderRouting"> | Date | string | null
    version?: IntNullableFilter<"OrderRouting"> | number | null
  }

  export type MenuItemModifierCreateWithoutSalesItemModifiersInput = {
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    defaultSelectionQty: number
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuItemModifierGroup: MenuItemModifierGroupCreateNestedOneWithoutMenuItemModifiersInput
    recipes?: RecipeCreateNestedManyWithoutMenuItemModifierInput
  }

  export type MenuItemModifierUncheckedCreateWithoutSalesItemModifiersInput = {
    id?: number
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    defaultSelectionQty: number
    sequence: number
    menuItemModifierGroupID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    recipes?: RecipeUncheckedCreateNestedManyWithoutMenuItemModifierInput
  }

  export type MenuItemModifierCreateOrConnectWithoutSalesItemModifiersInput = {
    where: MenuItemModifierWhereUniqueInput
    create: XOR<MenuItemModifierCreateWithoutSalesItemModifiersInput, MenuItemModifierUncheckedCreateWithoutSalesItemModifiersInput>
  }

  export type SalesItemCreateWithoutSelectedModifiersInput = {
    itemId: number
    itemName: string
    itemCode: string
    itemBrand: string
    itemModel?: string
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    priceBeforeTax: Decimal | DecimalJsLike | number | string
    profit: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    specialInstructions?: string | null
    itemStatus?: string | null
    priority?: string | null
    estimatedPrepTime?: number | null
    sales: SalesCreateNestedOneWithoutSalesItemsInput
    orderRouting?: OrderRoutingCreateNestedManyWithoutSalesItemInput
  }

  export type SalesItemUncheckedCreateWithoutSelectedModifiersInput = {
    id?: number
    salesId: number
    itemId: number
    itemName: string
    itemCode: string
    itemBrand: string
    itemModel?: string
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    priceBeforeTax: Decimal | DecimalJsLike | number | string
    profit: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    specialInstructions?: string | null
    itemStatus?: string | null
    priority?: string | null
    estimatedPrepTime?: number | null
    orderRouting?: OrderRoutingUncheckedCreateNestedManyWithoutSalesItemInput
  }

  export type SalesItemCreateOrConnectWithoutSelectedModifiersInput = {
    where: SalesItemWhereUniqueInput
    create: XOR<SalesItemCreateWithoutSelectedModifiersInput, SalesItemUncheckedCreateWithoutSelectedModifiersInput>
  }

  export type MenuItemModifierUpsertWithoutSalesItemModifiersInput = {
    update: XOR<MenuItemModifierUpdateWithoutSalesItemModifiersInput, MenuItemModifierUncheckedUpdateWithoutSalesItemModifiersInput>
    create: XOR<MenuItemModifierCreateWithoutSalesItemModifiersInput, MenuItemModifierUncheckedCreateWithoutSalesItemModifiersInput>
    where?: MenuItemModifierWhereInput
  }

  export type MenuItemModifierUpdateToOneWithWhereWithoutSalesItemModifiersInput = {
    where?: MenuItemModifierWhereInput
    data: XOR<MenuItemModifierUpdateWithoutSalesItemModifiersInput, MenuItemModifierUncheckedUpdateWithoutSalesItemModifiersInput>
  }

  export type MenuItemModifierUpdateWithoutSalesItemModifiersInput = {
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    defaultSelectionQty?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuItemModifierGroup?: MenuItemModifierGroupUpdateOneRequiredWithoutMenuItemModifiersNestedInput
    recipes?: RecipeUpdateManyWithoutMenuItemModifierNestedInput
  }

  export type MenuItemModifierUncheckedUpdateWithoutSalesItemModifiersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    defaultSelectionQty?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    menuItemModifierGroupID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    recipes?: RecipeUncheckedUpdateManyWithoutMenuItemModifierNestedInput
  }

  export type SalesItemUpsertWithoutSelectedModifiersInput = {
    update: XOR<SalesItemUpdateWithoutSelectedModifiersInput, SalesItemUncheckedUpdateWithoutSelectedModifiersInput>
    create: XOR<SalesItemCreateWithoutSelectedModifiersInput, SalesItemUncheckedCreateWithoutSelectedModifiersInput>
    where?: SalesItemWhereInput
  }

  export type SalesItemUpdateToOneWithWhereWithoutSelectedModifiersInput = {
    where?: SalesItemWhereInput
    data: XOR<SalesItemUpdateWithoutSelectedModifiersInput, SalesItemUncheckedUpdateWithoutSelectedModifiersInput>
  }

  export type SalesItemUpdateWithoutSelectedModifiersInput = {
    itemId?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceBeforeTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    specialInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    itemStatus?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedPrepTime?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUpdateOneRequiredWithoutSalesItemsNestedInput
    orderRouting?: OrderRoutingUpdateManyWithoutSalesItemNestedInput
  }

  export type SalesItemUncheckedUpdateWithoutSelectedModifiersInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceBeforeTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    specialInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    itemStatus?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedPrepTime?: NullableIntFieldUpdateOperationsInput | number | null
    orderRouting?: OrderRoutingUncheckedUpdateManyWithoutSalesItemNestedInput
  }

  export type SalesQuotationItemCreateWithoutSalesQuotationInput = {
    itemId: number
    quantity: Decimal | DecimalJsLike | number | string
    remark?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SalesQuotationItemUncheckedCreateWithoutSalesQuotationInput = {
    id?: number
    itemId: number
    quantity: Decimal | DecimalJsLike | number | string
    remark?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SalesQuotationItemCreateOrConnectWithoutSalesQuotationInput = {
    where: SalesQuotationItemWhereUniqueInput
    create: XOR<SalesQuotationItemCreateWithoutSalesQuotationInput, SalesQuotationItemUncheckedCreateWithoutSalesQuotationInput>
  }

  export type SalesQuotationItemCreateManySalesQuotationInputEnvelope = {
    data: SalesQuotationItemCreateManySalesQuotationInput | SalesQuotationItemCreateManySalesQuotationInput[]
    skipDuplicates?: boolean
  }

  export type SalesQuotationItemUpsertWithWhereUniqueWithoutSalesQuotationInput = {
    where: SalesQuotationItemWhereUniqueInput
    update: XOR<SalesQuotationItemUpdateWithoutSalesQuotationInput, SalesQuotationItemUncheckedUpdateWithoutSalesQuotationInput>
    create: XOR<SalesQuotationItemCreateWithoutSalesQuotationInput, SalesQuotationItemUncheckedCreateWithoutSalesQuotationInput>
  }

  export type SalesQuotationItemUpdateWithWhereUniqueWithoutSalesQuotationInput = {
    where: SalesQuotationItemWhereUniqueInput
    data: XOR<SalesQuotationItemUpdateWithoutSalesQuotationInput, SalesQuotationItemUncheckedUpdateWithoutSalesQuotationInput>
  }

  export type SalesQuotationItemUpdateManyWithWhereWithoutSalesQuotationInput = {
    where: SalesQuotationItemScalarWhereInput
    data: XOR<SalesQuotationItemUpdateManyMutationInput, SalesQuotationItemUncheckedUpdateManyWithoutSalesQuotationInput>
  }

  export type SalesQuotationItemScalarWhereInput = {
    AND?: SalesQuotationItemScalarWhereInput | SalesQuotationItemScalarWhereInput[]
    OR?: SalesQuotationItemScalarWhereInput[]
    NOT?: SalesQuotationItemScalarWhereInput | SalesQuotationItemScalarWhereInput[]
    id?: IntFilter<"SalesQuotationItem"> | number
    salesQuotationId?: IntFilter<"SalesQuotationItem"> | number
    itemId?: IntFilter<"SalesQuotationItem"> | number
    quantity?: DecimalFilter<"SalesQuotationItem"> | Decimal | DecimalJsLike | number | string
    remark?: StringNullableFilter<"SalesQuotationItem"> | string | null
    deleted?: BoolFilter<"SalesQuotationItem"> | boolean
    createdAt?: DateTimeNullableFilter<"SalesQuotationItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"SalesQuotationItem"> | Date | string | null
    version?: IntNullableFilter<"SalesQuotationItem"> | number | null
  }

  export type SalesQuotationCreateWithoutSalesQuotationItemsInput = {
    outletId: number
    customerId?: number | null
    customerStreet?: string | null
    customerCity?: string | null
    customerState?: string | null
    customerPostalCode?: string | null
    customerCountry?: string | null
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    roundingAmount: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SalesQuotationUncheckedCreateWithoutSalesQuotationItemsInput = {
    id?: number
    outletId: number
    customerId?: number | null
    customerStreet?: string | null
    customerCity?: string | null
    customerState?: string | null
    customerPostalCode?: string | null
    customerCountry?: string | null
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    roundingAmount: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SalesQuotationCreateOrConnectWithoutSalesQuotationItemsInput = {
    where: SalesQuotationWhereUniqueInput
    create: XOR<SalesQuotationCreateWithoutSalesQuotationItemsInput, SalesQuotationUncheckedCreateWithoutSalesQuotationItemsInput>
  }

  export type SalesQuotationUpsertWithoutSalesQuotationItemsInput = {
    update: XOR<SalesQuotationUpdateWithoutSalesQuotationItemsInput, SalesQuotationUncheckedUpdateWithoutSalesQuotationItemsInput>
    create: XOR<SalesQuotationCreateWithoutSalesQuotationItemsInput, SalesQuotationUncheckedCreateWithoutSalesQuotationItemsInput>
    where?: SalesQuotationWhereInput
  }

  export type SalesQuotationUpdateToOneWithWhereWithoutSalesQuotationItemsInput = {
    where?: SalesQuotationWhereInput
    data: XOR<SalesQuotationUpdateWithoutSalesQuotationItemsInput, SalesQuotationUncheckedUpdateWithoutSalesQuotationItemsInput>
  }

  export type SalesQuotationUpdateWithoutSalesQuotationItemsInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    customerStreet?: NullableStringFieldUpdateOperationsInput | string | null
    customerCity?: NullableStringFieldUpdateOperationsInput | string | null
    customerState?: NullableStringFieldUpdateOperationsInput | string | null
    customerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesQuotationUncheckedUpdateWithoutSalesQuotationItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    customerStreet?: NullableStringFieldUpdateOperationsInput | string | null
    customerCity?: NullableStringFieldUpdateOperationsInput | string | null
    customerState?: NullableStringFieldUpdateOperationsInput | string | null
    customerPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    customerCountry?: NullableStringFieldUpdateOperationsInput | string | null
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SessionCreateWithoutInvoicesInput = {
    outletId: number
    businessDate: Date | string
    openingDateTime?: Date | string | null
    closingDateTime?: Date | string | null
    openingAmount: Decimal | DecimalJsLike | number | string
    totalSalesCount: number
    openByUserID: number
    closeByUserID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    declarations?: DeclarationCreateNestedManyWithoutSessionInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutSessionInput
    deliveryOrders?: DeliveryOrderCreateNestedManyWithoutSessionInput
  }

  export type SessionUncheckedCreateWithoutInvoicesInput = {
    id?: number
    outletId: number
    businessDate: Date | string
    openingDateTime?: Date | string | null
    closingDateTime?: Date | string | null
    openingAmount: Decimal | DecimalJsLike | number | string
    totalSalesCount: number
    openByUserID: number
    closeByUserID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    declarations?: DeclarationUncheckedCreateNestedManyWithoutSessionInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutSessionInput
    deliveryOrders?: DeliveryOrderUncheckedCreateNestedManyWithoutSessionInput
  }

  export type SessionCreateOrConnectWithoutInvoicesInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutInvoicesInput, SessionUncheckedCreateWithoutInvoicesInput>
  }

  export type PurchaseOrderCreateWithoutInvoicesInput = {
    purchaseOrderNumber: string
    outletId: number
    purchaseOrderDate?: Date | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    roundingAmount?: Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: Decimal | DecimalJsLike | number | string | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    status: string
    remark?: string | null
    currency?: string
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    session?: SessionCreateNestedOneWithoutPurchaseOrdersInput
    supplier: SupplierCreateNestedOneWithoutPurchaseOrdersInput
    purchaseOrderItems?: PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput
    deliveryOrders?: DeliveryOrderCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderUncheckedCreateWithoutInvoicesInput = {
    id?: number
    purchaseOrderNumber: string
    outletId: number
    supplierId: number
    purchaseOrderDate?: Date | string | null
    sessionId?: number | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    roundingAmount?: Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: Decimal | DecimalJsLike | number | string | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    status: string
    remark?: string | null
    currency?: string
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    purchaseOrderItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutPurchaseOrderInput
    deliveryOrders?: DeliveryOrderUncheckedCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderCreateOrConnectWithoutInvoicesInput = {
    where: PurchaseOrderWhereUniqueInput
    create: XOR<PurchaseOrderCreateWithoutInvoicesInput, PurchaseOrderUncheckedCreateWithoutInvoicesInput>
  }

  export type SupplierCreateWithoutInvoicesInput = {
    companyName: string
    companyStreet?: string | null
    companyCity?: string | null
    companyState?: string | null
    companyPostalCode?: string | null
    companyCountry?: string | null
    companyRegisterNumber?: string | null
    personInChargeLastName?: string | null
    personInChargeFirstName?: string | null
    mobile?: string | null
    email?: string | null
    remark?: string | null
    hasTax: boolean
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    items?: ItemCreateNestedManyWithoutSupplierInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutSupplierInput
  }

  export type SupplierUncheckedCreateWithoutInvoicesInput = {
    id?: number
    companyName: string
    companyStreet?: string | null
    companyCity?: string | null
    companyState?: string | null
    companyPostalCode?: string | null
    companyCountry?: string | null
    companyRegisterNumber?: string | null
    personInChargeLastName?: string | null
    personInChargeFirstName?: string | null
    mobile?: string | null
    email?: string | null
    remark?: string | null
    hasTax: boolean
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    items?: ItemUncheckedCreateNestedManyWithoutSupplierInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutSupplierInput
  }

  export type SupplierCreateOrConnectWithoutInvoicesInput = {
    where: SupplierWhereUniqueInput
    create: XOR<SupplierCreateWithoutInvoicesInput, SupplierUncheckedCreateWithoutInvoicesInput>
  }

  export type InvoiceItemCreateWithoutInvoiceInput = {
    quantity: Decimal | DecimalJsLike | number | string
    unitPrice: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
    item: ItemCreateNestedOneWithoutInvoiceItemsInput
  }

  export type InvoiceItemUncheckedCreateWithoutInvoiceInput = {
    id?: number
    itemId: number
    quantity: Decimal | DecimalJsLike | number | string
    unitPrice: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type InvoiceItemCreateOrConnectWithoutInvoiceInput = {
    where: InvoiceItemWhereUniqueInput
    create: XOR<InvoiceItemCreateWithoutInvoiceInput, InvoiceItemUncheckedCreateWithoutInvoiceInput>
  }

  export type InvoiceItemCreateManyInvoiceInputEnvelope = {
    data: InvoiceItemCreateManyInvoiceInput | InvoiceItemCreateManyInvoiceInput[]
    skipDuplicates?: boolean
  }

  export type DeliveryOrderCreateWithoutInvoiceInput = {
    trackingNumber?: string | null
    outletId: number
    customerId?: number | null
    supplierId?: number | null
    deliveryDate?: Date | string | null
    deliveryStreet?: string | null
    deliveryCity?: string | null
    deliveryState?: string | null
    deliveryPostalCode?: string | null
    deliveryCountry?: string | null
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    session?: SessionCreateNestedOneWithoutDeliveryOrdersInput
    purchaseOrder?: PurchaseOrderCreateNestedOneWithoutDeliveryOrdersInput
    deliveryOrderItems?: DeliveryOrderItemCreateNestedManyWithoutDeliveryOrderInput
  }

  export type DeliveryOrderUncheckedCreateWithoutInvoiceInput = {
    id?: number
    trackingNumber?: string | null
    outletId: number
    customerId?: number | null
    purchaseOrderId?: number | null
    supplierId?: number | null
    sessionId?: number | null
    deliveryDate?: Date | string | null
    deliveryStreet?: string | null
    deliveryCity?: string | null
    deliveryState?: string | null
    deliveryPostalCode?: string | null
    deliveryCountry?: string | null
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    deliveryOrderItems?: DeliveryOrderItemUncheckedCreateNestedManyWithoutDeliveryOrderInput
  }

  export type DeliveryOrderCreateOrConnectWithoutInvoiceInput = {
    where: DeliveryOrderWhereUniqueInput
    create: XOR<DeliveryOrderCreateWithoutInvoiceInput, DeliveryOrderUncheckedCreateWithoutInvoiceInput>
  }

  export type DeliveryOrderCreateManyInvoiceInputEnvelope = {
    data: DeliveryOrderCreateManyInvoiceInput | DeliveryOrderCreateManyInvoiceInput[]
    skipDuplicates?: boolean
  }

  export type SessionUpsertWithoutInvoicesInput = {
    update: XOR<SessionUpdateWithoutInvoicesInput, SessionUncheckedUpdateWithoutInvoicesInput>
    create: XOR<SessionCreateWithoutInvoicesInput, SessionUncheckedCreateWithoutInvoicesInput>
    where?: SessionWhereInput
  }

  export type SessionUpdateToOneWithWhereWithoutInvoicesInput = {
    where?: SessionWhereInput
    data: XOR<SessionUpdateWithoutInvoicesInput, SessionUncheckedUpdateWithoutInvoicesInput>
  }

  export type SessionUpdateWithoutInvoicesInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    openingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSalesCount?: IntFieldUpdateOperationsInput | number
    openByUserID?: IntFieldUpdateOperationsInput | number
    closeByUserID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    declarations?: DeclarationUpdateManyWithoutSessionNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutSessionNestedInput
    deliveryOrders?: DeliveryOrderUpdateManyWithoutSessionNestedInput
  }

  export type SessionUncheckedUpdateWithoutInvoicesInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    openingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSalesCount?: IntFieldUpdateOperationsInput | number
    openByUserID?: IntFieldUpdateOperationsInput | number
    closeByUserID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    declarations?: DeclarationUncheckedUpdateManyWithoutSessionNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutSessionNestedInput
    deliveryOrders?: DeliveryOrderUncheckedUpdateManyWithoutSessionNestedInput
  }

  export type PurchaseOrderUpsertWithoutInvoicesInput = {
    update: XOR<PurchaseOrderUpdateWithoutInvoicesInput, PurchaseOrderUncheckedUpdateWithoutInvoicesInput>
    create: XOR<PurchaseOrderCreateWithoutInvoicesInput, PurchaseOrderUncheckedCreateWithoutInvoicesInput>
    where?: PurchaseOrderWhereInput
  }

  export type PurchaseOrderUpdateToOneWithWhereWithoutInvoicesInput = {
    where?: PurchaseOrderWhereInput
    data: XOR<PurchaseOrderUpdateWithoutInvoicesInput, PurchaseOrderUncheckedUpdateWithoutInvoicesInput>
  }

  export type PurchaseOrderUpdateWithoutInvoicesInput = {
    purchaseOrderNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    purchaseOrderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    session?: SessionUpdateOneWithoutPurchaseOrdersNestedInput
    supplier?: SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput
    purchaseOrderItems?: PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput
    deliveryOrders?: DeliveryOrderUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderUncheckedUpdateWithoutInvoicesInput = {
    id?: IntFieldUpdateOperationsInput | number
    purchaseOrderNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    purchaseOrderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrderItems?: PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    deliveryOrders?: DeliveryOrderUncheckedUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type SupplierUpsertWithoutInvoicesInput = {
    update: XOR<SupplierUpdateWithoutInvoicesInput, SupplierUncheckedUpdateWithoutInvoicesInput>
    create: XOR<SupplierCreateWithoutInvoicesInput, SupplierUncheckedCreateWithoutInvoicesInput>
    where?: SupplierWhereInput
  }

  export type SupplierUpdateToOneWithWhereWithoutInvoicesInput = {
    where?: SupplierWhereInput
    data: XOR<SupplierUpdateWithoutInvoicesInput, SupplierUncheckedUpdateWithoutInvoicesInput>
  }

  export type SupplierUpdateWithoutInvoicesInput = {
    companyName?: StringFieldUpdateOperationsInput | string
    companyStreet?: NullableStringFieldUpdateOperationsInput | string | null
    companyCity?: NullableStringFieldUpdateOperationsInput | string | null
    companyState?: NullableStringFieldUpdateOperationsInput | string | null
    companyPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    companyCountry?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegisterNumber?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeLastName?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeFirstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    items?: ItemUpdateManyWithoutSupplierNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutSupplierNestedInput
  }

  export type SupplierUncheckedUpdateWithoutInvoicesInput = {
    id?: IntFieldUpdateOperationsInput | number
    companyName?: StringFieldUpdateOperationsInput | string
    companyStreet?: NullableStringFieldUpdateOperationsInput | string | null
    companyCity?: NullableStringFieldUpdateOperationsInput | string | null
    companyState?: NullableStringFieldUpdateOperationsInput | string | null
    companyPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    companyCountry?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegisterNumber?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeLastName?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeFirstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    items?: ItemUncheckedUpdateManyWithoutSupplierNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutSupplierNestedInput
  }

  export type InvoiceItemUpsertWithWhereUniqueWithoutInvoiceInput = {
    where: InvoiceItemWhereUniqueInput
    update: XOR<InvoiceItemUpdateWithoutInvoiceInput, InvoiceItemUncheckedUpdateWithoutInvoiceInput>
    create: XOR<InvoiceItemCreateWithoutInvoiceInput, InvoiceItemUncheckedCreateWithoutInvoiceInput>
  }

  export type InvoiceItemUpdateWithWhereUniqueWithoutInvoiceInput = {
    where: InvoiceItemWhereUniqueInput
    data: XOR<InvoiceItemUpdateWithoutInvoiceInput, InvoiceItemUncheckedUpdateWithoutInvoiceInput>
  }

  export type InvoiceItemUpdateManyWithWhereWithoutInvoiceInput = {
    where: InvoiceItemScalarWhereInput
    data: XOR<InvoiceItemUpdateManyMutationInput, InvoiceItemUncheckedUpdateManyWithoutInvoiceInput>
  }

  export type DeliveryOrderUpsertWithWhereUniqueWithoutInvoiceInput = {
    where: DeliveryOrderWhereUniqueInput
    update: XOR<DeliveryOrderUpdateWithoutInvoiceInput, DeliveryOrderUncheckedUpdateWithoutInvoiceInput>
    create: XOR<DeliveryOrderCreateWithoutInvoiceInput, DeliveryOrderUncheckedCreateWithoutInvoiceInput>
  }

  export type DeliveryOrderUpdateWithWhereUniqueWithoutInvoiceInput = {
    where: DeliveryOrderWhereUniqueInput
    data: XOR<DeliveryOrderUpdateWithoutInvoiceInput, DeliveryOrderUncheckedUpdateWithoutInvoiceInput>
  }

  export type DeliveryOrderUpdateManyWithWhereWithoutInvoiceInput = {
    where: DeliveryOrderScalarWhereInput
    data: XOR<DeliveryOrderUpdateManyMutationInput, DeliveryOrderUncheckedUpdateManyWithoutInvoiceInput>
  }

  export type DeliveryOrderScalarWhereInput = {
    AND?: DeliveryOrderScalarWhereInput | DeliveryOrderScalarWhereInput[]
    OR?: DeliveryOrderScalarWhereInput[]
    NOT?: DeliveryOrderScalarWhereInput | DeliveryOrderScalarWhereInput[]
    id?: IntFilter<"DeliveryOrder"> | number
    trackingNumber?: StringNullableFilter<"DeliveryOrder"> | string | null
    outletId?: IntFilter<"DeliveryOrder"> | number
    customerId?: IntNullableFilter<"DeliveryOrder"> | number | null
    purchaseOrderId?: IntNullableFilter<"DeliveryOrder"> | number | null
    supplierId?: IntNullableFilter<"DeliveryOrder"> | number | null
    invoiceId?: IntNullableFilter<"DeliveryOrder"> | number | null
    sessionId?: IntNullableFilter<"DeliveryOrder"> | number | null
    deliveryDate?: DateTimeNullableFilter<"DeliveryOrder"> | Date | string | null
    deliveryStreet?: StringNullableFilter<"DeliveryOrder"> | string | null
    deliveryCity?: StringNullableFilter<"DeliveryOrder"> | string | null
    deliveryState?: StringNullableFilter<"DeliveryOrder"> | string | null
    deliveryPostalCode?: StringNullableFilter<"DeliveryOrder"> | string | null
    deliveryCountry?: StringNullableFilter<"DeliveryOrder"> | string | null
    status?: StringFilter<"DeliveryOrder"> | string
    remark?: StringNullableFilter<"DeliveryOrder"> | string | null
    performedBy?: StringNullableFilter<"DeliveryOrder"> | string | null
    deleted?: BoolFilter<"DeliveryOrder"> | boolean
    deletedAt?: DateTimeNullableFilter<"DeliveryOrder"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"DeliveryOrder"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"DeliveryOrder"> | Date | string | null
    version?: IntNullableFilter<"DeliveryOrder"> | number | null
  }

  export type InvoiceCreateWithoutInvoiceItemsInput = {
    invoiceNumber: string
    taxInvoiceNumber: string
    outletId: number
    subtotalAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    invoiceDate?: Date | string | null
    paymentDate?: Date | string | null
    dueDate?: Date | string | null
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    session?: SessionCreateNestedOneWithoutInvoicesInput
    purchaseOrder?: PurchaseOrderCreateNestedOneWithoutInvoicesInput
    supplier?: SupplierCreateNestedOneWithoutInvoicesInput
    deliveryOrders?: DeliveryOrderCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutInvoiceItemsInput = {
    id?: number
    invoiceNumber: string
    taxInvoiceNumber: string
    purchaseOrderId?: number | null
    supplierId?: number | null
    outletId: number
    subtotalAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    sessionId?: number | null
    discountType?: string | null
    discountAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    invoiceDate?: Date | string | null
    paymentDate?: Date | string | null
    dueDate?: Date | string | null
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    deliveryOrders?: DeliveryOrderUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutInvoiceItemsInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutInvoiceItemsInput, InvoiceUncheckedCreateWithoutInvoiceItemsInput>
  }

  export type ItemCreateWithoutInvoiceItemsInput = {
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    category: CategoryCreateNestedOneWithoutItemsInput
    supplier: SupplierCreateNestedOneWithoutItemsInput
    stockBalance?: StockBalanceCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutItemInput
    recipes?: RecipeCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemCreateNestedManyWithoutItemInput
  }

  export type ItemUncheckedCreateWithoutInvoiceItemsInput = {
    id?: number
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    categoryId: number
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    supplierId: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalance?: StockBalanceUncheckedCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutItemInput
    recipes?: RecipeUncheckedCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemCreateOrConnectWithoutInvoiceItemsInput = {
    where: ItemWhereUniqueInput
    create: XOR<ItemCreateWithoutInvoiceItemsInput, ItemUncheckedCreateWithoutInvoiceItemsInput>
  }

  export type InvoiceUpsertWithoutInvoiceItemsInput = {
    update: XOR<InvoiceUpdateWithoutInvoiceItemsInput, InvoiceUncheckedUpdateWithoutInvoiceItemsInput>
    create: XOR<InvoiceCreateWithoutInvoiceItemsInput, InvoiceUncheckedCreateWithoutInvoiceItemsInput>
    where?: InvoiceWhereInput
  }

  export type InvoiceUpdateToOneWithWhereWithoutInvoiceItemsInput = {
    where?: InvoiceWhereInput
    data: XOR<InvoiceUpdateWithoutInvoiceItemsInput, InvoiceUncheckedUpdateWithoutInvoiceItemsInput>
  }

  export type InvoiceUpdateWithoutInvoiceItemsInput = {
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    session?: SessionUpdateOneWithoutInvoicesNestedInput
    purchaseOrder?: PurchaseOrderUpdateOneWithoutInvoicesNestedInput
    supplier?: SupplierUpdateOneWithoutInvoicesNestedInput
    deliveryOrders?: DeliveryOrderUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutInvoiceItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryOrders?: DeliveryOrderUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type ItemUpsertWithoutInvoiceItemsInput = {
    update: XOR<ItemUpdateWithoutInvoiceItemsInput, ItemUncheckedUpdateWithoutInvoiceItemsInput>
    create: XOR<ItemCreateWithoutInvoiceItemsInput, ItemUncheckedCreateWithoutInvoiceItemsInput>
    where?: ItemWhereInput
  }

  export type ItemUpdateToOneWithWhereWithoutInvoiceItemsInput = {
    where?: ItemWhereInput
    data: XOR<ItemUpdateWithoutInvoiceItemsInput, ItemUncheckedUpdateWithoutInvoiceItemsInput>
  }

  export type ItemUpdateWithoutInvoiceItemsInput = {
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    category?: CategoryUpdateOneRequiredWithoutItemsNestedInput
    supplier?: SupplierUpdateOneRequiredWithoutItemsNestedInput
    stockBalance?: StockBalanceUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutItemNestedInput
    recipes?: RecipeUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUpdateManyWithoutItemNestedInput
  }

  export type ItemUncheckedUpdateWithoutInvoiceItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: IntFieldUpdateOperationsInput | number
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    supplierId?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalance?: StockBalanceUncheckedUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutItemNestedInput
    recipes?: RecipeUncheckedUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type SessionCreateWithoutDeliveryOrdersInput = {
    outletId: number
    businessDate: Date | string
    openingDateTime?: Date | string | null
    closingDateTime?: Date | string | null
    openingAmount: Decimal | DecimalJsLike | number | string
    totalSalesCount: number
    openByUserID: number
    closeByUserID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    declarations?: DeclarationCreateNestedManyWithoutSessionInput
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutSessionInput
    invoices?: InvoiceCreateNestedManyWithoutSessionInput
  }

  export type SessionUncheckedCreateWithoutDeliveryOrdersInput = {
    id?: number
    outletId: number
    businessDate: Date | string
    openingDateTime?: Date | string | null
    closingDateTime?: Date | string | null
    openingAmount: Decimal | DecimalJsLike | number | string
    totalSalesCount: number
    openByUserID: number
    closeByUserID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    declarations?: DeclarationUncheckedCreateNestedManyWithoutSessionInput
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutSessionInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutSessionInput
  }

  export type SessionCreateOrConnectWithoutDeliveryOrdersInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutDeliveryOrdersInput, SessionUncheckedCreateWithoutDeliveryOrdersInput>
  }

  export type PurchaseOrderCreateWithoutDeliveryOrdersInput = {
    purchaseOrderNumber: string
    outletId: number
    purchaseOrderDate?: Date | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    roundingAmount?: Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: Decimal | DecimalJsLike | number | string | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    status: string
    remark?: string | null
    currency?: string
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    session?: SessionCreateNestedOneWithoutPurchaseOrdersInput
    supplier: SupplierCreateNestedOneWithoutPurchaseOrdersInput
    purchaseOrderItems?: PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput
    invoices?: InvoiceCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderUncheckedCreateWithoutDeliveryOrdersInput = {
    id?: number
    purchaseOrderNumber: string
    outletId: number
    supplierId: number
    purchaseOrderDate?: Date | string | null
    sessionId?: number | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    roundingAmount?: Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: Decimal | DecimalJsLike | number | string | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    status: string
    remark?: string | null
    currency?: string
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    purchaseOrderItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutPurchaseOrderInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderCreateOrConnectWithoutDeliveryOrdersInput = {
    where: PurchaseOrderWhereUniqueInput
    create: XOR<PurchaseOrderCreateWithoutDeliveryOrdersInput, PurchaseOrderUncheckedCreateWithoutDeliveryOrdersInput>
  }

  export type InvoiceCreateWithoutDeliveryOrdersInput = {
    invoiceNumber: string
    taxInvoiceNumber: string
    outletId: number
    subtotalAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    invoiceDate?: Date | string | null
    paymentDate?: Date | string | null
    dueDate?: Date | string | null
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    session?: SessionCreateNestedOneWithoutInvoicesInput
    purchaseOrder?: PurchaseOrderCreateNestedOneWithoutInvoicesInput
    supplier?: SupplierCreateNestedOneWithoutInvoicesInput
    invoiceItems?: InvoiceItemCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutDeliveryOrdersInput = {
    id?: number
    invoiceNumber: string
    taxInvoiceNumber: string
    purchaseOrderId?: number | null
    supplierId?: number | null
    outletId: number
    subtotalAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    sessionId?: number | null
    discountType?: string | null
    discountAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    invoiceDate?: Date | string | null
    paymentDate?: Date | string | null
    dueDate?: Date | string | null
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    invoiceItems?: InvoiceItemUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutDeliveryOrdersInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutDeliveryOrdersInput, InvoiceUncheckedCreateWithoutDeliveryOrdersInput>
  }

  export type DeliveryOrderItemCreateWithoutDeliveryOrderInput = {
    orderedQuantity: number
    receivedQuantity: number
    unitPrice?: Decimal | DecimalJsLike | number | string | null
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    item: ItemCreateNestedOneWithoutDeliveryOrderItemsInput
  }

  export type DeliveryOrderItemUncheckedCreateWithoutDeliveryOrderInput = {
    id?: number
    itemId: number
    orderedQuantity: number
    receivedQuantity: number
    unitPrice?: Decimal | DecimalJsLike | number | string | null
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
  }

  export type DeliveryOrderItemCreateOrConnectWithoutDeliveryOrderInput = {
    where: DeliveryOrderItemWhereUniqueInput
    create: XOR<DeliveryOrderItemCreateWithoutDeliveryOrderInput, DeliveryOrderItemUncheckedCreateWithoutDeliveryOrderInput>
  }

  export type DeliveryOrderItemCreateManyDeliveryOrderInputEnvelope = {
    data: DeliveryOrderItemCreateManyDeliveryOrderInput | DeliveryOrderItemCreateManyDeliveryOrderInput[]
    skipDuplicates?: boolean
  }

  export type SessionUpsertWithoutDeliveryOrdersInput = {
    update: XOR<SessionUpdateWithoutDeliveryOrdersInput, SessionUncheckedUpdateWithoutDeliveryOrdersInput>
    create: XOR<SessionCreateWithoutDeliveryOrdersInput, SessionUncheckedCreateWithoutDeliveryOrdersInput>
    where?: SessionWhereInput
  }

  export type SessionUpdateToOneWithWhereWithoutDeliveryOrdersInput = {
    where?: SessionWhereInput
    data: XOR<SessionUpdateWithoutDeliveryOrdersInput, SessionUncheckedUpdateWithoutDeliveryOrdersInput>
  }

  export type SessionUpdateWithoutDeliveryOrdersInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    openingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSalesCount?: IntFieldUpdateOperationsInput | number
    openByUserID?: IntFieldUpdateOperationsInput | number
    closeByUserID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    declarations?: DeclarationUpdateManyWithoutSessionNestedInput
    purchaseOrders?: PurchaseOrderUpdateManyWithoutSessionNestedInput
    invoices?: InvoiceUpdateManyWithoutSessionNestedInput
  }

  export type SessionUncheckedUpdateWithoutDeliveryOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    openingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSalesCount?: IntFieldUpdateOperationsInput | number
    openByUserID?: IntFieldUpdateOperationsInput | number
    closeByUserID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    declarations?: DeclarationUncheckedUpdateManyWithoutSessionNestedInput
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutSessionNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutSessionNestedInput
  }

  export type PurchaseOrderUpsertWithoutDeliveryOrdersInput = {
    update: XOR<PurchaseOrderUpdateWithoutDeliveryOrdersInput, PurchaseOrderUncheckedUpdateWithoutDeliveryOrdersInput>
    create: XOR<PurchaseOrderCreateWithoutDeliveryOrdersInput, PurchaseOrderUncheckedCreateWithoutDeliveryOrdersInput>
    where?: PurchaseOrderWhereInput
  }

  export type PurchaseOrderUpdateToOneWithWhereWithoutDeliveryOrdersInput = {
    where?: PurchaseOrderWhereInput
    data: XOR<PurchaseOrderUpdateWithoutDeliveryOrdersInput, PurchaseOrderUncheckedUpdateWithoutDeliveryOrdersInput>
  }

  export type PurchaseOrderUpdateWithoutDeliveryOrdersInput = {
    purchaseOrderNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    purchaseOrderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    session?: SessionUpdateOneWithoutPurchaseOrdersNestedInput
    supplier?: SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput
    purchaseOrderItems?: PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: InvoiceUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderUncheckedUpdateWithoutDeliveryOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    purchaseOrderNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    purchaseOrderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrderItems?: PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type InvoiceUpsertWithoutDeliveryOrdersInput = {
    update: XOR<InvoiceUpdateWithoutDeliveryOrdersInput, InvoiceUncheckedUpdateWithoutDeliveryOrdersInput>
    create: XOR<InvoiceCreateWithoutDeliveryOrdersInput, InvoiceUncheckedCreateWithoutDeliveryOrdersInput>
    where?: InvoiceWhereInput
  }

  export type InvoiceUpdateToOneWithWhereWithoutDeliveryOrdersInput = {
    where?: InvoiceWhereInput
    data: XOR<InvoiceUpdateWithoutDeliveryOrdersInput, InvoiceUncheckedUpdateWithoutDeliveryOrdersInput>
  }

  export type InvoiceUpdateWithoutDeliveryOrdersInput = {
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    session?: SessionUpdateOneWithoutInvoicesNestedInput
    purchaseOrder?: PurchaseOrderUpdateOneWithoutInvoicesNestedInput
    supplier?: SupplierUpdateOneWithoutInvoicesNestedInput
    invoiceItems?: InvoiceItemUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutDeliveryOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    invoiceItems?: InvoiceItemUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type DeliveryOrderItemUpsertWithWhereUniqueWithoutDeliveryOrderInput = {
    where: DeliveryOrderItemWhereUniqueInput
    update: XOR<DeliveryOrderItemUpdateWithoutDeliveryOrderInput, DeliveryOrderItemUncheckedUpdateWithoutDeliveryOrderInput>
    create: XOR<DeliveryOrderItemCreateWithoutDeliveryOrderInput, DeliveryOrderItemUncheckedCreateWithoutDeliveryOrderInput>
  }

  export type DeliveryOrderItemUpdateWithWhereUniqueWithoutDeliveryOrderInput = {
    where: DeliveryOrderItemWhereUniqueInput
    data: XOR<DeliveryOrderItemUpdateWithoutDeliveryOrderInput, DeliveryOrderItemUncheckedUpdateWithoutDeliveryOrderInput>
  }

  export type DeliveryOrderItemUpdateManyWithWhereWithoutDeliveryOrderInput = {
    where: DeliveryOrderItemScalarWhereInput
    data: XOR<DeliveryOrderItemUpdateManyMutationInput, DeliveryOrderItemUncheckedUpdateManyWithoutDeliveryOrderInput>
  }

  export type DeliveryOrderCreateWithoutDeliveryOrderItemsInput = {
    trackingNumber?: string | null
    outletId: number
    customerId?: number | null
    supplierId?: number | null
    deliveryDate?: Date | string | null
    deliveryStreet?: string | null
    deliveryCity?: string | null
    deliveryState?: string | null
    deliveryPostalCode?: string | null
    deliveryCountry?: string | null
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    session?: SessionCreateNestedOneWithoutDeliveryOrdersInput
    purchaseOrder?: PurchaseOrderCreateNestedOneWithoutDeliveryOrdersInput
    invoice?: InvoiceCreateNestedOneWithoutDeliveryOrdersInput
  }

  export type DeliveryOrderUncheckedCreateWithoutDeliveryOrderItemsInput = {
    id?: number
    trackingNumber?: string | null
    outletId: number
    customerId?: number | null
    purchaseOrderId?: number | null
    supplierId?: number | null
    invoiceId?: number | null
    sessionId?: number | null
    deliveryDate?: Date | string | null
    deliveryStreet?: string | null
    deliveryCity?: string | null
    deliveryState?: string | null
    deliveryPostalCode?: string | null
    deliveryCountry?: string | null
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type DeliveryOrderCreateOrConnectWithoutDeliveryOrderItemsInput = {
    where: DeliveryOrderWhereUniqueInput
    create: XOR<DeliveryOrderCreateWithoutDeliveryOrderItemsInput, DeliveryOrderUncheckedCreateWithoutDeliveryOrderItemsInput>
  }

  export type ItemCreateWithoutDeliveryOrderItemsInput = {
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    category: CategoryCreateNestedOneWithoutItemsInput
    supplier: SupplierCreateNestedOneWithoutItemsInput
    stockBalance?: StockBalanceCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutItemInput
    recipes?: RecipeCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemCreateNestedManyWithoutItemInput
  }

  export type ItemUncheckedCreateWithoutDeliveryOrderItemsInput = {
    id?: number
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    categoryId: number
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    supplierId: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalance?: StockBalanceUncheckedCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutItemInput
    recipes?: RecipeUncheckedCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemCreateOrConnectWithoutDeliveryOrderItemsInput = {
    where: ItemWhereUniqueInput
    create: XOR<ItemCreateWithoutDeliveryOrderItemsInput, ItemUncheckedCreateWithoutDeliveryOrderItemsInput>
  }

  export type DeliveryOrderUpsertWithoutDeliveryOrderItemsInput = {
    update: XOR<DeliveryOrderUpdateWithoutDeliveryOrderItemsInput, DeliveryOrderUncheckedUpdateWithoutDeliveryOrderItemsInput>
    create: XOR<DeliveryOrderCreateWithoutDeliveryOrderItemsInput, DeliveryOrderUncheckedCreateWithoutDeliveryOrderItemsInput>
    where?: DeliveryOrderWhereInput
  }

  export type DeliveryOrderUpdateToOneWithWhereWithoutDeliveryOrderItemsInput = {
    where?: DeliveryOrderWhereInput
    data: XOR<DeliveryOrderUpdateWithoutDeliveryOrderItemsInput, DeliveryOrderUncheckedUpdateWithoutDeliveryOrderItemsInput>
  }

  export type DeliveryOrderUpdateWithoutDeliveryOrderItemsInput = {
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryStreet?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCity?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryState?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCountry?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    session?: SessionUpdateOneWithoutDeliveryOrdersNestedInput
    purchaseOrder?: PurchaseOrderUpdateOneWithoutDeliveryOrdersNestedInput
    invoice?: InvoiceUpdateOneWithoutDeliveryOrdersNestedInput
  }

  export type DeliveryOrderUncheckedUpdateWithoutDeliveryOrderItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrderId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    invoiceId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryStreet?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCity?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryState?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCountry?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ItemUpsertWithoutDeliveryOrderItemsInput = {
    update: XOR<ItemUpdateWithoutDeliveryOrderItemsInput, ItemUncheckedUpdateWithoutDeliveryOrderItemsInput>
    create: XOR<ItemCreateWithoutDeliveryOrderItemsInput, ItemUncheckedCreateWithoutDeliveryOrderItemsInput>
    where?: ItemWhereInput
  }

  export type ItemUpdateToOneWithWhereWithoutDeliveryOrderItemsInput = {
    where?: ItemWhereInput
    data: XOR<ItemUpdateWithoutDeliveryOrderItemsInput, ItemUncheckedUpdateWithoutDeliveryOrderItemsInput>
  }

  export type ItemUpdateWithoutDeliveryOrderItemsInput = {
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    category?: CategoryUpdateOneRequiredWithoutItemsNestedInput
    supplier?: SupplierUpdateOneRequiredWithoutItemsNestedInput
    stockBalance?: StockBalanceUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutItemNestedInput
    recipes?: RecipeUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUpdateManyWithoutItemNestedInput
  }

  export type ItemUncheckedUpdateWithoutDeliveryOrderItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: IntFieldUpdateOperationsInput | number
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    supplierId?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalance?: StockBalanceUncheckedUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutItemNestedInput
    recipes?: RecipeUncheckedUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type SessionCreateWithoutPurchaseOrdersInput = {
    outletId: number
    businessDate: Date | string
    openingDateTime?: Date | string | null
    closingDateTime?: Date | string | null
    openingAmount: Decimal | DecimalJsLike | number | string
    totalSalesCount: number
    openByUserID: number
    closeByUserID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    declarations?: DeclarationCreateNestedManyWithoutSessionInput
    deliveryOrders?: DeliveryOrderCreateNestedManyWithoutSessionInput
    invoices?: InvoiceCreateNestedManyWithoutSessionInput
  }

  export type SessionUncheckedCreateWithoutPurchaseOrdersInput = {
    id?: number
    outletId: number
    businessDate: Date | string
    openingDateTime?: Date | string | null
    closingDateTime?: Date | string | null
    openingAmount: Decimal | DecimalJsLike | number | string
    totalSalesCount: number
    openByUserID: number
    closeByUserID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    declarations?: DeclarationUncheckedCreateNestedManyWithoutSessionInput
    deliveryOrders?: DeliveryOrderUncheckedCreateNestedManyWithoutSessionInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutSessionInput
  }

  export type SessionCreateOrConnectWithoutPurchaseOrdersInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutPurchaseOrdersInput, SessionUncheckedCreateWithoutPurchaseOrdersInput>
  }

  export type SupplierCreateWithoutPurchaseOrdersInput = {
    companyName: string
    companyStreet?: string | null
    companyCity?: string | null
    companyState?: string | null
    companyPostalCode?: string | null
    companyCountry?: string | null
    companyRegisterNumber?: string | null
    personInChargeLastName?: string | null
    personInChargeFirstName?: string | null
    mobile?: string | null
    email?: string | null
    remark?: string | null
    hasTax: boolean
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    items?: ItemCreateNestedManyWithoutSupplierInput
    invoices?: InvoiceCreateNestedManyWithoutSupplierInput
  }

  export type SupplierUncheckedCreateWithoutPurchaseOrdersInput = {
    id?: number
    companyName: string
    companyStreet?: string | null
    companyCity?: string | null
    companyState?: string | null
    companyPostalCode?: string | null
    companyCountry?: string | null
    companyRegisterNumber?: string | null
    personInChargeLastName?: string | null
    personInChargeFirstName?: string | null
    mobile?: string | null
    email?: string | null
    remark?: string | null
    hasTax: boolean
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    items?: ItemUncheckedCreateNestedManyWithoutSupplierInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutSupplierInput
  }

  export type SupplierCreateOrConnectWithoutPurchaseOrdersInput = {
    where: SupplierWhereUniqueInput
    create: XOR<SupplierCreateWithoutPurchaseOrdersInput, SupplierUncheckedCreateWithoutPurchaseOrdersInput>
  }

  export type PurchaseOrderItemCreateWithoutPurchaseOrderInput = {
    quantity: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    item: ItemCreateNestedOneWithoutPurchaseOrderItemsInput
  }

  export type PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput = {
    id?: number
    itemId: number
    quantity: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
  }

  export type PurchaseOrderItemCreateOrConnectWithoutPurchaseOrderInput = {
    where: PurchaseOrderItemWhereUniqueInput
    create: XOR<PurchaseOrderItemCreateWithoutPurchaseOrderInput, PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput>
  }

  export type PurchaseOrderItemCreateManyPurchaseOrderInputEnvelope = {
    data: PurchaseOrderItemCreateManyPurchaseOrderInput | PurchaseOrderItemCreateManyPurchaseOrderInput[]
    skipDuplicates?: boolean
  }

  export type DeliveryOrderCreateWithoutPurchaseOrderInput = {
    trackingNumber?: string | null
    outletId: number
    customerId?: number | null
    supplierId?: number | null
    deliveryDate?: Date | string | null
    deliveryStreet?: string | null
    deliveryCity?: string | null
    deliveryState?: string | null
    deliveryPostalCode?: string | null
    deliveryCountry?: string | null
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    session?: SessionCreateNestedOneWithoutDeliveryOrdersInput
    invoice?: InvoiceCreateNestedOneWithoutDeliveryOrdersInput
    deliveryOrderItems?: DeliveryOrderItemCreateNestedManyWithoutDeliveryOrderInput
  }

  export type DeliveryOrderUncheckedCreateWithoutPurchaseOrderInput = {
    id?: number
    trackingNumber?: string | null
    outletId: number
    customerId?: number | null
    supplierId?: number | null
    invoiceId?: number | null
    sessionId?: number | null
    deliveryDate?: Date | string | null
    deliveryStreet?: string | null
    deliveryCity?: string | null
    deliveryState?: string | null
    deliveryPostalCode?: string | null
    deliveryCountry?: string | null
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    deliveryOrderItems?: DeliveryOrderItemUncheckedCreateNestedManyWithoutDeliveryOrderInput
  }

  export type DeliveryOrderCreateOrConnectWithoutPurchaseOrderInput = {
    where: DeliveryOrderWhereUniqueInput
    create: XOR<DeliveryOrderCreateWithoutPurchaseOrderInput, DeliveryOrderUncheckedCreateWithoutPurchaseOrderInput>
  }

  export type DeliveryOrderCreateManyPurchaseOrderInputEnvelope = {
    data: DeliveryOrderCreateManyPurchaseOrderInput | DeliveryOrderCreateManyPurchaseOrderInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceCreateWithoutPurchaseOrderInput = {
    invoiceNumber: string
    taxInvoiceNumber: string
    outletId: number
    subtotalAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    invoiceDate?: Date | string | null
    paymentDate?: Date | string | null
    dueDate?: Date | string | null
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    session?: SessionCreateNestedOneWithoutInvoicesInput
    supplier?: SupplierCreateNestedOneWithoutInvoicesInput
    invoiceItems?: InvoiceItemCreateNestedManyWithoutInvoiceInput
    deliveryOrders?: DeliveryOrderCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutPurchaseOrderInput = {
    id?: number
    invoiceNumber: string
    taxInvoiceNumber: string
    supplierId?: number | null
    outletId: number
    subtotalAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    sessionId?: number | null
    discountType?: string | null
    discountAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    invoiceDate?: Date | string | null
    paymentDate?: Date | string | null
    dueDate?: Date | string | null
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    invoiceItems?: InvoiceItemUncheckedCreateNestedManyWithoutInvoiceInput
    deliveryOrders?: DeliveryOrderUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutPurchaseOrderInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutPurchaseOrderInput, InvoiceUncheckedCreateWithoutPurchaseOrderInput>
  }

  export type InvoiceCreateManyPurchaseOrderInputEnvelope = {
    data: InvoiceCreateManyPurchaseOrderInput | InvoiceCreateManyPurchaseOrderInput[]
    skipDuplicates?: boolean
  }

  export type SessionUpsertWithoutPurchaseOrdersInput = {
    update: XOR<SessionUpdateWithoutPurchaseOrdersInput, SessionUncheckedUpdateWithoutPurchaseOrdersInput>
    create: XOR<SessionCreateWithoutPurchaseOrdersInput, SessionUncheckedCreateWithoutPurchaseOrdersInput>
    where?: SessionWhereInput
  }

  export type SessionUpdateToOneWithWhereWithoutPurchaseOrdersInput = {
    where?: SessionWhereInput
    data: XOR<SessionUpdateWithoutPurchaseOrdersInput, SessionUncheckedUpdateWithoutPurchaseOrdersInput>
  }

  export type SessionUpdateWithoutPurchaseOrdersInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    openingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSalesCount?: IntFieldUpdateOperationsInput | number
    openByUserID?: IntFieldUpdateOperationsInput | number
    closeByUserID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    declarations?: DeclarationUpdateManyWithoutSessionNestedInput
    deliveryOrders?: DeliveryOrderUpdateManyWithoutSessionNestedInput
    invoices?: InvoiceUpdateManyWithoutSessionNestedInput
  }

  export type SessionUncheckedUpdateWithoutPurchaseOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    openingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSalesCount?: IntFieldUpdateOperationsInput | number
    openByUserID?: IntFieldUpdateOperationsInput | number
    closeByUserID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    declarations?: DeclarationUncheckedUpdateManyWithoutSessionNestedInput
    deliveryOrders?: DeliveryOrderUncheckedUpdateManyWithoutSessionNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutSessionNestedInput
  }

  export type SupplierUpsertWithoutPurchaseOrdersInput = {
    update: XOR<SupplierUpdateWithoutPurchaseOrdersInput, SupplierUncheckedUpdateWithoutPurchaseOrdersInput>
    create: XOR<SupplierCreateWithoutPurchaseOrdersInput, SupplierUncheckedCreateWithoutPurchaseOrdersInput>
    where?: SupplierWhereInput
  }

  export type SupplierUpdateToOneWithWhereWithoutPurchaseOrdersInput = {
    where?: SupplierWhereInput
    data: XOR<SupplierUpdateWithoutPurchaseOrdersInput, SupplierUncheckedUpdateWithoutPurchaseOrdersInput>
  }

  export type SupplierUpdateWithoutPurchaseOrdersInput = {
    companyName?: StringFieldUpdateOperationsInput | string
    companyStreet?: NullableStringFieldUpdateOperationsInput | string | null
    companyCity?: NullableStringFieldUpdateOperationsInput | string | null
    companyState?: NullableStringFieldUpdateOperationsInput | string | null
    companyPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    companyCountry?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegisterNumber?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeLastName?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeFirstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    items?: ItemUpdateManyWithoutSupplierNestedInput
    invoices?: InvoiceUpdateManyWithoutSupplierNestedInput
  }

  export type SupplierUncheckedUpdateWithoutPurchaseOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    companyName?: StringFieldUpdateOperationsInput | string
    companyStreet?: NullableStringFieldUpdateOperationsInput | string | null
    companyCity?: NullableStringFieldUpdateOperationsInput | string | null
    companyState?: NullableStringFieldUpdateOperationsInput | string | null
    companyPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    companyCountry?: NullableStringFieldUpdateOperationsInput | string | null
    companyRegisterNumber?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeLastName?: NullableStringFieldUpdateOperationsInput | string | null
    personInChargeFirstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: BoolFieldUpdateOperationsInput | boolean
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    items?: ItemUncheckedUpdateManyWithoutSupplierNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutSupplierNestedInput
  }

  export type PurchaseOrderItemUpsertWithWhereUniqueWithoutPurchaseOrderInput = {
    where: PurchaseOrderItemWhereUniqueInput
    update: XOR<PurchaseOrderItemUpdateWithoutPurchaseOrderInput, PurchaseOrderItemUncheckedUpdateWithoutPurchaseOrderInput>
    create: XOR<PurchaseOrderItemCreateWithoutPurchaseOrderInput, PurchaseOrderItemUncheckedCreateWithoutPurchaseOrderInput>
  }

  export type PurchaseOrderItemUpdateWithWhereUniqueWithoutPurchaseOrderInput = {
    where: PurchaseOrderItemWhereUniqueInput
    data: XOR<PurchaseOrderItemUpdateWithoutPurchaseOrderInput, PurchaseOrderItemUncheckedUpdateWithoutPurchaseOrderInput>
  }

  export type PurchaseOrderItemUpdateManyWithWhereWithoutPurchaseOrderInput = {
    where: PurchaseOrderItemScalarWhereInput
    data: XOR<PurchaseOrderItemUpdateManyMutationInput, PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderInput>
  }

  export type DeliveryOrderUpsertWithWhereUniqueWithoutPurchaseOrderInput = {
    where: DeliveryOrderWhereUniqueInput
    update: XOR<DeliveryOrderUpdateWithoutPurchaseOrderInput, DeliveryOrderUncheckedUpdateWithoutPurchaseOrderInput>
    create: XOR<DeliveryOrderCreateWithoutPurchaseOrderInput, DeliveryOrderUncheckedCreateWithoutPurchaseOrderInput>
  }

  export type DeliveryOrderUpdateWithWhereUniqueWithoutPurchaseOrderInput = {
    where: DeliveryOrderWhereUniqueInput
    data: XOR<DeliveryOrderUpdateWithoutPurchaseOrderInput, DeliveryOrderUncheckedUpdateWithoutPurchaseOrderInput>
  }

  export type DeliveryOrderUpdateManyWithWhereWithoutPurchaseOrderInput = {
    where: DeliveryOrderScalarWhereInput
    data: XOR<DeliveryOrderUpdateManyMutationInput, DeliveryOrderUncheckedUpdateManyWithoutPurchaseOrderInput>
  }

  export type InvoiceUpsertWithWhereUniqueWithoutPurchaseOrderInput = {
    where: InvoiceWhereUniqueInput
    update: XOR<InvoiceUpdateWithoutPurchaseOrderInput, InvoiceUncheckedUpdateWithoutPurchaseOrderInput>
    create: XOR<InvoiceCreateWithoutPurchaseOrderInput, InvoiceUncheckedCreateWithoutPurchaseOrderInput>
  }

  export type InvoiceUpdateWithWhereUniqueWithoutPurchaseOrderInput = {
    where: InvoiceWhereUniqueInput
    data: XOR<InvoiceUpdateWithoutPurchaseOrderInput, InvoiceUncheckedUpdateWithoutPurchaseOrderInput>
  }

  export type InvoiceUpdateManyWithWhereWithoutPurchaseOrderInput = {
    where: InvoiceScalarWhereInput
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyWithoutPurchaseOrderInput>
  }

  export type PurchaseOrderCreateWithoutPurchaseOrderItemsInput = {
    purchaseOrderNumber: string
    outletId: number
    purchaseOrderDate?: Date | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    roundingAmount?: Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: Decimal | DecimalJsLike | number | string | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    status: string
    remark?: string | null
    currency?: string
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    session?: SessionCreateNestedOneWithoutPurchaseOrdersInput
    supplier: SupplierCreateNestedOneWithoutPurchaseOrdersInput
    deliveryOrders?: DeliveryOrderCreateNestedManyWithoutPurchaseOrderInput
    invoices?: InvoiceCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderUncheckedCreateWithoutPurchaseOrderItemsInput = {
    id?: number
    purchaseOrderNumber: string
    outletId: number
    supplierId: number
    purchaseOrderDate?: Date | string | null
    sessionId?: number | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    roundingAmount?: Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: Decimal | DecimalJsLike | number | string | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    status: string
    remark?: string | null
    currency?: string
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    deliveryOrders?: DeliveryOrderUncheckedCreateNestedManyWithoutPurchaseOrderInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderCreateOrConnectWithoutPurchaseOrderItemsInput = {
    where: PurchaseOrderWhereUniqueInput
    create: XOR<PurchaseOrderCreateWithoutPurchaseOrderItemsInput, PurchaseOrderUncheckedCreateWithoutPurchaseOrderItemsInput>
  }

  export type ItemCreateWithoutPurchaseOrderItemsInput = {
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    category: CategoryCreateNestedOneWithoutItemsInput
    supplier: SupplierCreateNestedOneWithoutItemsInput
    stockBalance?: StockBalanceCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutItemInput
    recipes?: RecipeCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemCreateNestedManyWithoutItemInput
  }

  export type ItemUncheckedCreateWithoutPurchaseOrderItemsInput = {
    id?: number
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    categoryId: number
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    supplierId: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalance?: StockBalanceUncheckedCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutItemInput
    recipes?: RecipeUncheckedCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemCreateOrConnectWithoutPurchaseOrderItemsInput = {
    where: ItemWhereUniqueInput
    create: XOR<ItemCreateWithoutPurchaseOrderItemsInput, ItemUncheckedCreateWithoutPurchaseOrderItemsInput>
  }

  export type PurchaseOrderUpsertWithoutPurchaseOrderItemsInput = {
    update: XOR<PurchaseOrderUpdateWithoutPurchaseOrderItemsInput, PurchaseOrderUncheckedUpdateWithoutPurchaseOrderItemsInput>
    create: XOR<PurchaseOrderCreateWithoutPurchaseOrderItemsInput, PurchaseOrderUncheckedCreateWithoutPurchaseOrderItemsInput>
    where?: PurchaseOrderWhereInput
  }

  export type PurchaseOrderUpdateToOneWithWhereWithoutPurchaseOrderItemsInput = {
    where?: PurchaseOrderWhereInput
    data: XOR<PurchaseOrderUpdateWithoutPurchaseOrderItemsInput, PurchaseOrderUncheckedUpdateWithoutPurchaseOrderItemsInput>
  }

  export type PurchaseOrderUpdateWithoutPurchaseOrderItemsInput = {
    purchaseOrderNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    purchaseOrderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    session?: SessionUpdateOneWithoutPurchaseOrdersNestedInput
    supplier?: SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput
    deliveryOrders?: DeliveryOrderUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: InvoiceUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderUncheckedUpdateWithoutPurchaseOrderItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    purchaseOrderNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    purchaseOrderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryOrders?: DeliveryOrderUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type ItemUpsertWithoutPurchaseOrderItemsInput = {
    update: XOR<ItemUpdateWithoutPurchaseOrderItemsInput, ItemUncheckedUpdateWithoutPurchaseOrderItemsInput>
    create: XOR<ItemCreateWithoutPurchaseOrderItemsInput, ItemUncheckedCreateWithoutPurchaseOrderItemsInput>
    where?: ItemWhereInput
  }

  export type ItemUpdateToOneWithWhereWithoutPurchaseOrderItemsInput = {
    where?: ItemWhereInput
    data: XOR<ItemUpdateWithoutPurchaseOrderItemsInput, ItemUncheckedUpdateWithoutPurchaseOrderItemsInput>
  }

  export type ItemUpdateWithoutPurchaseOrderItemsInput = {
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    category?: CategoryUpdateOneRequiredWithoutItemsNestedInput
    supplier?: SupplierUpdateOneRequiredWithoutItemsNestedInput
    stockBalance?: StockBalanceUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutItemNestedInput
    recipes?: RecipeUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUpdateManyWithoutItemNestedInput
  }

  export type ItemUncheckedUpdateWithoutPurchaseOrderItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: IntFieldUpdateOperationsInput | number
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    supplierId?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalance?: StockBalanceUncheckedUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutItemNestedInput
    recipes?: RecipeUncheckedUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type CardInfoCreateWithoutPaymentInput = {
    cardNumber?: string | null
    cardExpiry?: string | null
    traceNumber?: string | null
    type2?: string | null
    type3?: string | null
    cardRate?: number | null
    appCode?: string | null
    cardType?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type CardInfoUncheckedCreateWithoutPaymentInput = {
    id?: number
    cardNumber?: string | null
    cardExpiry?: string | null
    traceNumber?: string | null
    type2?: string | null
    type3?: string | null
    cardRate?: number | null
    appCode?: string | null
    cardType?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type CardInfoCreateOrConnectWithoutPaymentInput = {
    where: CardInfoWhereUniqueInput
    create: XOR<CardInfoCreateWithoutPaymentInput, CardInfoUncheckedCreateWithoutPaymentInput>
  }

  export type CardInfoCreateManyPaymentInputEnvelope = {
    data: CardInfoCreateManyPaymentInput | CardInfoCreateManyPaymentInput[]
    skipDuplicates?: boolean
  }

  export type SalesCreateWithoutPaymentsInput = {
    outletId: number
    businessDate: Date | string
    salesType: string
    customerName?: string | null
    phoneNumber?: string | null
    billStreet?: string
    billCity?: string
    billState?: string
    billPostalCode?: string
    billCountry?: string
    shipStreet?: string
    shipCity?: string
    shipState?: string
    shipPostalCode?: string
    shipCountry?: string
    totalItemDiscountAmount?: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    profitAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    roundingAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    changeAmount?: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string
    completedSessionId?: number | null
    sessionId: number
    eodId: number
    salesQuotationId?: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    orderStatus?: string | null
    salesItems?: SalesItemCreateNestedManyWithoutSalesInput
    registerLogs?: RegisterLogCreateNestedManyWithoutSalesInput
    customer?: CustomerCreateNestedOneWithoutSalesInput
    table?: TableCreateNestedOneWithoutSalesInput
  }

  export type SalesUncheckedCreateWithoutPaymentsInput = {
    id?: number
    outletId: number
    businessDate: Date | string
    salesType: string
    customerName?: string | null
    customerId?: number | null
    phoneNumber?: string | null
    billStreet?: string
    billCity?: string
    billState?: string
    billPostalCode?: string
    billCountry?: string
    shipStreet?: string
    shipCity?: string
    shipState?: string
    shipPostalCode?: string
    shipCountry?: string
    totalItemDiscountAmount?: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    profitAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    roundingAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    changeAmount?: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string
    completedSessionId?: number | null
    sessionId: number
    eodId: number
    salesQuotationId?: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    tableId?: number | null
    orderStatus?: string | null
    salesItems?: SalesItemUncheckedCreateNestedManyWithoutSalesInput
    registerLogs?: RegisterLogUncheckedCreateNestedManyWithoutSalesInput
  }

  export type SalesCreateOrConnectWithoutPaymentsInput = {
    where: SalesWhereUniqueInput
    create: XOR<SalesCreateWithoutPaymentsInput, SalesUncheckedCreateWithoutPaymentsInput>
  }

  export type SplitBillCreateWithoutPaymentInput = {
    salesId: number
    amount: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    customer?: CustomerCreateNestedOneWithoutSplitBillsInput
  }

  export type SplitBillUncheckedCreateWithoutPaymentInput = {
    id?: number
    salesId: number
    amount: Decimal | DecimalJsLike | number | string
    customerId?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SplitBillCreateOrConnectWithoutPaymentInput = {
    where: SplitBillWhereUniqueInput
    create: XOR<SplitBillCreateWithoutPaymentInput, SplitBillUncheckedCreateWithoutPaymentInput>
  }

  export type SplitBillCreateManyPaymentInputEnvelope = {
    data: SplitBillCreateManyPaymentInput | SplitBillCreateManyPaymentInput[]
    skipDuplicates?: boolean
  }

  export type CardInfoUpsertWithWhereUniqueWithoutPaymentInput = {
    where: CardInfoWhereUniqueInput
    update: XOR<CardInfoUpdateWithoutPaymentInput, CardInfoUncheckedUpdateWithoutPaymentInput>
    create: XOR<CardInfoCreateWithoutPaymentInput, CardInfoUncheckedCreateWithoutPaymentInput>
  }

  export type CardInfoUpdateWithWhereUniqueWithoutPaymentInput = {
    where: CardInfoWhereUniqueInput
    data: XOR<CardInfoUpdateWithoutPaymentInput, CardInfoUncheckedUpdateWithoutPaymentInput>
  }

  export type CardInfoUpdateManyWithWhereWithoutPaymentInput = {
    where: CardInfoScalarWhereInput
    data: XOR<CardInfoUpdateManyMutationInput, CardInfoUncheckedUpdateManyWithoutPaymentInput>
  }

  export type CardInfoScalarWhereInput = {
    AND?: CardInfoScalarWhereInput | CardInfoScalarWhereInput[]
    OR?: CardInfoScalarWhereInput[]
    NOT?: CardInfoScalarWhereInput | CardInfoScalarWhereInput[]
    id?: IntFilter<"CardInfo"> | number
    paymentId?: IntFilter<"CardInfo"> | number
    cardNumber?: StringNullableFilter<"CardInfo"> | string | null
    cardExpiry?: StringNullableFilter<"CardInfo"> | string | null
    traceNumber?: StringNullableFilter<"CardInfo"> | string | null
    type2?: StringNullableFilter<"CardInfo"> | string | null
    type3?: StringNullableFilter<"CardInfo"> | string | null
    cardRate?: FloatNullableFilter<"CardInfo"> | number | null
    appCode?: StringNullableFilter<"CardInfo"> | string | null
    cardType?: StringNullableFilter<"CardInfo"> | string | null
    deleted?: BoolFilter<"CardInfo"> | boolean
    createdAt?: DateTimeNullableFilter<"CardInfo"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"CardInfo"> | Date | string | null
    version?: IntNullableFilter<"CardInfo"> | number | null
  }

  export type SalesUpsertWithoutPaymentsInput = {
    update: XOR<SalesUpdateWithoutPaymentsInput, SalesUncheckedUpdateWithoutPaymentsInput>
    create: XOR<SalesCreateWithoutPaymentsInput, SalesUncheckedCreateWithoutPaymentsInput>
    where?: SalesWhereInput
  }

  export type SalesUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: SalesWhereInput
    data: XOR<SalesUpdateWithoutPaymentsInput, SalesUncheckedUpdateWithoutPaymentsInput>
  }

  export type SalesUpdateWithoutPaymentsInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    salesType?: StringFieldUpdateOperationsInput | string
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: StringFieldUpdateOperationsInput | string
    billCity?: StringFieldUpdateOperationsInput | string
    billState?: StringFieldUpdateOperationsInput | string
    billPostalCode?: StringFieldUpdateOperationsInput | string
    billCountry?: StringFieldUpdateOperationsInput | string
    shipStreet?: StringFieldUpdateOperationsInput | string
    shipCity?: StringFieldUpdateOperationsInput | string
    shipState?: StringFieldUpdateOperationsInput | string
    shipPostalCode?: StringFieldUpdateOperationsInput | string
    shipCountry?: StringFieldUpdateOperationsInput | string
    totalItemDiscountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    completedSessionId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    orderStatus?: NullableStringFieldUpdateOperationsInput | string | null
    salesItems?: SalesItemUpdateManyWithoutSalesNestedInput
    registerLogs?: RegisterLogUpdateManyWithoutSalesNestedInput
    customer?: CustomerUpdateOneWithoutSalesNestedInput
    table?: TableUpdateOneWithoutSalesNestedInput
  }

  export type SalesUncheckedUpdateWithoutPaymentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    salesType?: StringFieldUpdateOperationsInput | string
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: StringFieldUpdateOperationsInput | string
    billCity?: StringFieldUpdateOperationsInput | string
    billState?: StringFieldUpdateOperationsInput | string
    billPostalCode?: StringFieldUpdateOperationsInput | string
    billCountry?: StringFieldUpdateOperationsInput | string
    shipStreet?: StringFieldUpdateOperationsInput | string
    shipCity?: StringFieldUpdateOperationsInput | string
    shipState?: StringFieldUpdateOperationsInput | string
    shipPostalCode?: StringFieldUpdateOperationsInput | string
    shipCountry?: StringFieldUpdateOperationsInput | string
    totalItemDiscountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    completedSessionId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    tableId?: NullableIntFieldUpdateOperationsInput | number | null
    orderStatus?: NullableStringFieldUpdateOperationsInput | string | null
    salesItems?: SalesItemUncheckedUpdateManyWithoutSalesNestedInput
    registerLogs?: RegisterLogUncheckedUpdateManyWithoutSalesNestedInput
  }

  export type SplitBillUpsertWithWhereUniqueWithoutPaymentInput = {
    where: SplitBillWhereUniqueInput
    update: XOR<SplitBillUpdateWithoutPaymentInput, SplitBillUncheckedUpdateWithoutPaymentInput>
    create: XOR<SplitBillCreateWithoutPaymentInput, SplitBillUncheckedCreateWithoutPaymentInput>
  }

  export type SplitBillUpdateWithWhereUniqueWithoutPaymentInput = {
    where: SplitBillWhereUniqueInput
    data: XOR<SplitBillUpdateWithoutPaymentInput, SplitBillUncheckedUpdateWithoutPaymentInput>
  }

  export type SplitBillUpdateManyWithWhereWithoutPaymentInput = {
    where: SplitBillScalarWhereInput
    data: XOR<SplitBillUpdateManyMutationInput, SplitBillUncheckedUpdateManyWithoutPaymentInput>
  }

  export type SalesCreateWithoutRegisterLogsInput = {
    outletId: number
    businessDate: Date | string
    salesType: string
    customerName?: string | null
    phoneNumber?: string | null
    billStreet?: string
    billCity?: string
    billState?: string
    billPostalCode?: string
    billCountry?: string
    shipStreet?: string
    shipCity?: string
    shipState?: string
    shipPostalCode?: string
    shipCountry?: string
    totalItemDiscountAmount?: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    profitAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    roundingAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    changeAmount?: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string
    completedSessionId?: number | null
    sessionId: number
    eodId: number
    salesQuotationId?: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    orderStatus?: string | null
    salesItems?: SalesItemCreateNestedManyWithoutSalesInput
    payments?: PaymentCreateNestedManyWithoutSalesInput
    customer?: CustomerCreateNestedOneWithoutSalesInput
    table?: TableCreateNestedOneWithoutSalesInput
  }

  export type SalesUncheckedCreateWithoutRegisterLogsInput = {
    id?: number
    outletId: number
    businessDate: Date | string
    salesType: string
    customerName?: string | null
    customerId?: number | null
    phoneNumber?: string | null
    billStreet?: string
    billCity?: string
    billState?: string
    billPostalCode?: string
    billCountry?: string
    shipStreet?: string
    shipCity?: string
    shipState?: string
    shipPostalCode?: string
    shipCountry?: string
    totalItemDiscountAmount?: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    profitAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    roundingAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    changeAmount?: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string
    completedSessionId?: number | null
    sessionId: number
    eodId: number
    salesQuotationId?: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    tableId?: number | null
    orderStatus?: string | null
    salesItems?: SalesItemUncheckedCreateNestedManyWithoutSalesInput
    payments?: PaymentUncheckedCreateNestedManyWithoutSalesInput
  }

  export type SalesCreateOrConnectWithoutRegisterLogsInput = {
    where: SalesWhereUniqueInput
    create: XOR<SalesCreateWithoutRegisterLogsInput, SalesUncheckedCreateWithoutRegisterLogsInput>
  }

  export type SalesUpsertWithoutRegisterLogsInput = {
    update: XOR<SalesUpdateWithoutRegisterLogsInput, SalesUncheckedUpdateWithoutRegisterLogsInput>
    create: XOR<SalesCreateWithoutRegisterLogsInput, SalesUncheckedCreateWithoutRegisterLogsInput>
    where?: SalesWhereInput
  }

  export type SalesUpdateToOneWithWhereWithoutRegisterLogsInput = {
    where?: SalesWhereInput
    data: XOR<SalesUpdateWithoutRegisterLogsInput, SalesUncheckedUpdateWithoutRegisterLogsInput>
  }

  export type SalesUpdateWithoutRegisterLogsInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    salesType?: StringFieldUpdateOperationsInput | string
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: StringFieldUpdateOperationsInput | string
    billCity?: StringFieldUpdateOperationsInput | string
    billState?: StringFieldUpdateOperationsInput | string
    billPostalCode?: StringFieldUpdateOperationsInput | string
    billCountry?: StringFieldUpdateOperationsInput | string
    shipStreet?: StringFieldUpdateOperationsInput | string
    shipCity?: StringFieldUpdateOperationsInput | string
    shipState?: StringFieldUpdateOperationsInput | string
    shipPostalCode?: StringFieldUpdateOperationsInput | string
    shipCountry?: StringFieldUpdateOperationsInput | string
    totalItemDiscountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    completedSessionId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    orderStatus?: NullableStringFieldUpdateOperationsInput | string | null
    salesItems?: SalesItemUpdateManyWithoutSalesNestedInput
    payments?: PaymentUpdateManyWithoutSalesNestedInput
    customer?: CustomerUpdateOneWithoutSalesNestedInput
    table?: TableUpdateOneWithoutSalesNestedInput
  }

  export type SalesUncheckedUpdateWithoutRegisterLogsInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    salesType?: StringFieldUpdateOperationsInput | string
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: StringFieldUpdateOperationsInput | string
    billCity?: StringFieldUpdateOperationsInput | string
    billState?: StringFieldUpdateOperationsInput | string
    billPostalCode?: StringFieldUpdateOperationsInput | string
    billCountry?: StringFieldUpdateOperationsInput | string
    shipStreet?: StringFieldUpdateOperationsInput | string
    shipCity?: StringFieldUpdateOperationsInput | string
    shipState?: StringFieldUpdateOperationsInput | string
    shipPostalCode?: StringFieldUpdateOperationsInput | string
    shipCountry?: StringFieldUpdateOperationsInput | string
    totalItemDiscountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    completedSessionId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    tableId?: NullableIntFieldUpdateOperationsInput | number | null
    orderStatus?: NullableStringFieldUpdateOperationsInput | string | null
    salesItems?: SalesItemUncheckedUpdateManyWithoutSalesNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutSalesNestedInput
  }

  export type PaymentCreateWithoutCardInfosInput = {
    method: string
    tenderedAmount: Decimal | DecimalJsLike | number | string
    paidAmount: Decimal | DecimalJsLike | number | string
    currencySymbol?: string
    reference?: string
    remark?: string
    businessDate: Date | string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales: SalesCreateNestedOneWithoutPaymentsInput
    splitBills?: SplitBillCreateNestedManyWithoutPaymentInput
  }

  export type PaymentUncheckedCreateWithoutCardInfosInput = {
    id?: number
    method: string
    tenderedAmount: Decimal | DecimalJsLike | number | string
    paidAmount: Decimal | DecimalJsLike | number | string
    currencySymbol?: string
    salesId: number
    reference?: string
    remark?: string
    businessDate: Date | string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    splitBills?: SplitBillUncheckedCreateNestedManyWithoutPaymentInput
  }

  export type PaymentCreateOrConnectWithoutCardInfosInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutCardInfosInput, PaymentUncheckedCreateWithoutCardInfosInput>
  }

  export type PaymentUpsertWithoutCardInfosInput = {
    update: XOR<PaymentUpdateWithoutCardInfosInput, PaymentUncheckedUpdateWithoutCardInfosInput>
    create: XOR<PaymentCreateWithoutCardInfosInput, PaymentUncheckedCreateWithoutCardInfosInput>
    where?: PaymentWhereInput
  }

  export type PaymentUpdateToOneWithWhereWithoutCardInfosInput = {
    where?: PaymentWhereInput
    data: XOR<PaymentUpdateWithoutCardInfosInput, PaymentUncheckedUpdateWithoutCardInfosInput>
  }

  export type PaymentUpdateWithoutCardInfosInput = {
    method?: StringFieldUpdateOperationsInput | string
    tenderedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUpdateOneRequiredWithoutPaymentsNestedInput
    splitBills?: SplitBillUpdateManyWithoutPaymentNestedInput
  }

  export type PaymentUncheckedUpdateWithoutCardInfosInput = {
    id?: IntFieldUpdateOperationsInput | number
    method?: StringFieldUpdateOperationsInput | string
    tenderedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    salesId?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    splitBills?: SplitBillUncheckedUpdateManyWithoutPaymentNestedInput
  }

  export type DeclarationCreateWithoutSessionInput = {
    paymentType: string
    totalPaymentAmount: Decimal | DecimalJsLike | number | string
    declarationAmount: Decimal | DecimalJsLike | number | string
    differenceAmount: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type DeclarationUncheckedCreateWithoutSessionInput = {
    id?: number
    paymentType: string
    totalPaymentAmount: Decimal | DecimalJsLike | number | string
    declarationAmount: Decimal | DecimalJsLike | number | string
    differenceAmount: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type DeclarationCreateOrConnectWithoutSessionInput = {
    where: DeclarationWhereUniqueInput
    create: XOR<DeclarationCreateWithoutSessionInput, DeclarationUncheckedCreateWithoutSessionInput>
  }

  export type DeclarationCreateManySessionInputEnvelope = {
    data: DeclarationCreateManySessionInput | DeclarationCreateManySessionInput[]
    skipDuplicates?: boolean
  }

  export type PurchaseOrderCreateWithoutSessionInput = {
    purchaseOrderNumber: string
    outletId: number
    purchaseOrderDate?: Date | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    roundingAmount?: Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: Decimal | DecimalJsLike | number | string | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    status: string
    remark?: string | null
    currency?: string
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    supplier: SupplierCreateNestedOneWithoutPurchaseOrdersInput
    purchaseOrderItems?: PurchaseOrderItemCreateNestedManyWithoutPurchaseOrderInput
    deliveryOrders?: DeliveryOrderCreateNestedManyWithoutPurchaseOrderInput
    invoices?: InvoiceCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderUncheckedCreateWithoutSessionInput = {
    id?: number
    purchaseOrderNumber: string
    outletId: number
    supplierId: number
    purchaseOrderDate?: Date | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    roundingAmount?: Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: Decimal | DecimalJsLike | number | string | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    status: string
    remark?: string | null
    currency?: string
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    purchaseOrderItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutPurchaseOrderInput
    deliveryOrders?: DeliveryOrderUncheckedCreateNestedManyWithoutPurchaseOrderInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutPurchaseOrderInput
  }

  export type PurchaseOrderCreateOrConnectWithoutSessionInput = {
    where: PurchaseOrderWhereUniqueInput
    create: XOR<PurchaseOrderCreateWithoutSessionInput, PurchaseOrderUncheckedCreateWithoutSessionInput>
  }

  export type PurchaseOrderCreateManySessionInputEnvelope = {
    data: PurchaseOrderCreateManySessionInput | PurchaseOrderCreateManySessionInput[]
    skipDuplicates?: boolean
  }

  export type DeliveryOrderCreateWithoutSessionInput = {
    trackingNumber?: string | null
    outletId: number
    customerId?: number | null
    supplierId?: number | null
    deliveryDate?: Date | string | null
    deliveryStreet?: string | null
    deliveryCity?: string | null
    deliveryState?: string | null
    deliveryPostalCode?: string | null
    deliveryCountry?: string | null
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    purchaseOrder?: PurchaseOrderCreateNestedOneWithoutDeliveryOrdersInput
    invoice?: InvoiceCreateNestedOneWithoutDeliveryOrdersInput
    deliveryOrderItems?: DeliveryOrderItemCreateNestedManyWithoutDeliveryOrderInput
  }

  export type DeliveryOrderUncheckedCreateWithoutSessionInput = {
    id?: number
    trackingNumber?: string | null
    outletId: number
    customerId?: number | null
    purchaseOrderId?: number | null
    supplierId?: number | null
    invoiceId?: number | null
    deliveryDate?: Date | string | null
    deliveryStreet?: string | null
    deliveryCity?: string | null
    deliveryState?: string | null
    deliveryPostalCode?: string | null
    deliveryCountry?: string | null
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    deliveryOrderItems?: DeliveryOrderItemUncheckedCreateNestedManyWithoutDeliveryOrderInput
  }

  export type DeliveryOrderCreateOrConnectWithoutSessionInput = {
    where: DeliveryOrderWhereUniqueInput
    create: XOR<DeliveryOrderCreateWithoutSessionInput, DeliveryOrderUncheckedCreateWithoutSessionInput>
  }

  export type DeliveryOrderCreateManySessionInputEnvelope = {
    data: DeliveryOrderCreateManySessionInput | DeliveryOrderCreateManySessionInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceCreateWithoutSessionInput = {
    invoiceNumber: string
    taxInvoiceNumber: string
    outletId: number
    subtotalAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    invoiceDate?: Date | string | null
    paymentDate?: Date | string | null
    dueDate?: Date | string | null
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    purchaseOrder?: PurchaseOrderCreateNestedOneWithoutInvoicesInput
    supplier?: SupplierCreateNestedOneWithoutInvoicesInput
    invoiceItems?: InvoiceItemCreateNestedManyWithoutInvoiceInput
    deliveryOrders?: DeliveryOrderCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutSessionInput = {
    id?: number
    invoiceNumber: string
    taxInvoiceNumber: string
    purchaseOrderId?: number | null
    supplierId?: number | null
    outletId: number
    subtotalAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    invoiceDate?: Date | string | null
    paymentDate?: Date | string | null
    dueDate?: Date | string | null
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    invoiceItems?: InvoiceItemUncheckedCreateNestedManyWithoutInvoiceInput
    deliveryOrders?: DeliveryOrderUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutSessionInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutSessionInput, InvoiceUncheckedCreateWithoutSessionInput>
  }

  export type InvoiceCreateManySessionInputEnvelope = {
    data: InvoiceCreateManySessionInput | InvoiceCreateManySessionInput[]
    skipDuplicates?: boolean
  }

  export type DeclarationUpsertWithWhereUniqueWithoutSessionInput = {
    where: DeclarationWhereUniqueInput
    update: XOR<DeclarationUpdateWithoutSessionInput, DeclarationUncheckedUpdateWithoutSessionInput>
    create: XOR<DeclarationCreateWithoutSessionInput, DeclarationUncheckedCreateWithoutSessionInput>
  }

  export type DeclarationUpdateWithWhereUniqueWithoutSessionInput = {
    where: DeclarationWhereUniqueInput
    data: XOR<DeclarationUpdateWithoutSessionInput, DeclarationUncheckedUpdateWithoutSessionInput>
  }

  export type DeclarationUpdateManyWithWhereWithoutSessionInput = {
    where: DeclarationScalarWhereInput
    data: XOR<DeclarationUpdateManyMutationInput, DeclarationUncheckedUpdateManyWithoutSessionInput>
  }

  export type DeclarationScalarWhereInput = {
    AND?: DeclarationScalarWhereInput | DeclarationScalarWhereInput[]
    OR?: DeclarationScalarWhereInput[]
    NOT?: DeclarationScalarWhereInput | DeclarationScalarWhereInput[]
    id?: IntFilter<"Declaration"> | number
    paymentType?: StringFilter<"Declaration"> | string
    totalPaymentAmount?: DecimalFilter<"Declaration"> | Decimal | DecimalJsLike | number | string
    declarationAmount?: DecimalFilter<"Declaration"> | Decimal | DecimalJsLike | number | string
    differenceAmount?: DecimalFilter<"Declaration"> | Decimal | DecimalJsLike | number | string
    deleted?: BoolFilter<"Declaration"> | boolean
    deletedAt?: DateTimeNullableFilter<"Declaration"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"Declaration"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Declaration"> | Date | string | null
    version?: IntNullableFilter<"Declaration"> | number | null
    sessionID?: IntFilter<"Declaration"> | number
  }

  export type PurchaseOrderUpsertWithWhereUniqueWithoutSessionInput = {
    where: PurchaseOrderWhereUniqueInput
    update: XOR<PurchaseOrderUpdateWithoutSessionInput, PurchaseOrderUncheckedUpdateWithoutSessionInput>
    create: XOR<PurchaseOrderCreateWithoutSessionInput, PurchaseOrderUncheckedCreateWithoutSessionInput>
  }

  export type PurchaseOrderUpdateWithWhereUniqueWithoutSessionInput = {
    where: PurchaseOrderWhereUniqueInput
    data: XOR<PurchaseOrderUpdateWithoutSessionInput, PurchaseOrderUncheckedUpdateWithoutSessionInput>
  }

  export type PurchaseOrderUpdateManyWithWhereWithoutSessionInput = {
    where: PurchaseOrderScalarWhereInput
    data: XOR<PurchaseOrderUpdateManyMutationInput, PurchaseOrderUncheckedUpdateManyWithoutSessionInput>
  }

  export type DeliveryOrderUpsertWithWhereUniqueWithoutSessionInput = {
    where: DeliveryOrderWhereUniqueInput
    update: XOR<DeliveryOrderUpdateWithoutSessionInput, DeliveryOrderUncheckedUpdateWithoutSessionInput>
    create: XOR<DeliveryOrderCreateWithoutSessionInput, DeliveryOrderUncheckedCreateWithoutSessionInput>
  }

  export type DeliveryOrderUpdateWithWhereUniqueWithoutSessionInput = {
    where: DeliveryOrderWhereUniqueInput
    data: XOR<DeliveryOrderUpdateWithoutSessionInput, DeliveryOrderUncheckedUpdateWithoutSessionInput>
  }

  export type DeliveryOrderUpdateManyWithWhereWithoutSessionInput = {
    where: DeliveryOrderScalarWhereInput
    data: XOR<DeliveryOrderUpdateManyMutationInput, DeliveryOrderUncheckedUpdateManyWithoutSessionInput>
  }

  export type InvoiceUpsertWithWhereUniqueWithoutSessionInput = {
    where: InvoiceWhereUniqueInput
    update: XOR<InvoiceUpdateWithoutSessionInput, InvoiceUncheckedUpdateWithoutSessionInput>
    create: XOR<InvoiceCreateWithoutSessionInput, InvoiceUncheckedCreateWithoutSessionInput>
  }

  export type InvoiceUpdateWithWhereUniqueWithoutSessionInput = {
    where: InvoiceWhereUniqueInput
    data: XOR<InvoiceUpdateWithoutSessionInput, InvoiceUncheckedUpdateWithoutSessionInput>
  }

  export type InvoiceUpdateManyWithWhereWithoutSessionInput = {
    where: InvoiceScalarWhereInput
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyWithoutSessionInput>
  }

  export type SessionCreateWithoutDeclarationsInput = {
    outletId: number
    businessDate: Date | string
    openingDateTime?: Date | string | null
    closingDateTime?: Date | string | null
    openingAmount: Decimal | DecimalJsLike | number | string
    totalSalesCount: number
    openByUserID: number
    closeByUserID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    purchaseOrders?: PurchaseOrderCreateNestedManyWithoutSessionInput
    deliveryOrders?: DeliveryOrderCreateNestedManyWithoutSessionInput
    invoices?: InvoiceCreateNestedManyWithoutSessionInput
  }

  export type SessionUncheckedCreateWithoutDeclarationsInput = {
    id?: number
    outletId: number
    businessDate: Date | string
    openingDateTime?: Date | string | null
    closingDateTime?: Date | string | null
    openingAmount: Decimal | DecimalJsLike | number | string
    totalSalesCount: number
    openByUserID: number
    closeByUserID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    purchaseOrders?: PurchaseOrderUncheckedCreateNestedManyWithoutSessionInput
    deliveryOrders?: DeliveryOrderUncheckedCreateNestedManyWithoutSessionInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutSessionInput
  }

  export type SessionCreateOrConnectWithoutDeclarationsInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutDeclarationsInput, SessionUncheckedCreateWithoutDeclarationsInput>
  }

  export type SessionUpsertWithoutDeclarationsInput = {
    update: XOR<SessionUpdateWithoutDeclarationsInput, SessionUncheckedUpdateWithoutDeclarationsInput>
    create: XOR<SessionCreateWithoutDeclarationsInput, SessionUncheckedCreateWithoutDeclarationsInput>
    where?: SessionWhereInput
  }

  export type SessionUpdateToOneWithWhereWithoutDeclarationsInput = {
    where?: SessionWhereInput
    data: XOR<SessionUpdateWithoutDeclarationsInput, SessionUncheckedUpdateWithoutDeclarationsInput>
  }

  export type SessionUpdateWithoutDeclarationsInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    openingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSalesCount?: IntFieldUpdateOperationsInput | number
    openByUserID?: IntFieldUpdateOperationsInput | number
    closeByUserID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrders?: PurchaseOrderUpdateManyWithoutSessionNestedInput
    deliveryOrders?: DeliveryOrderUpdateManyWithoutSessionNestedInput
    invoices?: InvoiceUpdateManyWithoutSessionNestedInput
  }

  export type SessionUncheckedUpdateWithoutDeclarationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    openingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    closingDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    openingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalSalesCount?: IntFieldUpdateOperationsInput | number
    openByUserID?: IntFieldUpdateOperationsInput | number
    closeByUserID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrders?: PurchaseOrderUncheckedUpdateManyWithoutSessionNestedInput
    deliveryOrders?: DeliveryOrderUncheckedUpdateManyWithoutSessionNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutSessionNestedInput
  }

  export type ItemCreateWithoutStockBalanceInput = {
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    category: CategoryCreateNestedOneWithoutItemsInput
    supplier: SupplierCreateNestedOneWithoutItemsInput
    stockMovements?: StockMovementCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutItemInput
    recipes?: RecipeCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemCreateNestedManyWithoutItemInput
  }

  export type ItemUncheckedCreateWithoutStockBalanceInput = {
    id?: number
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    categoryId: number
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    supplierId: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutItemInput
    recipes?: RecipeUncheckedCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemCreateOrConnectWithoutStockBalanceInput = {
    where: ItemWhereUniqueInput
    create: XOR<ItemCreateWithoutStockBalanceInput, ItemUncheckedCreateWithoutStockBalanceInput>
  }

  export type OutletCreateWithoutStockBalancesInput = {
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockMovements?: StockMovementCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutOutletInput
    settings?: SettingCreateNestedManyWithoutOutletInput
    tables?: TableCreateNestedManyWithoutOutletInput
    stations?: StationCreateNestedManyWithoutOutletInput
    reservations?: ReservationCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistCreateNestedManyWithoutOutletInput
  }

  export type OutletUncheckedCreateWithoutStockBalancesInput = {
    id?: number
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutOutletInput
    settings?: SettingUncheckedCreateNestedManyWithoutOutletInput
    tables?: TableUncheckedCreateNestedManyWithoutOutletInput
    stations?: StationUncheckedCreateNestedManyWithoutOutletInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistUncheckedCreateNestedManyWithoutOutletInput
  }

  export type OutletCreateOrConnectWithoutStockBalancesInput = {
    where: OutletWhereUniqueInput
    create: XOR<OutletCreateWithoutStockBalancesInput, OutletUncheckedCreateWithoutStockBalancesInput>
  }

  export type ItemUpsertWithoutStockBalanceInput = {
    update: XOR<ItemUpdateWithoutStockBalanceInput, ItemUncheckedUpdateWithoutStockBalanceInput>
    create: XOR<ItemCreateWithoutStockBalanceInput, ItemUncheckedCreateWithoutStockBalanceInput>
    where?: ItemWhereInput
  }

  export type ItemUpdateToOneWithWhereWithoutStockBalanceInput = {
    where?: ItemWhereInput
    data: XOR<ItemUpdateWithoutStockBalanceInput, ItemUncheckedUpdateWithoutStockBalanceInput>
  }

  export type ItemUpdateWithoutStockBalanceInput = {
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    category?: CategoryUpdateOneRequiredWithoutItemsNestedInput
    supplier?: SupplierUpdateOneRequiredWithoutItemsNestedInput
    stockMovements?: StockMovementUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutItemNestedInput
    recipes?: RecipeUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUpdateManyWithoutItemNestedInput
  }

  export type ItemUncheckedUpdateWithoutStockBalanceInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: IntFieldUpdateOperationsInput | number
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    supplierId?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockMovements?: StockMovementUncheckedUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutItemNestedInput
    recipes?: RecipeUncheckedUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type OutletUpsertWithoutStockBalancesInput = {
    update: XOR<OutletUpdateWithoutStockBalancesInput, OutletUncheckedUpdateWithoutStockBalancesInput>
    create: XOR<OutletCreateWithoutStockBalancesInput, OutletUncheckedCreateWithoutStockBalancesInput>
    where?: OutletWhereInput
  }

  export type OutletUpdateToOneWithWhereWithoutStockBalancesInput = {
    where?: OutletWhereInput
    data: XOR<OutletUpdateWithoutStockBalancesInput, OutletUncheckedUpdateWithoutStockBalancesInput>
  }

  export type OutletUpdateWithoutStockBalancesInput = {
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockMovements?: StockMovementUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutOutletNestedInput
    settings?: SettingUpdateManyWithoutOutletNestedInput
    tables?: TableUpdateManyWithoutOutletNestedInput
    stations?: StationUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUpdateManyWithoutOutletNestedInput
  }

  export type OutletUncheckedUpdateWithoutStockBalancesInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockMovements?: StockMovementUncheckedUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutOutletNestedInput
    settings?: SettingUncheckedUpdateManyWithoutOutletNestedInput
    tables?: TableUncheckedUpdateManyWithoutOutletNestedInput
    stations?: StationUncheckedUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUncheckedUpdateManyWithoutOutletNestedInput
  }

  export type ItemCreateWithoutStockReceiptsInput = {
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    category: CategoryCreateNestedOneWithoutItemsInput
    supplier: SupplierCreateNestedOneWithoutItemsInput
    stockBalance?: StockBalanceCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutItemInput
    recipes?: RecipeCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemCreateNestedManyWithoutItemInput
  }

  export type ItemUncheckedCreateWithoutStockReceiptsInput = {
    id?: number
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    categoryId: number
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    supplierId: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalance?: StockBalanceUncheckedCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutItemInput
    recipes?: RecipeUncheckedCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemCreateOrConnectWithoutStockReceiptsInput = {
    where: ItemWhereUniqueInput
    create: XOR<ItemCreateWithoutStockReceiptsInput, ItemUncheckedCreateWithoutStockReceiptsInput>
  }

  export type OutletCreateWithoutStockReceiptsInput = {
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceCreateNestedManyWithoutOutletInput
    stockMovements?: StockMovementCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutOutletInput
    settings?: SettingCreateNestedManyWithoutOutletInput
    tables?: TableCreateNestedManyWithoutOutletInput
    stations?: StationCreateNestedManyWithoutOutletInput
    reservations?: ReservationCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistCreateNestedManyWithoutOutletInput
  }

  export type OutletUncheckedCreateWithoutStockReceiptsInput = {
    id?: number
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceUncheckedCreateNestedManyWithoutOutletInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutOutletInput
    settings?: SettingUncheckedCreateNestedManyWithoutOutletInput
    tables?: TableUncheckedCreateNestedManyWithoutOutletInput
    stations?: StationUncheckedCreateNestedManyWithoutOutletInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistUncheckedCreateNestedManyWithoutOutletInput
  }

  export type OutletCreateOrConnectWithoutStockReceiptsInput = {
    where: OutletWhereUniqueInput
    create: XOR<OutletCreateWithoutStockReceiptsInput, OutletUncheckedCreateWithoutStockReceiptsInput>
  }

  export type ItemUpsertWithoutStockReceiptsInput = {
    update: XOR<ItemUpdateWithoutStockReceiptsInput, ItemUncheckedUpdateWithoutStockReceiptsInput>
    create: XOR<ItemCreateWithoutStockReceiptsInput, ItemUncheckedCreateWithoutStockReceiptsInput>
    where?: ItemWhereInput
  }

  export type ItemUpdateToOneWithWhereWithoutStockReceiptsInput = {
    where?: ItemWhereInput
    data: XOR<ItemUpdateWithoutStockReceiptsInput, ItemUncheckedUpdateWithoutStockReceiptsInput>
  }

  export type ItemUpdateWithoutStockReceiptsInput = {
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    category?: CategoryUpdateOneRequiredWithoutItemsNestedInput
    supplier?: SupplierUpdateOneRequiredWithoutItemsNestedInput
    stockBalance?: StockBalanceUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutItemNestedInput
    recipes?: RecipeUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUpdateManyWithoutItemNestedInput
  }

  export type ItemUncheckedUpdateWithoutStockReceiptsInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: IntFieldUpdateOperationsInput | number
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    supplierId?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalance?: StockBalanceUncheckedUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutItemNestedInput
    recipes?: RecipeUncheckedUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type OutletUpsertWithoutStockReceiptsInput = {
    update: XOR<OutletUpdateWithoutStockReceiptsInput, OutletUncheckedUpdateWithoutStockReceiptsInput>
    create: XOR<OutletCreateWithoutStockReceiptsInput, OutletUncheckedCreateWithoutStockReceiptsInput>
    where?: OutletWhereInput
  }

  export type OutletUpdateToOneWithWhereWithoutStockReceiptsInput = {
    where?: OutletWhereInput
    data: XOR<OutletUpdateWithoutStockReceiptsInput, OutletUncheckedUpdateWithoutStockReceiptsInput>
  }

  export type OutletUpdateWithoutStockReceiptsInput = {
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUpdateManyWithoutOutletNestedInput
    stockMovements?: StockMovementUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutOutletNestedInput
    settings?: SettingUpdateManyWithoutOutletNestedInput
    tables?: TableUpdateManyWithoutOutletNestedInput
    stations?: StationUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUpdateManyWithoutOutletNestedInput
  }

  export type OutletUncheckedUpdateWithoutStockReceiptsInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUncheckedUpdateManyWithoutOutletNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutOutletNestedInput
    settings?: SettingUncheckedUpdateManyWithoutOutletNestedInput
    tables?: TableUncheckedUpdateManyWithoutOutletNestedInput
    stations?: StationUncheckedUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUncheckedUpdateManyWithoutOutletNestedInput
  }

  export type ItemCreateWithoutStockMovementsInput = {
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    category: CategoryCreateNestedOneWithoutItemsInput
    supplier: SupplierCreateNestedOneWithoutItemsInput
    stockBalance?: StockBalanceCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutItemInput
    recipes?: RecipeCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemCreateNestedManyWithoutItemInput
  }

  export type ItemUncheckedCreateWithoutStockMovementsInput = {
    id?: number
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    categoryId: number
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    supplierId: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalance?: StockBalanceUncheckedCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutItemInput
    recipes?: RecipeUncheckedCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemCreateOrConnectWithoutStockMovementsInput = {
    where: ItemWhereUniqueInput
    create: XOR<ItemCreateWithoutStockMovementsInput, ItemUncheckedCreateWithoutStockMovementsInput>
  }

  export type OutletCreateWithoutStockMovementsInput = {
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutOutletInput
    settings?: SettingCreateNestedManyWithoutOutletInput
    tables?: TableCreateNestedManyWithoutOutletInput
    stations?: StationCreateNestedManyWithoutOutletInput
    reservations?: ReservationCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistCreateNestedManyWithoutOutletInput
  }

  export type OutletUncheckedCreateWithoutStockMovementsInput = {
    id?: number
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceUncheckedCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutOutletInput
    settings?: SettingUncheckedCreateNestedManyWithoutOutletInput
    tables?: TableUncheckedCreateNestedManyWithoutOutletInput
    stations?: StationUncheckedCreateNestedManyWithoutOutletInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistUncheckedCreateNestedManyWithoutOutletInput
  }

  export type OutletCreateOrConnectWithoutStockMovementsInput = {
    where: OutletWhereUniqueInput
    create: XOR<OutletCreateWithoutStockMovementsInput, OutletUncheckedCreateWithoutStockMovementsInput>
  }

  export type ItemUpsertWithoutStockMovementsInput = {
    update: XOR<ItemUpdateWithoutStockMovementsInput, ItemUncheckedUpdateWithoutStockMovementsInput>
    create: XOR<ItemCreateWithoutStockMovementsInput, ItemUncheckedCreateWithoutStockMovementsInput>
    where?: ItemWhereInput
  }

  export type ItemUpdateToOneWithWhereWithoutStockMovementsInput = {
    where?: ItemWhereInput
    data: XOR<ItemUpdateWithoutStockMovementsInput, ItemUncheckedUpdateWithoutStockMovementsInput>
  }

  export type ItemUpdateWithoutStockMovementsInput = {
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    category?: CategoryUpdateOneRequiredWithoutItemsNestedInput
    supplier?: SupplierUpdateOneRequiredWithoutItemsNestedInput
    stockBalance?: StockBalanceUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutItemNestedInput
    recipes?: RecipeUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUpdateManyWithoutItemNestedInput
  }

  export type ItemUncheckedUpdateWithoutStockMovementsInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: IntFieldUpdateOperationsInput | number
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    supplierId?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalance?: StockBalanceUncheckedUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutItemNestedInput
    recipes?: RecipeUncheckedUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type OutletUpsertWithoutStockMovementsInput = {
    update: XOR<OutletUpdateWithoutStockMovementsInput, OutletUncheckedUpdateWithoutStockMovementsInput>
    create: XOR<OutletCreateWithoutStockMovementsInput, OutletUncheckedCreateWithoutStockMovementsInput>
    where?: OutletWhereInput
  }

  export type OutletUpdateToOneWithWhereWithoutStockMovementsInput = {
    where?: OutletWhereInput
    data: XOR<OutletUpdateWithoutStockMovementsInput, OutletUncheckedUpdateWithoutStockMovementsInput>
  }

  export type OutletUpdateWithoutStockMovementsInput = {
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutOutletNestedInput
    settings?: SettingUpdateManyWithoutOutletNestedInput
    tables?: TableUpdateManyWithoutOutletNestedInput
    stations?: StationUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUpdateManyWithoutOutletNestedInput
  }

  export type OutletUncheckedUpdateWithoutStockMovementsInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUncheckedUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutOutletNestedInput
    settings?: SettingUncheckedUpdateManyWithoutOutletNestedInput
    tables?: TableUncheckedUpdateManyWithoutOutletNestedInput
    stations?: StationUncheckedUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUncheckedUpdateManyWithoutOutletNestedInput
  }

  export type ItemCreateWithoutStockSnapshotsInput = {
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    category: CategoryCreateNestedOneWithoutItemsInput
    supplier: SupplierCreateNestedOneWithoutItemsInput
    stockBalance?: StockBalanceCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutItemInput
    recipes?: RecipeCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemCreateNestedManyWithoutItemInput
  }

  export type ItemUncheckedCreateWithoutStockSnapshotsInput = {
    id?: number
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    categoryId: number
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    supplierId: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalance?: StockBalanceUncheckedCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutItemInput
    recipes?: RecipeUncheckedCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemCreateOrConnectWithoutStockSnapshotsInput = {
    where: ItemWhereUniqueInput
    create: XOR<ItemCreateWithoutStockSnapshotsInput, ItemUncheckedCreateWithoutStockSnapshotsInput>
  }

  export type OutletCreateWithoutStockSnapshotsInput = {
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceCreateNestedManyWithoutOutletInput
    stockMovements?: StockMovementCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutOutletInput
    settings?: SettingCreateNestedManyWithoutOutletInput
    tables?: TableCreateNestedManyWithoutOutletInput
    stations?: StationCreateNestedManyWithoutOutletInput
    reservations?: ReservationCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistCreateNestedManyWithoutOutletInput
  }

  export type OutletUncheckedCreateWithoutStockSnapshotsInput = {
    id?: number
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceUncheckedCreateNestedManyWithoutOutletInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutOutletInput
    settings?: SettingUncheckedCreateNestedManyWithoutOutletInput
    tables?: TableUncheckedCreateNestedManyWithoutOutletInput
    stations?: StationUncheckedCreateNestedManyWithoutOutletInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistUncheckedCreateNestedManyWithoutOutletInput
  }

  export type OutletCreateOrConnectWithoutStockSnapshotsInput = {
    where: OutletWhereUniqueInput
    create: XOR<OutletCreateWithoutStockSnapshotsInput, OutletUncheckedCreateWithoutStockSnapshotsInput>
  }

  export type ItemUpsertWithoutStockSnapshotsInput = {
    update: XOR<ItemUpdateWithoutStockSnapshotsInput, ItemUncheckedUpdateWithoutStockSnapshotsInput>
    create: XOR<ItemCreateWithoutStockSnapshotsInput, ItemUncheckedCreateWithoutStockSnapshotsInput>
    where?: ItemWhereInput
  }

  export type ItemUpdateToOneWithWhereWithoutStockSnapshotsInput = {
    where?: ItemWhereInput
    data: XOR<ItemUpdateWithoutStockSnapshotsInput, ItemUncheckedUpdateWithoutStockSnapshotsInput>
  }

  export type ItemUpdateWithoutStockSnapshotsInput = {
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    category?: CategoryUpdateOneRequiredWithoutItemsNestedInput
    supplier?: SupplierUpdateOneRequiredWithoutItemsNestedInput
    stockBalance?: StockBalanceUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutItemNestedInput
    recipes?: RecipeUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUpdateManyWithoutItemNestedInput
  }

  export type ItemUncheckedUpdateWithoutStockSnapshotsInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: IntFieldUpdateOperationsInput | number
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    supplierId?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalance?: StockBalanceUncheckedUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutItemNestedInput
    recipes?: RecipeUncheckedUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type OutletUpsertWithoutStockSnapshotsInput = {
    update: XOR<OutletUpdateWithoutStockSnapshotsInput, OutletUncheckedUpdateWithoutStockSnapshotsInput>
    create: XOR<OutletCreateWithoutStockSnapshotsInput, OutletUncheckedCreateWithoutStockSnapshotsInput>
    where?: OutletWhereInput
  }

  export type OutletUpdateToOneWithWhereWithoutStockSnapshotsInput = {
    where?: OutletWhereInput
    data: XOR<OutletUpdateWithoutStockSnapshotsInput, OutletUncheckedUpdateWithoutStockSnapshotsInput>
  }

  export type OutletUpdateWithoutStockSnapshotsInput = {
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUpdateManyWithoutOutletNestedInput
    stockMovements?: StockMovementUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutOutletNestedInput
    settings?: SettingUpdateManyWithoutOutletNestedInput
    tables?: TableUpdateManyWithoutOutletNestedInput
    stations?: StationUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUpdateManyWithoutOutletNestedInput
  }

  export type OutletUncheckedUpdateWithoutStockSnapshotsInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUncheckedUpdateManyWithoutOutletNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutOutletNestedInput
    settings?: SettingUncheckedUpdateManyWithoutOutletNestedInput
    tables?: TableUncheckedUpdateManyWithoutOutletNestedInput
    stations?: StationUncheckedUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUncheckedUpdateManyWithoutOutletNestedInput
  }

  export type MenuCategoryCreateWithoutMenuProfileInput = {
    name: string
    imageURL?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuItems?: MenuItemCreateNestedManyWithoutMenuCategoryInput
  }

  export type MenuCategoryUncheckedCreateWithoutMenuProfileInput = {
    id?: number
    name: string
    imageURL?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuItems?: MenuItemUncheckedCreateNestedManyWithoutMenuCategoryInput
  }

  export type MenuCategoryCreateOrConnectWithoutMenuProfileInput = {
    where: MenuCategoryWhereUniqueInput
    create: XOR<MenuCategoryCreateWithoutMenuProfileInput, MenuCategoryUncheckedCreateWithoutMenuProfileInput>
  }

  export type MenuCategoryCreateManyMenuProfileInputEnvelope = {
    data: MenuCategoryCreateManyMenuProfileInput | MenuCategoryCreateManyMenuProfileInput[]
    skipDuplicates?: boolean
  }

  export type MenuCategoryUpsertWithWhereUniqueWithoutMenuProfileInput = {
    where: MenuCategoryWhereUniqueInput
    update: XOR<MenuCategoryUpdateWithoutMenuProfileInput, MenuCategoryUncheckedUpdateWithoutMenuProfileInput>
    create: XOR<MenuCategoryCreateWithoutMenuProfileInput, MenuCategoryUncheckedCreateWithoutMenuProfileInput>
  }

  export type MenuCategoryUpdateWithWhereUniqueWithoutMenuProfileInput = {
    where: MenuCategoryWhereUniqueInput
    data: XOR<MenuCategoryUpdateWithoutMenuProfileInput, MenuCategoryUncheckedUpdateWithoutMenuProfileInput>
  }

  export type MenuCategoryUpdateManyWithWhereWithoutMenuProfileInput = {
    where: MenuCategoryScalarWhereInput
    data: XOR<MenuCategoryUpdateManyMutationInput, MenuCategoryUncheckedUpdateManyWithoutMenuProfileInput>
  }

  export type MenuCategoryScalarWhereInput = {
    AND?: MenuCategoryScalarWhereInput | MenuCategoryScalarWhereInput[]
    OR?: MenuCategoryScalarWhereInput[]
    NOT?: MenuCategoryScalarWhereInput | MenuCategoryScalarWhereInput[]
    id?: IntFilter<"MenuCategory"> | number
    name?: StringFilter<"MenuCategory"> | string
    menuProfileID?: IntFilter<"MenuCategory"> | number
    imageURL?: StringNullableFilter<"MenuCategory"> | string | null
    deleted?: BoolFilter<"MenuCategory"> | boolean
    deletedAt?: DateTimeNullableFilter<"MenuCategory"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"MenuCategory"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"MenuCategory"> | Date | string | null
    version?: IntNullableFilter<"MenuCategory"> | number | null
  }

  export type MenuProfileCreateWithoutMenuCategoriesInput = {
    name: string
    dateStart: string
    dateEnd: string
    timeStart: string
    timeEnd: string
    isMonday: boolean
    isTuesday: boolean
    isWednesday: boolean
    isThursday: boolean
    isFriday: boolean
    isSaturday: boolean
    isSunday: boolean
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type MenuProfileUncheckedCreateWithoutMenuCategoriesInput = {
    id?: number
    name: string
    dateStart: string
    dateEnd: string
    timeStart: string
    timeEnd: string
    isMonday: boolean
    isTuesday: boolean
    isWednesday: boolean
    isThursday: boolean
    isFriday: boolean
    isSaturday: boolean
    isSunday: boolean
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type MenuProfileCreateOrConnectWithoutMenuCategoriesInput = {
    where: MenuProfileWhereUniqueInput
    create: XOR<MenuProfileCreateWithoutMenuCategoriesInput, MenuProfileUncheckedCreateWithoutMenuCategoriesInput>
  }

  export type MenuItemCreateWithoutMenuCategoryInput = {
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuItemModifierGroups?: MenuItemModifierGroupCreateNestedManyWithoutMenuItemInput
    recipes?: RecipeCreateNestedManyWithoutMenuItemInput
  }

  export type MenuItemUncheckedCreateWithoutMenuCategoryInput = {
    id?: number
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuItemModifierGroups?: MenuItemModifierGroupUncheckedCreateNestedManyWithoutMenuItemInput
    recipes?: RecipeUncheckedCreateNestedManyWithoutMenuItemInput
  }

  export type MenuItemCreateOrConnectWithoutMenuCategoryInput = {
    where: MenuItemWhereUniqueInput
    create: XOR<MenuItemCreateWithoutMenuCategoryInput, MenuItemUncheckedCreateWithoutMenuCategoryInput>
  }

  export type MenuItemCreateManyMenuCategoryInputEnvelope = {
    data: MenuItemCreateManyMenuCategoryInput | MenuItemCreateManyMenuCategoryInput[]
    skipDuplicates?: boolean
  }

  export type MenuProfileUpsertWithoutMenuCategoriesInput = {
    update: XOR<MenuProfileUpdateWithoutMenuCategoriesInput, MenuProfileUncheckedUpdateWithoutMenuCategoriesInput>
    create: XOR<MenuProfileCreateWithoutMenuCategoriesInput, MenuProfileUncheckedCreateWithoutMenuCategoriesInput>
    where?: MenuProfileWhereInput
  }

  export type MenuProfileUpdateToOneWithWhereWithoutMenuCategoriesInput = {
    where?: MenuProfileWhereInput
    data: XOR<MenuProfileUpdateWithoutMenuCategoriesInput, MenuProfileUncheckedUpdateWithoutMenuCategoriesInput>
  }

  export type MenuProfileUpdateWithoutMenuCategoriesInput = {
    name?: StringFieldUpdateOperationsInput | string
    dateStart?: StringFieldUpdateOperationsInput | string
    dateEnd?: StringFieldUpdateOperationsInput | string
    timeStart?: StringFieldUpdateOperationsInput | string
    timeEnd?: StringFieldUpdateOperationsInput | string
    isMonday?: BoolFieldUpdateOperationsInput | boolean
    isTuesday?: BoolFieldUpdateOperationsInput | boolean
    isWednesday?: BoolFieldUpdateOperationsInput | boolean
    isThursday?: BoolFieldUpdateOperationsInput | boolean
    isFriday?: BoolFieldUpdateOperationsInput | boolean
    isSaturday?: BoolFieldUpdateOperationsInput | boolean
    isSunday?: BoolFieldUpdateOperationsInput | boolean
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuProfileUncheckedUpdateWithoutMenuCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    dateStart?: StringFieldUpdateOperationsInput | string
    dateEnd?: StringFieldUpdateOperationsInput | string
    timeStart?: StringFieldUpdateOperationsInput | string
    timeEnd?: StringFieldUpdateOperationsInput | string
    isMonday?: BoolFieldUpdateOperationsInput | boolean
    isTuesday?: BoolFieldUpdateOperationsInput | boolean
    isWednesday?: BoolFieldUpdateOperationsInput | boolean
    isThursday?: BoolFieldUpdateOperationsInput | boolean
    isFriday?: BoolFieldUpdateOperationsInput | boolean
    isSaturday?: BoolFieldUpdateOperationsInput | boolean
    isSunday?: BoolFieldUpdateOperationsInput | boolean
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuItemUpsertWithWhereUniqueWithoutMenuCategoryInput = {
    where: MenuItemWhereUniqueInput
    update: XOR<MenuItemUpdateWithoutMenuCategoryInput, MenuItemUncheckedUpdateWithoutMenuCategoryInput>
    create: XOR<MenuItemCreateWithoutMenuCategoryInput, MenuItemUncheckedCreateWithoutMenuCategoryInput>
  }

  export type MenuItemUpdateWithWhereUniqueWithoutMenuCategoryInput = {
    where: MenuItemWhereUniqueInput
    data: XOR<MenuItemUpdateWithoutMenuCategoryInput, MenuItemUncheckedUpdateWithoutMenuCategoryInput>
  }

  export type MenuItemUpdateManyWithWhereWithoutMenuCategoryInput = {
    where: MenuItemScalarWhereInput
    data: XOR<MenuItemUpdateManyMutationInput, MenuItemUncheckedUpdateManyWithoutMenuCategoryInput>
  }

  export type MenuItemScalarWhereInput = {
    AND?: MenuItemScalarWhereInput | MenuItemScalarWhereInput[]
    OR?: MenuItemScalarWhereInput[]
    NOT?: MenuItemScalarWhereInput | MenuItemScalarWhereInput[]
    id?: IntFilter<"MenuItem"> | number
    name?: StringFilter<"MenuItem"> | string
    itemID?: IntFilter<"MenuItem"> | number
    itemCode?: StringFilter<"MenuItem"> | string
    imageURL?: StringNullableFilter<"MenuItem"> | string | null
    price?: DecimalFilter<"MenuItem"> | Decimal | DecimalJsLike | number | string
    sequence?: IntFilter<"MenuItem"> | number
    menuCategoryID?: IntFilter<"MenuItem"> | number
    deleted?: BoolFilter<"MenuItem"> | boolean
    deletedAt?: DateTimeNullableFilter<"MenuItem"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"MenuItem"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"MenuItem"> | Date | string | null
    version?: IntNullableFilter<"MenuItem"> | number | null
  }

  export type MenuCategoryCreateWithoutMenuItemsInput = {
    name: string
    imageURL?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuProfile: MenuProfileCreateNestedOneWithoutMenuCategoriesInput
  }

  export type MenuCategoryUncheckedCreateWithoutMenuItemsInput = {
    id?: number
    name: string
    menuProfileID: number
    imageURL?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type MenuCategoryCreateOrConnectWithoutMenuItemsInput = {
    where: MenuCategoryWhereUniqueInput
    create: XOR<MenuCategoryCreateWithoutMenuItemsInput, MenuCategoryUncheckedCreateWithoutMenuItemsInput>
  }

  export type MenuItemModifierGroupCreateWithoutMenuItemInput = {
    name: string
    minSelection: number
    maxSelection: number
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    freeModifierLimit?: number | null
    menuItemModifiers?: MenuItemModifierCreateNestedManyWithoutMenuItemModifierGroupInput
  }

  export type MenuItemModifierGroupUncheckedCreateWithoutMenuItemInput = {
    id?: number
    name: string
    minSelection: number
    maxSelection: number
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    freeModifierLimit?: number | null
    menuItemModifiers?: MenuItemModifierUncheckedCreateNestedManyWithoutMenuItemModifierGroupInput
  }

  export type MenuItemModifierGroupCreateOrConnectWithoutMenuItemInput = {
    where: MenuItemModifierGroupWhereUniqueInput
    create: XOR<MenuItemModifierGroupCreateWithoutMenuItemInput, MenuItemModifierGroupUncheckedCreateWithoutMenuItemInput>
  }

  export type MenuItemModifierGroupCreateManyMenuItemInputEnvelope = {
    data: MenuItemModifierGroupCreateManyMenuItemInput | MenuItemModifierGroupCreateManyMenuItemInput[]
    skipDuplicates?: boolean
  }

  export type RecipeCreateWithoutMenuItemInput = {
    quantity: number
    unit: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    batchYield?: number | null
    menuItemModifier?: MenuItemModifierCreateNestedOneWithoutRecipesInput
    item: ItemCreateNestedOneWithoutRecipesInput
  }

  export type RecipeUncheckedCreateWithoutMenuItemInput = {
    id?: number
    itemId: number
    quantity: number
    unit: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    batchYield?: number | null
    menuItemModifierId?: number | null
  }

  export type RecipeCreateOrConnectWithoutMenuItemInput = {
    where: RecipeWhereUniqueInput
    create: XOR<RecipeCreateWithoutMenuItemInput, RecipeUncheckedCreateWithoutMenuItemInput>
  }

  export type RecipeCreateManyMenuItemInputEnvelope = {
    data: RecipeCreateManyMenuItemInput | RecipeCreateManyMenuItemInput[]
    skipDuplicates?: boolean
  }

  export type MenuCategoryUpsertWithoutMenuItemsInput = {
    update: XOR<MenuCategoryUpdateWithoutMenuItemsInput, MenuCategoryUncheckedUpdateWithoutMenuItemsInput>
    create: XOR<MenuCategoryCreateWithoutMenuItemsInput, MenuCategoryUncheckedCreateWithoutMenuItemsInput>
    where?: MenuCategoryWhereInput
  }

  export type MenuCategoryUpdateToOneWithWhereWithoutMenuItemsInput = {
    where?: MenuCategoryWhereInput
    data: XOR<MenuCategoryUpdateWithoutMenuItemsInput, MenuCategoryUncheckedUpdateWithoutMenuItemsInput>
  }

  export type MenuCategoryUpdateWithoutMenuItemsInput = {
    name?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuProfile?: MenuProfileUpdateOneRequiredWithoutMenuCategoriesNestedInput
  }

  export type MenuCategoryUncheckedUpdateWithoutMenuItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    menuProfileID?: IntFieldUpdateOperationsInput | number
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuItemModifierGroupUpsertWithWhereUniqueWithoutMenuItemInput = {
    where: MenuItemModifierGroupWhereUniqueInput
    update: XOR<MenuItemModifierGroupUpdateWithoutMenuItemInput, MenuItemModifierGroupUncheckedUpdateWithoutMenuItemInput>
    create: XOR<MenuItemModifierGroupCreateWithoutMenuItemInput, MenuItemModifierGroupUncheckedCreateWithoutMenuItemInput>
  }

  export type MenuItemModifierGroupUpdateWithWhereUniqueWithoutMenuItemInput = {
    where: MenuItemModifierGroupWhereUniqueInput
    data: XOR<MenuItemModifierGroupUpdateWithoutMenuItemInput, MenuItemModifierGroupUncheckedUpdateWithoutMenuItemInput>
  }

  export type MenuItemModifierGroupUpdateManyWithWhereWithoutMenuItemInput = {
    where: MenuItemModifierGroupScalarWhereInput
    data: XOR<MenuItemModifierGroupUpdateManyMutationInput, MenuItemModifierGroupUncheckedUpdateManyWithoutMenuItemInput>
  }

  export type MenuItemModifierGroupScalarWhereInput = {
    AND?: MenuItemModifierGroupScalarWhereInput | MenuItemModifierGroupScalarWhereInput[]
    OR?: MenuItemModifierGroupScalarWhereInput[]
    NOT?: MenuItemModifierGroupScalarWhereInput | MenuItemModifierGroupScalarWhereInput[]
    id?: IntFilter<"MenuItemModifierGroup"> | number
    name?: StringFilter<"MenuItemModifierGroup"> | string
    minSelection?: IntFilter<"MenuItemModifierGroup"> | number
    maxSelection?: IntFilter<"MenuItemModifierGroup"> | number
    sequence?: IntFilter<"MenuItemModifierGroup"> | number
    menuItemID?: IntFilter<"MenuItemModifierGroup"> | number
    deleted?: BoolFilter<"MenuItemModifierGroup"> | boolean
    deletedAt?: DateTimeNullableFilter<"MenuItemModifierGroup"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"MenuItemModifierGroup"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"MenuItemModifierGroup"> | Date | string | null
    version?: IntNullableFilter<"MenuItemModifierGroup"> | number | null
    freeModifierLimit?: IntNullableFilter<"MenuItemModifierGroup"> | number | null
  }

  export type RecipeUpsertWithWhereUniqueWithoutMenuItemInput = {
    where: RecipeWhereUniqueInput
    update: XOR<RecipeUpdateWithoutMenuItemInput, RecipeUncheckedUpdateWithoutMenuItemInput>
    create: XOR<RecipeCreateWithoutMenuItemInput, RecipeUncheckedCreateWithoutMenuItemInput>
  }

  export type RecipeUpdateWithWhereUniqueWithoutMenuItemInput = {
    where: RecipeWhereUniqueInput
    data: XOR<RecipeUpdateWithoutMenuItemInput, RecipeUncheckedUpdateWithoutMenuItemInput>
  }

  export type RecipeUpdateManyWithWhereWithoutMenuItemInput = {
    where: RecipeScalarWhereInput
    data: XOR<RecipeUpdateManyMutationInput, RecipeUncheckedUpdateManyWithoutMenuItemInput>
  }

  export type MenuItemCreateWithoutMenuItemModifierGroupsInput = {
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuCategory: MenuCategoryCreateNestedOneWithoutMenuItemsInput
    recipes?: RecipeCreateNestedManyWithoutMenuItemInput
  }

  export type MenuItemUncheckedCreateWithoutMenuItemModifierGroupsInput = {
    id?: number
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    sequence: number
    menuCategoryID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    recipes?: RecipeUncheckedCreateNestedManyWithoutMenuItemInput
  }

  export type MenuItemCreateOrConnectWithoutMenuItemModifierGroupsInput = {
    where: MenuItemWhereUniqueInput
    create: XOR<MenuItemCreateWithoutMenuItemModifierGroupsInput, MenuItemUncheckedCreateWithoutMenuItemModifierGroupsInput>
  }

  export type MenuItemModifierCreateWithoutMenuItemModifierGroupInput = {
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    defaultSelectionQty: number
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    salesItemModifiers?: SalesItemModifierCreateNestedManyWithoutMenuItemModifierInput
    recipes?: RecipeCreateNestedManyWithoutMenuItemModifierInput
  }

  export type MenuItemModifierUncheckedCreateWithoutMenuItemModifierGroupInput = {
    id?: number
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    defaultSelectionQty: number
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    salesItemModifiers?: SalesItemModifierUncheckedCreateNestedManyWithoutMenuItemModifierInput
    recipes?: RecipeUncheckedCreateNestedManyWithoutMenuItemModifierInput
  }

  export type MenuItemModifierCreateOrConnectWithoutMenuItemModifierGroupInput = {
    where: MenuItemModifierWhereUniqueInput
    create: XOR<MenuItemModifierCreateWithoutMenuItemModifierGroupInput, MenuItemModifierUncheckedCreateWithoutMenuItemModifierGroupInput>
  }

  export type MenuItemModifierCreateManyMenuItemModifierGroupInputEnvelope = {
    data: MenuItemModifierCreateManyMenuItemModifierGroupInput | MenuItemModifierCreateManyMenuItemModifierGroupInput[]
    skipDuplicates?: boolean
  }

  export type MenuItemUpsertWithoutMenuItemModifierGroupsInput = {
    update: XOR<MenuItemUpdateWithoutMenuItemModifierGroupsInput, MenuItemUncheckedUpdateWithoutMenuItemModifierGroupsInput>
    create: XOR<MenuItemCreateWithoutMenuItemModifierGroupsInput, MenuItemUncheckedCreateWithoutMenuItemModifierGroupsInput>
    where?: MenuItemWhereInput
  }

  export type MenuItemUpdateToOneWithWhereWithoutMenuItemModifierGroupsInput = {
    where?: MenuItemWhereInput
    data: XOR<MenuItemUpdateWithoutMenuItemModifierGroupsInput, MenuItemUncheckedUpdateWithoutMenuItemModifierGroupsInput>
  }

  export type MenuItemUpdateWithoutMenuItemModifierGroupsInput = {
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuCategory?: MenuCategoryUpdateOneRequiredWithoutMenuItemsNestedInput
    recipes?: RecipeUpdateManyWithoutMenuItemNestedInput
  }

  export type MenuItemUncheckedUpdateWithoutMenuItemModifierGroupsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sequence?: IntFieldUpdateOperationsInput | number
    menuCategoryID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    recipes?: RecipeUncheckedUpdateManyWithoutMenuItemNestedInput
  }

  export type MenuItemModifierUpsertWithWhereUniqueWithoutMenuItemModifierGroupInput = {
    where: MenuItemModifierWhereUniqueInput
    update: XOR<MenuItemModifierUpdateWithoutMenuItemModifierGroupInput, MenuItemModifierUncheckedUpdateWithoutMenuItemModifierGroupInput>
    create: XOR<MenuItemModifierCreateWithoutMenuItemModifierGroupInput, MenuItemModifierUncheckedCreateWithoutMenuItemModifierGroupInput>
  }

  export type MenuItemModifierUpdateWithWhereUniqueWithoutMenuItemModifierGroupInput = {
    where: MenuItemModifierWhereUniqueInput
    data: XOR<MenuItemModifierUpdateWithoutMenuItemModifierGroupInput, MenuItemModifierUncheckedUpdateWithoutMenuItemModifierGroupInput>
  }

  export type MenuItemModifierUpdateManyWithWhereWithoutMenuItemModifierGroupInput = {
    where: MenuItemModifierScalarWhereInput
    data: XOR<MenuItemModifierUpdateManyMutationInput, MenuItemModifierUncheckedUpdateManyWithoutMenuItemModifierGroupInput>
  }

  export type MenuItemModifierScalarWhereInput = {
    AND?: MenuItemModifierScalarWhereInput | MenuItemModifierScalarWhereInput[]
    OR?: MenuItemModifierScalarWhereInput[]
    NOT?: MenuItemModifierScalarWhereInput | MenuItemModifierScalarWhereInput[]
    id?: IntFilter<"MenuItemModifier"> | number
    name?: StringFilter<"MenuItemModifier"> | string
    itemID?: IntFilter<"MenuItemModifier"> | number
    itemCode?: StringFilter<"MenuItemModifier"> | string
    imageURL?: StringNullableFilter<"MenuItemModifier"> | string | null
    price?: DecimalFilter<"MenuItemModifier"> | Decimal | DecimalJsLike | number | string
    defaultSelectionQty?: IntFilter<"MenuItemModifier"> | number
    sequence?: IntFilter<"MenuItemModifier"> | number
    menuItemModifierGroupID?: IntFilter<"MenuItemModifier"> | number
    deleted?: BoolFilter<"MenuItemModifier"> | boolean
    deletedAt?: DateTimeNullableFilter<"MenuItemModifier"> | Date | string | null
    createdAt?: DateTimeNullableFilter<"MenuItemModifier"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"MenuItemModifier"> | Date | string | null
    version?: IntNullableFilter<"MenuItemModifier"> | number | null
  }

  export type MenuItemModifierGroupCreateWithoutMenuItemModifiersInput = {
    name: string
    minSelection: number
    maxSelection: number
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    freeModifierLimit?: number | null
    menuItem: MenuItemCreateNestedOneWithoutMenuItemModifierGroupsInput
  }

  export type MenuItemModifierGroupUncheckedCreateWithoutMenuItemModifiersInput = {
    id?: number
    name: string
    minSelection: number
    maxSelection: number
    sequence: number
    menuItemID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    freeModifierLimit?: number | null
  }

  export type MenuItemModifierGroupCreateOrConnectWithoutMenuItemModifiersInput = {
    where: MenuItemModifierGroupWhereUniqueInput
    create: XOR<MenuItemModifierGroupCreateWithoutMenuItemModifiersInput, MenuItemModifierGroupUncheckedCreateWithoutMenuItemModifiersInput>
  }

  export type SalesItemModifierCreateWithoutMenuItemModifierInput = {
    itemId?: number | null
    modifierName: string
    modifierPrice: Decimal | DecimalJsLike | number | string
    quantity?: number
    status?: $Enums.OrderStatus | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    salesItem: SalesItemCreateNestedOneWithoutSelectedModifiersInput
  }

  export type SalesItemModifierUncheckedCreateWithoutMenuItemModifierInput = {
    id?: number
    salesItemId: number
    itemId?: number | null
    modifierName: string
    modifierPrice: Decimal | DecimalJsLike | number | string
    quantity?: number
    status?: $Enums.OrderStatus | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SalesItemModifierCreateOrConnectWithoutMenuItemModifierInput = {
    where: SalesItemModifierWhereUniqueInput
    create: XOR<SalesItemModifierCreateWithoutMenuItemModifierInput, SalesItemModifierUncheckedCreateWithoutMenuItemModifierInput>
  }

  export type SalesItemModifierCreateManyMenuItemModifierInputEnvelope = {
    data: SalesItemModifierCreateManyMenuItemModifierInput | SalesItemModifierCreateManyMenuItemModifierInput[]
    skipDuplicates?: boolean
  }

  export type RecipeCreateWithoutMenuItemModifierInput = {
    quantity: number
    unit: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    batchYield?: number | null
    menuItem: MenuItemCreateNestedOneWithoutRecipesInput
    item: ItemCreateNestedOneWithoutRecipesInput
  }

  export type RecipeUncheckedCreateWithoutMenuItemModifierInput = {
    id?: number
    menuItemId: number
    itemId: number
    quantity: number
    unit: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    batchYield?: number | null
  }

  export type RecipeCreateOrConnectWithoutMenuItemModifierInput = {
    where: RecipeWhereUniqueInput
    create: XOR<RecipeCreateWithoutMenuItemModifierInput, RecipeUncheckedCreateWithoutMenuItemModifierInput>
  }

  export type RecipeCreateManyMenuItemModifierInputEnvelope = {
    data: RecipeCreateManyMenuItemModifierInput | RecipeCreateManyMenuItemModifierInput[]
    skipDuplicates?: boolean
  }

  export type MenuItemModifierGroupUpsertWithoutMenuItemModifiersInput = {
    update: XOR<MenuItemModifierGroupUpdateWithoutMenuItemModifiersInput, MenuItemModifierGroupUncheckedUpdateWithoutMenuItemModifiersInput>
    create: XOR<MenuItemModifierGroupCreateWithoutMenuItemModifiersInput, MenuItemModifierGroupUncheckedCreateWithoutMenuItemModifiersInput>
    where?: MenuItemModifierGroupWhereInput
  }

  export type MenuItemModifierGroupUpdateToOneWithWhereWithoutMenuItemModifiersInput = {
    where?: MenuItemModifierGroupWhereInput
    data: XOR<MenuItemModifierGroupUpdateWithoutMenuItemModifiersInput, MenuItemModifierGroupUncheckedUpdateWithoutMenuItemModifiersInput>
  }

  export type MenuItemModifierGroupUpdateWithoutMenuItemModifiersInput = {
    name?: StringFieldUpdateOperationsInput | string
    minSelection?: IntFieldUpdateOperationsInput | number
    maxSelection?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    freeModifierLimit?: NullableIntFieldUpdateOperationsInput | number | null
    menuItem?: MenuItemUpdateOneRequiredWithoutMenuItemModifierGroupsNestedInput
  }

  export type MenuItemModifierGroupUncheckedUpdateWithoutMenuItemModifiersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    minSelection?: IntFieldUpdateOperationsInput | number
    maxSelection?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    menuItemID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    freeModifierLimit?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesItemModifierUpsertWithWhereUniqueWithoutMenuItemModifierInput = {
    where: SalesItemModifierWhereUniqueInput
    update: XOR<SalesItemModifierUpdateWithoutMenuItemModifierInput, SalesItemModifierUncheckedUpdateWithoutMenuItemModifierInput>
    create: XOR<SalesItemModifierCreateWithoutMenuItemModifierInput, SalesItemModifierUncheckedCreateWithoutMenuItemModifierInput>
  }

  export type SalesItemModifierUpdateWithWhereUniqueWithoutMenuItemModifierInput = {
    where: SalesItemModifierWhereUniqueInput
    data: XOR<SalesItemModifierUpdateWithoutMenuItemModifierInput, SalesItemModifierUncheckedUpdateWithoutMenuItemModifierInput>
  }

  export type SalesItemModifierUpdateManyWithWhereWithoutMenuItemModifierInput = {
    where: SalesItemModifierScalarWhereInput
    data: XOR<SalesItemModifierUpdateManyMutationInput, SalesItemModifierUncheckedUpdateManyWithoutMenuItemModifierInput>
  }

  export type RecipeUpsertWithWhereUniqueWithoutMenuItemModifierInput = {
    where: RecipeWhereUniqueInput
    update: XOR<RecipeUpdateWithoutMenuItemModifierInput, RecipeUncheckedUpdateWithoutMenuItemModifierInput>
    create: XOR<RecipeCreateWithoutMenuItemModifierInput, RecipeUncheckedCreateWithoutMenuItemModifierInput>
  }

  export type RecipeUpdateWithWhereUniqueWithoutMenuItemModifierInput = {
    where: RecipeWhereUniqueInput
    data: XOR<RecipeUpdateWithoutMenuItemModifierInput, RecipeUncheckedUpdateWithoutMenuItemModifierInput>
  }

  export type RecipeUpdateManyWithWhereWithoutMenuItemModifierInput = {
    where: RecipeScalarWhereInput
    data: XOR<RecipeUpdateManyMutationInput, RecipeUncheckedUpdateManyWithoutMenuItemModifierInput>
  }

  export type OutletCreateWithoutTablesInput = {
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceCreateNestedManyWithoutOutletInput
    stockMovements?: StockMovementCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutOutletInput
    settings?: SettingCreateNestedManyWithoutOutletInput
    stations?: StationCreateNestedManyWithoutOutletInput
    reservations?: ReservationCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistCreateNestedManyWithoutOutletInput
  }

  export type OutletUncheckedCreateWithoutTablesInput = {
    id?: number
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceUncheckedCreateNestedManyWithoutOutletInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutOutletInput
    settings?: SettingUncheckedCreateNestedManyWithoutOutletInput
    stations?: StationUncheckedCreateNestedManyWithoutOutletInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistUncheckedCreateNestedManyWithoutOutletInput
  }

  export type OutletCreateOrConnectWithoutTablesInput = {
    where: OutletWhereUniqueInput
    create: XOR<OutletCreateWithoutTablesInput, OutletUncheckedCreateWithoutTablesInput>
  }

  export type SalesCreateWithoutTableInput = {
    outletId: number
    businessDate: Date | string
    salesType: string
    customerName?: string | null
    phoneNumber?: string | null
    billStreet?: string
    billCity?: string
    billState?: string
    billPostalCode?: string
    billCountry?: string
    shipStreet?: string
    shipCity?: string
    shipState?: string
    shipPostalCode?: string
    shipCountry?: string
    totalItemDiscountAmount?: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    profitAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    roundingAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    changeAmount?: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string
    completedSessionId?: number | null
    sessionId: number
    eodId: number
    salesQuotationId?: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    orderStatus?: string | null
    salesItems?: SalesItemCreateNestedManyWithoutSalesInput
    payments?: PaymentCreateNestedManyWithoutSalesInput
    registerLogs?: RegisterLogCreateNestedManyWithoutSalesInput
    customer?: CustomerCreateNestedOneWithoutSalesInput
  }

  export type SalesUncheckedCreateWithoutTableInput = {
    id?: number
    outletId: number
    businessDate: Date | string
    salesType: string
    customerName?: string | null
    customerId?: number | null
    phoneNumber?: string | null
    billStreet?: string
    billCity?: string
    billState?: string
    billPostalCode?: string
    billCountry?: string
    shipStreet?: string
    shipCity?: string
    shipState?: string
    shipPostalCode?: string
    shipCountry?: string
    totalItemDiscountAmount?: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    profitAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    roundingAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    changeAmount?: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string
    completedSessionId?: number | null
    sessionId: number
    eodId: number
    salesQuotationId?: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    orderStatus?: string | null
    salesItems?: SalesItemUncheckedCreateNestedManyWithoutSalesInput
    payments?: PaymentUncheckedCreateNestedManyWithoutSalesInput
    registerLogs?: RegisterLogUncheckedCreateNestedManyWithoutSalesInput
  }

  export type SalesCreateOrConnectWithoutTableInput = {
    where: SalesWhereUniqueInput
    create: XOR<SalesCreateWithoutTableInput, SalesUncheckedCreateWithoutTableInput>
  }

  export type SalesCreateManyTableInputEnvelope = {
    data: SalesCreateManyTableInput | SalesCreateManyTableInput[]
    skipDuplicates?: boolean
  }

  export type ReservationCreateWithoutTableInput = {
    dateTime: Date | string
    partySize: number
    status: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    outlet: OutletCreateNestedOneWithoutReservationsInput
    customer?: CustomerCreateNestedOneWithoutReservationsInput
  }

  export type ReservationUncheckedCreateWithoutTableInput = {
    id?: number
    outletId: number
    customerId?: number | null
    dateTime: Date | string
    partySize: number
    status: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type ReservationCreateOrConnectWithoutTableInput = {
    where: ReservationWhereUniqueInput
    create: XOR<ReservationCreateWithoutTableInput, ReservationUncheckedCreateWithoutTableInput>
  }

  export type ReservationCreateManyTableInputEnvelope = {
    data: ReservationCreateManyTableInput | ReservationCreateManyTableInput[]
    skipDuplicates?: boolean
  }

  export type OutletUpsertWithoutTablesInput = {
    update: XOR<OutletUpdateWithoutTablesInput, OutletUncheckedUpdateWithoutTablesInput>
    create: XOR<OutletCreateWithoutTablesInput, OutletUncheckedCreateWithoutTablesInput>
    where?: OutletWhereInput
  }

  export type OutletUpdateToOneWithWhereWithoutTablesInput = {
    where?: OutletWhereInput
    data: XOR<OutletUpdateWithoutTablesInput, OutletUncheckedUpdateWithoutTablesInput>
  }

  export type OutletUpdateWithoutTablesInput = {
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUpdateManyWithoutOutletNestedInput
    stockMovements?: StockMovementUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutOutletNestedInput
    settings?: SettingUpdateManyWithoutOutletNestedInput
    stations?: StationUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUpdateManyWithoutOutletNestedInput
  }

  export type OutletUncheckedUpdateWithoutTablesInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUncheckedUpdateManyWithoutOutletNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutOutletNestedInput
    settings?: SettingUncheckedUpdateManyWithoutOutletNestedInput
    stations?: StationUncheckedUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUncheckedUpdateManyWithoutOutletNestedInput
  }

  export type SalesUpsertWithWhereUniqueWithoutTableInput = {
    where: SalesWhereUniqueInput
    update: XOR<SalesUpdateWithoutTableInput, SalesUncheckedUpdateWithoutTableInput>
    create: XOR<SalesCreateWithoutTableInput, SalesUncheckedCreateWithoutTableInput>
  }

  export type SalesUpdateWithWhereUniqueWithoutTableInput = {
    where: SalesWhereUniqueInput
    data: XOR<SalesUpdateWithoutTableInput, SalesUncheckedUpdateWithoutTableInput>
  }

  export type SalesUpdateManyWithWhereWithoutTableInput = {
    where: SalesScalarWhereInput
    data: XOR<SalesUpdateManyMutationInput, SalesUncheckedUpdateManyWithoutTableInput>
  }

  export type ReservationUpsertWithWhereUniqueWithoutTableInput = {
    where: ReservationWhereUniqueInput
    update: XOR<ReservationUpdateWithoutTableInput, ReservationUncheckedUpdateWithoutTableInput>
    create: XOR<ReservationCreateWithoutTableInput, ReservationUncheckedCreateWithoutTableInput>
  }

  export type ReservationUpdateWithWhereUniqueWithoutTableInput = {
    where: ReservationWhereUniqueInput
    data: XOR<ReservationUpdateWithoutTableInput, ReservationUncheckedUpdateWithoutTableInput>
  }

  export type ReservationUpdateManyWithWhereWithoutTableInput = {
    where: ReservationScalarWhereInput
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyWithoutTableInput>
  }

  export type MenuItemModifierCreateWithoutRecipesInput = {
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    defaultSelectionQty: number
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuItemModifierGroup: MenuItemModifierGroupCreateNestedOneWithoutMenuItemModifiersInput
    salesItemModifiers?: SalesItemModifierCreateNestedManyWithoutMenuItemModifierInput
  }

  export type MenuItemModifierUncheckedCreateWithoutRecipesInput = {
    id?: number
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    defaultSelectionQty: number
    sequence: number
    menuItemModifierGroupID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    salesItemModifiers?: SalesItemModifierUncheckedCreateNestedManyWithoutMenuItemModifierInput
  }

  export type MenuItemModifierCreateOrConnectWithoutRecipesInput = {
    where: MenuItemModifierWhereUniqueInput
    create: XOR<MenuItemModifierCreateWithoutRecipesInput, MenuItemModifierUncheckedCreateWithoutRecipesInput>
  }

  export type MenuItemCreateWithoutRecipesInput = {
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuCategory: MenuCategoryCreateNestedOneWithoutMenuItemsInput
    menuItemModifierGroups?: MenuItemModifierGroupCreateNestedManyWithoutMenuItemInput
  }

  export type MenuItemUncheckedCreateWithoutRecipesInput = {
    id?: number
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    sequence: number
    menuCategoryID: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    menuItemModifierGroups?: MenuItemModifierGroupUncheckedCreateNestedManyWithoutMenuItemInput
  }

  export type MenuItemCreateOrConnectWithoutRecipesInput = {
    where: MenuItemWhereUniqueInput
    create: XOR<MenuItemCreateWithoutRecipesInput, MenuItemUncheckedCreateWithoutRecipesInput>
  }

  export type ItemCreateWithoutRecipesInput = {
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    category: CategoryCreateNestedOneWithoutItemsInput
    supplier: SupplierCreateNestedOneWithoutItemsInput
    stockBalance?: StockBalanceCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemCreateNestedManyWithoutItemInput
  }

  export type ItemUncheckedCreateWithoutRecipesInput = {
    id?: number
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    categoryId: number
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    supplierId: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalance?: StockBalanceUncheckedCreateNestedManyWithoutItemInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutItemInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutItemInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutItemInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedCreateNestedManyWithoutItemInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedCreateNestedManyWithoutItemInput
    invoiceItems?: InvoiceItemUncheckedCreateNestedManyWithoutItemInput
  }

  export type ItemCreateOrConnectWithoutRecipesInput = {
    where: ItemWhereUniqueInput
    create: XOR<ItemCreateWithoutRecipesInput, ItemUncheckedCreateWithoutRecipesInput>
  }

  export type MenuItemModifierUpsertWithoutRecipesInput = {
    update: XOR<MenuItemModifierUpdateWithoutRecipesInput, MenuItemModifierUncheckedUpdateWithoutRecipesInput>
    create: XOR<MenuItemModifierCreateWithoutRecipesInput, MenuItemModifierUncheckedCreateWithoutRecipesInput>
    where?: MenuItemModifierWhereInput
  }

  export type MenuItemModifierUpdateToOneWithWhereWithoutRecipesInput = {
    where?: MenuItemModifierWhereInput
    data: XOR<MenuItemModifierUpdateWithoutRecipesInput, MenuItemModifierUncheckedUpdateWithoutRecipesInput>
  }

  export type MenuItemModifierUpdateWithoutRecipesInput = {
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    defaultSelectionQty?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuItemModifierGroup?: MenuItemModifierGroupUpdateOneRequiredWithoutMenuItemModifiersNestedInput
    salesItemModifiers?: SalesItemModifierUpdateManyWithoutMenuItemModifierNestedInput
  }

  export type MenuItemModifierUncheckedUpdateWithoutRecipesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    defaultSelectionQty?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    menuItemModifierGroupID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    salesItemModifiers?: SalesItemModifierUncheckedUpdateManyWithoutMenuItemModifierNestedInput
  }

  export type MenuItemUpsertWithoutRecipesInput = {
    update: XOR<MenuItemUpdateWithoutRecipesInput, MenuItemUncheckedUpdateWithoutRecipesInput>
    create: XOR<MenuItemCreateWithoutRecipesInput, MenuItemUncheckedCreateWithoutRecipesInput>
    where?: MenuItemWhereInput
  }

  export type MenuItemUpdateToOneWithWhereWithoutRecipesInput = {
    where?: MenuItemWhereInput
    data: XOR<MenuItemUpdateWithoutRecipesInput, MenuItemUncheckedUpdateWithoutRecipesInput>
  }

  export type MenuItemUpdateWithoutRecipesInput = {
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuCategory?: MenuCategoryUpdateOneRequiredWithoutMenuItemsNestedInput
    menuItemModifierGroups?: MenuItemModifierGroupUpdateManyWithoutMenuItemNestedInput
  }

  export type MenuItemUncheckedUpdateWithoutRecipesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sequence?: IntFieldUpdateOperationsInput | number
    menuCategoryID?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuItemModifierGroups?: MenuItemModifierGroupUncheckedUpdateManyWithoutMenuItemNestedInput
  }

  export type ItemUpsertWithoutRecipesInput = {
    update: XOR<ItemUpdateWithoutRecipesInput, ItemUncheckedUpdateWithoutRecipesInput>
    create: XOR<ItemCreateWithoutRecipesInput, ItemUncheckedCreateWithoutRecipesInput>
    where?: ItemWhereInput
  }

  export type ItemUpdateToOneWithWhereWithoutRecipesInput = {
    where?: ItemWhereInput
    data: XOR<ItemUpdateWithoutRecipesInput, ItemUncheckedUpdateWithoutRecipesInput>
  }

  export type ItemUpdateWithoutRecipesInput = {
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    category?: CategoryUpdateOneRequiredWithoutItemsNestedInput
    supplier?: SupplierUpdateOneRequiredWithoutItemsNestedInput
    stockBalance?: StockBalanceUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUpdateManyWithoutItemNestedInput
  }

  export type ItemUncheckedUpdateWithoutRecipesInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: IntFieldUpdateOperationsInput | number
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    supplierId?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalance?: StockBalanceUncheckedUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type OutletCreateWithoutStationsInput = {
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceCreateNestedManyWithoutOutletInput
    stockMovements?: StockMovementCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutOutletInput
    settings?: SettingCreateNestedManyWithoutOutletInput
    tables?: TableCreateNestedManyWithoutOutletInput
    reservations?: ReservationCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistCreateNestedManyWithoutOutletInput
  }

  export type OutletUncheckedCreateWithoutStationsInput = {
    id?: number
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceUncheckedCreateNestedManyWithoutOutletInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutOutletInput
    settings?: SettingUncheckedCreateNestedManyWithoutOutletInput
    tables?: TableUncheckedCreateNestedManyWithoutOutletInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistUncheckedCreateNestedManyWithoutOutletInput
  }

  export type OutletCreateOrConnectWithoutStationsInput = {
    where: OutletWhereUniqueInput
    create: XOR<OutletCreateWithoutStationsInput, OutletUncheckedCreateWithoutStationsInput>
  }

  export type OrderRoutingCreateWithoutStationInput = {
    status: string
    sentAt?: Date | string | null
    completedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    salesItem: SalesItemCreateNestedOneWithoutOrderRoutingInput
  }

  export type OrderRoutingUncheckedCreateWithoutStationInput = {
    id?: number
    salesItemId: number
    status: string
    sentAt?: Date | string | null
    completedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type OrderRoutingCreateOrConnectWithoutStationInput = {
    where: OrderRoutingWhereUniqueInput
    create: XOR<OrderRoutingCreateWithoutStationInput, OrderRoutingUncheckedCreateWithoutStationInput>
  }

  export type OrderRoutingCreateManyStationInputEnvelope = {
    data: OrderRoutingCreateManyStationInput | OrderRoutingCreateManyStationInput[]
    skipDuplicates?: boolean
  }

  export type OutletUpsertWithoutStationsInput = {
    update: XOR<OutletUpdateWithoutStationsInput, OutletUncheckedUpdateWithoutStationsInput>
    create: XOR<OutletCreateWithoutStationsInput, OutletUncheckedCreateWithoutStationsInput>
    where?: OutletWhereInput
  }

  export type OutletUpdateToOneWithWhereWithoutStationsInput = {
    where?: OutletWhereInput
    data: XOR<OutletUpdateWithoutStationsInput, OutletUncheckedUpdateWithoutStationsInput>
  }

  export type OutletUpdateWithoutStationsInput = {
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUpdateManyWithoutOutletNestedInput
    stockMovements?: StockMovementUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutOutletNestedInput
    settings?: SettingUpdateManyWithoutOutletNestedInput
    tables?: TableUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUpdateManyWithoutOutletNestedInput
  }

  export type OutletUncheckedUpdateWithoutStationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUncheckedUpdateManyWithoutOutletNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutOutletNestedInput
    settings?: SettingUncheckedUpdateManyWithoutOutletNestedInput
    tables?: TableUncheckedUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUncheckedUpdateManyWithoutOutletNestedInput
  }

  export type OrderRoutingUpsertWithWhereUniqueWithoutStationInput = {
    where: OrderRoutingWhereUniqueInput
    update: XOR<OrderRoutingUpdateWithoutStationInput, OrderRoutingUncheckedUpdateWithoutStationInput>
    create: XOR<OrderRoutingCreateWithoutStationInput, OrderRoutingUncheckedCreateWithoutStationInput>
  }

  export type OrderRoutingUpdateWithWhereUniqueWithoutStationInput = {
    where: OrderRoutingWhereUniqueInput
    data: XOR<OrderRoutingUpdateWithoutStationInput, OrderRoutingUncheckedUpdateWithoutStationInput>
  }

  export type OrderRoutingUpdateManyWithWhereWithoutStationInput = {
    where: OrderRoutingScalarWhereInput
    data: XOR<OrderRoutingUpdateManyMutationInput, OrderRoutingUncheckedUpdateManyWithoutStationInput>
  }

  export type OutletCreateWithoutReservationsInput = {
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceCreateNestedManyWithoutOutletInput
    stockMovements?: StockMovementCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutOutletInput
    settings?: SettingCreateNestedManyWithoutOutletInput
    tables?: TableCreateNestedManyWithoutOutletInput
    stations?: StationCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistCreateNestedManyWithoutOutletInput
  }

  export type OutletUncheckedCreateWithoutReservationsInput = {
    id?: number
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceUncheckedCreateNestedManyWithoutOutletInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutOutletInput
    settings?: SettingUncheckedCreateNestedManyWithoutOutletInput
    tables?: TableUncheckedCreateNestedManyWithoutOutletInput
    stations?: StationUncheckedCreateNestedManyWithoutOutletInput
    waitlists?: WaitlistUncheckedCreateNestedManyWithoutOutletInput
  }

  export type OutletCreateOrConnectWithoutReservationsInput = {
    where: OutletWhereUniqueInput
    create: XOR<OutletCreateWithoutReservationsInput, OutletUncheckedCreateWithoutReservationsInput>
  }

  export type CustomerCreateWithoutReservationsInput = {
    salutation?: string
    lastName: string
    firstName: string
    mobile?: string | null
    email?: string | null
    gender?: string | null
    billStreet?: string | null
    billCity?: string | null
    billState?: string | null
    billPostalCode?: string | null
    billCountry?: string | null
    billRemark?: string | null
    shipStreet?: string | null
    shipCity?: string | null
    shipState?: string | null
    shipPostalCode?: string | null
    shipCountry?: string | null
    shipRemark?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales?: SalesCreateNestedManyWithoutCustomerInput
    promotions?: PromotionCustomerCreateNestedManyWithoutCustomerInput
    promotionUsage?: PromotionUsageCreateNestedManyWithoutCustomerInput
    waitlists?: WaitlistCreateNestedManyWithoutCustomerInput
    splitBills?: SplitBillCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutReservationsInput = {
    id?: number
    salutation?: string
    lastName: string
    firstName: string
    mobile?: string | null
    email?: string | null
    gender?: string | null
    billStreet?: string | null
    billCity?: string | null
    billState?: string | null
    billPostalCode?: string | null
    billCountry?: string | null
    billRemark?: string | null
    shipStreet?: string | null
    shipCity?: string | null
    shipState?: string | null
    shipPostalCode?: string | null
    shipCountry?: string | null
    shipRemark?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales?: SalesUncheckedCreateNestedManyWithoutCustomerInput
    promotions?: PromotionCustomerUncheckedCreateNestedManyWithoutCustomerInput
    promotionUsage?: PromotionUsageUncheckedCreateNestedManyWithoutCustomerInput
    waitlists?: WaitlistUncheckedCreateNestedManyWithoutCustomerInput
    splitBills?: SplitBillUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutReservationsInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutReservationsInput, CustomerUncheckedCreateWithoutReservationsInput>
  }

  export type TableCreateWithoutReservationsInput = {
    tableNumber: string
    capacity: number
    status: string
    salesId?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    outlet: OutletCreateNestedOneWithoutTablesInput
    sales?: SalesCreateNestedManyWithoutTableInput
  }

  export type TableUncheckedCreateWithoutReservationsInput = {
    id?: number
    outletId: number
    tableNumber: string
    capacity: number
    status: string
    salesId?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales?: SalesUncheckedCreateNestedManyWithoutTableInput
  }

  export type TableCreateOrConnectWithoutReservationsInput = {
    where: TableWhereUniqueInput
    create: XOR<TableCreateWithoutReservationsInput, TableUncheckedCreateWithoutReservationsInput>
  }

  export type OutletUpsertWithoutReservationsInput = {
    update: XOR<OutletUpdateWithoutReservationsInput, OutletUncheckedUpdateWithoutReservationsInput>
    create: XOR<OutletCreateWithoutReservationsInput, OutletUncheckedCreateWithoutReservationsInput>
    where?: OutletWhereInput
  }

  export type OutletUpdateToOneWithWhereWithoutReservationsInput = {
    where?: OutletWhereInput
    data: XOR<OutletUpdateWithoutReservationsInput, OutletUncheckedUpdateWithoutReservationsInput>
  }

  export type OutletUpdateWithoutReservationsInput = {
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUpdateManyWithoutOutletNestedInput
    stockMovements?: StockMovementUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutOutletNestedInput
    settings?: SettingUpdateManyWithoutOutletNestedInput
    tables?: TableUpdateManyWithoutOutletNestedInput
    stations?: StationUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUpdateManyWithoutOutletNestedInput
  }

  export type OutletUncheckedUpdateWithoutReservationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUncheckedUpdateManyWithoutOutletNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutOutletNestedInput
    settings?: SettingUncheckedUpdateManyWithoutOutletNestedInput
    tables?: TableUncheckedUpdateManyWithoutOutletNestedInput
    stations?: StationUncheckedUpdateManyWithoutOutletNestedInput
    waitlists?: WaitlistUncheckedUpdateManyWithoutOutletNestedInput
  }

  export type CustomerUpsertWithoutReservationsInput = {
    update: XOR<CustomerUpdateWithoutReservationsInput, CustomerUncheckedUpdateWithoutReservationsInput>
    create: XOR<CustomerCreateWithoutReservationsInput, CustomerUncheckedCreateWithoutReservationsInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutReservationsInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutReservationsInput, CustomerUncheckedUpdateWithoutReservationsInput>
  }

  export type CustomerUpdateWithoutReservationsInput = {
    salutation?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: NullableStringFieldUpdateOperationsInput | string | null
    billCity?: NullableStringFieldUpdateOperationsInput | string | null
    billState?: NullableStringFieldUpdateOperationsInput | string | null
    billPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    billCountry?: NullableStringFieldUpdateOperationsInput | string | null
    billRemark?: NullableStringFieldUpdateOperationsInput | string | null
    shipStreet?: NullableStringFieldUpdateOperationsInput | string | null
    shipCity?: NullableStringFieldUpdateOperationsInput | string | null
    shipState?: NullableStringFieldUpdateOperationsInput | string | null
    shipPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    shipCountry?: NullableStringFieldUpdateOperationsInput | string | null
    shipRemark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUpdateManyWithoutCustomerNestedInput
    promotions?: PromotionCustomerUpdateManyWithoutCustomerNestedInput
    promotionUsage?: PromotionUsageUpdateManyWithoutCustomerNestedInput
    waitlists?: WaitlistUpdateManyWithoutCustomerNestedInput
    splitBills?: SplitBillUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutReservationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    salutation?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: NullableStringFieldUpdateOperationsInput | string | null
    billCity?: NullableStringFieldUpdateOperationsInput | string | null
    billState?: NullableStringFieldUpdateOperationsInput | string | null
    billPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    billCountry?: NullableStringFieldUpdateOperationsInput | string | null
    billRemark?: NullableStringFieldUpdateOperationsInput | string | null
    shipStreet?: NullableStringFieldUpdateOperationsInput | string | null
    shipCity?: NullableStringFieldUpdateOperationsInput | string | null
    shipState?: NullableStringFieldUpdateOperationsInput | string | null
    shipPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    shipCountry?: NullableStringFieldUpdateOperationsInput | string | null
    shipRemark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUncheckedUpdateManyWithoutCustomerNestedInput
    promotions?: PromotionCustomerUncheckedUpdateManyWithoutCustomerNestedInput
    promotionUsage?: PromotionUsageUncheckedUpdateManyWithoutCustomerNestedInput
    waitlists?: WaitlistUncheckedUpdateManyWithoutCustomerNestedInput
    splitBills?: SplitBillUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type TableUpsertWithoutReservationsInput = {
    update: XOR<TableUpdateWithoutReservationsInput, TableUncheckedUpdateWithoutReservationsInput>
    create: XOR<TableCreateWithoutReservationsInput, TableUncheckedCreateWithoutReservationsInput>
    where?: TableWhereInput
  }

  export type TableUpdateToOneWithWhereWithoutReservationsInput = {
    where?: TableWhereInput
    data: XOR<TableUpdateWithoutReservationsInput, TableUncheckedUpdateWithoutReservationsInput>
  }

  export type TableUpdateWithoutReservationsInput = {
    tableNumber?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    outlet?: OutletUpdateOneRequiredWithoutTablesNestedInput
    sales?: SalesUpdateManyWithoutTableNestedInput
  }

  export type TableUncheckedUpdateWithoutReservationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    tableNumber?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUncheckedUpdateManyWithoutTableNestedInput
  }

  export type SalesItemCreateWithoutOrderRoutingInput = {
    itemId: number
    itemName: string
    itemCode: string
    itemBrand: string
    itemModel?: string
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    priceBeforeTax: Decimal | DecimalJsLike | number | string
    profit: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    specialInstructions?: string | null
    itemStatus?: string | null
    priority?: string | null
    estimatedPrepTime?: number | null
    sales: SalesCreateNestedOneWithoutSalesItemsInput
    selectedModifiers?: SalesItemModifierCreateNestedManyWithoutSalesItemInput
  }

  export type SalesItemUncheckedCreateWithoutOrderRoutingInput = {
    id?: number
    salesId: number
    itemId: number
    itemName: string
    itemCode: string
    itemBrand: string
    itemModel?: string
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    priceBeforeTax: Decimal | DecimalJsLike | number | string
    profit: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    specialInstructions?: string | null
    itemStatus?: string | null
    priority?: string | null
    estimatedPrepTime?: number | null
    selectedModifiers?: SalesItemModifierUncheckedCreateNestedManyWithoutSalesItemInput
  }

  export type SalesItemCreateOrConnectWithoutOrderRoutingInput = {
    where: SalesItemWhereUniqueInput
    create: XOR<SalesItemCreateWithoutOrderRoutingInput, SalesItemUncheckedCreateWithoutOrderRoutingInput>
  }

  export type StationCreateWithoutOrderRoutingInput = {
    name: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    outlet: OutletCreateNestedOneWithoutStationsInput
  }

  export type StationUncheckedCreateWithoutOrderRoutingInput = {
    id?: number
    outletId: number
    name: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StationCreateOrConnectWithoutOrderRoutingInput = {
    where: StationWhereUniqueInput
    create: XOR<StationCreateWithoutOrderRoutingInput, StationUncheckedCreateWithoutOrderRoutingInput>
  }

  export type SalesItemUpsertWithoutOrderRoutingInput = {
    update: XOR<SalesItemUpdateWithoutOrderRoutingInput, SalesItemUncheckedUpdateWithoutOrderRoutingInput>
    create: XOR<SalesItemCreateWithoutOrderRoutingInput, SalesItemUncheckedCreateWithoutOrderRoutingInput>
    where?: SalesItemWhereInput
  }

  export type SalesItemUpdateToOneWithWhereWithoutOrderRoutingInput = {
    where?: SalesItemWhereInput
    data: XOR<SalesItemUpdateWithoutOrderRoutingInput, SalesItemUncheckedUpdateWithoutOrderRoutingInput>
  }

  export type SalesItemUpdateWithoutOrderRoutingInput = {
    itemId?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceBeforeTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    specialInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    itemStatus?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedPrepTime?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUpdateOneRequiredWithoutSalesItemsNestedInput
    selectedModifiers?: SalesItemModifierUpdateManyWithoutSalesItemNestedInput
  }

  export type SalesItemUncheckedUpdateWithoutOrderRoutingInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceBeforeTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    specialInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    itemStatus?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedPrepTime?: NullableIntFieldUpdateOperationsInput | number | null
    selectedModifiers?: SalesItemModifierUncheckedUpdateManyWithoutSalesItemNestedInput
  }

  export type StationUpsertWithoutOrderRoutingInput = {
    update: XOR<StationUpdateWithoutOrderRoutingInput, StationUncheckedUpdateWithoutOrderRoutingInput>
    create: XOR<StationCreateWithoutOrderRoutingInput, StationUncheckedCreateWithoutOrderRoutingInput>
    where?: StationWhereInput
  }

  export type StationUpdateToOneWithWhereWithoutOrderRoutingInput = {
    where?: StationWhereInput
    data: XOR<StationUpdateWithoutOrderRoutingInput, StationUncheckedUpdateWithoutOrderRoutingInput>
  }

  export type StationUpdateWithoutOrderRoutingInput = {
    name?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    outlet?: OutletUpdateOneRequiredWithoutStationsNestedInput
  }

  export type StationUncheckedUpdateWithoutOrderRoutingInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OutletCreateWithoutWaitlistsInput = {
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceCreateNestedManyWithoutOutletInput
    stockMovements?: StockMovementCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptCreateNestedManyWithoutOutletInput
    settings?: SettingCreateNestedManyWithoutOutletInput
    tables?: TableCreateNestedManyWithoutOutletInput
    stations?: StationCreateNestedManyWithoutOutletInput
    reservations?: ReservationCreateNestedManyWithoutOutletInput
  }

  export type OutletUncheckedCreateWithoutWaitlistsInput = {
    id?: number
    tenantOutletId: number
    outletName: string
    street?: string
    city?: string
    state?: string
    postalCode?: string
    country?: string
    outletTel?: string
    outletEmail?: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    stockBalances?: StockBalanceUncheckedCreateNestedManyWithoutOutletInput
    stockMovements?: StockMovementUncheckedCreateNestedManyWithoutOutletInput
    stockSnapshots?: StockSnapshotUncheckedCreateNestedManyWithoutOutletInput
    stockReceipts?: StockReceiptUncheckedCreateNestedManyWithoutOutletInput
    settings?: SettingUncheckedCreateNestedManyWithoutOutletInput
    tables?: TableUncheckedCreateNestedManyWithoutOutletInput
    stations?: StationUncheckedCreateNestedManyWithoutOutletInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOutletInput
  }

  export type OutletCreateOrConnectWithoutWaitlistsInput = {
    where: OutletWhereUniqueInput
    create: XOR<OutletCreateWithoutWaitlistsInput, OutletUncheckedCreateWithoutWaitlistsInput>
  }

  export type CustomerCreateWithoutWaitlistsInput = {
    salutation?: string
    lastName: string
    firstName: string
    mobile?: string | null
    email?: string | null
    gender?: string | null
    billStreet?: string | null
    billCity?: string | null
    billState?: string | null
    billPostalCode?: string | null
    billCountry?: string | null
    billRemark?: string | null
    shipStreet?: string | null
    shipCity?: string | null
    shipState?: string | null
    shipPostalCode?: string | null
    shipCountry?: string | null
    shipRemark?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales?: SalesCreateNestedManyWithoutCustomerInput
    promotions?: PromotionCustomerCreateNestedManyWithoutCustomerInput
    promotionUsage?: PromotionUsageCreateNestedManyWithoutCustomerInput
    reservations?: ReservationCreateNestedManyWithoutCustomerInput
    splitBills?: SplitBillCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutWaitlistsInput = {
    id?: number
    salutation?: string
    lastName: string
    firstName: string
    mobile?: string | null
    email?: string | null
    gender?: string | null
    billStreet?: string | null
    billCity?: string | null
    billState?: string | null
    billPostalCode?: string | null
    billCountry?: string | null
    billRemark?: string | null
    shipStreet?: string | null
    shipCity?: string | null
    shipState?: string | null
    shipPostalCode?: string | null
    shipCountry?: string | null
    shipRemark?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales?: SalesUncheckedCreateNestedManyWithoutCustomerInput
    promotions?: PromotionCustomerUncheckedCreateNestedManyWithoutCustomerInput
    promotionUsage?: PromotionUsageUncheckedCreateNestedManyWithoutCustomerInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutCustomerInput
    splitBills?: SplitBillUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutWaitlistsInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutWaitlistsInput, CustomerUncheckedCreateWithoutWaitlistsInput>
  }

  export type OutletUpsertWithoutWaitlistsInput = {
    update: XOR<OutletUpdateWithoutWaitlistsInput, OutletUncheckedUpdateWithoutWaitlistsInput>
    create: XOR<OutletCreateWithoutWaitlistsInput, OutletUncheckedCreateWithoutWaitlistsInput>
    where?: OutletWhereInput
  }

  export type OutletUpdateToOneWithWhereWithoutWaitlistsInput = {
    where?: OutletWhereInput
    data: XOR<OutletUpdateWithoutWaitlistsInput, OutletUncheckedUpdateWithoutWaitlistsInput>
  }

  export type OutletUpdateWithoutWaitlistsInput = {
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUpdateManyWithoutOutletNestedInput
    stockMovements?: StockMovementUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutOutletNestedInput
    settings?: SettingUpdateManyWithoutOutletNestedInput
    tables?: TableUpdateManyWithoutOutletNestedInput
    stations?: StationUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUpdateManyWithoutOutletNestedInput
  }

  export type OutletUncheckedUpdateWithoutWaitlistsInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantOutletId?: IntFieldUpdateOperationsInput | number
    outletName?: StringFieldUpdateOperationsInput | string
    street?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    outletTel?: StringFieldUpdateOperationsInput | string
    outletEmail?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalances?: StockBalanceUncheckedUpdateManyWithoutOutletNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutOutletNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutOutletNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutOutletNestedInput
    settings?: SettingUncheckedUpdateManyWithoutOutletNestedInput
    tables?: TableUncheckedUpdateManyWithoutOutletNestedInput
    stations?: StationUncheckedUpdateManyWithoutOutletNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOutletNestedInput
  }

  export type CustomerUpsertWithoutWaitlistsInput = {
    update: XOR<CustomerUpdateWithoutWaitlistsInput, CustomerUncheckedUpdateWithoutWaitlistsInput>
    create: XOR<CustomerCreateWithoutWaitlistsInput, CustomerUncheckedCreateWithoutWaitlistsInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutWaitlistsInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutWaitlistsInput, CustomerUncheckedUpdateWithoutWaitlistsInput>
  }

  export type CustomerUpdateWithoutWaitlistsInput = {
    salutation?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: NullableStringFieldUpdateOperationsInput | string | null
    billCity?: NullableStringFieldUpdateOperationsInput | string | null
    billState?: NullableStringFieldUpdateOperationsInput | string | null
    billPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    billCountry?: NullableStringFieldUpdateOperationsInput | string | null
    billRemark?: NullableStringFieldUpdateOperationsInput | string | null
    shipStreet?: NullableStringFieldUpdateOperationsInput | string | null
    shipCity?: NullableStringFieldUpdateOperationsInput | string | null
    shipState?: NullableStringFieldUpdateOperationsInput | string | null
    shipPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    shipCountry?: NullableStringFieldUpdateOperationsInput | string | null
    shipRemark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUpdateManyWithoutCustomerNestedInput
    promotions?: PromotionCustomerUpdateManyWithoutCustomerNestedInput
    promotionUsage?: PromotionUsageUpdateManyWithoutCustomerNestedInput
    reservations?: ReservationUpdateManyWithoutCustomerNestedInput
    splitBills?: SplitBillUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutWaitlistsInput = {
    id?: IntFieldUpdateOperationsInput | number
    salutation?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: NullableStringFieldUpdateOperationsInput | string | null
    billCity?: NullableStringFieldUpdateOperationsInput | string | null
    billState?: NullableStringFieldUpdateOperationsInput | string | null
    billPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    billCountry?: NullableStringFieldUpdateOperationsInput | string | null
    billRemark?: NullableStringFieldUpdateOperationsInput | string | null
    shipStreet?: NullableStringFieldUpdateOperationsInput | string | null
    shipCity?: NullableStringFieldUpdateOperationsInput | string | null
    shipState?: NullableStringFieldUpdateOperationsInput | string | null
    shipPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    shipCountry?: NullableStringFieldUpdateOperationsInput | string | null
    shipRemark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUncheckedUpdateManyWithoutCustomerNestedInput
    promotions?: PromotionCustomerUncheckedUpdateManyWithoutCustomerNestedInput
    promotionUsage?: PromotionUsageUncheckedUpdateManyWithoutCustomerNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutCustomerNestedInput
    splitBills?: SplitBillUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type PaymentCreateWithoutSplitBillsInput = {
    method: string
    tenderedAmount: Decimal | DecimalJsLike | number | string
    paidAmount: Decimal | DecimalJsLike | number | string
    currencySymbol?: string
    reference?: string
    remark?: string
    businessDate: Date | string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    cardInfos?: CardInfoCreateNestedManyWithoutPaymentInput
    sales: SalesCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateWithoutSplitBillsInput = {
    id?: number
    method: string
    tenderedAmount: Decimal | DecimalJsLike | number | string
    paidAmount: Decimal | DecimalJsLike | number | string
    currencySymbol?: string
    salesId: number
    reference?: string
    remark?: string
    businessDate: Date | string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    cardInfos?: CardInfoUncheckedCreateNestedManyWithoutPaymentInput
  }

  export type PaymentCreateOrConnectWithoutSplitBillsInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutSplitBillsInput, PaymentUncheckedCreateWithoutSplitBillsInput>
  }

  export type CustomerCreateWithoutSplitBillsInput = {
    salutation?: string
    lastName: string
    firstName: string
    mobile?: string | null
    email?: string | null
    gender?: string | null
    billStreet?: string | null
    billCity?: string | null
    billState?: string | null
    billPostalCode?: string | null
    billCountry?: string | null
    billRemark?: string | null
    shipStreet?: string | null
    shipCity?: string | null
    shipState?: string | null
    shipPostalCode?: string | null
    shipCountry?: string | null
    shipRemark?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales?: SalesCreateNestedManyWithoutCustomerInput
    promotions?: PromotionCustomerCreateNestedManyWithoutCustomerInput
    promotionUsage?: PromotionUsageCreateNestedManyWithoutCustomerInput
    reservations?: ReservationCreateNestedManyWithoutCustomerInput
    waitlists?: WaitlistCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutSplitBillsInput = {
    id?: number
    salutation?: string
    lastName: string
    firstName: string
    mobile?: string | null
    email?: string | null
    gender?: string | null
    billStreet?: string | null
    billCity?: string | null
    billState?: string | null
    billPostalCode?: string | null
    billCountry?: string | null
    billRemark?: string | null
    shipStreet?: string | null
    shipCity?: string | null
    shipState?: string | null
    shipPostalCode?: string | null
    shipCountry?: string | null
    shipRemark?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales?: SalesUncheckedCreateNestedManyWithoutCustomerInput
    promotions?: PromotionCustomerUncheckedCreateNestedManyWithoutCustomerInput
    promotionUsage?: PromotionUsageUncheckedCreateNestedManyWithoutCustomerInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutCustomerInput
    waitlists?: WaitlistUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutSplitBillsInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutSplitBillsInput, CustomerUncheckedCreateWithoutSplitBillsInput>
  }

  export type PaymentUpsertWithoutSplitBillsInput = {
    update: XOR<PaymentUpdateWithoutSplitBillsInput, PaymentUncheckedUpdateWithoutSplitBillsInput>
    create: XOR<PaymentCreateWithoutSplitBillsInput, PaymentUncheckedCreateWithoutSplitBillsInput>
    where?: PaymentWhereInput
  }

  export type PaymentUpdateToOneWithWhereWithoutSplitBillsInput = {
    where?: PaymentWhereInput
    data: XOR<PaymentUpdateWithoutSplitBillsInput, PaymentUncheckedUpdateWithoutSplitBillsInput>
  }

  export type PaymentUpdateWithoutSplitBillsInput = {
    method?: StringFieldUpdateOperationsInput | string
    tenderedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    cardInfos?: CardInfoUpdateManyWithoutPaymentNestedInput
    sales?: SalesUpdateOneRequiredWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateWithoutSplitBillsInput = {
    id?: IntFieldUpdateOperationsInput | number
    method?: StringFieldUpdateOperationsInput | string
    tenderedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    salesId?: IntFieldUpdateOperationsInput | number
    reference?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    cardInfos?: CardInfoUncheckedUpdateManyWithoutPaymentNestedInput
  }

  export type CustomerUpsertWithoutSplitBillsInput = {
    update: XOR<CustomerUpdateWithoutSplitBillsInput, CustomerUncheckedUpdateWithoutSplitBillsInput>
    create: XOR<CustomerCreateWithoutSplitBillsInput, CustomerUncheckedCreateWithoutSplitBillsInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutSplitBillsInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutSplitBillsInput, CustomerUncheckedUpdateWithoutSplitBillsInput>
  }

  export type CustomerUpdateWithoutSplitBillsInput = {
    salutation?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: NullableStringFieldUpdateOperationsInput | string | null
    billCity?: NullableStringFieldUpdateOperationsInput | string | null
    billState?: NullableStringFieldUpdateOperationsInput | string | null
    billPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    billCountry?: NullableStringFieldUpdateOperationsInput | string | null
    billRemark?: NullableStringFieldUpdateOperationsInput | string | null
    shipStreet?: NullableStringFieldUpdateOperationsInput | string | null
    shipCity?: NullableStringFieldUpdateOperationsInput | string | null
    shipState?: NullableStringFieldUpdateOperationsInput | string | null
    shipPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    shipCountry?: NullableStringFieldUpdateOperationsInput | string | null
    shipRemark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUpdateManyWithoutCustomerNestedInput
    promotions?: PromotionCustomerUpdateManyWithoutCustomerNestedInput
    promotionUsage?: PromotionUsageUpdateManyWithoutCustomerNestedInput
    reservations?: ReservationUpdateManyWithoutCustomerNestedInput
    waitlists?: WaitlistUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutSplitBillsInput = {
    id?: IntFieldUpdateOperationsInput | number
    salutation?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: NullableStringFieldUpdateOperationsInput | string | null
    billCity?: NullableStringFieldUpdateOperationsInput | string | null
    billState?: NullableStringFieldUpdateOperationsInput | string | null
    billPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    billCountry?: NullableStringFieldUpdateOperationsInput | string | null
    billRemark?: NullableStringFieldUpdateOperationsInput | string | null
    shipStreet?: NullableStringFieldUpdateOperationsInput | string | null
    shipCity?: NullableStringFieldUpdateOperationsInput | string | null
    shipState?: NullableStringFieldUpdateOperationsInput | string | null
    shipPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    shipCountry?: NullableStringFieldUpdateOperationsInput | string | null
    shipRemark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUncheckedUpdateManyWithoutCustomerNestedInput
    promotions?: PromotionCustomerUncheckedUpdateManyWithoutCustomerNestedInput
    promotionUsage?: PromotionUsageUncheckedUpdateManyWithoutCustomerNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutCustomerNestedInput
    waitlists?: WaitlistUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type PromotionItemCreateWithoutPromotionInput = {
    itemId?: number | null
    categoryId?: number | null
    itemCode?: string | null
    itemName?: string | null
    itemRole?: string | null
    deleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
  }

  export type PromotionItemUncheckedCreateWithoutPromotionInput = {
    id?: number
    itemId?: number | null
    categoryId?: number | null
    itemCode?: string | null
    itemName?: string | null
    itemRole?: string | null
    deleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
  }

  export type PromotionItemCreateOrConnectWithoutPromotionInput = {
    where: PromotionItemWhereUniqueInput
    create: XOR<PromotionItemCreateWithoutPromotionInput, PromotionItemUncheckedCreateWithoutPromotionInput>
  }

  export type PromotionItemCreateManyPromotionInputEnvelope = {
    data: PromotionItemCreateManyPromotionInput | PromotionItemCreateManyPromotionInput[]
    skipDuplicates?: boolean
  }

  export type PromotionCustomerCreateWithoutPromotionInput = {
    maxUsage?: number | null
    currentUsage?: number
    deleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
    customer: CustomerCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionCustomerUncheckedCreateWithoutPromotionInput = {
    id?: number
    customerId: number
    maxUsage?: number | null
    currentUsage?: number
    deleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
  }

  export type PromotionCustomerCreateOrConnectWithoutPromotionInput = {
    where: PromotionCustomerWhereUniqueInput
    create: XOR<PromotionCustomerCreateWithoutPromotionInput, PromotionCustomerUncheckedCreateWithoutPromotionInput>
  }

  export type PromotionCustomerCreateManyPromotionInputEnvelope = {
    data: PromotionCustomerCreateManyPromotionInput | PromotionCustomerCreateManyPromotionInput[]
    skipDuplicates?: boolean
  }

  export type PromotionUsageCreateWithoutPromotionInput = {
    salesId?: number | null
    discountAmount: Decimal | DecimalJsLike | number | string
    usedAt?: Date | string
    version?: number | null
    customer?: CustomerCreateNestedOneWithoutPromotionUsageInput
  }

  export type PromotionUsageUncheckedCreateWithoutPromotionInput = {
    id?: number
    customerId?: number | null
    salesId?: number | null
    discountAmount: Decimal | DecimalJsLike | number | string
    usedAt?: Date | string
    version?: number | null
  }

  export type PromotionUsageCreateOrConnectWithoutPromotionInput = {
    where: PromotionUsageWhereUniqueInput
    create: XOR<PromotionUsageCreateWithoutPromotionInput, PromotionUsageUncheckedCreateWithoutPromotionInput>
  }

  export type PromotionUsageCreateManyPromotionInputEnvelope = {
    data: PromotionUsageCreateManyPromotionInput | PromotionUsageCreateManyPromotionInput[]
    skipDuplicates?: boolean
  }

  export type PromotionItemUpsertWithWhereUniqueWithoutPromotionInput = {
    where: PromotionItemWhereUniqueInput
    update: XOR<PromotionItemUpdateWithoutPromotionInput, PromotionItemUncheckedUpdateWithoutPromotionInput>
    create: XOR<PromotionItemCreateWithoutPromotionInput, PromotionItemUncheckedCreateWithoutPromotionInput>
  }

  export type PromotionItemUpdateWithWhereUniqueWithoutPromotionInput = {
    where: PromotionItemWhereUniqueInput
    data: XOR<PromotionItemUpdateWithoutPromotionInput, PromotionItemUncheckedUpdateWithoutPromotionInput>
  }

  export type PromotionItemUpdateManyWithWhereWithoutPromotionInput = {
    where: PromotionItemScalarWhereInput
    data: XOR<PromotionItemUpdateManyMutationInput, PromotionItemUncheckedUpdateManyWithoutPromotionInput>
  }

  export type PromotionItemScalarWhereInput = {
    AND?: PromotionItemScalarWhereInput | PromotionItemScalarWhereInput[]
    OR?: PromotionItemScalarWhereInput[]
    NOT?: PromotionItemScalarWhereInput | PromotionItemScalarWhereInput[]
    id?: IntFilter<"PromotionItem"> | number
    promotionId?: IntFilter<"PromotionItem"> | number
    itemId?: IntNullableFilter<"PromotionItem"> | number | null
    categoryId?: IntNullableFilter<"PromotionItem"> | number | null
    itemCode?: StringNullableFilter<"PromotionItem"> | string | null
    itemName?: StringNullableFilter<"PromotionItem"> | string | null
    itemRole?: StringNullableFilter<"PromotionItem"> | string | null
    deleted?: BoolFilter<"PromotionItem"> | boolean
    createdAt?: DateTimeFilter<"PromotionItem"> | Date | string
    updatedAt?: DateTimeFilter<"PromotionItem"> | Date | string
    version?: IntNullableFilter<"PromotionItem"> | number | null
  }

  export type PromotionCustomerUpsertWithWhereUniqueWithoutPromotionInput = {
    where: PromotionCustomerWhereUniqueInput
    update: XOR<PromotionCustomerUpdateWithoutPromotionInput, PromotionCustomerUncheckedUpdateWithoutPromotionInput>
    create: XOR<PromotionCustomerCreateWithoutPromotionInput, PromotionCustomerUncheckedCreateWithoutPromotionInput>
  }

  export type PromotionCustomerUpdateWithWhereUniqueWithoutPromotionInput = {
    where: PromotionCustomerWhereUniqueInput
    data: XOR<PromotionCustomerUpdateWithoutPromotionInput, PromotionCustomerUncheckedUpdateWithoutPromotionInput>
  }

  export type PromotionCustomerUpdateManyWithWhereWithoutPromotionInput = {
    where: PromotionCustomerScalarWhereInput
    data: XOR<PromotionCustomerUpdateManyMutationInput, PromotionCustomerUncheckedUpdateManyWithoutPromotionInput>
  }

  export type PromotionUsageUpsertWithWhereUniqueWithoutPromotionInput = {
    where: PromotionUsageWhereUniqueInput
    update: XOR<PromotionUsageUpdateWithoutPromotionInput, PromotionUsageUncheckedUpdateWithoutPromotionInput>
    create: XOR<PromotionUsageCreateWithoutPromotionInput, PromotionUsageUncheckedCreateWithoutPromotionInput>
  }

  export type PromotionUsageUpdateWithWhereUniqueWithoutPromotionInput = {
    where: PromotionUsageWhereUniqueInput
    data: XOR<PromotionUsageUpdateWithoutPromotionInput, PromotionUsageUncheckedUpdateWithoutPromotionInput>
  }

  export type PromotionUsageUpdateManyWithWhereWithoutPromotionInput = {
    where: PromotionUsageScalarWhereInput
    data: XOR<PromotionUsageUpdateManyMutationInput, PromotionUsageUncheckedUpdateManyWithoutPromotionInput>
  }

  export type PromotionCreateWithoutItemsInput = {
    name: string
    description?: string | null
    type: $Enums.PromotionType
    status?: $Enums.PromotionStatus
    priority?: number
    combinationRule?: $Enums.CombinationRule
    discountType: $Enums.DiscountType
    discountValue?: Decimal | DecimalJsLike | number | string | null
    buyQuantity?: number | null
    getQuantity?: number | null
    getDiscountValue?: Decimal | DecimalJsLike | number | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    startTime?: string | null
    endTime?: string | null
    validDays?: string | null
    minPurchaseAmount?: Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: number | null
    maxUsageTotal?: number | null
    maxUsagePerCustomer?: number | null
    currentUsage?: number
    isCustomerSpecific?: boolean
    createdBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
    customers?: PromotionCustomerCreateNestedManyWithoutPromotionInput
    usageHistory?: PromotionUsageCreateNestedManyWithoutPromotionInput
  }

  export type PromotionUncheckedCreateWithoutItemsInput = {
    id?: number
    name: string
    description?: string | null
    type: $Enums.PromotionType
    status?: $Enums.PromotionStatus
    priority?: number
    combinationRule?: $Enums.CombinationRule
    discountType: $Enums.DiscountType
    discountValue?: Decimal | DecimalJsLike | number | string | null
    buyQuantity?: number | null
    getQuantity?: number | null
    getDiscountValue?: Decimal | DecimalJsLike | number | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    startTime?: string | null
    endTime?: string | null
    validDays?: string | null
    minPurchaseAmount?: Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: number | null
    maxUsageTotal?: number | null
    maxUsagePerCustomer?: number | null
    currentUsage?: number
    isCustomerSpecific?: boolean
    createdBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
    customers?: PromotionCustomerUncheckedCreateNestedManyWithoutPromotionInput
    usageHistory?: PromotionUsageUncheckedCreateNestedManyWithoutPromotionInput
  }

  export type PromotionCreateOrConnectWithoutItemsInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutItemsInput, PromotionUncheckedCreateWithoutItemsInput>
  }

  export type PromotionUpsertWithoutItemsInput = {
    update: XOR<PromotionUpdateWithoutItemsInput, PromotionUncheckedUpdateWithoutItemsInput>
    create: XOR<PromotionCreateWithoutItemsInput, PromotionUncheckedCreateWithoutItemsInput>
    where?: PromotionWhereInput
  }

  export type PromotionUpdateToOneWithWhereWithoutItemsInput = {
    where?: PromotionWhereInput
    data: XOR<PromotionUpdateWithoutItemsInput, PromotionUncheckedUpdateWithoutItemsInput>
  }

  export type PromotionUpdateWithoutItemsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumPromotionTypeFieldUpdateOperationsInput | $Enums.PromotionType
    status?: EnumPromotionStatusFieldUpdateOperationsInput | $Enums.PromotionStatus
    priority?: IntFieldUpdateOperationsInput | number
    combinationRule?: EnumCombinationRuleFieldUpdateOperationsInput | $Enums.CombinationRule
    discountType?: EnumDiscountTypeFieldUpdateOperationsInput | $Enums.DiscountType
    discountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    buyQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getDiscountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableStringFieldUpdateOperationsInput | string | null
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    validDays?: NullableStringFieldUpdateOperationsInput | string | null
    minPurchaseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsageTotal?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsagePerCustomer?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    isCustomerSpecific?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
    customers?: PromotionCustomerUpdateManyWithoutPromotionNestedInput
    usageHistory?: PromotionUsageUpdateManyWithoutPromotionNestedInput
  }

  export type PromotionUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumPromotionTypeFieldUpdateOperationsInput | $Enums.PromotionType
    status?: EnumPromotionStatusFieldUpdateOperationsInput | $Enums.PromotionStatus
    priority?: IntFieldUpdateOperationsInput | number
    combinationRule?: EnumCombinationRuleFieldUpdateOperationsInput | $Enums.CombinationRule
    discountType?: EnumDiscountTypeFieldUpdateOperationsInput | $Enums.DiscountType
    discountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    buyQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getDiscountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableStringFieldUpdateOperationsInput | string | null
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    validDays?: NullableStringFieldUpdateOperationsInput | string | null
    minPurchaseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsageTotal?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsagePerCustomer?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    isCustomerSpecific?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
    customers?: PromotionCustomerUncheckedUpdateManyWithoutPromotionNestedInput
    usageHistory?: PromotionUsageUncheckedUpdateManyWithoutPromotionNestedInput
  }

  export type PromotionCreateWithoutCustomersInput = {
    name: string
    description?: string | null
    type: $Enums.PromotionType
    status?: $Enums.PromotionStatus
    priority?: number
    combinationRule?: $Enums.CombinationRule
    discountType: $Enums.DiscountType
    discountValue?: Decimal | DecimalJsLike | number | string | null
    buyQuantity?: number | null
    getQuantity?: number | null
    getDiscountValue?: Decimal | DecimalJsLike | number | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    startTime?: string | null
    endTime?: string | null
    validDays?: string | null
    minPurchaseAmount?: Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: number | null
    maxUsageTotal?: number | null
    maxUsagePerCustomer?: number | null
    currentUsage?: number
    isCustomerSpecific?: boolean
    createdBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
    items?: PromotionItemCreateNestedManyWithoutPromotionInput
    usageHistory?: PromotionUsageCreateNestedManyWithoutPromotionInput
  }

  export type PromotionUncheckedCreateWithoutCustomersInput = {
    id?: number
    name: string
    description?: string | null
    type: $Enums.PromotionType
    status?: $Enums.PromotionStatus
    priority?: number
    combinationRule?: $Enums.CombinationRule
    discountType: $Enums.DiscountType
    discountValue?: Decimal | DecimalJsLike | number | string | null
    buyQuantity?: number | null
    getQuantity?: number | null
    getDiscountValue?: Decimal | DecimalJsLike | number | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    startTime?: string | null
    endTime?: string | null
    validDays?: string | null
    minPurchaseAmount?: Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: number | null
    maxUsageTotal?: number | null
    maxUsagePerCustomer?: number | null
    currentUsage?: number
    isCustomerSpecific?: boolean
    createdBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
    items?: PromotionItemUncheckedCreateNestedManyWithoutPromotionInput
    usageHistory?: PromotionUsageUncheckedCreateNestedManyWithoutPromotionInput
  }

  export type PromotionCreateOrConnectWithoutCustomersInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutCustomersInput, PromotionUncheckedCreateWithoutCustomersInput>
  }

  export type CustomerCreateWithoutPromotionsInput = {
    salutation?: string
    lastName: string
    firstName: string
    mobile?: string | null
    email?: string | null
    gender?: string | null
    billStreet?: string | null
    billCity?: string | null
    billState?: string | null
    billPostalCode?: string | null
    billCountry?: string | null
    billRemark?: string | null
    shipStreet?: string | null
    shipCity?: string | null
    shipState?: string | null
    shipPostalCode?: string | null
    shipCountry?: string | null
    shipRemark?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales?: SalesCreateNestedManyWithoutCustomerInput
    promotionUsage?: PromotionUsageCreateNestedManyWithoutCustomerInput
    reservations?: ReservationCreateNestedManyWithoutCustomerInput
    waitlists?: WaitlistCreateNestedManyWithoutCustomerInput
    splitBills?: SplitBillCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutPromotionsInput = {
    id?: number
    salutation?: string
    lastName: string
    firstName: string
    mobile?: string | null
    email?: string | null
    gender?: string | null
    billStreet?: string | null
    billCity?: string | null
    billState?: string | null
    billPostalCode?: string | null
    billCountry?: string | null
    billRemark?: string | null
    shipStreet?: string | null
    shipCity?: string | null
    shipState?: string | null
    shipPostalCode?: string | null
    shipCountry?: string | null
    shipRemark?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales?: SalesUncheckedCreateNestedManyWithoutCustomerInput
    promotionUsage?: PromotionUsageUncheckedCreateNestedManyWithoutCustomerInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutCustomerInput
    waitlists?: WaitlistUncheckedCreateNestedManyWithoutCustomerInput
    splitBills?: SplitBillUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutPromotionsInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutPromotionsInput, CustomerUncheckedCreateWithoutPromotionsInput>
  }

  export type PromotionUpsertWithoutCustomersInput = {
    update: XOR<PromotionUpdateWithoutCustomersInput, PromotionUncheckedUpdateWithoutCustomersInput>
    create: XOR<PromotionCreateWithoutCustomersInput, PromotionUncheckedCreateWithoutCustomersInput>
    where?: PromotionWhereInput
  }

  export type PromotionUpdateToOneWithWhereWithoutCustomersInput = {
    where?: PromotionWhereInput
    data: XOR<PromotionUpdateWithoutCustomersInput, PromotionUncheckedUpdateWithoutCustomersInput>
  }

  export type PromotionUpdateWithoutCustomersInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumPromotionTypeFieldUpdateOperationsInput | $Enums.PromotionType
    status?: EnumPromotionStatusFieldUpdateOperationsInput | $Enums.PromotionStatus
    priority?: IntFieldUpdateOperationsInput | number
    combinationRule?: EnumCombinationRuleFieldUpdateOperationsInput | $Enums.CombinationRule
    discountType?: EnumDiscountTypeFieldUpdateOperationsInput | $Enums.DiscountType
    discountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    buyQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getDiscountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableStringFieldUpdateOperationsInput | string | null
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    validDays?: NullableStringFieldUpdateOperationsInput | string | null
    minPurchaseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsageTotal?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsagePerCustomer?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    isCustomerSpecific?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
    items?: PromotionItemUpdateManyWithoutPromotionNestedInput
    usageHistory?: PromotionUsageUpdateManyWithoutPromotionNestedInput
  }

  export type PromotionUncheckedUpdateWithoutCustomersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumPromotionTypeFieldUpdateOperationsInput | $Enums.PromotionType
    status?: EnumPromotionStatusFieldUpdateOperationsInput | $Enums.PromotionStatus
    priority?: IntFieldUpdateOperationsInput | number
    combinationRule?: EnumCombinationRuleFieldUpdateOperationsInput | $Enums.CombinationRule
    discountType?: EnumDiscountTypeFieldUpdateOperationsInput | $Enums.DiscountType
    discountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    buyQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getDiscountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableStringFieldUpdateOperationsInput | string | null
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    validDays?: NullableStringFieldUpdateOperationsInput | string | null
    minPurchaseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsageTotal?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsagePerCustomer?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    isCustomerSpecific?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
    items?: PromotionItemUncheckedUpdateManyWithoutPromotionNestedInput
    usageHistory?: PromotionUsageUncheckedUpdateManyWithoutPromotionNestedInput
  }

  export type CustomerUpsertWithoutPromotionsInput = {
    update: XOR<CustomerUpdateWithoutPromotionsInput, CustomerUncheckedUpdateWithoutPromotionsInput>
    create: XOR<CustomerCreateWithoutPromotionsInput, CustomerUncheckedCreateWithoutPromotionsInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutPromotionsInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutPromotionsInput, CustomerUncheckedUpdateWithoutPromotionsInput>
  }

  export type CustomerUpdateWithoutPromotionsInput = {
    salutation?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: NullableStringFieldUpdateOperationsInput | string | null
    billCity?: NullableStringFieldUpdateOperationsInput | string | null
    billState?: NullableStringFieldUpdateOperationsInput | string | null
    billPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    billCountry?: NullableStringFieldUpdateOperationsInput | string | null
    billRemark?: NullableStringFieldUpdateOperationsInput | string | null
    shipStreet?: NullableStringFieldUpdateOperationsInput | string | null
    shipCity?: NullableStringFieldUpdateOperationsInput | string | null
    shipState?: NullableStringFieldUpdateOperationsInput | string | null
    shipPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    shipCountry?: NullableStringFieldUpdateOperationsInput | string | null
    shipRemark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUpdateManyWithoutCustomerNestedInput
    promotionUsage?: PromotionUsageUpdateManyWithoutCustomerNestedInput
    reservations?: ReservationUpdateManyWithoutCustomerNestedInput
    waitlists?: WaitlistUpdateManyWithoutCustomerNestedInput
    splitBills?: SplitBillUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutPromotionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    salutation?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: NullableStringFieldUpdateOperationsInput | string | null
    billCity?: NullableStringFieldUpdateOperationsInput | string | null
    billState?: NullableStringFieldUpdateOperationsInput | string | null
    billPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    billCountry?: NullableStringFieldUpdateOperationsInput | string | null
    billRemark?: NullableStringFieldUpdateOperationsInput | string | null
    shipStreet?: NullableStringFieldUpdateOperationsInput | string | null
    shipCity?: NullableStringFieldUpdateOperationsInput | string | null
    shipState?: NullableStringFieldUpdateOperationsInput | string | null
    shipPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    shipCountry?: NullableStringFieldUpdateOperationsInput | string | null
    shipRemark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUncheckedUpdateManyWithoutCustomerNestedInput
    promotionUsage?: PromotionUsageUncheckedUpdateManyWithoutCustomerNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutCustomerNestedInput
    waitlists?: WaitlistUncheckedUpdateManyWithoutCustomerNestedInput
    splitBills?: SplitBillUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type PromotionCreateWithoutUsageHistoryInput = {
    name: string
    description?: string | null
    type: $Enums.PromotionType
    status?: $Enums.PromotionStatus
    priority?: number
    combinationRule?: $Enums.CombinationRule
    discountType: $Enums.DiscountType
    discountValue?: Decimal | DecimalJsLike | number | string | null
    buyQuantity?: number | null
    getQuantity?: number | null
    getDiscountValue?: Decimal | DecimalJsLike | number | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    startTime?: string | null
    endTime?: string | null
    validDays?: string | null
    minPurchaseAmount?: Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: number | null
    maxUsageTotal?: number | null
    maxUsagePerCustomer?: number | null
    currentUsage?: number
    isCustomerSpecific?: boolean
    createdBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
    items?: PromotionItemCreateNestedManyWithoutPromotionInput
    customers?: PromotionCustomerCreateNestedManyWithoutPromotionInput
  }

  export type PromotionUncheckedCreateWithoutUsageHistoryInput = {
    id?: number
    name: string
    description?: string | null
    type: $Enums.PromotionType
    status?: $Enums.PromotionStatus
    priority?: number
    combinationRule?: $Enums.CombinationRule
    discountType: $Enums.DiscountType
    discountValue?: Decimal | DecimalJsLike | number | string | null
    buyQuantity?: number | null
    getQuantity?: number | null
    getDiscountValue?: Decimal | DecimalJsLike | number | string | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    startTime?: string | null
    endTime?: string | null
    validDays?: string | null
    minPurchaseAmount?: Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: number | null
    maxUsageTotal?: number | null
    maxUsagePerCustomer?: number | null
    currentUsage?: number
    isCustomerSpecific?: boolean
    createdBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
    items?: PromotionItemUncheckedCreateNestedManyWithoutPromotionInput
    customers?: PromotionCustomerUncheckedCreateNestedManyWithoutPromotionInput
  }

  export type PromotionCreateOrConnectWithoutUsageHistoryInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutUsageHistoryInput, PromotionUncheckedCreateWithoutUsageHistoryInput>
  }

  export type CustomerCreateWithoutPromotionUsageInput = {
    salutation?: string
    lastName: string
    firstName: string
    mobile?: string | null
    email?: string | null
    gender?: string | null
    billStreet?: string | null
    billCity?: string | null
    billState?: string | null
    billPostalCode?: string | null
    billCountry?: string | null
    billRemark?: string | null
    shipStreet?: string | null
    shipCity?: string | null
    shipState?: string | null
    shipPostalCode?: string | null
    shipCountry?: string | null
    shipRemark?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales?: SalesCreateNestedManyWithoutCustomerInput
    promotions?: PromotionCustomerCreateNestedManyWithoutCustomerInput
    reservations?: ReservationCreateNestedManyWithoutCustomerInput
    waitlists?: WaitlistCreateNestedManyWithoutCustomerInput
    splitBills?: SplitBillCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutPromotionUsageInput = {
    id?: number
    salutation?: string
    lastName: string
    firstName: string
    mobile?: string | null
    email?: string | null
    gender?: string | null
    billStreet?: string | null
    billCity?: string | null
    billState?: string | null
    billPostalCode?: string | null
    billCountry?: string | null
    billRemark?: string | null
    shipStreet?: string | null
    shipCity?: string | null
    shipState?: string | null
    shipPostalCode?: string | null
    shipCountry?: string | null
    shipRemark?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    sales?: SalesUncheckedCreateNestedManyWithoutCustomerInput
    promotions?: PromotionCustomerUncheckedCreateNestedManyWithoutCustomerInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutCustomerInput
    waitlists?: WaitlistUncheckedCreateNestedManyWithoutCustomerInput
    splitBills?: SplitBillUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutPromotionUsageInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutPromotionUsageInput, CustomerUncheckedCreateWithoutPromotionUsageInput>
  }

  export type PromotionUpsertWithoutUsageHistoryInput = {
    update: XOR<PromotionUpdateWithoutUsageHistoryInput, PromotionUncheckedUpdateWithoutUsageHistoryInput>
    create: XOR<PromotionCreateWithoutUsageHistoryInput, PromotionUncheckedCreateWithoutUsageHistoryInput>
    where?: PromotionWhereInput
  }

  export type PromotionUpdateToOneWithWhereWithoutUsageHistoryInput = {
    where?: PromotionWhereInput
    data: XOR<PromotionUpdateWithoutUsageHistoryInput, PromotionUncheckedUpdateWithoutUsageHistoryInput>
  }

  export type PromotionUpdateWithoutUsageHistoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumPromotionTypeFieldUpdateOperationsInput | $Enums.PromotionType
    status?: EnumPromotionStatusFieldUpdateOperationsInput | $Enums.PromotionStatus
    priority?: IntFieldUpdateOperationsInput | number
    combinationRule?: EnumCombinationRuleFieldUpdateOperationsInput | $Enums.CombinationRule
    discountType?: EnumDiscountTypeFieldUpdateOperationsInput | $Enums.DiscountType
    discountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    buyQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getDiscountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableStringFieldUpdateOperationsInput | string | null
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    validDays?: NullableStringFieldUpdateOperationsInput | string | null
    minPurchaseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsageTotal?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsagePerCustomer?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    isCustomerSpecific?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
    items?: PromotionItemUpdateManyWithoutPromotionNestedInput
    customers?: PromotionCustomerUpdateManyWithoutPromotionNestedInput
  }

  export type PromotionUncheckedUpdateWithoutUsageHistoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumPromotionTypeFieldUpdateOperationsInput | $Enums.PromotionType
    status?: EnumPromotionStatusFieldUpdateOperationsInput | $Enums.PromotionStatus
    priority?: IntFieldUpdateOperationsInput | number
    combinationRule?: EnumCombinationRuleFieldUpdateOperationsInput | $Enums.CombinationRule
    discountType?: EnumDiscountTypeFieldUpdateOperationsInput | $Enums.DiscountType
    discountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    buyQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    getDiscountValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableStringFieldUpdateOperationsInput | string | null
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    validDays?: NullableStringFieldUpdateOperationsInput | string | null
    minPurchaseAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    minPurchaseQty?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsageTotal?: NullableIntFieldUpdateOperationsInput | number | null
    maxUsagePerCustomer?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    isCustomerSpecific?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
    items?: PromotionItemUncheckedUpdateManyWithoutPromotionNestedInput
    customers?: PromotionCustomerUncheckedUpdateManyWithoutPromotionNestedInput
  }

  export type CustomerUpsertWithoutPromotionUsageInput = {
    update: XOR<CustomerUpdateWithoutPromotionUsageInput, CustomerUncheckedUpdateWithoutPromotionUsageInput>
    create: XOR<CustomerCreateWithoutPromotionUsageInput, CustomerUncheckedCreateWithoutPromotionUsageInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutPromotionUsageInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutPromotionUsageInput, CustomerUncheckedUpdateWithoutPromotionUsageInput>
  }

  export type CustomerUpdateWithoutPromotionUsageInput = {
    salutation?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: NullableStringFieldUpdateOperationsInput | string | null
    billCity?: NullableStringFieldUpdateOperationsInput | string | null
    billState?: NullableStringFieldUpdateOperationsInput | string | null
    billPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    billCountry?: NullableStringFieldUpdateOperationsInput | string | null
    billRemark?: NullableStringFieldUpdateOperationsInput | string | null
    shipStreet?: NullableStringFieldUpdateOperationsInput | string | null
    shipCity?: NullableStringFieldUpdateOperationsInput | string | null
    shipState?: NullableStringFieldUpdateOperationsInput | string | null
    shipPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    shipCountry?: NullableStringFieldUpdateOperationsInput | string | null
    shipRemark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUpdateManyWithoutCustomerNestedInput
    promotions?: PromotionCustomerUpdateManyWithoutCustomerNestedInput
    reservations?: ReservationUpdateManyWithoutCustomerNestedInput
    waitlists?: WaitlistUpdateManyWithoutCustomerNestedInput
    splitBills?: SplitBillUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutPromotionUsageInput = {
    id?: IntFieldUpdateOperationsInput | number
    salutation?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: NullableStringFieldUpdateOperationsInput | string | null
    billCity?: NullableStringFieldUpdateOperationsInput | string | null
    billState?: NullableStringFieldUpdateOperationsInput | string | null
    billPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    billCountry?: NullableStringFieldUpdateOperationsInput | string | null
    billRemark?: NullableStringFieldUpdateOperationsInput | string | null
    shipStreet?: NullableStringFieldUpdateOperationsInput | string | null
    shipCity?: NullableStringFieldUpdateOperationsInput | string | null
    shipState?: NullableStringFieldUpdateOperationsInput | string | null
    shipPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    shipCountry?: NullableStringFieldUpdateOperationsInput | string | null
    shipRemark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUncheckedUpdateManyWithoutCustomerNestedInput
    promotions?: PromotionCustomerUncheckedUpdateManyWithoutCustomerNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutCustomerNestedInput
    waitlists?: WaitlistUncheckedUpdateManyWithoutCustomerNestedInput
    splitBills?: SplitBillUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type RolePermissionCreateManyRoleInput = {
    id?: number
    permissionId: number
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type RolePermissionUpdateWithoutRoleInput = {
    permissionId?: IntFieldUpdateOperationsInput | number
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RolePermissionUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    permissionId?: IntFieldUpdateOperationsInput | number
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RolePermissionUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    permissionId?: IntFieldUpdateOperationsInput | number
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type UserUpdateWithoutRolesInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    settings?: SettingUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    settings?: SettingUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    mobile?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SettingCreateManyUserInput = {
    id?: number
    tenantId?: number | null
    outletId?: number | null
    key: string
    value: string
    type: $Enums.SettingType
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SettingUpdateWithoutUserInput = {
    tenantId?: NullableIntFieldUpdateOperationsInput | number | null
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    type?: EnumSettingTypeFieldUpdateOperationsInput | $Enums.SettingType
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    outlet?: OutletUpdateOneWithoutSettingsNestedInput
  }

  export type SettingUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantId?: NullableIntFieldUpdateOperationsInput | number | null
    outletId?: NullableIntFieldUpdateOperationsInput | number | null
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    type?: EnumSettingTypeFieldUpdateOperationsInput | $Enums.SettingType
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SettingUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantId?: NullableIntFieldUpdateOperationsInput | number | null
    outletId?: NullableIntFieldUpdateOperationsInput | number | null
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    type?: EnumSettingTypeFieldUpdateOperationsInput | $Enums.SettingType
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RoleUpdateWithoutUsersInput = {
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    permission?: RolePermissionUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    permission?: RolePermissionUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ItemCreateManySupplierInput = {
    id?: number
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    categoryId: number
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type PurchaseOrderCreateManySupplierInput = {
    id?: number
    purchaseOrderNumber: string
    outletId: number
    purchaseOrderDate?: Date | string | null
    sessionId?: number | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    roundingAmount?: Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: Decimal | DecimalJsLike | number | string | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    status: string
    remark?: string | null
    currency?: string
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type InvoiceCreateManySupplierInput = {
    id?: number
    invoiceNumber: string
    taxInvoiceNumber: string
    purchaseOrderId?: number | null
    outletId: number
    subtotalAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    sessionId?: number | null
    discountType?: string | null
    discountAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    invoiceDate?: Date | string | null
    paymentDate?: Date | string | null
    dueDate?: Date | string | null
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type ItemUpdateWithoutSupplierInput = {
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    category?: CategoryUpdateOneRequiredWithoutItemsNestedInput
    stockBalance?: StockBalanceUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutItemNestedInput
    recipes?: RecipeUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUpdateManyWithoutItemNestedInput
  }

  export type ItemUncheckedUpdateWithoutSupplierInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: IntFieldUpdateOperationsInput | number
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalance?: StockBalanceUncheckedUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutItemNestedInput
    recipes?: RecipeUncheckedUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type ItemUncheckedUpdateManyWithoutSupplierInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    categoryId?: IntFieldUpdateOperationsInput | number
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PurchaseOrderUpdateWithoutSupplierInput = {
    purchaseOrderNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    purchaseOrderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    session?: SessionUpdateOneWithoutPurchaseOrdersNestedInput
    purchaseOrderItems?: PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput
    deliveryOrders?: DeliveryOrderUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: InvoiceUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderUncheckedUpdateWithoutSupplierInput = {
    id?: IntFieldUpdateOperationsInput | number
    purchaseOrderNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    purchaseOrderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrderItems?: PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    deliveryOrders?: DeliveryOrderUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderUncheckedUpdateManyWithoutSupplierInput = {
    id?: IntFieldUpdateOperationsInput | number
    purchaseOrderNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    purchaseOrderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type InvoiceUpdateWithoutSupplierInput = {
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    session?: SessionUpdateOneWithoutInvoicesNestedInput
    purchaseOrder?: PurchaseOrderUpdateOneWithoutInvoicesNestedInput
    invoiceItems?: InvoiceItemUpdateManyWithoutInvoiceNestedInput
    deliveryOrders?: DeliveryOrderUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutSupplierInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: NullableIntFieldUpdateOperationsInput | number | null
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    invoiceItems?: InvoiceItemUncheckedUpdateManyWithoutInvoiceNestedInput
    deliveryOrders?: DeliveryOrderUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateManyWithoutSupplierInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: NullableIntFieldUpdateOperationsInput | number | null
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesCreateManyCustomerInput = {
    id?: number
    outletId: number
    businessDate: Date | string
    salesType: string
    customerName?: string | null
    phoneNumber?: string | null
    billStreet?: string
    billCity?: string
    billState?: string
    billPostalCode?: string
    billCountry?: string
    shipStreet?: string
    shipCity?: string
    shipState?: string
    shipPostalCode?: string
    shipCountry?: string
    totalItemDiscountAmount?: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    profitAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    roundingAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    changeAmount?: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string
    completedSessionId?: number | null
    sessionId: number
    eodId: number
    salesQuotationId?: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    tableId?: number | null
    orderStatus?: string | null
  }

  export type PromotionCustomerCreateManyCustomerInput = {
    id?: number
    promotionId: number
    maxUsage?: number | null
    currentUsage?: number
    deleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
  }

  export type PromotionUsageCreateManyCustomerInput = {
    id?: number
    promotionId: number
    salesId?: number | null
    discountAmount: Decimal | DecimalJsLike | number | string
    usedAt?: Date | string
    version?: number | null
  }

  export type ReservationCreateManyCustomerInput = {
    id?: number
    outletId: number
    tableId?: number | null
    dateTime: Date | string
    partySize: number
    status: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type WaitlistCreateManyCustomerInput = {
    id?: number
    outletId: number
    partySize: number
    status: string
    waitTime?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SplitBillCreateManyCustomerInput = {
    id?: number
    salesId: number
    amount: Decimal | DecimalJsLike | number | string
    paymentId?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SalesUpdateWithoutCustomerInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    salesType?: StringFieldUpdateOperationsInput | string
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: StringFieldUpdateOperationsInput | string
    billCity?: StringFieldUpdateOperationsInput | string
    billState?: StringFieldUpdateOperationsInput | string
    billPostalCode?: StringFieldUpdateOperationsInput | string
    billCountry?: StringFieldUpdateOperationsInput | string
    shipStreet?: StringFieldUpdateOperationsInput | string
    shipCity?: StringFieldUpdateOperationsInput | string
    shipState?: StringFieldUpdateOperationsInput | string
    shipPostalCode?: StringFieldUpdateOperationsInput | string
    shipCountry?: StringFieldUpdateOperationsInput | string
    totalItemDiscountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    completedSessionId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    orderStatus?: NullableStringFieldUpdateOperationsInput | string | null
    salesItems?: SalesItemUpdateManyWithoutSalesNestedInput
    payments?: PaymentUpdateManyWithoutSalesNestedInput
    registerLogs?: RegisterLogUpdateManyWithoutSalesNestedInput
    table?: TableUpdateOneWithoutSalesNestedInput
  }

  export type SalesUncheckedUpdateWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    salesType?: StringFieldUpdateOperationsInput | string
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: StringFieldUpdateOperationsInput | string
    billCity?: StringFieldUpdateOperationsInput | string
    billState?: StringFieldUpdateOperationsInput | string
    billPostalCode?: StringFieldUpdateOperationsInput | string
    billCountry?: StringFieldUpdateOperationsInput | string
    shipStreet?: StringFieldUpdateOperationsInput | string
    shipCity?: StringFieldUpdateOperationsInput | string
    shipState?: StringFieldUpdateOperationsInput | string
    shipPostalCode?: StringFieldUpdateOperationsInput | string
    shipCountry?: StringFieldUpdateOperationsInput | string
    totalItemDiscountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    completedSessionId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    tableId?: NullableIntFieldUpdateOperationsInput | number | null
    orderStatus?: NullableStringFieldUpdateOperationsInput | string | null
    salesItems?: SalesItemUncheckedUpdateManyWithoutSalesNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutSalesNestedInput
    registerLogs?: RegisterLogUncheckedUpdateManyWithoutSalesNestedInput
  }

  export type SalesUncheckedUpdateManyWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    salesType?: StringFieldUpdateOperationsInput | string
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: StringFieldUpdateOperationsInput | string
    billCity?: StringFieldUpdateOperationsInput | string
    billState?: StringFieldUpdateOperationsInput | string
    billPostalCode?: StringFieldUpdateOperationsInput | string
    billCountry?: StringFieldUpdateOperationsInput | string
    shipStreet?: StringFieldUpdateOperationsInput | string
    shipCity?: StringFieldUpdateOperationsInput | string
    shipState?: StringFieldUpdateOperationsInput | string
    shipPostalCode?: StringFieldUpdateOperationsInput | string
    shipCountry?: StringFieldUpdateOperationsInput | string
    totalItemDiscountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    completedSessionId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    tableId?: NullableIntFieldUpdateOperationsInput | number | null
    orderStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromotionCustomerUpdateWithoutCustomerInput = {
    maxUsage?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
    promotion?: PromotionUpdateOneRequiredWithoutCustomersNestedInput
  }

  export type PromotionCustomerUncheckedUpdateWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: IntFieldUpdateOperationsInput | number
    maxUsage?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCustomerUncheckedUpdateManyWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: IntFieldUpdateOperationsInput | number
    maxUsage?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUsageUpdateWithoutCustomerInput = {
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
    promotion?: PromotionUpdateOneRequiredWithoutUsageHistoryNestedInput
  }

  export type PromotionUsageUncheckedUpdateWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: IntFieldUpdateOperationsInput | number
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUsageUncheckedUpdateManyWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: IntFieldUpdateOperationsInput | number
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReservationUpdateWithoutCustomerInput = {
    dateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    outlet?: OutletUpdateOneRequiredWithoutReservationsNestedInput
    table?: TableUpdateOneWithoutReservationsNestedInput
  }

  export type ReservationUncheckedUpdateWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    tableId?: NullableIntFieldUpdateOperationsInput | number | null
    dateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReservationUncheckedUpdateManyWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    tableId?: NullableIntFieldUpdateOperationsInput | number | null
    dateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type WaitlistUpdateWithoutCustomerInput = {
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    waitTime?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    outlet?: OutletUpdateOneRequiredWithoutWaitlistsNestedInput
  }

  export type WaitlistUncheckedUpdateWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    waitTime?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type WaitlistUncheckedUpdateManyWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    waitTime?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SplitBillUpdateWithoutCustomerInput = {
    salesId?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    payment?: PaymentUpdateOneWithoutSplitBillsNestedInput
  }

  export type SplitBillUncheckedUpdateWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesId?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SplitBillUncheckedUpdateManyWithoutCustomerInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesId?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockBalanceCreateManyOutletInput = {
    id?: number
    itemId: number
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    reorderThreshold?: Decimal | DecimalJsLike | number | string | null
    deleted?: boolean
    lastRestockDate?: Date | string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StockMovementCreateManyOutletInput = {
    id?: number
    itemId: number
    previousAvailableQuantity: Decimal | DecimalJsLike | number | string
    previousOnHandQuantity: Decimal | DecimalJsLike | number | string
    availableQuantityDelta: Decimal | DecimalJsLike | number | string
    onHandQuantityDelta: Decimal | DecimalJsLike | number | string
    movementType: string
    documentId: number
    reason: string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    performedBy?: string | null
  }

  export type StockSnapshotCreateManyOutletInput = {
    id?: number
    itemId: number
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StockReceiptCreateManyOutletInput = {
    id?: number
    itemId: number
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    receiptDate?: Date | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type SettingCreateManyOutletInput = {
    id?: number
    tenantId?: number | null
    userId?: number | null
    key: string
    value: string
    type: $Enums.SettingType
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type TableCreateManyOutletInput = {
    id?: number
    tableNumber: string
    capacity: number
    status: string
    salesId?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StationCreateManyOutletInput = {
    id?: number
    name: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type ReservationCreateManyOutletInput = {
    id?: number
    customerId?: number | null
    tableId?: number | null
    dateTime: Date | string
    partySize: number
    status: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type WaitlistCreateManyOutletInput = {
    id?: number
    customerId?: number | null
    partySize: number
    status: string
    waitTime?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StockBalanceUpdateWithoutOutletInput = {
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reorderThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    lastRestockDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    item?: ItemUpdateOneRequiredWithoutStockBalanceNestedInput
  }

  export type StockBalanceUncheckedUpdateWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reorderThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    lastRestockDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockBalanceUncheckedUpdateManyWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reorderThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    lastRestockDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockMovementUpdateWithoutOutletInput = {
    previousAvailableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    movementType?: StringFieldUpdateOperationsInput | string
    documentId?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    item?: ItemUpdateOneRequiredWithoutStockMovementsNestedInput
  }

  export type StockMovementUncheckedUpdateWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    previousAvailableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    movementType?: StringFieldUpdateOperationsInput | string
    documentId?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StockMovementUncheckedUpdateManyWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    previousAvailableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    movementType?: StringFieldUpdateOperationsInput | string
    documentId?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StockSnapshotUpdateWithoutOutletInput = {
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    item?: ItemUpdateOneRequiredWithoutStockSnapshotsNestedInput
  }

  export type StockSnapshotUncheckedUpdateWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockSnapshotUncheckedUpdateManyWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockReceiptUpdateWithoutOutletInput = {
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    item?: ItemUpdateOneRequiredWithoutStockReceiptsNestedInput
  }

  export type StockReceiptUncheckedUpdateWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockReceiptUncheckedUpdateManyWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SettingUpdateWithoutOutletInput = {
    tenantId?: NullableIntFieldUpdateOperationsInput | number | null
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    type?: EnumSettingTypeFieldUpdateOperationsInput | $Enums.SettingType
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    user?: UserUpdateOneWithoutSettingsNestedInput
  }

  export type SettingUncheckedUpdateWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantId?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    type?: EnumSettingTypeFieldUpdateOperationsInput | $Enums.SettingType
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SettingUncheckedUpdateManyWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenantId?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    type?: EnumSettingTypeFieldUpdateOperationsInput | $Enums.SettingType
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TableUpdateWithoutOutletInput = {
    tableNumber?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUpdateManyWithoutTableNestedInput
    reservations?: ReservationUpdateManyWithoutTableNestedInput
  }

  export type TableUncheckedUpdateWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    tableNumber?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: SalesUncheckedUpdateManyWithoutTableNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutTableNestedInput
  }

  export type TableUncheckedUpdateManyWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    tableNumber?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StationUpdateWithoutOutletInput = {
    name?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    orderRouting?: OrderRoutingUpdateManyWithoutStationNestedInput
  }

  export type StationUncheckedUpdateWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    orderRouting?: OrderRoutingUncheckedUpdateManyWithoutStationNestedInput
  }

  export type StationUncheckedUpdateManyWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReservationUpdateWithoutOutletInput = {
    dateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    customer?: CustomerUpdateOneWithoutReservationsNestedInput
    table?: TableUpdateOneWithoutReservationsNestedInput
  }

  export type ReservationUncheckedUpdateWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    tableId?: NullableIntFieldUpdateOperationsInput | number | null
    dateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReservationUncheckedUpdateManyWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    tableId?: NullableIntFieldUpdateOperationsInput | number | null
    dateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type WaitlistUpdateWithoutOutletInput = {
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    waitTime?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    customer?: CustomerUpdateOneWithoutWaitlistsNestedInput
  }

  export type WaitlistUncheckedUpdateWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    waitTime?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type WaitlistUncheckedUpdateManyWithoutOutletInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    waitTime?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockBalanceCreateManyItemInput = {
    id?: number
    outletId: number
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    reorderThreshold?: Decimal | DecimalJsLike | number | string | null
    deleted?: boolean
    lastRestockDate?: Date | string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StockMovementCreateManyItemInput = {
    id?: number
    outletId: number
    previousAvailableQuantity: Decimal | DecimalJsLike | number | string
    previousOnHandQuantity: Decimal | DecimalJsLike | number | string
    availableQuantityDelta: Decimal | DecimalJsLike | number | string
    onHandQuantityDelta: Decimal | DecimalJsLike | number | string
    movementType: string
    documentId: number
    reason: string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    performedBy?: string | null
  }

  export type StockSnapshotCreateManyItemInput = {
    id?: number
    outletId: number
    availableQuantity: Decimal | DecimalJsLike | number | string
    onHandQuantity: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type StockReceiptCreateManyItemInput = {
    id?: number
    outletId: number
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    receiptDate?: Date | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type RecipeCreateManyItemInput = {
    id?: number
    menuItemId: number
    quantity: number
    unit: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    batchYield?: number | null
    menuItemModifierId?: number | null
  }

  export type PurchaseOrderItemCreateManyItemInput = {
    id?: number
    purchaseOrderId: number
    quantity: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
  }

  export type DeliveryOrderItemCreateManyItemInput = {
    id?: number
    deliveryOrderId: number
    orderedQuantity: number
    receivedQuantity: number
    unitPrice?: Decimal | DecimalJsLike | number | string | null
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
  }

  export type InvoiceItemCreateManyItemInput = {
    id?: number
    invoiceId: number
    quantity: Decimal | DecimalJsLike | number | string
    unitPrice: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type StockBalanceUpdateWithoutItemInput = {
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reorderThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    lastRestockDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    outlet?: OutletUpdateOneRequiredWithoutStockBalancesNestedInput
  }

  export type StockBalanceUncheckedUpdateWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reorderThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    lastRestockDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockBalanceUncheckedUpdateManyWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reorderThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    lastRestockDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockMovementUpdateWithoutItemInput = {
    previousAvailableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    movementType?: StringFieldUpdateOperationsInput | string
    documentId?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    outlet?: OutletUpdateOneRequiredWithoutStockMovementsNestedInput
  }

  export type StockMovementUncheckedUpdateWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    previousAvailableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    movementType?: StringFieldUpdateOperationsInput | string
    documentId?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StockMovementUncheckedUpdateManyWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    previousAvailableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    previousOnHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    availableQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantityDelta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    movementType?: StringFieldUpdateOperationsInput | string
    documentId?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StockSnapshotUpdateWithoutItemInput = {
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    outlet?: OutletUpdateOneRequiredWithoutStockSnapshotsNestedInput
  }

  export type StockSnapshotUncheckedUpdateWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockSnapshotUncheckedUpdateManyWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    availableQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    onHandQuantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockReceiptUpdateWithoutItemInput = {
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    outlet?: OutletUpdateOneRequiredWithoutStockReceiptsNestedInput
  }

  export type StockReceiptUncheckedUpdateWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StockReceiptUncheckedUpdateManyWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    receiptDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RecipeUpdateWithoutItemInput = {
    quantity?: FloatFieldUpdateOperationsInput | number
    unit?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    batchYield?: NullableFloatFieldUpdateOperationsInput | number | null
    menuItemModifier?: MenuItemModifierUpdateOneWithoutRecipesNestedInput
    menuItem?: MenuItemUpdateOneRequiredWithoutRecipesNestedInput
  }

  export type RecipeUncheckedUpdateWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    menuItemId?: IntFieldUpdateOperationsInput | number
    quantity?: FloatFieldUpdateOperationsInput | number
    unit?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    batchYield?: NullableFloatFieldUpdateOperationsInput | number | null
    menuItemModifierId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RecipeUncheckedUpdateManyWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    menuItemId?: IntFieldUpdateOperationsInput | number
    quantity?: FloatFieldUpdateOperationsInput | number
    unit?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    batchYield?: NullableFloatFieldUpdateOperationsInput | number | null
    menuItemModifierId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PurchaseOrderItemUpdateWithoutItemInput = {
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    purchaseOrder?: PurchaseOrderUpdateOneRequiredWithoutPurchaseOrderItemsNestedInput
  }

  export type PurchaseOrderItemUncheckedUpdateWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    purchaseOrderId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PurchaseOrderItemUncheckedUpdateManyWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    purchaseOrderId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DeliveryOrderItemUpdateWithoutItemInput = {
    orderedQuantity?: FloatFieldUpdateOperationsInput | number
    receivedQuantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryOrder?: DeliveryOrderUpdateOneRequiredWithoutDeliveryOrderItemsNestedInput
  }

  export type DeliveryOrderItemUncheckedUpdateWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    deliveryOrderId?: IntFieldUpdateOperationsInput | number
    orderedQuantity?: FloatFieldUpdateOperationsInput | number
    receivedQuantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DeliveryOrderItemUncheckedUpdateManyWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    deliveryOrderId?: IntFieldUpdateOperationsInput | number
    orderedQuantity?: FloatFieldUpdateOperationsInput | number
    receivedQuantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InvoiceItemUpdateWithoutItemInput = {
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    invoice?: InvoiceUpdateOneRequiredWithoutInvoiceItemsNestedInput
  }

  export type InvoiceItemUncheckedUpdateWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type InvoiceItemUncheckedUpdateManyWithoutItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ItemCreateManyCategoryInput = {
    id?: number
    itemName: string
    itemCode: string
    itemType?: string
    itemModel?: string
    itemBrand?: string
    itemDescription?: string | null
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    currency?: string
    isOpenPrice?: boolean | null
    unitOfMeasure?: string
    height?: number | null
    width?: number | null
    length?: number | null
    weight?: number | null
    alternateLookUp?: string | null
    image?: string | null
    hasTax?: boolean | null
    taxRate?: number | null
    supplierId: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type ItemUpdateWithoutCategoryInput = {
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    supplier?: SupplierUpdateOneRequiredWithoutItemsNestedInput
    stockBalance?: StockBalanceUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUpdateManyWithoutItemNestedInput
    recipes?: RecipeUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUpdateManyWithoutItemNestedInput
  }

  export type ItemUncheckedUpdateWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    supplierId?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    stockBalance?: StockBalanceUncheckedUpdateManyWithoutItemNestedInput
    stockMovements?: StockMovementUncheckedUpdateManyWithoutItemNestedInput
    stockSnapshots?: StockSnapshotUncheckedUpdateManyWithoutItemNestedInput
    stockReceipts?: StockReceiptUncheckedUpdateManyWithoutItemNestedInput
    recipes?: RecipeUncheckedUpdateManyWithoutItemNestedInput
    purchaseOrderItems?: PurchaseOrderItemUncheckedUpdateManyWithoutItemNestedInput
    deliveryOrderItems?: DeliveryOrderItemUncheckedUpdateManyWithoutItemNestedInput
    invoiceItems?: InvoiceItemUncheckedUpdateManyWithoutItemNestedInput
  }

  export type ItemUncheckedUpdateManyWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemType?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemDescription?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    isOpenPrice?: NullableBoolFieldUpdateOperationsInput | boolean | null
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    alternateLookUp?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    hasTax?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    supplierId?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesItemCreateManySalesInput = {
    id?: number
    itemId: number
    itemName: string
    itemCode: string
    itemBrand: string
    itemModel?: string
    quantity: Decimal | DecimalJsLike | number | string
    cost: Decimal | DecimalJsLike | number | string
    price: Decimal | DecimalJsLike | number | string
    priceBeforeTax: Decimal | DecimalJsLike | number | string
    profit: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    remark?: string
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    specialInstructions?: string | null
    itemStatus?: string | null
    priority?: string | null
    estimatedPrepTime?: number | null
  }

  export type PaymentCreateManySalesInput = {
    id?: number
    method: string
    tenderedAmount: Decimal | DecimalJsLike | number | string
    paidAmount: Decimal | DecimalJsLike | number | string
    currencySymbol?: string
    reference?: string
    remark?: string
    businessDate: Date | string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type RegisterLogCreateManySalesInput = {
    id?: number
    type: string
    modifiedAmount: Decimal | DecimalJsLike | number | string
    currencySymbol?: string
    remark?: string
    status: string
    outletId: number
    sessionId: number
    eodId: number
    performedBy?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SalesItemUpdateWithoutSalesInput = {
    itemId?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceBeforeTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    specialInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    itemStatus?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedPrepTime?: NullableIntFieldUpdateOperationsInput | number | null
    selectedModifiers?: SalesItemModifierUpdateManyWithoutSalesItemNestedInput
    orderRouting?: OrderRoutingUpdateManyWithoutSalesItemNestedInput
  }

  export type SalesItemUncheckedUpdateWithoutSalesInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceBeforeTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    specialInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    itemStatus?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedPrepTime?: NullableIntFieldUpdateOperationsInput | number | null
    selectedModifiers?: SalesItemModifierUncheckedUpdateManyWithoutSalesItemNestedInput
    orderRouting?: OrderRoutingUncheckedUpdateManyWithoutSalesItemNestedInput
  }

  export type SalesItemUncheckedUpdateManyWithoutSalesInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    itemName?: StringFieldUpdateOperationsInput | string
    itemCode?: StringFieldUpdateOperationsInput | string
    itemBrand?: StringFieldUpdateOperationsInput | string
    itemModel?: StringFieldUpdateOperationsInput | string
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceBeforeTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profit?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    specialInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    itemStatus?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedPrepTime?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PaymentUpdateWithoutSalesInput = {
    method?: StringFieldUpdateOperationsInput | string
    tenderedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    cardInfos?: CardInfoUpdateManyWithoutPaymentNestedInput
    splitBills?: SplitBillUpdateManyWithoutPaymentNestedInput
  }

  export type PaymentUncheckedUpdateWithoutSalesInput = {
    id?: IntFieldUpdateOperationsInput | number
    method?: StringFieldUpdateOperationsInput | string
    tenderedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    cardInfos?: CardInfoUncheckedUpdateManyWithoutPaymentNestedInput
    splitBills?: SplitBillUncheckedUpdateManyWithoutPaymentNestedInput
  }

  export type PaymentUncheckedUpdateManyWithoutSalesInput = {
    id?: IntFieldUpdateOperationsInput | number
    method?: StringFieldUpdateOperationsInput | string
    tenderedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    reference?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegisterLogUpdateWithoutSalesInput = {
    type?: StringFieldUpdateOperationsInput | string
    modifiedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegisterLogUncheckedUpdateWithoutSalesInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    modifiedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RegisterLogUncheckedUpdateManyWithoutSalesInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    modifiedAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesItemModifierCreateManySalesItemInput = {
    id?: number
    menuItemModifierId: number
    itemId?: number | null
    modifierName: string
    modifierPrice: Decimal | DecimalJsLike | number | string
    quantity?: number
    status?: $Enums.OrderStatus | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type OrderRoutingCreateManySalesItemInput = {
    id?: number
    stationId: number
    status: string
    sentAt?: Date | string | null
    completedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SalesItemModifierUpdateWithoutSalesItemInput = {
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    modifierName?: StringFieldUpdateOperationsInput | string
    modifierPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: NullableEnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuItemModifier?: MenuItemModifierUpdateOneRequiredWithoutSalesItemModifiersNestedInput
  }

  export type SalesItemModifierUncheckedUpdateWithoutSalesItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    menuItemModifierId?: IntFieldUpdateOperationsInput | number
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    modifierName?: StringFieldUpdateOperationsInput | string
    modifierPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: NullableEnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesItemModifierUncheckedUpdateManyWithoutSalesItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    menuItemModifierId?: IntFieldUpdateOperationsInput | number
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    modifierName?: StringFieldUpdateOperationsInput | string
    modifierPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: NullableEnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OrderRoutingUpdateWithoutSalesItemInput = {
    status?: StringFieldUpdateOperationsInput | string
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    station?: StationUpdateOneRequiredWithoutOrderRoutingNestedInput
  }

  export type OrderRoutingUncheckedUpdateWithoutSalesItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    stationId?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OrderRoutingUncheckedUpdateManyWithoutSalesItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    stationId?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesQuotationItemCreateManySalesQuotationInput = {
    id?: number
    itemId: number
    quantity: Decimal | DecimalJsLike | number | string
    remark?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SalesQuotationItemUpdateWithoutSalesQuotationInput = {
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesQuotationItemUncheckedUpdateWithoutSalesQuotationInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesQuotationItemUncheckedUpdateManyWithoutSalesQuotationInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type InvoiceItemCreateManyInvoiceInput = {
    id?: number
    itemId: number
    quantity: Decimal | DecimalJsLike | number | string
    unitPrice: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    version?: number | null
  }

  export type DeliveryOrderCreateManyInvoiceInput = {
    id?: number
    trackingNumber?: string | null
    outletId: number
    customerId?: number | null
    purchaseOrderId?: number | null
    supplierId?: number | null
    sessionId?: number | null
    deliveryDate?: Date | string | null
    deliveryStreet?: string | null
    deliveryCity?: string | null
    deliveryState?: string | null
    deliveryPostalCode?: string | null
    deliveryCountry?: string | null
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type InvoiceItemUpdateWithoutInvoiceInput = {
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    item?: ItemUpdateOneRequiredWithoutInvoiceItemsNestedInput
  }

  export type InvoiceItemUncheckedUpdateWithoutInvoiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type InvoiceItemUncheckedUpdateManyWithoutInvoiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DeliveryOrderUpdateWithoutInvoiceInput = {
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryStreet?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCity?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryState?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCountry?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    session?: SessionUpdateOneWithoutDeliveryOrdersNestedInput
    purchaseOrder?: PurchaseOrderUpdateOneWithoutDeliveryOrdersNestedInput
    deliveryOrderItems?: DeliveryOrderItemUpdateManyWithoutDeliveryOrderNestedInput
  }

  export type DeliveryOrderUncheckedUpdateWithoutInvoiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrderId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryStreet?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCity?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryState?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCountry?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryOrderItems?: DeliveryOrderItemUncheckedUpdateManyWithoutDeliveryOrderNestedInput
  }

  export type DeliveryOrderUncheckedUpdateManyWithoutInvoiceInput = {
    id?: IntFieldUpdateOperationsInput | number
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrderId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryStreet?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCity?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryState?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCountry?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DeliveryOrderItemCreateManyDeliveryOrderInput = {
    id?: number
    itemId: number
    orderedQuantity: number
    receivedQuantity: number
    unitPrice?: Decimal | DecimalJsLike | number | string | null
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
  }

  export type DeliveryOrderItemUpdateWithoutDeliveryOrderInput = {
    orderedQuantity?: FloatFieldUpdateOperationsInput | number
    receivedQuantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item?: ItemUpdateOneRequiredWithoutDeliveryOrderItemsNestedInput
  }

  export type DeliveryOrderItemUncheckedUpdateWithoutDeliveryOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    orderedQuantity?: FloatFieldUpdateOperationsInput | number
    receivedQuantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DeliveryOrderItemUncheckedUpdateManyWithoutDeliveryOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    orderedQuantity?: FloatFieldUpdateOperationsInput | number
    receivedQuantity?: FloatFieldUpdateOperationsInput | number
    unitPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PurchaseOrderItemCreateManyPurchaseOrderInput = {
    id?: number
    itemId: number
    quantity: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    unitPrice: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    remark?: string | null
    version?: number | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
  }

  export type DeliveryOrderCreateManyPurchaseOrderInput = {
    id?: number
    trackingNumber?: string | null
    outletId: number
    customerId?: number | null
    supplierId?: number | null
    invoiceId?: number | null
    sessionId?: number | null
    deliveryDate?: Date | string | null
    deliveryStreet?: string | null
    deliveryCity?: string | null
    deliveryState?: string | null
    deliveryPostalCode?: string | null
    deliveryCountry?: string | null
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type InvoiceCreateManyPurchaseOrderInput = {
    id?: number
    invoiceNumber: string
    taxInvoiceNumber: string
    supplierId?: number | null
    outletId: number
    subtotalAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    sessionId?: number | null
    discountType?: string | null
    discountAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    invoiceDate?: Date | string | null
    paymentDate?: Date | string | null
    dueDate?: Date | string | null
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type PurchaseOrderItemUpdateWithoutPurchaseOrderInput = {
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    item?: ItemUpdateOneRequiredWithoutPurchaseOrderItemsNestedInput
  }

  export type PurchaseOrderItemUncheckedUpdateWithoutPurchaseOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DeliveryOrderUpdateWithoutPurchaseOrderInput = {
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryStreet?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCity?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryState?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCountry?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    session?: SessionUpdateOneWithoutDeliveryOrdersNestedInput
    invoice?: InvoiceUpdateOneWithoutDeliveryOrdersNestedInput
    deliveryOrderItems?: DeliveryOrderItemUpdateManyWithoutDeliveryOrderNestedInput
  }

  export type DeliveryOrderUncheckedUpdateWithoutPurchaseOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    invoiceId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryStreet?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCity?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryState?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCountry?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryOrderItems?: DeliveryOrderItemUncheckedUpdateManyWithoutDeliveryOrderNestedInput
  }

  export type DeliveryOrderUncheckedUpdateManyWithoutPurchaseOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    invoiceId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryStreet?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCity?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryState?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCountry?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type InvoiceUpdateWithoutPurchaseOrderInput = {
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    session?: SessionUpdateOneWithoutInvoicesNestedInput
    supplier?: SupplierUpdateOneWithoutInvoicesNestedInput
    invoiceItems?: InvoiceItemUpdateManyWithoutInvoiceNestedInput
    deliveryOrders?: DeliveryOrderUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutPurchaseOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    invoiceItems?: InvoiceItemUncheckedUpdateManyWithoutInvoiceNestedInput
    deliveryOrders?: DeliveryOrderUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateManyWithoutPurchaseOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sessionId?: NullableIntFieldUpdateOperationsInput | number | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CardInfoCreateManyPaymentInput = {
    id?: number
    cardNumber?: string | null
    cardExpiry?: string | null
    traceNumber?: string | null
    type2?: string | null
    type3?: string | null
    cardRate?: number | null
    appCode?: string | null
    cardType?: string | null
    deleted?: boolean
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SplitBillCreateManyPaymentInput = {
    id?: number
    salesId: number
    amount: Decimal | DecimalJsLike | number | string
    customerId?: number | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type CardInfoUpdateWithoutPaymentInput = {
    cardNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cardExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    traceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    type3?: NullableStringFieldUpdateOperationsInput | string | null
    cardRate?: NullableFloatFieldUpdateOperationsInput | number | null
    appCode?: NullableStringFieldUpdateOperationsInput | string | null
    cardType?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CardInfoUncheckedUpdateWithoutPaymentInput = {
    id?: IntFieldUpdateOperationsInput | number
    cardNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cardExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    traceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    type3?: NullableStringFieldUpdateOperationsInput | string | null
    cardRate?: NullableFloatFieldUpdateOperationsInput | number | null
    appCode?: NullableStringFieldUpdateOperationsInput | string | null
    cardType?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type CardInfoUncheckedUpdateManyWithoutPaymentInput = {
    id?: IntFieldUpdateOperationsInput | number
    cardNumber?: NullableStringFieldUpdateOperationsInput | string | null
    cardExpiry?: NullableStringFieldUpdateOperationsInput | string | null
    traceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    type2?: NullableStringFieldUpdateOperationsInput | string | null
    type3?: NullableStringFieldUpdateOperationsInput | string | null
    cardRate?: NullableFloatFieldUpdateOperationsInput | number | null
    appCode?: NullableStringFieldUpdateOperationsInput | string | null
    cardType?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SplitBillUpdateWithoutPaymentInput = {
    salesId?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    customer?: CustomerUpdateOneWithoutSplitBillsNestedInput
  }

  export type SplitBillUncheckedUpdateWithoutPaymentInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesId?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SplitBillUncheckedUpdateManyWithoutPaymentInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesId?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DeclarationCreateManySessionInput = {
    id?: number
    paymentType: string
    totalPaymentAmount: Decimal | DecimalJsLike | number | string
    declarationAmount: Decimal | DecimalJsLike | number | string
    differenceAmount: Decimal | DecimalJsLike | number | string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type PurchaseOrderCreateManySessionInput = {
    id?: number
    purchaseOrderNumber: string
    outletId: number
    supplierId: number
    purchaseOrderDate?: Date | string | null
    discountType?: string | null
    discountAmount?: Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string | null
    taxAmount?: Decimal | DecimalJsLike | number | string | null
    roundingAmount?: Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: Decimal | DecimalJsLike | number | string | null
    totalAmount?: Decimal | DecimalJsLike | number | string | null
    status: string
    remark?: string | null
    currency?: string
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type DeliveryOrderCreateManySessionInput = {
    id?: number
    trackingNumber?: string | null
    outletId: number
    customerId?: number | null
    purchaseOrderId?: number | null
    supplierId?: number | null
    invoiceId?: number | null
    deliveryDate?: Date | string | null
    deliveryStreet?: string | null
    deliveryCity?: string | null
    deliveryState?: string | null
    deliveryPostalCode?: string | null
    deliveryCountry?: string | null
    status: string
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type InvoiceCreateManySessionInput = {
    id?: number
    invoiceNumber: string
    taxInvoiceNumber: string
    purchaseOrderId?: number | null
    supplierId?: number | null
    outletId: number
    subtotalAmount: Decimal | DecimalJsLike | number | string
    taxAmount: Decimal | DecimalJsLike | number | string
    discountType?: string | null
    discountAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    invoiceDate?: Date | string | null
    paymentDate?: Date | string | null
    dueDate?: Date | string | null
    remark?: string | null
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type DeclarationUpdateWithoutSessionInput = {
    paymentType?: StringFieldUpdateOperationsInput | string
    totalPaymentAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    declarationAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    differenceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DeclarationUncheckedUpdateWithoutSessionInput = {
    id?: IntFieldUpdateOperationsInput | number
    paymentType?: StringFieldUpdateOperationsInput | string
    totalPaymentAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    declarationAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    differenceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DeclarationUncheckedUpdateManyWithoutSessionInput = {
    id?: IntFieldUpdateOperationsInput | number
    paymentType?: StringFieldUpdateOperationsInput | string
    totalPaymentAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    declarationAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    differenceAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PurchaseOrderUpdateWithoutSessionInput = {
    purchaseOrderNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    purchaseOrderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    supplier?: SupplierUpdateOneRequiredWithoutPurchaseOrdersNestedInput
    purchaseOrderItems?: PurchaseOrderItemUpdateManyWithoutPurchaseOrderNestedInput
    deliveryOrders?: DeliveryOrderUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: InvoiceUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderUncheckedUpdateWithoutSessionInput = {
    id?: IntFieldUpdateOperationsInput | number
    purchaseOrderNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    purchaseOrderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrderItems?: PurchaseOrderItemUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    deliveryOrders?: DeliveryOrderUncheckedUpdateManyWithoutPurchaseOrderNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutPurchaseOrderNestedInput
  }

  export type PurchaseOrderUncheckedUpdateManyWithoutSessionInput = {
    id?: IntFieldUpdateOperationsInput | number
    purchaseOrderNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    supplierId?: IntFieldUpdateOperationsInput | number
    purchaseOrderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    serviceChargeAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    taxAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    roundingAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subtotalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalAmount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    currency?: StringFieldUpdateOperationsInput | string
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type DeliveryOrderUpdateWithoutSessionInput = {
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryStreet?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCity?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryState?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCountry?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrder?: PurchaseOrderUpdateOneWithoutDeliveryOrdersNestedInput
    invoice?: InvoiceUpdateOneWithoutDeliveryOrdersNestedInput
    deliveryOrderItems?: DeliveryOrderItemUpdateManyWithoutDeliveryOrderNestedInput
  }

  export type DeliveryOrderUncheckedUpdateWithoutSessionInput = {
    id?: IntFieldUpdateOperationsInput | number
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrderId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    invoiceId?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryStreet?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCity?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryState?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCountry?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryOrderItems?: DeliveryOrderItemUncheckedUpdateManyWithoutDeliveryOrderNestedInput
  }

  export type DeliveryOrderUncheckedUpdateManyWithoutSessionInput = {
    id?: IntFieldUpdateOperationsInput | number
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrderId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    invoiceId?: NullableIntFieldUpdateOperationsInput | number | null
    deliveryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryStreet?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCity?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryState?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryPostalCode?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryCountry?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type InvoiceUpdateWithoutSessionInput = {
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    purchaseOrder?: PurchaseOrderUpdateOneWithoutInvoicesNestedInput
    supplier?: SupplierUpdateOneWithoutInvoicesNestedInput
    invoiceItems?: InvoiceItemUpdateManyWithoutInvoiceNestedInput
    deliveryOrders?: DeliveryOrderUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutSessionInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    invoiceItems?: InvoiceItemUncheckedUpdateManyWithoutInvoiceNestedInput
    deliveryOrders?: DeliveryOrderUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateManyWithoutSessionInput = {
    id?: IntFieldUpdateOperationsInput | number
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    taxInvoiceNumber?: StringFieldUpdateOperationsInput | string
    purchaseOrderId?: NullableIntFieldUpdateOperationsInput | number | null
    supplierId?: NullableIntFieldUpdateOperationsInput | number | null
    outletId?: IntFieldUpdateOperationsInput | number
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountType?: NullableStringFieldUpdateOperationsInput | string | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    invoiceDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    paymentDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuCategoryCreateManyMenuProfileInput = {
    id?: number
    name: string
    imageURL?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type MenuCategoryUpdateWithoutMenuProfileInput = {
    name?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuItems?: MenuItemUpdateManyWithoutMenuCategoryNestedInput
  }

  export type MenuCategoryUncheckedUpdateWithoutMenuProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuItems?: MenuItemUncheckedUpdateManyWithoutMenuCategoryNestedInput
  }

  export type MenuCategoryUncheckedUpdateManyWithoutMenuProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuItemCreateManyMenuCategoryInput = {
    id?: number
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type MenuItemUpdateWithoutMenuCategoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuItemModifierGroups?: MenuItemModifierGroupUpdateManyWithoutMenuItemNestedInput
    recipes?: RecipeUpdateManyWithoutMenuItemNestedInput
  }

  export type MenuItemUncheckedUpdateWithoutMenuCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    menuItemModifierGroups?: MenuItemModifierGroupUncheckedUpdateManyWithoutMenuItemNestedInput
    recipes?: RecipeUncheckedUpdateManyWithoutMenuItemNestedInput
  }

  export type MenuItemUncheckedUpdateManyWithoutMenuCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuItemModifierGroupCreateManyMenuItemInput = {
    id?: number
    name: string
    minSelection: number
    maxSelection: number
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    freeModifierLimit?: number | null
  }

  export type RecipeCreateManyMenuItemInput = {
    id?: number
    itemId: number
    quantity: number
    unit: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    batchYield?: number | null
    menuItemModifierId?: number | null
  }

  export type MenuItemModifierGroupUpdateWithoutMenuItemInput = {
    name?: StringFieldUpdateOperationsInput | string
    minSelection?: IntFieldUpdateOperationsInput | number
    maxSelection?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    freeModifierLimit?: NullableIntFieldUpdateOperationsInput | number | null
    menuItemModifiers?: MenuItemModifierUpdateManyWithoutMenuItemModifierGroupNestedInput
  }

  export type MenuItemModifierGroupUncheckedUpdateWithoutMenuItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    minSelection?: IntFieldUpdateOperationsInput | number
    maxSelection?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    freeModifierLimit?: NullableIntFieldUpdateOperationsInput | number | null
    menuItemModifiers?: MenuItemModifierUncheckedUpdateManyWithoutMenuItemModifierGroupNestedInput
  }

  export type MenuItemModifierGroupUncheckedUpdateManyWithoutMenuItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    minSelection?: IntFieldUpdateOperationsInput | number
    maxSelection?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    freeModifierLimit?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RecipeUpdateWithoutMenuItemInput = {
    quantity?: FloatFieldUpdateOperationsInput | number
    unit?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    batchYield?: NullableFloatFieldUpdateOperationsInput | number | null
    menuItemModifier?: MenuItemModifierUpdateOneWithoutRecipesNestedInput
    item?: ItemUpdateOneRequiredWithoutRecipesNestedInput
  }

  export type RecipeUncheckedUpdateWithoutMenuItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: FloatFieldUpdateOperationsInput | number
    unit?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    batchYield?: NullableFloatFieldUpdateOperationsInput | number | null
    menuItemModifierId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RecipeUncheckedUpdateManyWithoutMenuItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: FloatFieldUpdateOperationsInput | number
    unit?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    batchYield?: NullableFloatFieldUpdateOperationsInput | number | null
    menuItemModifierId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MenuItemModifierCreateManyMenuItemModifierGroupInput = {
    id?: number
    name: string
    itemID: number
    itemCode: string
    imageURL?: string | null
    price: Decimal | DecimalJsLike | number | string
    defaultSelectionQty: number
    sequence: number
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type MenuItemModifierUpdateWithoutMenuItemModifierGroupInput = {
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    defaultSelectionQty?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    salesItemModifiers?: SalesItemModifierUpdateManyWithoutMenuItemModifierNestedInput
    recipes?: RecipeUpdateManyWithoutMenuItemModifierNestedInput
  }

  export type MenuItemModifierUncheckedUpdateWithoutMenuItemModifierGroupInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    defaultSelectionQty?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    salesItemModifiers?: SalesItemModifierUncheckedUpdateManyWithoutMenuItemModifierNestedInput
    recipes?: RecipeUncheckedUpdateManyWithoutMenuItemModifierNestedInput
  }

  export type MenuItemModifierUncheckedUpdateManyWithoutMenuItemModifierGroupInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    itemID?: IntFieldUpdateOperationsInput | number
    itemCode?: StringFieldUpdateOperationsInput | string
    imageURL?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    defaultSelectionQty?: IntFieldUpdateOperationsInput | number
    sequence?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesItemModifierCreateManyMenuItemModifierInput = {
    id?: number
    salesItemId: number
    itemId?: number | null
    modifierName: string
    modifierPrice: Decimal | DecimalJsLike | number | string
    quantity?: number
    status?: $Enums.OrderStatus | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type RecipeCreateManyMenuItemModifierInput = {
    id?: number
    menuItemId: number
    itemId: number
    quantity: number
    unit: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    batchYield?: number | null
  }

  export type SalesItemModifierUpdateWithoutMenuItemModifierInput = {
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    modifierName?: StringFieldUpdateOperationsInput | string
    modifierPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: NullableEnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    salesItem?: SalesItemUpdateOneRequiredWithoutSelectedModifiersNestedInput
  }

  export type SalesItemModifierUncheckedUpdateWithoutMenuItemModifierInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesItemId?: IntFieldUpdateOperationsInput | number
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    modifierName?: StringFieldUpdateOperationsInput | string
    modifierPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: NullableEnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SalesItemModifierUncheckedUpdateManyWithoutMenuItemModifierInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesItemId?: IntFieldUpdateOperationsInput | number
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    modifierName?: StringFieldUpdateOperationsInput | string
    modifierPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantity?: IntFieldUpdateOperationsInput | number
    status?: NullableEnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type RecipeUpdateWithoutMenuItemModifierInput = {
    quantity?: FloatFieldUpdateOperationsInput | number
    unit?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    batchYield?: NullableFloatFieldUpdateOperationsInput | number | null
    menuItem?: MenuItemUpdateOneRequiredWithoutRecipesNestedInput
    item?: ItemUpdateOneRequiredWithoutRecipesNestedInput
  }

  export type RecipeUncheckedUpdateWithoutMenuItemModifierInput = {
    id?: IntFieldUpdateOperationsInput | number
    menuItemId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: FloatFieldUpdateOperationsInput | number
    unit?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    batchYield?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type RecipeUncheckedUpdateManyWithoutMenuItemModifierInput = {
    id?: IntFieldUpdateOperationsInput | number
    menuItemId?: IntFieldUpdateOperationsInput | number
    itemId?: IntFieldUpdateOperationsInput | number
    quantity?: FloatFieldUpdateOperationsInput | number
    unit?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    batchYield?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type SalesCreateManyTableInput = {
    id?: number
    outletId: number
    businessDate: Date | string
    salesType: string
    customerName?: string | null
    customerId?: number | null
    phoneNumber?: string | null
    billStreet?: string
    billCity?: string
    billState?: string
    billPostalCode?: string
    billCountry?: string
    shipStreet?: string
    shipCity?: string
    shipState?: string
    shipPostalCode?: string
    shipCountry?: string
    totalItemDiscountAmount?: Decimal | DecimalJsLike | number | string
    discountPercentage?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    profitAmount: Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    roundingAmount?: Decimal | DecimalJsLike | number | string
    subtotalAmount: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paidAmount?: Decimal | DecimalJsLike | number | string
    changeAmount?: Decimal | DecimalJsLike | number | string
    status: string
    remark?: string
    completedSessionId?: number | null
    sessionId: number
    eodId: number
    salesQuotationId?: number
    performedBy?: string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
    orderStatus?: string | null
  }

  export type ReservationCreateManyTableInput = {
    id?: number
    outletId: number
    customerId?: number | null
    dateTime: Date | string
    partySize: number
    status: string
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type SalesUpdateWithoutTableInput = {
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    salesType?: StringFieldUpdateOperationsInput | string
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: StringFieldUpdateOperationsInput | string
    billCity?: StringFieldUpdateOperationsInput | string
    billState?: StringFieldUpdateOperationsInput | string
    billPostalCode?: StringFieldUpdateOperationsInput | string
    billCountry?: StringFieldUpdateOperationsInput | string
    shipStreet?: StringFieldUpdateOperationsInput | string
    shipCity?: StringFieldUpdateOperationsInput | string
    shipState?: StringFieldUpdateOperationsInput | string
    shipPostalCode?: StringFieldUpdateOperationsInput | string
    shipCountry?: StringFieldUpdateOperationsInput | string
    totalItemDiscountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    completedSessionId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    orderStatus?: NullableStringFieldUpdateOperationsInput | string | null
    salesItems?: SalesItemUpdateManyWithoutSalesNestedInput
    payments?: PaymentUpdateManyWithoutSalesNestedInput
    registerLogs?: RegisterLogUpdateManyWithoutSalesNestedInput
    customer?: CustomerUpdateOneWithoutSalesNestedInput
  }

  export type SalesUncheckedUpdateWithoutTableInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    salesType?: StringFieldUpdateOperationsInput | string
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: StringFieldUpdateOperationsInput | string
    billCity?: StringFieldUpdateOperationsInput | string
    billState?: StringFieldUpdateOperationsInput | string
    billPostalCode?: StringFieldUpdateOperationsInput | string
    billCountry?: StringFieldUpdateOperationsInput | string
    shipStreet?: StringFieldUpdateOperationsInput | string
    shipCity?: StringFieldUpdateOperationsInput | string
    shipState?: StringFieldUpdateOperationsInput | string
    shipPostalCode?: StringFieldUpdateOperationsInput | string
    shipCountry?: StringFieldUpdateOperationsInput | string
    totalItemDiscountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    completedSessionId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    orderStatus?: NullableStringFieldUpdateOperationsInput | string | null
    salesItems?: SalesItemUncheckedUpdateManyWithoutSalesNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutSalesNestedInput
    registerLogs?: RegisterLogUncheckedUpdateManyWithoutSalesNestedInput
  }

  export type SalesUncheckedUpdateManyWithoutTableInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    businessDate?: DateTimeFieldUpdateOperationsInput | Date | string
    salesType?: StringFieldUpdateOperationsInput | string
    customerName?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    billStreet?: StringFieldUpdateOperationsInput | string
    billCity?: StringFieldUpdateOperationsInput | string
    billState?: StringFieldUpdateOperationsInput | string
    billPostalCode?: StringFieldUpdateOperationsInput | string
    billCountry?: StringFieldUpdateOperationsInput | string
    shipStreet?: StringFieldUpdateOperationsInput | string
    shipCity?: StringFieldUpdateOperationsInput | string
    shipState?: StringFieldUpdateOperationsInput | string
    shipPostalCode?: StringFieldUpdateOperationsInput | string
    shipCountry?: StringFieldUpdateOperationsInput | string
    totalItemDiscountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceChargeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    roundingAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paidAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    changeAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    remark?: StringFieldUpdateOperationsInput | string
    completedSessionId?: NullableIntFieldUpdateOperationsInput | number | null
    sessionId?: IntFieldUpdateOperationsInput | number
    eodId?: IntFieldUpdateOperationsInput | number
    salesQuotationId?: IntFieldUpdateOperationsInput | number
    performedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    orderStatus?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReservationUpdateWithoutTableInput = {
    dateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    outlet?: OutletUpdateOneRequiredWithoutReservationsNestedInput
    customer?: CustomerUpdateOneWithoutReservationsNestedInput
  }

  export type ReservationUncheckedUpdateWithoutTableInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    dateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ReservationUncheckedUpdateManyWithoutTableInput = {
    id?: IntFieldUpdateOperationsInput | number
    outletId?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    dateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    partySize?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OrderRoutingCreateManyStationInput = {
    id?: number
    salesItemId: number
    status: string
    sentAt?: Date | string | null
    completedAt?: Date | string | null
    deleted?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    version?: number | null
  }

  export type OrderRoutingUpdateWithoutStationInput = {
    status?: StringFieldUpdateOperationsInput | string
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
    salesItem?: SalesItemUpdateOneRequiredWithoutOrderRoutingNestedInput
  }

  export type OrderRoutingUncheckedUpdateWithoutStationInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesItemId?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OrderRoutingUncheckedUpdateManyWithoutStationInput = {
    id?: IntFieldUpdateOperationsInput | number
    salesItemId?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionItemCreateManyPromotionInput = {
    id?: number
    itemId?: number | null
    categoryId?: number | null
    itemCode?: string | null
    itemName?: string | null
    itemRole?: string | null
    deleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
  }

  export type PromotionCustomerCreateManyPromotionInput = {
    id?: number
    customerId: number
    maxUsage?: number | null
    currentUsage?: number
    deleted?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    version?: number | null
  }

  export type PromotionUsageCreateManyPromotionInput = {
    id?: number
    customerId?: number | null
    salesId?: number | null
    discountAmount: Decimal | DecimalJsLike | number | string
    usedAt?: Date | string
    version?: number | null
  }

  export type PromotionItemUpdateWithoutPromotionInput = {
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    itemCode?: NullableStringFieldUpdateOperationsInput | string | null
    itemName?: NullableStringFieldUpdateOperationsInput | string | null
    itemRole?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionItemUncheckedUpdateWithoutPromotionInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    itemCode?: NullableStringFieldUpdateOperationsInput | string | null
    itemName?: NullableStringFieldUpdateOperationsInput | string | null
    itemRole?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionItemUncheckedUpdateManyWithoutPromotionInput = {
    id?: IntFieldUpdateOperationsInput | number
    itemId?: NullableIntFieldUpdateOperationsInput | number | null
    categoryId?: NullableIntFieldUpdateOperationsInput | number | null
    itemCode?: NullableStringFieldUpdateOperationsInput | string | null
    itemName?: NullableStringFieldUpdateOperationsInput | string | null
    itemRole?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCustomerUpdateWithoutPromotionInput = {
    maxUsage?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
    customer?: CustomerUpdateOneRequiredWithoutPromotionsNestedInput
  }

  export type PromotionCustomerUncheckedUpdateWithoutPromotionInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    maxUsage?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCustomerUncheckedUpdateManyWithoutPromotionInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: IntFieldUpdateOperationsInput | number
    maxUsage?: NullableIntFieldUpdateOperationsInput | number | null
    currentUsage?: IntFieldUpdateOperationsInput | number
    deleted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUsageUpdateWithoutPromotionInput = {
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
    customer?: CustomerUpdateOneWithoutPromotionUsageNestedInput
  }

  export type PromotionUsageUncheckedUpdateWithoutPromotionInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUsageUncheckedUpdateManyWithoutPromotionInput = {
    id?: IntFieldUpdateOperationsInput | number
    customerId?: NullableIntFieldUpdateOperationsInput | number | null
    salesId?: NullableIntFieldUpdateOperationsInput | number | null
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    version?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}
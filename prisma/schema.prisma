generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("TENANT_DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement()) @map("ID")
  username  String  @unique @map("USERNAME")
  password  String  @map("PASSWORD")
  lastName  String? @map("LAST_NAME")
  firstName String? @map("FIRST_NAME")
  mobile    String? @unique @map("MOBILE")
  email     String? @unique @map("EMAIL")
  role      String  @map("ROLE")
  deleted   Boolean @default(false) @map("IS_DELETED")

  @@map("USER")
}

model RefreshToken {
  id          Int       @id @default(autoincrement()) @map("ID")
  userId      Int       @map("USER_ID")
  token       String    @map("TOKEN")
  expired     DateTime? @map("EXPIRED_DATETIME")
  created     DateTime  @default(now()) @map("CREATED_DATETIME")
  createdByIP String?   @map("CREATED_BY")
  revoked     DateTime? @map("REVOKED_DATETIME")
  deleted     Boolean   @default(false) @map("IS_DELETED")

  @@map("REFRESH_TOKEN")
}

model Referral {
  id         Int     @id @default(autoincrement()) @map("ID")
  userId     Int     @map("USER_ID")
  referralId Int     @map("REFERRAL_ID")
  deleted    Boolean @default(false) @map("IS_DELETED")

  @@map("REFERRAL")
}

model Supplier {
  id                      Int     @id @default(autoincrement()) @map("ID")
  companyName             String  @map("COMPANY_NAME")
  companyStreet           String  @default("") @map("COMPANY_STREET")
  companyCity             String  @default("") @map("COMPANY_CITY")
  companyState            String  @default("") @map("COMPANY_STATE")
  companyPostalCode       String  @default("") @map("COMPANY_POSTAL_CODE")
  companyCountry          String  @default("") @map("COMPANY_COUNTRY")
  companyRegisterNumber   String  @default("") @map("COMPANY_REGISTRATION_NUMBER")
  personInChargeLastName  String  @default("") @map("PERSON_IN_CHARGE_LAST_NAME")
  personInChargeFirstName String  @default("") @map("PERSON_IN_CHARGE_FIRST_NAME")
  mobile                  String  @default("") @map("MOBILE")
  email                   String  @default("") @map("EMAIL")
  remark                  String  @default("") @map("REMARK")
  hasTax                  Boolean @map("HAS_TAX")
  deleted                 Boolean @default(false) @map("IS_DELETED")

  @@map("SUPPLIER")
}

model Customer {
  id             Int     @id @default(autoincrement()) @map("ID")
  salutation     String  @default("") @map("SALUTATION")
  lastName       String  @map("LAST_NAME")
  firstName      String  @map("FIRST_NAME")
  mobile         String  @default("") @map("MOBILE")
  email          String  @default("") @map("EMAIL")
  gender         String  @default("") @map("GENDER")
  billStreet     String  @default("") @map("BILL_STREET")
  billCity       String  @default("") @map("BILL_CITY")
  billState      String  @default("") @map("BILL_STATE")
  billPostalCode String  @default("") @map("BILL_POSTAL_CODE")
  billCountry    String  @default("") @map("BILL_COUNTRY")
  billRemark     String  @default("") @map("BILL_REMARK")
  shipStreet     String  @default("") @map("SHIP_STREET")
  shipCity       String  @default("") @map("SHIP_CITY")
  shipState      String  @default("") @map("SHIP_STATE")
  shipPostalCode String  @default("") @map("SHIP_POSTAL_CODE")
  shipCountry    String  @default("") @map("SHIP_COUNTRY")
  shipRemark     String  @default("") @map("SHIP_REMARK")
  deleted        Boolean @default(false) @map("IS_DELETED")

  @@map("CUSTOMER")
}

model Company {
  id                 Int     @id @default(autoincrement()) @map("ID")
  companyName        String  @default("") @map("COMPANY_NAME")
  street             String  @default("") @map("STREET")
  city               String  @default("") @map("CITY")
  state              String  @default("") @map("STATE")
  postalCode         String  @default("") @map("POSTAL_CODE")
  country            String  @default("") @map("COUNTRY")
  registrationNumber String  @unique @map("REGISTRATION_NUMBER")
  website            String  @default("") @map("WEBSITE")
  referralId         String  @default("") @map("REFERRAL_ID")
  deleted            Boolean @default(false) @map("IS_DELETED")

  @@map("COMPANY")
}

model Outlet {
  id          Int     @id @default(autoincrement()) @map("ID")
  outletName  String  @map("OUTLET_NAME")
  street      String  @default("") @map("STREET")
  city        String  @default("") @map("CITY")
  state       String  @default("") @map("STATE")
  postalCode  String  @default("") @map("POSTAL_CODE")
  country     String  @default("") @map("COUNTRY")
  outletTel   String  @default("") @map("OUTLET_TEL")
  outletEmail String  @default("") @map("OUTLET_EMAIL")
  deleted     Boolean @default(false) @map("IS_DELETED")

  @@map("OUTLET")
}

model Item {
  id              Int          @id @default(autoincrement()) @map("ID")
  itemCode        String       @map("ITEM_CODE") // itemCode need to be same if there are multiple same item for different supplier
  itemName        String       @map("ITEM_NAME")
  itemType        String       @default("") @map("ITEM_TYPE")
  itemModel       String       @default("") @map("ITEM_MODEL")
  itemBrand       String       @default("") @map("ITEM_BRAND")
  itemDescription String       @default("") @map("ITEM_DESCRIPTION")
  category        String       @default("") @map("CATEGORY")
  cost            Float        @map("COST")
  price           Float        @map("PRICE")
  isOpenPrice     Boolean      @default(false) @map("IS_OPEN_PRICE")
  unitOfMeasure   String       @default("") @map("UNIT_OF_MEASURE")
  height          Float        @default(0) @map("HEIGHT")
  width           Float        @default(0) @map("WIDTH")
  length          Float        @default(0) @map("LENGTH")
  weight          Float        @default(0) @map("WEIGHT")
  alternateLookUp String       @default("") @map("ALTERNATE_LOOKUP")
  image           String       @default("") @map("IMAGE")
  supplierId      Int          @map("SUPPLIER_ID")
  deleted         Boolean      @default(false) @map("IS_DELETED")
  stock           Stock        @relation(fields: [stockId], references: [id]) // enforce mandatory one-to-one relationship
  stockId         Int          @unique @map("STOCK_ID")
  stockCheck      StockCheck[]

  @@map("ITEM")
}

model Sales {
  id                      Int           @id @default(autoincrement()) @map("ID")
  created                 DateTime      @default(now()) @map("CREATED_DATETIME")
  outletId                Int           @map("OUTLET_ID")
  businessDate            DateTime      @map("BUSINESS_DATE")
  salesType               String        @map("SALES_TYPE")
  customerId              Int           @default(0) @map("CUSTOMER_ID")
  billStreet              String        @default("") @map("BILL_STREET")
  billCity                String        @default("") @map("BILL_CITY")
  billState               String        @default("") @map("BILL_STATE")
  billPostalCode          String        @default("") @map("BILL_POSTAL_CODE")
  billCountry             String        @default("") @map("BILL_COUNTRY")
  shipStreet              String        @default("") @map("SHIP_STREET")
  shipCity                String        @default("") @map("SHIP_CITY")
  shipState               String        @default("") @map("SHIP_STATE")
  shipPostalCode          String        @default("") @map("SHIP_POSTAL_CODE")
  shipCountry             String        @default("") @map("SHIP_COUNTRY")
  totalItemDiscountAmount Float         @default(0) @map("TOTAL_ITEM_DISCOUNT_AMOUNT")
  discountPercentage      Float         @default(0) @map("DISCOUNT_PERCENTAGE")
  discountAmount          Float         @default(0) @map("DISCOUNT_AMOUNT")
  profitAmount            Float         @map("PROFIT_AMOUNT")
  serviceChargeAmount     Float         @default(0) @map("SERVICE_CHARGE_AMOUNT")
  taxAmount               Float         @default(0) @map("TAX_AMOUNT")
  roundingAmount          Float         @default(0) @map("ROUNDING_AMOUNT")
  subtotalAmount          Float         @map("SUBTOTAL_AMOUNT")
  totalAmount             Float         @map("TOTAL_AMOUNT")
  paidAmount              Float         @default(0) @map("PAID_AMOUNT")
  changeAmount            Float         @default(0) @map("CHANGE_AMOUNT")
  status                  String        @map("STATUS")
  remark                  String        @default("") @map("REMARK")
  declarationSessionId    Int           @map("DECLARATION_SESSION_ID")
  eodId                   Int           @map("EOD_ID")
  salesQuotationId        Int           @default(0) @map("SALES_QUOTATION_ID")
  performedBy             Int           @map("PERFORMED_BY")
  deleted                 Boolean       @default(false) @map("IS_DELETED")
  salesItems              SalesItem[]
  payments                Payment[]
  registerLogs            RegisterLog[]

  @@map("SALES")
}

model SalesItem {
  id                  Int      @id @default(autoincrement()) @map("ID")
  created             DateTime @default(now()) @map("CREATED_DATETIME")
  salesId             Int      @map("SALES_ID")
  itemId              Int      @map("ITEM_ID")
  itemName            String   @map("ITEM_NAME")
  itemCode            String   @map("ITEM_CODE")
  quantity            Float    @map("QUANTITY")
  cost                Float    @map("COST")
  price               Float    @map("PRICE")
  profit              Float    @map("PROFIT")
  discountPercentage  Float    @default(0) @map("DISCOUNT_PERCENTAGE")
  discountAmount      Float    @default(0) @map("DISCOUNT_AMOUNT")
  serviceChargeAmount Float    @default(0) @map("SERVICE_CHARGE_AMOUNT")
  taxAmount           Float    @default(0) @map("TAX_AMOUNT")
  subtotalAmount      Float    @map("SUBTOTAL_AMOUNT")
  remark              String   @default("") @map("REMARK")
  deleted             Boolean  @default(false) @map("IS_DELETED")
  sales               Sales    @relation(fields: [salesId], references: [id])

  @@map("SALES_ITEM")
}

model SalesQuotation {
  id                  Int                  @id @default(autoincrement()) @map("ID")
  created             DateTime             @default(now()) @map("CREATED_DATETIME")
  outletId            Int                  @map("OUTLET_ID")
  customerId          Int?                 @map("CUSTOMER_ID")
  customerStreet      String?              @map("CUSTOMER_STREET")
  customerCity        String?              @map("CUSTOMER_CITY")
  customerState       String?              @map("CUSTOMER_STATE")
  customerPostalCode  String?              @map("CUSTOMER_POSTAL_CODE")
  customerCountry     String?              @map("CUSTOMER_COUNTRY")
  discountPercentage  Float                @map("DISCOUNT_PERCENTAGE")
  discountAmount      Float                @map("DISCOUNT_AMOUNT")
  serviceChargeAmount Float                @map("SERVICE_CHARGE_AMOUNT")
  taxAmount           Float                @map("TAX_AMOUNT")
  roundingAmount      Float                @map("ROUNDING_AMOUNT")
  subtotalAmount      Float                @map("SUBTOTAL_AMOUNT")
  totalAmount         Float                @map("TOTAL_AMOUNT")
  status              String               @map("STATUS")
  remark              String?              @map("REMARK")
  performedBy         Int                  @map("PERFORMED_BY")
  deleted             Boolean              @default(false) @map("IS_DELETED")
  salesQuotationItems SalesQuotationItem[]

  @@map("SALES_QUOTATION")
}

model SalesQuotationItem {
  id               Int            @id @default(autoincrement()) @map("ID")
  salesQuotationId Int            @map("SALES_QUOTATION_ID")
  itemId           Int            @map("ITEM_ID")
  quantity         Float          @map("QUANTITY")
  remark           String?        @map("REMARK")
  deleted          Boolean        @default(false) @map("IS_DELETED")
  salesQuotation   SalesQuotation @relation(fields: [salesQuotationId], references: [id])

  @@map("SALES_QUOTATION_ITEM")
}

model DeliveryOrder {
  id                 Int                 @id @default(autoincrement()) @map("ID")
  created            DateTime            @default(now()) @map("CREATED_DATETIME")
  outletId           Int                 @map("OUTLET_ID")
  customerId         Int?                @map("CUSTOMER_ID")
  deliveryStreet     String?             @map("DELIVERY_STREET")
  deliveryCity       String?             @map("DELIVERY_CITY")
  deliveryState      String?             @map("DELIVERY_STATE")
  deliveryPostalCode String?             @map("DELIVERY_POSTAL_CODE")
  deliveryCountry    String?             @map("DELIVERY_COUNTRY")
  status             String              @map("STATUS")
  remark             String?             @map("REMARK")
  performedBy        Int                 @map("PERFORMED_BY")
  deleted            Boolean             @default(false) @map("IS_DELETED")
  deliveryOrderItems DeliveryOrderItem[]

  @@map("DELIVERY_ORDER")
}

model DeliveryOrderItem {
  id              Int           @id @default(autoincrement()) @map("ID")
  deliveryOrderId Int           @map("DELIVERY_ORDER_ID")
  itemId          Int           @map("ITEM_ID")
  quantity        Float         @map("QUANTITY")
  remark          String?       @map("REMARK")
  deleted         Boolean       @default(false) @map("IS_DELETED")
  deliveryOrder   DeliveryOrder @relation(fields: [deliveryOrderId], references: [id])

  @@map("DELIVERY_ORDER_ITEM")
}

model PurchaseOrder {
  id                  Int                 @id @default(autoincrement()) @map("ID")
  created             DateTime            @default(now()) @map("CREATED_DATETIME")
  outletId            Int                 @map("OUTLET_ID")
  supplierId          Int?                @map("SUPPLIER_ID")
  supplierStreet      String?             @map("SUPPLIER_STREET")
  supplierCity        String?             @map("SUPPLIER_CITY")
  supplierState       String?             @map("SUPPLIER_STATE")
  supplierPostalCode  String?             @map("SUPPLIER_POSTAL_CODE")
  supplierCountry     String?             @map("SUPPLIER_COUNTRY")
  discountPercentage  Float               @map("DISCOUNT_PERCENTAGE")
  discountAmount      Float               @map("DISCOUNT_AMOUNT")
  serviceChargeAmount Float               @map("SERVICE_CHARGE_AMOUNT")
  taxAmount           Float               @map("TAX_AMOUNT")
  roundingAmount      Float               @map("ROUNDING_AMOUNT")
  subtotalAmount      Float               @map("SUBTOTAL_AMOUNT")
  totalAmount         Float               @map("TOTAL_AMOUNT")
  status              String              @map("STATUS")
  remark              String?             @map("REMARK")
  performedBy         Int                 @map("PERFORMED_BY")
  deleted             Boolean             @default(false) @map("IS_DELETED")
  purchaseOrderItems  PurchaseOrderItem[]

  @@map("PURCHASE_ORDER")
}

model PurchaseOrderItem {
  id              Int           @id @default(autoincrement()) @map("ID")
  purchaseOrderId Int           @map("PURCHASE_ORDER_ID")
  itemId          Int           @map("ITEM_ID")
  quantity        Float         @map("QUANTITY")
  remark          String?       @map("REMARK")
  deleted         Boolean       @default(false) @map("IS_DELETED")
  purchaseOrder   PurchaseOrder @relation(fields: [purchaseOrderId], references: [id])

  @@map("PURCHASE_ORDER_ITEM")
}

model Payment {
  id                   Int        @id @default(autoincrement()) @map("ID")
  method               String     @map("PAYMENT")
  tenderedAmount       Float      @map("TENDERED_AMOUNT")
  paidAmount           Float      @map("PAID_AMOUNT")
  currencySymbol       String     @default("") @map("CURRENCY_SYMBOL")
  salesId              Int        @map("SALES_ID")
  reference            String     @default("") @map("REFERENCE")
  remark               String     @default("") @map("REMARK")
  created              DateTime   @default(now()) @map("CREATED_DATETIME")
  businessDate         DateTime   @map("BUSINESS_DATE")
  status               String     @map("STATUS")
  outletId             Int        @map("OUTLET_ID")
  declarationSessionId Int        @map("DECLARATION_SESSION_ID")
  eodId                Int        @map("EOD_ID")
  performedBy          Int        @map("PERFORMED_BY")
  deleted              Boolean    @default(false) @map("IS_DELETED")
  cardInfos            CardInfo[]
  sales                Sales      @relation(fields: [salesId], references: [id])

  @@map("PAYMENT")
}

model RegisterLog {
  id                   Int      @id @default(autoincrement()) @map("ID")
  type                 String   @map("TYPE")
  modifiedAmount       Float    @map("MODIFIED_AMOUNT")
  currencySymbol       String   @default("") @map("CURRENCY_SYMBOL")
  salesId              Int      @map("SALES_ID")
  remark               String   @default("") @map("REMARK")
  created              DateTime @default(now()) @map("CREATED_DATETIME")
  status               String   @map("STATUS")
  outletId             Int      @map("OUTLET_ID")
  declarationSessionId Int      @map("DECLARATION_SESSION_ID")
  eodId                Int      @map("EOD_ID")
  performedBy          Int      @map("PERFORMED_BY")
  deleted              Boolean  @default(false) @map("IS_DELETED")
  sales                Sales    @relation(fields: [salesId], references: [id])

  @@map("REGISTER_LOG")
}

model CardInfo {
  id          Int     @id @default(autoincrement()) @map("ID")
  paymentId   Int     @map("PAYMENT_ID")
  cardNumber  String? @map("CARD_NUMBER")
  cardExpiry  String? @map("CARD_EXPIRY")
  traceNumber String? @map("TRACE_NUMBER")
  type2       String? @map("TYPE_2")
  type3       String? @map("TYPE_3")
  cardRate    Float?  @map("CARD_RATE")
  appCode     String? @map("APP_CODE")
  cardType    String? @map("CARD_TYPE")
  deleted     Boolean @default(false) @map("IS_DELETED")
  payment     Payment @relation(fields: [paymentId], references: [id])

  @@map("CARD_INFO")
}

model Session {
  id              Int           @id @default(autoincrement()) @map("ID")
  outletId        Int           @map("OUTLET_ID")
  businessDate    DateTime      @map("BUSINESS_DATE")
  openingDateTime DateTime?     @map("OPENING_DATE_TIME")
  closingDateTime DateTime?     @map("CLOSING_DATE_TIME")
  openingAmount   Float         @map("OPENING_AMOUNT")
  totalSalesCount Int           @map("TOTAL_SALES_COUNT")
  openByUserID    Int           @map("OPEN_BY_USER_ID")
  closeByUserID   Int           @map("CLOSE_BY_USER_ID")
  created         DateTime      @default(now()) @map("CREATED_DATETIME")
  declarations    Declaration[]

  @@map("SESSION")
}

model Declaration {
  id                 Int      @id @default(autoincrement()) @map("ID")
  paymentType        String   @map("PAYMENT_TYPE")
  totalPaymentAmount Float    @map("TOTAL_PAYMENT_AMOUNT")
  declarationAmount  Float    @map("DECLARATION_AMOUNT")
  differenceAmount   Float    @map("DIFFERENCE_AMOUNT")
  created            DateTime @default(now()) @map("CREATED_DATETIME")
  sessionID          Int      @map("SESSION_ID")
  session            Session  @relation(fields: [sessionID], references: [id])

  @@map("DECLARATION")
}

// model EOD {
//   id Int @id @default(autoincrement()) @map("ID")
//   deviceId Int @map("DEVICE_ID")
//   outletId Int @map("OUTLET_ID")
//   openingDateTime DateTime? @map("OPENING_DATE_TIME")
//   closingDateTime DateTime? @map("CLOSING_DATE_TIME")
//   businessDate DateTime @map("BUSINESS_DATE")
//   verifiedBy Int? @map("VERIFIED_BY")
//   openedBy Int? @map("OPENED_BY")
//   closedBy Int? @map("CLOSED_BY")
//   deleted Boolean @default(false) @map("IS_DELETED")

//   @@map("EOD")
// }

model Stock {
  id                Int     @id @default(autoincrement()) @map("ID")
  availableQuantity Float   @map("AVAILABLE_QUANTITY")
  onHandQuantity    Float   @map("ON_HAND_QUANTITY")
  deleted           Boolean @default(false) @map("IS_DELETED")
  item              Item?

  @@map("STOCK")
}

model StockCheck {
  id                Int      @id @default(autoincrement()) @map("ID")
  created           DateTime @default(now()) @map("CREATED_DATETIME")
  itemId            Int      @map("ITEM_ID")
  availableQuantity Float    @map("AVAILABLE_QUANTITY")
  onHandQuantity    Float    @map("ON_HAND_QUANTITY")
  documentId        Int      @map("DOCUMENT_ID")
  documentType      String   @map("DOCUMENT_TYPE")
  reason            String   @map("REASON")
  remark            String   @default("") @map("REMARK")
  outletId          Int      @map("OUTLET_ID")
  deleted           Boolean  @default(false) @map("IS_DELETED")
  Item              Item     @relation(fields: [itemId], references: [id])

  @@map("STOCK_CHECK")
}

// model Unknown {
//   id Int @id @default(autoincrement()) @map("ID")
//   created DateTime @default(now()) @map("CREATED_DATETIME")
//   stringExtend1 String @map("STRING_EXTEND_1")
//   deleted Boolean @default(false) @map("IS_DELETED")

//   @@map("UNKNOWN")
// }

model MenuProfileOutlet {
  id            Int @id @default(autoincrement()) @map("ID")
  outletId      Int @map("OUTLET_ID")
  menuProfileID Int @map("MENU_PROFILE_ID")

  @@map("MENU_PROFILE_OUTLET")
}

model MenuProfile {
  id             Int            @id @default(autoincrement()) @map("ID")
  created        DateTime       @default(now()) @map("CREATED_DATETIME")
  name           String         @map("NAME")
  dateStart      String         @map("DATE_START")
  dateEnd        String         @map("DATE_END")
  timeStart      String         @map("TIME_START")
  timeEnd        String         @map("TIME_END")
  isMonday       Boolean        @map("IS_MONDAY")
  isTuesday      Boolean        @map("IS_TUESDAY")
  isWednesday    Boolean        @map("IS_WEDNESDAY")
  isThursday     Boolean        @map("IS_THURSDAY")
  isFriday       Boolean        @map("IS_FRIDAY")
  isSaturday     Boolean        @map("IS_SATURDAY")
  isSunday       Boolean        @map("IS_SUNDAY")
  sequence       Int            @map("SEQUENCE")
  deleted        Boolean        @default(false) @map("IS_DELETED")
  menuCategories MenuCategory[]

  @@map("MENU_PROFILE")
}

model MenuCategory {
  id            Int         @id @default(autoincrement()) @map("ID")
  created       DateTime    @default(now()) @map("CREATED_DATETIME")
  name          String      @map("NAME")
  menuProfileID Int         @map("MENU_PROFILE_ID")
  imageURL      String?     @map("IMAGE_URL") @db.Text
  deleted       Boolean     @default(false) @map("IS_DELETED")
  menuProfile   MenuProfile @relation(fields: [menuProfileID], references: [id])
  menuItems     MenuItem[]

  @@map("MENU_CATEGORY")
}

model MenuItem {
  id                     Int                     @id @default(autoincrement()) @map("ID")
  created                DateTime                @default(now()) @map("CREATED_DATETIME")
  name                   String                  @map("NAME")
  itemID                 Int                     @map("ITEM_ID")
  itemCode               String                  @map("ITEM_CODE")
  imageURL               String?                 @map("IMAGE_URL") @db.Text
  price                  Float                   @map("PRICE")
  sequence               Int                     @map("SEQUENCE")
  menuCategoryID         Int                     @map("MENU_CATEGORY_ID")
  menuCategory           MenuCategory            @relation(fields: [menuCategoryID], references: [id])
  menuItemModifierGroups MenuItemModifierGroup[]

  @@map("MENU_ITEM")
}

model MenuItemModifierGroup {
  id                Int                @id @default(autoincrement()) @map("ID")
  name              String             @map("NAME")
  minSelection      Int                @map("MIN_SELECTION")
  maxSelection      Int                @map("MAX_SELECTION")
  sequence          Int                @map("SEQUENCE")
  menuItemID        Int                @map("MENU_ITEM_ID")
  menuItem          MenuItem           @relation(fields: [menuItemID], references: [id])
  menuItemModifiers MenuItemModifier[]

  @@map("MENU_ITEM_MODIFIER_GROUP")
}

model MenuItemModifier {
  id                      Int                   @id @default(autoincrement()) @map("ID")
  name                    String                @map("NAME")
  itemID                  Int                   @map("ITEM_ID")
  itemCode                String                @map("ITEM_CODE")
  imageURL                String?               @map("IMAGE_URL") @db.Text
  price                   Float                 @map("PRICE")
  defaultSelectionQty     Int                   @map("DEFAULT_SELECTION_QTY")
  sequence                Int                   @map("SEQUENCE")
  menuItemModifierGroupID Int                   @map("MENU_ITEM_MODIFIER_GROUP_ID")
  menuItemModifierGroup   MenuItemModifierGroup @relation(fields: [menuItemModifierGroupID], references: [id])

  @@map("MENU_ITEM_MODIFIER")
}

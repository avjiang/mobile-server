generator client {
  provider = "prisma-client-js"
  // output   = "../node_modules/@prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("TENANT_DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement()) @map("ID")
  username  String    @unique @map("USERNAME")
  password  String    @map("PASSWORD")
  lastName  String?   @map("LAST_NAME")
  firstName String?   @map("FIRST_NAME")
  mobile    String?   @unique @map("MOBILE")
  email     String?   @unique @map("EMAIL")
  role      String    @map("ROLE")
  deleted   Boolean   @default(false) @map("IS_DELETED")
  deletedAt DateTime? @map("DELETED_AT")
  createdAt DateTime? @default(now()) @map("CREATED_AT")
  updatedAt DateTime? @updatedAt @map("UPDATED_AT")
  version   Int?      @default(1) @map("VERSION")

  @@map("USER")
}

model RefreshToken {
  id          Int       @id @default(autoincrement()) @map("ID")
  userId      Int       @map("USER_ID")
  token       String    @map("TOKEN")
  expired     DateTime? @map("EXPIRED_DATETIME")
  createdByIP String?   @map("CREATED_BY")
  revoked     DateTime? @map("REVOKED_DATETIME")
  deleted     Boolean   @default(false) @map("IS_DELETED")
  createdAt   DateTime? @default(now()) @map("CREATED_AT")
  updatedAt   DateTime? @updatedAt @map("UPDATED_AT")
  version     Int?      @default(1) @map("VERSION")

  @@map("REFRESH_TOKEN")
}

model Referral {
  id         Int       @id @default(autoincrement()) @map("ID")
  userId     Int       @map("USER_ID")
  referralId Int       @map("REFERRAL_ID")
  deleted    Boolean   @default(false) @map("IS_DELETED")
  createdAt  DateTime? @default(now()) @map("CREATED_AT")
  updatedAt  DateTime? @updatedAt @map("UPDATED_AT")
  version    Int?      @default(1) @map("VERSION")

  @@map("REFERRAL")
}

model Supplier {
  id                      Int       @id @default(autoincrement()) @map("ID")
  companyName             String    @unique @map("COMPANY_NAME")
  companyStreet           String    @default("") @map("COMPANY_STREET")
  companyCity             String    @default("") @map("COMPANY_CITY")
  companyState            String    @default("") @map("COMPANY_STATE")
  companyPostalCode       String    @default("") @map("COMPANY_POSTAL_CODE")
  companyCountry          String    @default("") @map("COMPANY_COUNTRY")
  companyRegisterNumber   String    @default("") @map("COMPANY_REGISTRATION_NUMBER")
  personInChargeLastName  String    @default("") @map("PERSON_IN_CHARGE_LAST_NAME")
  personInChargeFirstName String    @default("") @map("PERSON_IN_CHARGE_FIRST_NAME")
  mobile                  String    @default("") @map("MOBILE")
  email                   String    @default("") @map("EMAIL")
  remark                  String    @default("") @map("REMARK")
  hasTax                  Boolean   @map("HAS_TAX")
  deleted                 Boolean   @default(false) @map("IS_DELETED")
  deletedAt               DateTime? @map("DELETED_AT")
  createdAt               DateTime? @default(now()) @map("CREATED_AT")
  updatedAt               DateTime? @updatedAt @map("UPDATED_AT")
  version                 Int?      @default(1) @map("VERSION")
  Item                    Item[]

  @@map("SUPPLIER")
}

model Customer {
  id             Int       @id @default(autoincrement()) @map("ID")
  salutation     String    @default("") @map("SALUTATION")
  lastName       String    @map("LAST_NAME")
  firstName      String    @map("FIRST_NAME")
  mobile         String    @default("") @map("MOBILE")
  email          String    @default("") @map("EMAIL")
  gender         String    @default("") @map("GENDER")
  billStreet     String    @default("") @map("BILL_STREET")
  billCity       String    @default("") @map("BILL_CITY")
  billState      String    @default("") @map("BILL_STATE")
  billPostalCode String    @default("") @map("BILL_POSTAL_CODE")
  billCountry    String    @default("") @map("BILL_COUNTRY")
  billRemark     String    @default("") @map("BILL_REMARK")
  shipStreet     String    @default("") @map("SHIP_STREET")
  shipCity       String    @default("") @map("SHIP_CITY")
  shipState      String    @default("") @map("SHIP_STATE")
  shipPostalCode String    @default("") @map("SHIP_POSTAL_CODE")
  shipCountry    String    @default("") @map("SHIP_COUNTRY")
  shipRemark     String    @default("") @map("SHIP_REMARK")
  deleted        Boolean   @default(false) @map("IS_DELETED")
  deletedAt      DateTime? @map("DELETED_AT")
  createdAt      DateTime? @default(now()) @map("CREATED_AT")
  updatedAt      DateTime? @updatedAt @map("UPDATED_AT")
  version        Int?      @default(1) @map("VERSION")
  sales          Sales[]

  @@map("CUSTOMER")
}

model Company {
  id                 Int       @id @default(autoincrement()) @map("ID")
  companyName        String    @default("") @map("COMPANY_NAME")
  street             String    @default("") @map("STREET")
  city               String    @default("") @map("CITY")
  state              String    @default("") @map("STATE")
  postalCode         String    @default("") @map("POSTAL_CODE")
  country            String    @default("") @map("COUNTRY")
  registrationNumber String    @unique @map("REGISTRATION_NUMBER")
  website            String    @default("") @map("WEBSITE")
  referralId         String    @default("") @map("REFERRAL_ID")
  deleted            Boolean   @default(false) @map("IS_DELETED")
  deletedAt          DateTime? @map("DELETED_AT")
  createdAt          DateTime? @default(now()) @map("CREATED_AT")
  updatedAt          DateTime? @updatedAt @map("UPDATED_AT")
  version            Int?      @default(1) @map("VERSION")

  @@map("COMPANY")
}

model Outlet {
  id            Int             @id @default(autoincrement()) @map("ID")
  outletName    String          @map("OUTLET_NAME")
  street        String          @default("") @map("STREET")
  city          String          @default("") @map("CITY")
  state         String          @default("") @map("STATE")
  postalCode    String          @default("") @map("POSTAL_CODE")
  country       String          @default("") @map("COUNTRY")
  outletTel     String          @default("") @map("OUTLET_TEL")
  outletEmail   String          @default("") @map("OUTLET_EMAIL")
  deleted       Boolean         @default(false) @map("IS_DELETED")
  deletedAt     DateTime?       @map("DELETED_AT")
  createdAt     DateTime?       @default(now()) @map("CREATED_AT")
  updatedAt     DateTime?       @updatedAt @map("UPDATED_AT")
  version       Int?            @default(1) @map("VERSION")
  StockBalance  StockBalance[]
  StockMovement StockMovement[]
  StockSnapshot StockSnapshot[]

  @@map("OUTLET")
}

model Item {
  id              Int             @id @default(autoincrement()) @map("ID")
  itemName        String          @map("ITEM_NAME")
  itemCode        String          @map("ITEM_CODE")
  itemType        String          @default("") @map("ITEM_TYPE")
  itemModel       String          @default("") @map("ITEM_MODEL")
  itemBrand       String          @default("") @map("ITEM_BRAND")
  itemDescription String?         @default("") @map("ITEM_DESCRIPTION")
  categoryId      Int             @map("CATEGORY_ID")
  category        Category        @relation(fields: [categoryId], references: [id])
  cost            Float           @map("COST")
  price           Float           @map("PRICE")
  isOpenPrice     Boolean?        @default(false) @map("IS_OPEN_PRICE")
  unitOfMeasure   String          @default("") @map("UNIT_OF_MEASURE")
  height          Float?          @default(0) @map("HEIGHT")
  width           Float?          @default(0) @map("WIDTH")
  length          Float?          @default(0) @map("LENGTH")
  weight          Float?          @default(0) @map("WEIGHT")
  alternateLookUp String?         @default("") @map("ALTERNATE_LOOKUP")
  image           String?         @default("") @map("IMAGE")
  supplierId      Int             @map("SUPPLIER_ID")
  deleted         Boolean         @default(false) @map("IS_DELETED")
  deletedAt       DateTime?       @map("DELETED_AT")
  createdAt       DateTime?       @default(now()) @map("CREATED_AT")
  updatedAt       DateTime?       @updatedAt @map("UPDATED_AT")
  version         Int?            @default(1) @map("VERSION")
  supplier        Supplier        @relation(fields: [supplierId], references: [id])
  stockBalance    StockBalance[]
  stockMovement   StockMovement[]
  stockSnapshot   StockSnapshot[]

  @@index([categoryId])
  @@index([createdAt])
  @@index([updatedAt])
  @@index([deletedAt])
  @@map("ITEM")
}

model Category {
  id          Int       @id @default(autoincrement()) @map("ID")
  name        String    @unique @map("NAME")
  description String?   @default("") @map("DESCRIPTION")
  parentId    Int?      @map("PARENT_ID")
  image       String?   @default("") @map("IMAGE")
  deleted     Boolean   @default(false) @map("IS_DELETED")
  deletedAt   DateTime? @map("DELETED_AT")
  createdAt   DateTime? @default(now()) @map("CREATED_AT")
  updatedAt   DateTime? @updatedAt @map("UPDATED_AT")
  version     Int?      @default(1) @map("VERSION")
  items       Item[]

  @@map("ITEM_CATEGORY")
}

model Sales {
  id                      Int           @id @default(autoincrement()) @map("ID")
  outletId                Int           @map("OUTLET_ID")
  businessDate            DateTime      @map("BUSINESS_DATE")
  salesType               String        @map("SALES_TYPE")
  customerId              Int?          @map("CUSTOMER_ID")
  billStreet              String        @default("") @map("BILL_STREET")
  billCity                String        @default("") @map("BILL_CITY")
  billState               String        @default("") @map("BILL_STATE")
  billPostalCode          String        @default("") @map("BILL_POSTAL_CODE")
  billCountry             String        @default("") @map("BILL_COUNTRY")
  shipStreet              String        @default("") @map("SHIP_STREET")
  shipCity                String        @default("") @map("SHIP_CITY")
  shipState               String        @default("") @map("SHIP_STATE")
  shipPostalCode          String        @default("") @map("SHIP_POSTAL_CODE")
  shipCountry             String        @default("") @map("SHIP_COUNTRY")
  totalItemDiscountAmount Float         @default(0) @map("TOTAL_ITEM_DISCOUNT_AMOUNT")
  discountPercentage      Float         @default(0) @map("DISCOUNT_PERCENTAGE")
  discountAmount          Float         @default(0) @map("DISCOUNT_AMOUNT")
  profitAmount            Float         @map("PROFIT_AMOUNT")
  serviceChargeAmount     Float         @default(0) @map("SERVICE_CHARGE_AMOUNT")
  taxAmount               Float         @default(0) @map("TAX_AMOUNT")
  roundingAmount          Float         @default(0) @map("ROUNDING_AMOUNT")
  subtotalAmount          Float         @map("SUBTOTAL_AMOUNT")
  totalAmount             Float         @map("TOTAL_AMOUNT")
  paidAmount              Float         @default(0) @map("PAID_AMOUNT")
  changeAmount            Float         @default(0) @map("CHANGE_AMOUNT")
  status                  String        @map("STATUS")
  remark                  String        @default("") @map("REMARK")
  sessionId               Int           @map("SESSION_ID")
  eodId                   Int           @map("EOD_ID")
  salesQuotationId        Int           @default(0) @map("SALES_QUOTATION_ID")
  performedBy             Int           @map("PERFORMED_BY")
  deleted                 Boolean       @default(false) @map("IS_DELETED")
  deletedAt               DateTime?     @map("DELETED_AT")
  createdAt               DateTime?     @default(now()) @map("CREATED_AT")
  updatedAt               DateTime?     @updatedAt @map("UPDATED_AT")
  version                 Int?          @default(1) @map("VERSION")
  salesItems              SalesItem[]
  payments                Payment[]
  registerLogs            RegisterLog[]
  customer                Customer?     @relation(fields: [customerId], references: [id])

  @@index([businessDate])
  @@index([outletId])
  @@map("SALES")
}

model SalesItem {
  id                  Int       @id @default(autoincrement()) @map("ID")
  salesId             Int       @map("SALES_ID")
  itemId              Int       @map("ITEM_ID")
  itemName            String    @map("ITEM_NAME")
  itemCode            String    @map("ITEM_CODE")
  itemBrand           String    @map("ITEM_BRAND")
  quantity            Float     @map("QUANTITY")
  cost                Float     @map("COST")
  price               Float     @map("PRICE")
  profit              Float     @map("PROFIT")
  discountPercentage  Float     @default(0) @map("DISCOUNT_PERCENTAGE")
  discountAmount      Float     @default(0) @map("DISCOUNT_AMOUNT")
  serviceChargeAmount Float     @default(0) @map("SERVICE_CHARGE_AMOUNT")
  taxAmount           Float     @default(0) @map("TAX_AMOUNT")
  subtotalAmount      Float     @map("SUBTOTAL_AMOUNT")
  remark              String    @default("") @map("REMARK")
  deleted             Boolean   @default(false) @map("IS_DELETED")
  createdAt           DateTime? @default(now()) @map("CREATED_AT")
  updatedAt           DateTime? @updatedAt @map("UPDATED_AT")
  version             Int?      @default(1) @map("VERSION")
  sales               Sales     @relation(fields: [salesId], references: [id])

  @@index([itemId])
  @@index([quantity])
  @@index([profit])
  @@map("SALES_ITEM")
}

model SalesQuotation {
  id                  Int                  @id @default(autoincrement()) @map("ID")
  outletId            Int                  @map("OUTLET_ID")
  customerId          Int?                 @map("CUSTOMER_ID")
  customerStreet      String?              @map("CUSTOMER_STREET")
  customerCity        String?              @map("CUSTOMER_CITY")
  customerState       String?              @map("CUSTOMER_STATE")
  customerPostalCode  String?              @map("CUSTOMER_POSTAL_CODE")
  customerCountry     String?              @map("CUSTOMER_COUNTRY")
  discountPercentage  Float                @map("DISCOUNT_PERCENTAGE")
  discountAmount      Float                @map("DISCOUNT_AMOUNT")
  serviceChargeAmount Float                @map("SERVICE_CHARGE_AMOUNT")
  taxAmount           Float                @map("TAX_AMOUNT")
  roundingAmount      Float                @map("ROUNDING_AMOUNT")
  subtotalAmount      Float                @map("SUBTOTAL_AMOUNT")
  totalAmount         Float                @map("TOTAL_AMOUNT")
  status              String               @map("STATUS")
  remark              String?              @map("REMARK")
  performedBy         Int                  @map("PERFORMED_BY")
  deleted             Boolean              @default(false) @map("IS_DELETED")
  deletedAt           DateTime?            @map("DELETED_AT")
  createdAt           DateTime?            @default(now()) @map("CREATED_AT")
  updatedAt           DateTime?            @updatedAt @map("UPDATED_AT")
  version             Int?                 @default(1) @map("VERSION")
  salesQuotationItems SalesQuotationItem[]

  @@map("SALES_QUOTATION")
}

model SalesQuotationItem {
  id               Int            @id @default(autoincrement()) @map("ID")
  salesQuotationId Int            @map("SALES_QUOTATION_ID")
  itemId           Int            @map("ITEM_ID")
  quantity         Float          @map("QUANTITY")
  remark           String?        @map("REMARK")
  deleted          Boolean        @default(false) @map("IS_DELETED")
  createdAt        DateTime?      @default(now()) @map("CREATED_AT")
  updatedAt        DateTime?      @updatedAt @map("UPDATED_AT")
  version          Int?           @default(1) @map("VERSION")
  salesQuotation   SalesQuotation @relation(fields: [salesQuotationId], references: [id])

  @@map("SALES_QUOTATION_ITEM")
}

model DeliveryOrder {
  id                 Int                 @id @default(autoincrement()) @map("ID")
  outletId           Int                 @map("OUTLET_ID")
  customerId         Int?                @map("CUSTOMER_ID")
  deliveryStreet     String?             @map("DELIVERY_STREET")
  deliveryCity       String?             @map("DELIVERY_CITY")
  deliveryState      String?             @map("DELIVERY_STATE")
  deliveryPostalCode String?             @map("DELIVERY_POSTAL_CODE")
  deliveryCountry    String?             @map("DELIVERY_COUNTRY")
  status             String              @map("STATUS")
  remark             String?             @map("REMARK")
  performedBy        Int                 @map("PERFORMED_BY")
  deleted            Boolean             @default(false) @map("IS_DELETED")
  deletedAt          DateTime?           @map("DELETED_AT")
  createdAt          DateTime?           @default(now()) @map("CREATED_AT")
  updatedAt          DateTime?           @updatedAt @map("UPDATED_AT")
  version            Int?                @default(1) @map("VERSION")
  deliveryOrderItems DeliveryOrderItem[]

  @@map("DELIVERY_ORDER")
}

model DeliveryOrderItem {
  id              Int           @id @default(autoincrement()) @map("ID")
  deliveryOrderId Int           @map("DELIVERY_ORDER_ID")
  itemId          Int           @map("ITEM_ID")
  quantity        Float         @map("QUANTITY")
  remark          String?       @map("REMARK")
  deleted         Boolean       @default(false) @map("IS_DELETED")
  createdAt       DateTime?     @default(now()) @map("CREATED_AT")
  updatedAt       DateTime?     @updatedAt @map("UPDATED_AT")
  version         Int?          @default(1) @map("VERSION")
  deliveryOrder   DeliveryOrder @relation(fields: [deliveryOrderId], references: [id])

  @@map("DELIVERY_ORDER_ITEM")
}

model PurchaseOrder {
  id                  Int                 @id @default(autoincrement()) @map("ID")
  outletId            Int                 @map("OUTLET_ID")
  supplierId          Int?                @map("SUPPLIER_ID")
  supplierStreet      String?             @map("SUPPLIER_STREET")
  supplierCity        String?             @map("SUPPLIER_CITY")
  supplierState       String?             @map("SUPPLIER_STATE")
  supplierPostalCode  String?             @map("SUPPLIER_POSTAL_CODE")
  supplierCountry     String?             @map("SUPPLIER_COUNTRY")
  discountPercentage  Float               @map("DISCOUNT_PERCENTAGE")
  discountAmount      Float               @map("DISCOUNT_AMOUNT")
  serviceChargeAmount Float               @map("SERVICE_CHARGE_AMOUNT")
  taxAmount           Float               @map("TAX_AMOUNT")
  roundingAmount      Float               @map("ROUNDING_AMOUNT")
  subtotalAmount      Float               @map("SUBTOTAL_AMOUNT")
  totalAmount         Float               @map("TOTAL_AMOUNT")
  status              String              @map("STATUS")
  remark              String?             @map("REMARK")
  performedBy         Int                 @map("PERFORMED_BY")
  deleted             Boolean             @default(false) @map("IS_DELETED")
  deletedAt           DateTime?           @map("DELETED_AT")
  createdAt           DateTime?           @default(now()) @map("CREATED_AT")
  updatedAt           DateTime?           @updatedAt @map("UPDATED_AT")
  version             Int?                @default(1) @map("VERSION")
  purchaseOrderItems  PurchaseOrderItem[]

  @@map("PURCHASE_ORDER")
}

model PurchaseOrderItem {
  id              Int           @id @default(autoincrement()) @map("ID")
  purchaseOrderId Int           @map("PURCHASE_ORDER_ID")
  itemId          Int           @map("ITEM_ID")
  quantity        Float         @map("QUANTITY")
  remark          String?       @map("REMARK")
  deleted         Boolean       @default(false) @map("IS_DELETED")
  createdAt       DateTime?     @default(now()) @map("CREATED_AT")
  updatedAt       DateTime?     @updatedAt @map("UPDATED_AT")
  version         Int?          @default(1) @map("VERSION")
  purchaseOrder   PurchaseOrder @relation(fields: [purchaseOrderId], references: [id])

  @@map("PURCHASE_ORDER_ITEM")
}

model Payment {
  id             Int        @id @default(autoincrement()) @map("ID")
  method         String     @map("PAYMENT")
  tenderedAmount Float      @map("TENDERED_AMOUNT")
  paidAmount     Float      @map("PAID_AMOUNT")
  currencySymbol String     @default("") @map("CURRENCY_SYMBOL")
  salesId        Int        @map("SALES_ID")
  reference      String     @default("") @map("REFERENCE")
  remark         String     @default("") @map("REMARK")
  businessDate   DateTime   @map("BUSINESS_DATE")
  status         String     @map("STATUS")
  outletId       Int        @map("OUTLET_ID")
  sessionId      Int        @map("SESSION_ID")
  eodId          Int        @map("EOD_ID")
  performedBy    Int        @map("PERFORMED_BY")
  deleted        Boolean    @default(false) @map("IS_DELETED")
  deletedAt      DateTime?  @map("DELETED_AT")
  createdAt      DateTime?  @default(now()) @map("CREATED_AT")
  updatedAt      DateTime?  @updatedAt @map("UPDATED_AT")
  version        Int?       @default(1) @map("VERSION")
  cardInfos      CardInfo[]
  sales          Sales      @relation(fields: [salesId], references: [id])

  @@index([method])
  @@index([businessDate])
  @@map("PAYMENT")
}

model RegisterLog {
  id             Int       @id @default(autoincrement()) @map("ID")
  type           String    @map("TYPE")
  modifiedAmount Float     @map("MODIFIED_AMOUNT")
  currencySymbol String    @default("") @map("CURRENCY_SYMBOL")
  salesId        Int       @map("SALES_ID")
  remark         String    @default("") @map("REMARK")
  status         String    @map("STATUS")
  outletId       Int       @map("OUTLET_ID")
  sessionId      Int       @map("SESSION_ID")
  eodId          Int       @map("EOD_ID")
  performedBy    Int       @map("PERFORMED_BY")
  deleted        Boolean   @default(false) @map("IS_DELETED")
  createdAt      DateTime? @default(now()) @map("CREATED_AT")
  updatedAt      DateTime? @updatedAt @map("UPDATED_AT")
  version        Int?      @default(1) @map("VERSION")
  sales          Sales     @relation(fields: [salesId], references: [id])

  @@map("REGISTER_LOG")
}

model CardInfo {
  id          Int       @id @default(autoincrement()) @map("ID")
  paymentId   Int       @map("PAYMENT_ID")
  cardNumber  String?   @map("CARD_NUMBER")
  cardExpiry  String?   @map("CARD_EXPIRY")
  traceNumber String?   @map("TRACE_NUMBER")
  type2       String?   @map("TYPE_2")
  type3       String?   @map("TYPE_3")
  cardRate    Float?    @map("CARD_RATE")
  appCode     String?   @map("APP_CODE")
  cardType    String?   @map("CARD_TYPE")
  deleted     Boolean   @default(false) @map("IS_DELETED")
  createdAt   DateTime? @default(now()) @map("CREATED_AT")
  updatedAt   DateTime? @updatedAt @map("UPDATED_AT")
  version     Int?      @default(1) @map("VERSION")
  payment     Payment   @relation(fields: [paymentId], references: [id])

  @@map("CARD_INFO")
}

model Session {
  id              Int           @id @default(autoincrement()) @map("ID")
  outletId        Int           @map("OUTLET_ID")
  businessDate    DateTime      @map("BUSINESS_DATE")
  openingDateTime DateTime?     @map("OPENING_DATE_TIME")
  closingDateTime DateTime?     @map("CLOSING_DATE_TIME")
  openingAmount   Float         @map("OPENING_AMOUNT")
  totalSalesCount Int           @map("TOTAL_SALES_COUNT")
  openByUserID    Int           @map("OPEN_BY_USER_ID")
  closeByUserID   Int           @map("CLOSE_BY_USER_ID")
  deleted         Boolean       @default(false) @map("IS_DELETED")
  deletedAt       DateTime?     @map("DELETED_AT")
  createdAt       DateTime?     @default(now()) @map("CREATED_AT")
  updatedAt       DateTime?     @updatedAt @map("UPDATED_AT")
  version         Int?          @default(1) @map("VERSION")
  declarations    Declaration[]

  @@map("SESSION")
}

model Declaration {
  id                 Int       @id @default(autoincrement()) @map("ID")
  paymentType        String    @map("PAYMENT_TYPE")
  totalPaymentAmount Float     @map("TOTAL_PAYMENT_AMOUNT")
  declarationAmount  Float     @map("DECLARATION_AMOUNT")
  differenceAmount   Float     @map("DIFFERENCE_AMOUNT")
  deleted            Boolean   @default(false) @map("IS_DELETED")
  deletedAt          DateTime? @map("DELETED_AT")
  createdAt          DateTime? @default(now()) @map("CREATED_AT")
  updatedAt          DateTime? @updatedAt @map("UPDATED_AT")
  version            Int?      @default(1) @map("VERSION")
  sessionID          Int       @map("SESSION_ID")
  session            Session   @relation(fields: [sessionID], references: [id])

  @@map("DECLARATION")
}

model StockBalance {
  id                Int       @id @default(autoincrement()) @map("ID")
  itemId            Int       @map("ITEM_ID")
  outletId          Int       @map("OUTLET_ID")
  availableQuantity Float     @map("AVAILABLE_QUANTITY")
  onHandQuantity    Float     @map("ON_HAND_QUANTITY")
  reorderThreshold  Float?    @map("REORDER_THRESHOLD")
  deleted           Boolean   @default(false) @map("IS_DELETED")
  deletedAt         DateTime? @map("DELETED_AT")
  createdAt         DateTime? @default(now()) @map("CREATED_AT")
  updatedAt         DateTime? @updatedAt @map("UPDATED_AT")
  version           Int?      @default(1) @map("VERSION")
  item              Item      @relation(fields: [itemId], references: [id])
  outlet            Outlet    @relation(fields: [outletId], references: [id])

  @@unique([itemId, outletId, reorderThreshold, deleted, availableQuantity])
  @@map("STOCK_BALANCE")
}

model StockMovement {
  id                        Int       @id @default(autoincrement()) @map("ID")
  itemId                    Int       @map("ITEM_ID")
  outletId                  Int       @map("OUTLET_ID")
  previousAvailableQuantity Float     @map("PREVIOUS_AVAILABLE_QUANTITY")
  previousOnHandQuantity    Float     @map("PREVIOUS_ON_HAND_QUANTITY")
  availableQuantityDelta    Float     @map("AVAILABLE_QUANTITY_DELTA")
  onHandQuantityDelta       Float     @map("ON_HAND_QUANTITY_DELTA")
  movementType              String    @map("MOVEMENT_TYPE")
  documentId                Int       @map("DOCUMENT_ID")
  reason                    String    @map("REASON")
  remark                    String    @default("") @map("REMARK")
  deleted                   Boolean   @default(false) @map("IS_DELETED")
  createdAt                 DateTime? @default(now()) @map("CREATED_AT")
  updatedAt                 DateTime? @updatedAt @map("UPDATED_AT")
  version                   Int?      @default(1) @map("VERSION")
  item                      Item      @relation(fields: [itemId], references: [id])
  outlet                    Outlet    @relation(fields: [outletId], references: [id])

  @@index([itemId, createdAt])
  @@index([outletId])
  @@index([movementType])
  @@map("STOCK_MOVEMENT")
}

model StockMovementArchive {
  id                     Int       @id @default(autoincrement()) @map("ID")
  itemId                 Int       @map("ITEM_ID")
  itemCode               String    @map("ITEM_CODE")
  itemName               String    @map("ITEM_NAME")
  outletId               Int       @map("OUTLET_ID")
  outletName             String    @map("OUTLET_NAME")
  availableQuantityDelta Float     @map("AVAILABLE_QUANTITY_DELTA")
  onHandQuantityDelta    Float     @map("ON_HAND_QUANTITY_DELTA")
  movementType           String    @map("MOVEMENT_TYPE")
  documentId             Int       @map("DOCUMENT_ID")
  documentType           String    @map("DOCUMENT_TYPE")
  reason                 String    @map("REASON")
  remark                 String    @default("") @map("REMARK")
  deleted                Boolean   @default(false) @map("IS_DELETED")
  createdAt              DateTime? @default(now()) @map("CREATED_AT")
  updatedAt              DateTime? @updatedAt @map("UPDATED_AT")
  version                Int?      @default(1) @map("VERSION")

  @@index([itemId, createdAt])
  @@index([outletId])
  @@index([movementType])
  @@map("STOCK_MOVEMENT_ARCHIVE")
}

model StockSnapshot {
  id                Int       @id @default(autoincrement()) @map("ID")
  itemId            Int       @map("ITEM_ID")
  outletId          Int       @map("OUTLET_ID")
  availableQuantity Float     @map("AVAILABLE_QUANTITY")
  onHandQuantity    Float     @map("ON_HAND_QUANTITY")
  deleted           Boolean   @default(false) @map("IS_DELETED")
  deletedAt         DateTime? @map("DELETED_AT")
  createdAt         DateTime? @default(now()) @map("CREATED_AT")
  updatedAt         DateTime? @updatedAt @map("UPDATED_AT")
  version           Int?      @default(1) @map("VERSION")
  item              Item      @relation(fields: [itemId], references: [id])
  outlet            Outlet    @relation(fields: [outletId], references: [id])

  @@index([itemId, createdAt])
  @@index([outletId])
  @@map("STOCK_SNAPSHOT")
}

model MenuProfileOutlet {
  id            Int       @id @default(autoincrement()) @map("ID")
  outletId      Int       @map("OUTLET_ID")
  menuProfileID Int       @map("MENU_PROFILE_ID")
  deleted       Boolean   @default(false) @map("IS_DELETED")
  deletedAt     DateTime? @map("DELETED_AT")
  createdAt     DateTime? @default(now()) @map("CREATED_AT")
  updatedAt     DateTime? @updatedAt @map("UPDATED_AT")
  version       Int?      @default(1) @map("VERSION")

  @@map("MENU_PROFILE_OUTLET")
}

model MenuProfile {
  id             Int            @id @default(autoincrement()) @map("ID")
  name           String         @map("NAME")
  dateStart      String         @map("DATE_START")
  dateEnd        String         @map("DATE_END")
  timeStart      String         @map("TIME_START")
  timeEnd        String         @map("TIME_END")
  isMonday       Boolean        @map("IS_MONDAY")
  isTuesday      Boolean        @map("IS_TUESDAY")
  isWednesday    Boolean        @map("IS_WEDNESDAY")
  isThursday     Boolean        @map("IS_THURSDAY")
  isFriday       Boolean        @map("IS_FRIDAY")
  isSaturday     Boolean        @map("IS_SATURDAY")
  isSunday       Boolean        @map("IS_SUNDAY")
  sequence       Int            @map("SEQUENCE")
  deleted        Boolean        @default(false) @map("IS_DELETED")
  deletedAt      DateTime?      @map("DELETED_AT")
  createdAt      DateTime?      @default(now()) @map("CREATED_AT")
  updatedAt      DateTime?      @updatedAt @map("UPDATED_AT")
  version        Int?           @default(1) @map("VERSION")
  menuCategories MenuCategory[]

  @@map("MENU_PROFILE")
}

model MenuCategory {
  id            Int         @id @default(autoincrement()) @map("ID")
  name          String      @map("NAME")
  menuProfileID Int         @map("MENU_PROFILE_ID")
  imageURL      String?     @map("IMAGE_URL") @db.Text
  deleted       Boolean     @default(false) @map("IS_DELETED")
  deletedAt     DateTime?   @map("DELETED_AT")
  createdAt     DateTime?   @default(now()) @map("CREATED_AT")
  updatedAt     DateTime?   @updatedAt @map("UPDATED_AT")
  version       Int?        @default(1) @map("VERSION")
  menuProfile   MenuProfile @relation(fields: [menuProfileID], references: [id])
  menuItems     MenuItem[]

  @@map("MENU_CATEGORY")
}

model MenuItem {
  id                     Int                     @id @default(autoincrement()) @map("ID")
  name                   String                  @map("NAME")
  itemID                 Int                     @map("ITEM_ID")
  itemCode               String                  @map("ITEM_CODE")
  imageURL               String?                 @map("IMAGE_URL") @db.Text
  price                  Float                   @map("PRICE")
  sequence               Int                     @map("SEQUENCE")
  menuCategoryID         Int                     @map("MENU_CATEGORY_ID")
  deleted                Boolean                 @default(false) @map("IS_DELETED")
  deletedAt              DateTime?               @map("DELETED_AT")
  createdAt              DateTime?               @default(now()) @map("CREATED_AT")
  updatedAt              DateTime?               @updatedAt @map("UPDATED_AT")
  version                Int?                    @default(1) @map("VERSION")
  menuCategory           MenuCategory            @relation(fields: [menuCategoryID], references: [id])
  menuItemModifierGroups MenuItemModifierGroup[]

  @@map("MENU_ITEM")
}

model MenuItemModifierGroup {
  id                Int                @id @default(autoincrement()) @map("ID")
  name              String             @map("NAME")
  minSelection      Int                @map("MIN_SELECTION")
  maxSelection      Int                @map("MAX_SELECTION")
  sequence          Int                @map("SEQUENCE")
  menuItemID        Int                @map("MENU_ITEM_ID")
  deleted           Boolean            @default(false) @map("IS_DELETED")
  deletedAt         DateTime?          @map("DELETED_AT")
  createdAt         DateTime?          @default(now()) @map("CREATED_AT")
  updatedAt         DateTime?          @updatedAt @map("UPDATED_AT")
  version           Int?               @default(1) @map("VERSION")
  menuItem          MenuItem           @relation(fields: [menuItemID], references: [id])
  menuItemModifiers MenuItemModifier[]

  @@map("MENU_ITEM_MODIFIER_GROUP")
}

model MenuItemModifier {
  id                      Int                   @id @default(autoincrement()) @map("ID")
  name                    String                @map("NAME")
  itemID                  Int                   @map("ITEM_ID")
  itemCode                String                @map("ITEM_CODE")
  imageURL                String?               @map("IMAGE_URL") @db.Text
  price                   Float                 @map("PRICE")
  defaultSelectionQty     Int                   @map("DEFAULT_SELECTION_QTY")
  sequence                Int                   @map("SEQUENCE")
  menuItemModifierGroupID Int                   @map("MENU_ITEM_MODIFIER_GROUP_ID")
  deleted                 Boolean               @default(false) @map("IS_DELETED")
  deletedAt               DateTime?             @map("DELETED_AT")
  createdAt               DateTime?             @default(now()) @map("CREATED_AT")
  updatedAt               DateTime?             @updatedAt @map("UPDATED_AT")
  version                 Int?                  @default(1) @map("VERSION")
  menuItemModifierGroup   MenuItemModifierGroup @relation(fields: [menuItemModifierGroupID], references: [id])

  @@map("MENU_ITEM_MODIFIER")
}
